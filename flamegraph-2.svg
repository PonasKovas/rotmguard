<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1286" onload="init(evt)" viewBox="0 0 1200 1286" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1286" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1269.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1269.00"> </text><svg id="frames" x="10" width="1180" total_samples="8446"><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="0.0000%" y="1205" width="0.0237%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1215.50"></text></g><g><title>merge_sched_in (3 samples, 0.04%)</title><rect x="0.0237%" y="469" width="0.0355%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="3"/><text x="0.2737%" y="479.50"></text></g><g><title>event_sched_in (2 samples, 0.02%)</title><rect x="0.0355%" y="453" width="0.0237%" height="15" fill="rgb(221,193,54)" fg:x="3" fg:w="2"/><text x="0.2855%" y="463.50"></text></g><g><title>__x64_sys_futex (4 samples, 0.05%)</title><rect x="0.0237%" y="645" width="0.0474%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="4"/><text x="0.2737%" y="655.50"></text></g><g><title>do_futex (4 samples, 0.05%)</title><rect x="0.0237%" y="629" width="0.0474%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="4"/><text x="0.2737%" y="639.50"></text></g><g><title>futex_wait (4 samples, 0.05%)</title><rect x="0.0237%" y="613" width="0.0474%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="4"/><text x="0.2737%" y="623.50"></text></g><g><title>__futex_wait (4 samples, 0.05%)</title><rect x="0.0237%" y="597" width="0.0474%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="4"/><text x="0.2737%" y="607.50"></text></g><g><title>futex_wait_queue (4 samples, 0.05%)</title><rect x="0.0237%" y="581" width="0.0474%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="4"/><text x="0.2737%" y="591.50"></text></g><g><title>schedule (4 samples, 0.05%)</title><rect x="0.0237%" y="565" width="0.0474%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="4"/><text x="0.2737%" y="575.50"></text></g><g><title>__schedule (4 samples, 0.05%)</title><rect x="0.0237%" y="549" width="0.0474%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="4"/><text x="0.2737%" y="559.50"></text></g><g><title>finish_task_switch.isra.0 (4 samples, 0.05%)</title><rect x="0.0237%" y="533" width="0.0474%" height="15" fill="rgb(250,228,42)" fg:x="2" fg:w="4"/><text x="0.2737%" y="543.50"></text></g><g><title>__perf_event_task_sched_in (4 samples, 0.05%)</title><rect x="0.0237%" y="517" width="0.0474%" height="15" fill="rgb(240,193,28)" fg:x="2" fg:w="4"/><text x="0.2737%" y="527.50"></text></g><g><title>ctx_groups_sched_in (4 samples, 0.05%)</title><rect x="0.0237%" y="501" width="0.0474%" height="15" fill="rgb(216,20,37)" fg:x="2" fg:w="4"/><text x="0.2737%" y="511.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (4 samples, 0.05%)</title><rect x="0.0237%" y="485" width="0.0474%" height="15" fill="rgb(206,188,39)" fg:x="2" fg:w="4"/><text x="0.2737%" y="495.50"></text></g><g><title>perf_event_groups_next (1 samples, 0.01%)</title><rect x="0.0592%" y="469" width="0.0118%" height="15" fill="rgb(217,207,13)" fg:x="5" fg:w="1"/><text x="0.3092%" y="479.50"></text></g><g><title>rotmguard (8 samples, 0.09%)</title><rect x="0.0000%" y="1221" width="0.0947%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1231.50"></text></g><g><title>_start (6 samples, 0.07%)</title><rect x="0.0237%" y="1205" width="0.0710%" height="15" fill="rgb(225,20,46)" fg:x="2" fg:w="6"/><text x="0.2737%" y="1215.50"></text></g><g><title>__libc_start_main (6 samples, 0.07%)</title><rect x="0.0237%" y="1189" width="0.0710%" height="15" fill="rgb(210,31,41)" fg:x="2" fg:w="6"/><text x="0.2737%" y="1199.50"></text></g><g><title>[libc.so.6] (6 samples, 0.07%)</title><rect x="0.0237%" y="1173" width="0.0710%" height="15" fill="rgb(221,200,47)" fg:x="2" fg:w="6"/><text x="0.2737%" y="1183.50"></text></g><g><title>main (6 samples, 0.07%)</title><rect x="0.0237%" y="1157" width="0.0710%" height="15" fill="rgb(226,26,5)" fg:x="2" fg:w="6"/><text x="0.2737%" y="1167.50"></text></g><g><title>std::rt::lang_start_internal (6 samples, 0.07%)</title><rect x="0.0237%" y="1141" width="0.0710%" height="15" fill="rgb(249,33,26)" fg:x="2" fg:w="6"/><text x="0.2737%" y="1151.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.07%)</title><rect x="0.0237%" y="1125" width="0.0710%" height="15" fill="rgb(235,183,28)" fg:x="2" fg:w="6"/><text x="0.2737%" y="1135.50"></text></g><g><title>std::panicking::try (6 samples, 0.07%)</title><rect x="0.0237%" y="1109" width="0.0710%" height="15" fill="rgb(221,5,38)" fg:x="2" fg:w="6"/><text x="0.2737%" y="1119.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.07%)</title><rect x="0.0237%" y="1093" width="0.0710%" height="15" fill="rgb(247,18,42)" fg:x="2" fg:w="6"/><text x="0.2737%" y="1103.50"></text></g><g><title>std::rt::lang_start_internal::_{{closure}} (6 samples, 0.07%)</title><rect x="0.0237%" y="1077" width="0.0710%" height="15" fill="rgb(241,131,45)" fg:x="2" fg:w="6"/><text x="0.2737%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.07%)</title><rect x="0.0237%" y="1061" width="0.0710%" height="15" fill="rgb(249,31,29)" fg:x="2" fg:w="6"/><text x="0.2737%" y="1071.50"></text></g><g><title>std::panicking::try (6 samples, 0.07%)</title><rect x="0.0237%" y="1045" width="0.0710%" height="15" fill="rgb(225,111,53)" fg:x="2" fg:w="6"/><text x="0.2737%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.07%)</title><rect x="0.0237%" y="1029" width="0.0710%" height="15" fill="rgb(238,160,17)" fg:x="2" fg:w="6"/><text x="0.2737%" y="1039.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (6 samples, 0.07%)</title><rect x="0.0237%" y="1013" width="0.0710%" height="15" fill="rgb(214,148,48)" fg:x="2" fg:w="6"/><text x="0.2737%" y="1023.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (6 samples, 0.07%)</title><rect x="0.0237%" y="997" width="0.0710%" height="15" fill="rgb(232,36,49)" fg:x="2" fg:w="6"/><text x="0.2737%" y="1007.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (6 samples, 0.07%)</title><rect x="0.0237%" y="981" width="0.0710%" height="15" fill="rgb(209,103,24)" fg:x="2" fg:w="6"/><text x="0.2737%" y="991.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.07%)</title><rect x="0.0237%" y="965" width="0.0710%" height="15" fill="rgb(229,88,8)" fg:x="2" fg:w="6"/><text x="0.2737%" y="975.50"></text></g><g><title>rotmguard::main (6 samples, 0.07%)</title><rect x="0.0237%" y="949" width="0.0710%" height="15" fill="rgb(213,181,19)" fg:x="2" fg:w="6"/><text x="0.2737%" y="959.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (6 samples, 0.07%)</title><rect x="0.0237%" y="933" width="0.0710%" height="15" fill="rgb(254,191,54)" fg:x="2" fg:w="6"/><text x="0.2737%" y="943.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on (6 samples, 0.07%)</title><rect x="0.0237%" y="917" width="0.0710%" height="15" fill="rgb(241,83,37)" fg:x="2" fg:w="6"/><text x="0.2737%" y="927.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (6 samples, 0.07%)</title><rect x="0.0237%" y="901" width="0.0710%" height="15" fill="rgb(233,36,39)" fg:x="2" fg:w="6"/><text x="0.2737%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on::_{{closure}} (6 samples, 0.07%)</title><rect x="0.0237%" y="885" width="0.0710%" height="15" fill="rgb(226,3,54)" fg:x="2" fg:w="6"/><text x="0.2737%" y="895.50"></text></g><g><title>tokio::runtime::context::blocking::BlockingRegionGuard::block_on (6 samples, 0.07%)</title><rect x="0.0237%" y="869" width="0.0710%" height="15" fill="rgb(245,192,40)" fg:x="2" fg:w="6"/><text x="0.2737%" y="879.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (6 samples, 0.07%)</title><rect x="0.0237%" y="853" width="0.0710%" height="15" fill="rgb(238,167,29)" fg:x="2" fg:w="6"/><text x="0.2737%" y="863.50"></text></g><g><title>tokio::runtime::park::Inner::park (6 samples, 0.07%)</title><rect x="0.0237%" y="837" width="0.0710%" height="15" fill="rgb(232,182,51)" fg:x="2" fg:w="6"/><text x="0.2737%" y="847.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (6 samples, 0.07%)</title><rect x="0.0237%" y="821" width="0.0710%" height="15" fill="rgb(231,60,39)" fg:x="2" fg:w="6"/><text x="0.2737%" y="831.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (6 samples, 0.07%)</title><rect x="0.0237%" y="805" width="0.0710%" height="15" fill="rgb(208,69,12)" fg:x="2" fg:w="6"/><text x="0.2737%" y="815.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (6 samples, 0.07%)</title><rect x="0.0237%" y="789" width="0.0710%" height="15" fill="rgb(235,93,37)" fg:x="2" fg:w="6"/><text x="0.2737%" y="799.50"></text></g><g><title>parking_lot_core::parking_lot::park (6 samples, 0.07%)</title><rect x="0.0237%" y="773" width="0.0710%" height="15" fill="rgb(213,116,39)" fg:x="2" fg:w="6"/><text x="0.2737%" y="783.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (6 samples, 0.07%)</title><rect x="0.0237%" y="757" width="0.0710%" height="15" fill="rgb(222,207,29)" fg:x="2" fg:w="6"/><text x="0.2737%" y="767.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (6 samples, 0.07%)</title><rect x="0.0237%" y="741" width="0.0710%" height="15" fill="rgb(206,96,30)" fg:x="2" fg:w="6"/><text x="0.2737%" y="751.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (6 samples, 0.07%)</title><rect x="0.0237%" y="725" width="0.0710%" height="15" fill="rgb(218,138,4)" fg:x="2" fg:w="6"/><text x="0.2737%" y="735.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (6 samples, 0.07%)</title><rect x="0.0237%" y="709" width="0.0710%" height="15" fill="rgb(250,191,14)" fg:x="2" fg:w="6"/><text x="0.2737%" y="719.50"></text></g><g><title>syscall (6 samples, 0.07%)</title><rect x="0.0237%" y="693" width="0.0710%" height="15" fill="rgb(239,60,40)" fg:x="2" fg:w="6"/><text x="0.2737%" y="703.50"></text></g><g><title>entry_SYSCALL_64 (6 samples, 0.07%)</title><rect x="0.0237%" y="677" width="0.0710%" height="15" fill="rgb(206,27,48)" fg:x="2" fg:w="6"/><text x="0.2737%" y="687.50"></text></g><g><title>do_syscall_64 (6 samples, 0.07%)</title><rect x="0.0237%" y="661" width="0.0710%" height="15" fill="rgb(225,35,8)" fg:x="2" fg:w="6"/><text x="0.2737%" y="671.50"></text></g><g><title>syscall_exit_to_user_mode (2 samples, 0.02%)</title><rect x="0.0710%" y="645" width="0.0237%" height="15" fill="rgb(250,213,24)" fg:x="6" fg:w="2"/><text x="0.3210%" y="655.50"></text></g><g><title>asm_sysvec_irq_work (1 samples, 0.01%)</title><rect x="0.0829%" y="629" width="0.0118%" height="15" fill="rgb(247,123,22)" fg:x="7" fg:w="1"/><text x="0.3329%" y="639.50"></text></g><g><title>sysvec_irq_work (1 samples, 0.01%)</title><rect x="0.0829%" y="613" width="0.0118%" height="15" fill="rgb(231,138,38)" fg:x="7" fg:w="1"/><text x="0.3329%" y="623.50"></text></g><g><title>__sysvec_irq_work (1 samples, 0.01%)</title><rect x="0.0829%" y="597" width="0.0118%" height="15" fill="rgb(231,145,46)" fg:x="7" fg:w="1"/><text x="0.3329%" y="607.50"></text></g><g><title>irq_work_run (1 samples, 0.01%)</title><rect x="0.0829%" y="581" width="0.0118%" height="15" fill="rgb(251,118,11)" fg:x="7" fg:w="1"/><text x="0.3329%" y="591.50"></text></g><g><title>irq_work_run_list (1 samples, 0.01%)</title><rect x="0.0829%" y="565" width="0.0118%" height="15" fill="rgb(217,147,25)" fg:x="7" fg:w="1"/><text x="0.3329%" y="575.50"></text></g><g><title>irq_work_single (1 samples, 0.01%)</title><rect x="0.0829%" y="549" width="0.0118%" height="15" fill="rgb(247,81,37)" fg:x="7" fg:w="1"/><text x="0.3329%" y="559.50"></text></g><g><title>perf_pending_irq (1 samples, 0.01%)</title><rect x="0.0829%" y="533" width="0.0118%" height="15" fill="rgb(209,12,38)" fg:x="7" fg:w="1"/><text x="0.3329%" y="543.50"></text></g><g><title>perf_event_wakeup (1 samples, 0.01%)</title><rect x="0.0829%" y="517" width="0.0118%" height="15" fill="rgb(227,1,9)" fg:x="7" fg:w="1"/><text x="0.3329%" y="527.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.01%)</title><rect x="0.0947%" y="1205" width="0.0118%" height="15" fill="rgb(248,47,43)" fg:x="8" fg:w="1"/><text x="0.3447%" y="1215.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (5 samples, 0.06%)</title><rect x="0.1066%" y="1205" width="0.0592%" height="15" fill="rgb(221,10,30)" fg:x="9" fg:w="5"/><text x="0.3566%" y="1215.50"></text></g><g><title>std::sys_common::net::TcpStream::read (4 samples, 0.05%)</title><rect x="0.1184%" y="1189" width="0.0474%" height="15" fill="rgb(210,229,1)" fg:x="10" fg:w="4"/><text x="0.3684%" y="1199.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (4 samples, 0.05%)</title><rect x="0.1184%" y="1173" width="0.0474%" height="15" fill="rgb(222,148,37)" fg:x="10" fg:w="4"/><text x="0.3684%" y="1183.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (4 samples, 0.05%)</title><rect x="0.1184%" y="1157" width="0.0474%" height="15" fill="rgb(234,67,33)" fg:x="10" fg:w="4"/><text x="0.3684%" y="1167.50"></text></g><g><title>std::sys::pal::unix::cvt (3 samples, 0.04%)</title><rect x="0.1302%" y="1141" width="0.0355%" height="15" fill="rgb(247,98,35)" fg:x="11" fg:w="3"/><text x="0.3802%" y="1151.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (3 samples, 0.04%)</title><rect x="0.1302%" y="1125" width="0.0355%" height="15" fill="rgb(247,138,52)" fg:x="11" fg:w="3"/><text x="0.3802%" y="1135.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (4 samples, 0.05%)</title><rect x="0.1658%" y="1205" width="0.0474%" height="15" fill="rgb(213,79,30)" fg:x="14" fg:w="4"/><text x="0.4158%" y="1215.50"></text></g><g><title>std::sys_common::net::TcpStream::write (2 samples, 0.02%)</title><rect x="0.1894%" y="1189" width="0.0237%" height="15" fill="rgb(246,177,23)" fg:x="16" fg:w="2"/><text x="0.4394%" y="1199.50"></text></g><g><title>std::sys::pal::unix::cvt (2 samples, 0.02%)</title><rect x="0.1894%" y="1173" width="0.0237%" height="15" fill="rgb(230,62,27)" fg:x="16" fg:w="2"/><text x="0.4394%" y="1183.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (2 samples, 0.02%)</title><rect x="0.1894%" y="1157" width="0.0237%" height="15" fill="rgb(216,154,8)" fg:x="16" fg:w="2"/><text x="0.4394%" y="1167.50"></text></g><g><title>&lt;&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::collect_str::Adapter&lt;W,F&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="0.2131%" y="1205" width="0.0118%" height="15" fill="rgb(244,35,45)" fg:x="18" fg:w="1"/><text x="0.4631%" y="1215.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (4 samples, 0.05%)</title><rect x="0.2250%" y="1205" width="0.0474%" height="15" fill="rgb(251,115,12)" fg:x="19" fg:w="4"/><text x="0.4750%" y="1215.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (1 samples, 0.01%)</title><rect x="0.2723%" y="1205" width="0.0118%" height="15" fill="rgb(240,54,50)" fg:x="23" fg:w="1"/><text x="0.5223%" y="1215.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="0.2842%" y="1205" width="0.0118%" height="15" fill="rgb(233,84,52)" fg:x="24" fg:w="1"/><text x="0.5342%" y="1215.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="0.2842%" y="1189" width="0.0118%" height="15" fill="rgb(207,117,47)" fg:x="24" fg:w="1"/><text x="0.5342%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="0.2842%" y="1173" width="0.0118%" height="15" fill="rgb(249,43,39)" fg:x="24" fg:w="1"/><text x="0.5342%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="0.2842%" y="1157" width="0.0118%" height="15" fill="rgb(209,38,44)" fg:x="24" fg:w="1"/><text x="0.5342%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="0.2842%" y="1141" width="0.0118%" height="15" fill="rgb(236,212,23)" fg:x="24" fg:w="1"/><text x="0.5342%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="0.2842%" y="1125" width="0.0118%" height="15" fill="rgb(242,79,21)" fg:x="24" fg:w="1"/><text x="0.5342%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="0.2842%" y="1109" width="0.0118%" height="15" fill="rgb(211,96,35)" fg:x="24" fg:w="1"/><text x="0.5342%" y="1119.50"></text></g><g><title>&lt;core::fmt::Arguments as tracing_core::field::Value&gt;::record (1 samples, 0.01%)</title><rect x="0.2960%" y="1205" width="0.0118%" height="15" fill="rgb(253,215,40)" fg:x="25" fg:w="1"/><text x="0.5460%" y="1215.50"></text></g><g><title>&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::COMMENT::_{{closure}} (1 samples, 0.01%)</title><rect x="0.3078%" y="1205" width="0.0118%" height="15" fill="rgb(211,81,21)" fg:x="26" fg:w="1"/><text x="0.5578%" y="1215.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (1 samples, 0.01%)</title><rect x="0.3078%" y="1189" width="0.0118%" height="15" fill="rgb(208,190,38)" fg:x="26" fg:w="1"/><text x="0.5578%" y="1199.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="0.3197%" y="1205" width="0.0118%" height="15" fill="rgb(235,213,38)" fg:x="27" fg:w="1"/><text x="0.5697%" y="1215.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.01%)</title><rect x="0.3197%" y="1189" width="0.0118%" height="15" fill="rgb(237,122,38)" fg:x="27" fg:w="1"/><text x="0.5697%" y="1199.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.01%)</title><rect x="0.3197%" y="1173" width="0.0118%" height="15" fill="rgb(244,218,35)" fg:x="27" fg:w="1"/><text x="0.5697%" y="1183.50"></text></g><g><title>&lt;rotmguard::extra_datatypes::object_status_data::ObjectStatusData as rotmguard::read::RPRead&gt;::rp_read (1 samples, 0.01%)</title><rect x="0.3315%" y="1205" width="0.0118%" height="15" fill="rgb(240,68,47)" fg:x="28" fg:w="1"/><text x="0.5815%" y="1215.50"></text></g><g><title>&lt;rotmguard::extra_datatypes::object_status_data::ObjectStatusData as rotmguard::write::RPWrite&gt;::rp_write (2 samples, 0.02%)</title><rect x="0.3434%" y="1205" width="0.0237%" height="15" fill="rgb(210,16,53)" fg:x="29" fg:w="2"/><text x="0.5934%" y="1215.50"></text></g><g><title>&lt;u8 as rotmguard::read::RPRead&gt;::rp_read (1 samples, 0.01%)</title><rect x="0.4144%" y="1189" width="0.0118%" height="15" fill="rgb(235,124,12)" fg:x="35" fg:w="1"/><text x="0.6644%" y="1199.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (1 samples, 0.01%)</title><rect x="0.4144%" y="1173" width="0.0118%" height="15" fill="rgb(224,169,11)" fg:x="35" fg:w="1"/><text x="0.6644%" y="1183.50"></text></g><g><title>&lt;rotmguard::extra_datatypes::statdata::StatData as rotmguard::read::RPRead&gt;::rp_read (8 samples, 0.09%)</title><rect x="0.3670%" y="1205" width="0.0947%" height="15" fill="rgb(250,166,2)" fg:x="31" fg:w="8"/><text x="0.6170%" y="1215.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (3 samples, 0.04%)</title><rect x="0.4262%" y="1189" width="0.0355%" height="15" fill="rgb(242,216,29)" fg:x="36" fg:w="3"/><text x="0.6762%" y="1199.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceContains&gt;::slice_contains (3 samples, 0.04%)</title><rect x="0.4262%" y="1173" width="0.0355%" height="15" fill="rgb(230,116,27)" fg:x="36" fg:w="3"/><text x="0.6762%" y="1183.50"></text></g><g><title>core::slice::memchr::memchr (3 samples, 0.04%)</title><rect x="0.4262%" y="1157" width="0.0355%" height="15" fill="rgb(228,99,48)" fg:x="36" fg:w="3"/><text x="0.6762%" y="1167.50"></text></g><g><title>core::slice::memchr::memchr_naive (3 samples, 0.04%)</title><rect x="0.4262%" y="1141" width="0.0355%" height="15" fill="rgb(253,11,6)" fg:x="36" fg:w="3"/><text x="0.6762%" y="1151.50"></text></g><g><title>&lt;rotmguard::packets::ClientPacket as rotmguard::read::RPRead&gt;::rp_read (1 samples, 0.01%)</title><rect x="0.4618%" y="1205" width="0.0118%" height="15" fill="rgb(247,143,39)" fg:x="39" fg:w="1"/><text x="0.7118%" y="1215.50"></text></g><g><title>&lt;u8 as rotmguard::read::RPRead&gt;::rp_read (1 samples, 0.01%)</title><rect x="0.4618%" y="1189" width="0.0118%" height="15" fill="rgb(236,97,10)" fg:x="39" fg:w="1"/><text x="0.7118%" y="1199.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (1 samples, 0.01%)</title><rect x="0.4618%" y="1173" width="0.0118%" height="15" fill="rgb(233,208,19)" fg:x="39" fg:w="1"/><text x="0.7118%" y="1183.50"></text></g><g><title>&lt;rotmguard::packets::ServerPacket as rotmguard::write::RPWrite&gt;::rp_write (1 samples, 0.01%)</title><rect x="0.4736%" y="1205" width="0.0118%" height="15" fill="rgb(216,164,2)" fg:x="40" fg:w="1"/><text x="0.7236%" y="1215.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.01%)</title><rect x="0.4854%" y="1205" width="0.0118%" height="15" fill="rgb(220,129,5)" fg:x="41" fg:w="1"/><text x="0.7354%" y="1215.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.02%)</title><rect x="0.4973%" y="1205" width="0.0237%" height="15" fill="rgb(242,17,10)" fg:x="42" fg:w="2"/><text x="0.7473%" y="1215.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (2 samples, 0.02%)</title><rect x="0.4973%" y="1189" width="0.0237%" height="15" fill="rgb(242,107,0)" fg:x="42" fg:w="2"/><text x="0.7473%" y="1199.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.01%)</title><rect x="0.5091%" y="1173" width="0.0118%" height="15" fill="rgb(251,28,31)" fg:x="43" fg:w="1"/><text x="0.7591%" y="1183.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.01%)</title><rect x="0.5210%" y="1205" width="0.0118%" height="15" fill="rgb(233,223,10)" fg:x="44" fg:w="1"/><text x="0.7710%" y="1215.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::new (1 samples, 0.01%)</title><rect x="0.5210%" y="1189" width="0.0118%" height="15" fill="rgb(215,21,27)" fg:x="44" fg:w="1"/><text x="0.7710%" y="1199.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::new (1 samples, 0.01%)</title><rect x="0.5210%" y="1173" width="0.0118%" height="15" fill="rgb(232,23,21)" fg:x="44" fg:w="1"/><text x="0.7710%" y="1183.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="0.5210%" y="1157" width="0.0118%" height="15" fill="rgb(244,5,23)" fg:x="44" fg:w="1"/><text x="0.7710%" y="1167.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.01%)</title><rect x="0.5328%" y="1205" width="0.0118%" height="15" fill="rgb(226,81,46)" fg:x="45" fg:w="1"/><text x="0.7828%" y="1215.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="0.5446%" y="1205" width="0.0237%" height="15" fill="rgb(247,70,30)" fg:x="46" fg:w="2"/><text x="0.7946%" y="1215.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="0.5683%" y="1205" width="0.0118%" height="15" fill="rgb(212,68,19)" fg:x="48" fg:w="1"/><text x="0.8183%" y="1215.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (2 samples, 0.02%)</title><rect x="0.5802%" y="1205" width="0.0237%" height="15" fill="rgb(240,187,13)" fg:x="49" fg:w="2"/><text x="0.8302%" y="1215.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="0.6038%" y="1205" width="0.0118%" height="15" fill="rgb(223,113,26)" fg:x="51" fg:w="1"/><text x="0.8538%" y="1215.50"></text></g><g><title>&lt;tracing_serde::SerdeMapVisitor&lt;S&gt; as tracing_core::field::Visit&gt;::record_debug (1 samples, 0.01%)</title><rect x="0.6157%" y="1205" width="0.0118%" height="15" fill="rgb(206,192,2)" fg:x="52" fg:w="1"/><text x="0.8657%" y="1215.50"></text></g><g><title>core::fmt::Arguments::new_v1 (1 samples, 0.01%)</title><rect x="0.6157%" y="1189" width="0.0118%" height="15" fill="rgb(241,108,4)" fg:x="52" fg:w="1"/><text x="0.8657%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (2 samples, 0.02%)</title><rect x="0.6275%" y="1205" width="0.0237%" height="15" fill="rgb(247,173,49)" fg:x="53" fg:w="2"/><text x="0.8775%" y="1215.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_exit (6 samples, 0.07%)</title><rect x="0.6512%" y="1205" width="0.0710%" height="15" fill="rgb(224,114,35)" fg:x="55" fg:w="6"/><text x="0.9012%" y="1215.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::json::SerializableSpan&lt;Span,N&gt; as serde::ser::Serialize&gt;::serialize (1 samples, 0.01%)</title><rect x="0.7222%" y="1205" width="0.0118%" height="15" fill="rgb(245,159,27)" fg:x="61" fg:w="1"/><text x="0.9722%" y="1215.50"></text></g><g><title>tracing_subscriber::registry::extensions::Extensions::get (1 samples, 0.01%)</title><rect x="0.7222%" y="1189" width="0.0118%" height="15" fill="rgb(245,172,44)" fg:x="61" fg:w="1"/><text x="0.9722%" y="1199.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::get (1 samples, 0.01%)</title><rect x="0.7222%" y="1173" width="0.0118%" height="15" fill="rgb(236,23,11)" fg:x="61" fg:w="1"/><text x="0.9722%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.01%)</title><rect x="0.7222%" y="1157" width="0.0118%" height="15" fill="rgb(205,117,38)" fg:x="61" fg:w="1"/><text x="0.9722%" y="1167.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::get::_{{closure}} (1 samples, 0.01%)</title><rect x="0.7222%" y="1141" width="0.0118%" height="15" fill="rgb(237,72,25)" fg:x="61" fg:w="1"/><text x="0.9722%" y="1151.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (1 samples, 0.01%)</title><rect x="0.7222%" y="1125" width="0.0118%" height="15" fill="rgb(244,70,9)" fg:x="61" fg:w="1"/><text x="0.9722%" y="1135.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (1 samples, 0.01%)</title><rect x="0.7222%" y="1109" width="0.0118%" height="15" fill="rgb(217,125,39)" fg:x="61" fg:w="1"/><text x="0.9722%" y="1119.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::SystemTime as tracing_subscriber::fmt::time::FormatTime&gt;::format_time (1 samples, 0.01%)</title><rect x="0.7341%" y="1205" width="0.0118%" height="15" fill="rgb(235,36,10)" fg:x="62" fg:w="1"/><text x="0.9841%" y="1215.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::convert::From&lt;std::time::SystemTime&gt;&gt;::from (1 samples, 0.01%)</title><rect x="0.7459%" y="1205" width="0.0118%" height="15" fill="rgb(251,123,47)" fg:x="63" fg:w="1"/><text x="0.9959%" y="1215.50"></text></g><g><title>&lt;tracing_subscriber::fmt::writer::WriteAdaptor as std::io::Write&gt;::write (4 samples, 0.05%)</title><rect x="0.7578%" y="1205" width="0.0474%" height="15" fill="rgb(221,13,13)" fg:x="64" fg:w="4"/><text x="1.0078%" y="1215.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="0.7933%" y="1189" width="0.0118%" height="15" fill="rgb(238,131,9)" fg:x="67" fg:w="1"/><text x="1.0433%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (6 samples, 0.07%)</title><rect x="0.8051%" y="1205" width="0.0710%" height="15" fill="rgb(211,50,8)" fg:x="68" fg:w="6"/><text x="1.0551%" y="1215.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.01%)</title><rect x="0.8762%" y="1205" width="0.0118%" height="15" fill="rgb(245,182,24)" fg:x="74" fg:w="1"/><text x="1.1262%" y="1215.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="0.8880%" y="1189" width="0.0118%" height="15" fill="rgb(242,14,37)" fg:x="75" fg:w="1"/><text x="1.1380%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close::_{{closure}} (1 samples, 0.01%)</title><rect x="0.8880%" y="1173" width="0.0118%" height="15" fill="rgb(246,228,12)" fg:x="75" fg:w="1"/><text x="1.1380%" y="1183.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (2 samples, 0.02%)</title><rect x="0.8880%" y="1205" width="0.0237%" height="15" fill="rgb(213,55,15)" fg:x="75" fg:w="2"/><text x="1.1380%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tracing_subscriber::registry::sharded::CloseGuard&gt;&gt; (1 samples, 0.01%)</title><rect x="0.8998%" y="1189" width="0.0118%" height="15" fill="rgb(209,9,3)" fg:x="76" fg:w="1"/><text x="1.1498%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::CloseGuard&gt; (1 samples, 0.01%)</title><rect x="0.8998%" y="1173" width="0.0118%" height="15" fill="rgb(230,59,30)" fg:x="76" fg:w="1"/><text x="1.1498%" y="1183.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::clone_span (1 samples, 0.01%)</title><rect x="0.9117%" y="1205" width="0.0118%" height="15" fill="rgb(209,121,21)" fg:x="77" fg:w="1"/><text x="1.1617%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="0.9117%" y="1189" width="0.0118%" height="15" fill="rgb(220,109,13)" fg:x="77" fg:w="1"/><text x="1.1617%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="0.9117%" y="1173" width="0.0118%" height="15" fill="rgb(232,18,1)" fg:x="77" fg:w="1"/><text x="1.1617%" y="1183.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::enter (4 samples, 0.05%)</title><rect x="0.9235%" y="1205" width="0.0474%" height="15" fill="rgb(215,41,42)" fg:x="78" fg:w="4"/><text x="1.1735%" y="1215.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (2 samples, 0.02%)</title><rect x="0.9709%" y="1205" width="0.0237%" height="15" fill="rgb(224,123,36)" fg:x="82" fg:w="2"/><text x="1.2209%" y="1215.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (1 samples, 0.01%)</title><rect x="0.9827%" y="1189" width="0.0118%" height="15" fill="rgb(240,125,3)" fg:x="83" fg:w="1"/><text x="1.2327%" y="1199.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1 samples, 0.01%)</title><rect x="0.9946%" y="1189" width="0.0118%" height="15" fill="rgb(205,98,50)" fg:x="84" fg:w="1"/><text x="1.2446%" y="1199.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="1.0064%" y="1189" width="0.0118%" height="15" fill="rgb(205,185,37)" fg:x="85" fg:w="1"/><text x="1.2564%" y="1199.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="1.0064%" y="1173" width="0.0118%" height="15" fill="rgb(238,207,15)" fg:x="85" fg:w="1"/><text x="1.2564%" y="1183.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="1.0064%" y="1157" width="0.0118%" height="15" fill="rgb(213,199,42)" fg:x="85" fg:w="1"/><text x="1.2564%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="1.0064%" y="1141" width="0.0118%" height="15" fill="rgb(235,201,11)" fg:x="85" fg:w="1"/><text x="1.2564%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="1.0064%" y="1125" width="0.0118%" height="15" fill="rgb(207,46,11)" fg:x="85" fg:w="1"/><text x="1.2564%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="1.0064%" y="1109" width="0.0118%" height="15" fill="rgb(241,35,35)" fg:x="85" fg:w="1"/><text x="1.2564%" y="1119.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (1 samples, 0.01%)</title><rect x="1.0182%" y="1189" width="0.0118%" height="15" fill="rgb(243,32,47)" fg:x="86" fg:w="1"/><text x="1.2682%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Data as tracing_subscriber::registry::SpanData&gt;::extensions (1 samples, 0.01%)</title><rect x="1.0182%" y="1173" width="0.0118%" height="15" fill="rgb(247,202,23)" fg:x="86" fg:w="1"/><text x="1.2682%" y="1183.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.01%)</title><rect x="1.0182%" y="1157" width="0.0118%" height="15" fill="rgb(219,102,11)" fg:x="86" fg:w="1"/><text x="1.2682%" y="1167.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="1.0182%" y="1141" width="0.0118%" height="15" fill="rgb(243,110,44)" fg:x="86" fg:w="1"/><text x="1.2682%" y="1151.50"></text></g><g><title>std::sync::poison::map_result (1 samples, 0.01%)</title><rect x="1.0182%" y="1125" width="0.0118%" height="15" fill="rgb(222,74,54)" fg:x="86" fg:w="1"/><text x="1.2682%" y="1135.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="1.0301%" y="1189" width="0.0118%" height="15" fill="rgb(216,99,12)" fg:x="87" fg:w="1"/><text x="1.2801%" y="1199.50"></text></g><g><title>&lt;rotmguard::extra_datatypes::object_status_data::ObjectStatusData as rotmguard::write::RPWrite&gt;::rp_write (1 samples, 0.01%)</title><rect x="1.0419%" y="1189" width="0.0118%" height="15" fill="rgb(226,22,26)" fg:x="88" fg:w="1"/><text x="1.2919%" y="1199.50"></text></g><g><title>&lt;rotmguard::extra_datatypes::statdata::StatData as rotmguard::read::RPRead&gt;::rp_read (2 samples, 0.02%)</title><rect x="1.0538%" y="1189" width="0.0237%" height="15" fill="rgb(217,163,10)" fg:x="89" fg:w="2"/><text x="1.3038%" y="1199.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (2 samples, 0.02%)</title><rect x="1.0538%" y="1173" width="0.0237%" height="15" fill="rgb(213,25,53)" fg:x="89" fg:w="2"/><text x="1.3038%" y="1183.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceContains&gt;::slice_contains (2 samples, 0.02%)</title><rect x="1.0538%" y="1157" width="0.0237%" height="15" fill="rgb(252,105,26)" fg:x="89" fg:w="2"/><text x="1.3038%" y="1167.50"></text></g><g><title>core::slice::memchr::memchr (2 samples, 0.02%)</title><rect x="1.0538%" y="1141" width="0.0237%" height="15" fill="rgb(220,39,43)" fg:x="89" fg:w="2"/><text x="1.3038%" y="1151.50"></text></g><g><title>core::slice::memchr::memchr_naive (2 samples, 0.02%)</title><rect x="1.0538%" y="1125" width="0.0237%" height="15" fill="rgb(229,68,48)" fg:x="89" fg:w="2"/><text x="1.3038%" y="1135.50"></text></g><g><title>&lt;rotmguard::module::PacketFlow as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="1.1485%" y="1173" width="0.0237%" height="15" fill="rgb(252,8,32)" fg:x="97" fg:w="2"/><text x="1.3985%" y="1183.50"></text></g><g><title>&lt;rotmguard::module::RootModuleInstance as rotmguard::module::ModuleInstance&gt;::client_packet::_{{closure}} (9 samples, 0.11%)</title><rect x="1.0774%" y="1189" width="0.1066%" height="15" fill="rgb(223,20,43)" fg:x="91" fg:w="9"/><text x="1.3274%" y="1199.50"></text></g><g><title>&lt;rotmguard::module::autonexus::AutonexusInst as rotmguard::module::ModuleInstance&gt;::client_packet::_{{closure}} (1 samples, 0.01%)</title><rect x="1.1722%" y="1173" width="0.0118%" height="15" fill="rgb(229,81,49)" fg:x="99" fg:w="1"/><text x="1.4222%" y="1183.50"></text></g><g><title>&lt;rotmguard::packets::ClientPacket as rotmguard::read::RPRead&gt;::rp_read (1 samples, 0.01%)</title><rect x="1.1840%" y="1189" width="0.0118%" height="15" fill="rgb(236,28,36)" fg:x="100" fg:w="1"/><text x="1.4340%" y="1199.50"></text></g><g><title>&lt;u8 as rotmguard::read::RPRead&gt;::rp_read (1 samples, 0.01%)</title><rect x="1.1840%" y="1173" width="0.0118%" height="15" fill="rgb(249,185,26)" fg:x="100" fg:w="1"/><text x="1.4340%" y="1183.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (1 samples, 0.01%)</title><rect x="1.1840%" y="1157" width="0.0118%" height="15" fill="rgb(249,174,33)" fg:x="100" fg:w="1"/><text x="1.4340%" y="1167.50"></text></g><g><title>&lt;rotmguard::packets::ServerPacket as rotmguard::read::RPRead&gt;::rp_read (2 samples, 0.02%)</title><rect x="1.1958%" y="1189" width="0.0237%" height="15" fill="rgb(233,201,37)" fg:x="101" fg:w="2"/><text x="1.4458%" y="1199.50"></text></g><g><title>&lt;rotmguard::packets::ServerPacket as rotmguard::write::RPWrite&gt;::rp_write (3 samples, 0.04%)</title><rect x="1.2195%" y="1189" width="0.0355%" height="15" fill="rgb(221,78,26)" fg:x="103" fg:w="3"/><text x="1.4695%" y="1199.50"></text></g><g><title>&lt;rotmguard::packets::_11_show_effect::ShowEffect as rotmguard::read::RPRead&gt;::rp_read (1 samples, 0.01%)</title><rect x="1.2550%" y="1189" width="0.0118%" height="15" fill="rgb(250,127,30)" fg:x="106" fg:w="1"/><text x="1.5050%" y="1199.50"></text></g><g><title>&lt;rotmguard::packets::_67_notification::NotificationPacket as rotmguard::read::RPRead&gt;::rp_read (2 samples, 0.02%)</title><rect x="1.2669%" y="1189" width="0.0237%" height="15" fill="rgb(230,49,44)" fg:x="107" fg:w="2"/><text x="1.5169%" y="1199.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.01%)</title><rect x="1.2906%" y="1189" width="0.0118%" height="15" fill="rgb(229,67,23)" fg:x="109" fg:w="1"/><text x="1.5406%" y="1199.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (3 samples, 0.04%)</title><rect x="1.3024%" y="1189" width="0.0355%" height="15" fill="rgb(249,83,47)" fg:x="110" fg:w="3"/><text x="1.5524%" y="1199.50"></text></g><g><title>&lt;tokio::net::tcp::split::ReadHalf as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.01%)</title><rect x="1.3379%" y="1189" width="0.0118%" height="15" fill="rgb(215,43,3)" fg:x="113" fg:w="1"/><text x="1.5879%" y="1199.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="1.3498%" y="1189" width="0.0118%" height="15" fill="rgb(238,154,13)" fg:x="114" fg:w="1"/><text x="1.5998%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (7 samples, 0.08%)</title><rect x="1.3616%" y="1189" width="0.0829%" height="15" fill="rgb(219,56,2)" fg:x="115" fg:w="7"/><text x="1.6116%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (1 samples, 0.01%)</title><rect x="1.4445%" y="1189" width="0.0118%" height="15" fill="rgb(233,0,4)" fg:x="122" fg:w="1"/><text x="1.6945%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_exit (1 samples, 0.01%)</title><rect x="1.4563%" y="1189" width="0.0118%" height="15" fill="rgb(235,30,7)" fg:x="123" fg:w="1"/><text x="1.7063%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (2 samples, 0.02%)</title><rect x="1.4682%" y="1189" width="0.0237%" height="15" fill="rgb(250,79,13)" fg:x="124" fg:w="2"/><text x="1.7182%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::enter (7 samples, 0.08%)</title><rect x="1.4918%" y="1189" width="0.0829%" height="15" fill="rgb(211,146,34)" fg:x="126" fg:w="7"/><text x="1.7418%" y="1199.50"></text></g><g><title>tracing_subscriber::registry::stack::SpanStack::push (1 samples, 0.01%)</title><rect x="1.5629%" y="1173" width="0.0118%" height="15" fill="rgb(228,22,38)" fg:x="132" fg:w="1"/><text x="1.8129%" y="1183.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1 samples, 0.01%)</title><rect x="1.5629%" y="1157" width="0.0118%" height="15" fill="rgb(235,168,5)" fg:x="132" fg:w="1"/><text x="1.8129%" y="1167.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.01%)</title><rect x="1.5747%" y="1189" width="0.0118%" height="15" fill="rgb(221,155,16)" fg:x="133" fg:w="1"/><text x="1.8247%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="1.5865%" y="1189" width="0.0118%" height="15" fill="rgb(215,215,53)" fg:x="134" fg:w="1"/><text x="1.8365%" y="1199.50"></text></g><g><title>std::thread::panicking (1 samples, 0.01%)</title><rect x="1.5865%" y="1173" width="0.0118%" height="15" fill="rgb(223,4,10)" fg:x="134" fg:w="1"/><text x="1.8365%" y="1183.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.01%)</title><rect x="1.5865%" y="1157" width="0.0118%" height="15" fill="rgb(234,103,6)" fg:x="134" fg:w="1"/><text x="1.8365%" y="1167.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.01%)</title><rect x="1.5865%" y="1141" width="0.0118%" height="15" fill="rgb(227,97,0)" fg:x="134" fg:w="1"/><text x="1.8365%" y="1151.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (6 samples, 0.07%)</title><rect x="1.5984%" y="1189" width="0.0710%" height="15" fill="rgb(234,150,53)" fg:x="135" fg:w="6"/><text x="1.8484%" y="1199.50"></text></g><g><title>[libc.so.6] (61 samples, 0.72%)</title><rect x="1.6694%" y="1189" width="0.7222%" height="15" fill="rgb(228,201,54)" fg:x="141" fg:w="61"/><text x="1.9194%" y="1199.50"></text></g><g><title>[libm.so.6] (10 samples, 0.12%)</title><rect x="2.3917%" y="1189" width="0.1184%" height="15" fill="rgb(222,22,37)" fg:x="202" fg:w="10"/><text x="2.6417%" y="1199.50"></text></g><g><title>[rotmguard] (1 samples, 0.01%)</title><rect x="2.5101%" y="1189" width="0.0118%" height="15" fill="rgb(237,53,32)" fg:x="212" fg:w="1"/><text x="2.7601%" y="1199.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="2.5101%" y="1173" width="0.0118%" height="15" fill="rgb(233,25,53)" fg:x="212" fg:w="1"/><text x="2.7601%" y="1183.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.01%)</title><rect x="2.5101%" y="1157" width="0.0118%" height="15" fill="rgb(210,40,34)" fg:x="212" fg:w="1"/><text x="2.7601%" y="1167.50"></text></g><g><title>&lt;json5::error::Error as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="2.5101%" y="1141" width="0.0118%" height="15" fill="rgb(241,220,44)" fg:x="212" fg:w="1"/><text x="2.7601%" y="1151.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.01%)</title><rect x="2.5101%" y="1125" width="0.0118%" height="15" fill="rgb(235,28,35)" fg:x="212" fg:w="1"/><text x="2.7601%" y="1135.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.01%)</title><rect x="2.5101%" y="1109" width="0.0118%" height="15" fill="rgb(210,56,17)" fg:x="212" fg:w="1"/><text x="2.7601%" y="1119.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::eat_char (1 samples, 0.01%)</title><rect x="2.5101%" y="1093" width="0.0118%" height="15" fill="rgb(224,130,29)" fg:x="212" fg:w="1"/><text x="2.7601%" y="1103.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::discard (1 samples, 0.01%)</title><rect x="2.5101%" y="1077" width="0.0118%" height="15" fill="rgb(235,212,8)" fg:x="212" fg:w="1"/><text x="2.7601%" y="1087.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::discard (1 samples, 0.01%)</title><rect x="2.5101%" y="1061" width="0.0118%" height="15" fill="rgb(223,33,50)" fg:x="212" fg:w="1"/><text x="2.7601%" y="1071.50"></text></g><g><title>_ZN5tokio7runtime4time5wheel5Wheel15next_expiration17h9e47eb8568393497E.llvm.15467044453606460770 (2 samples, 0.02%)</title><rect x="2.5219%" y="1189" width="0.0237%" height="15" fill="rgb(219,149,13)" fg:x="213" fg:w="2"/><text x="2.7719%" y="1199.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="2.5456%" y="1189" width="0.0118%" height="15" fill="rgb(250,156,29)" fg:x="215" fg:w="1"/><text x="2.7956%" y="1199.50"></text></g><g><title>__vdso_clock_gettime (5 samples, 0.06%)</title><rect x="2.5574%" y="1189" width="0.0592%" height="15" fill="rgb(216,193,19)" fg:x="216" fg:w="5"/><text x="2.8074%" y="1199.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (1 samples, 0.01%)</title><rect x="2.6166%" y="1141" width="0.0118%" height="15" fill="rgb(216,135,14)" fg:x="221" fg:w="1"/><text x="2.8666%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (1 samples, 0.01%)</title><rect x="2.6166%" y="1125" width="0.0118%" height="15" fill="rgb(241,47,5)" fg:x="221" fg:w="1"/><text x="2.8666%" y="1135.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.04%)</title><rect x="2.6166%" y="1189" width="0.0355%" height="15" fill="rgb(233,42,35)" fg:x="221" fg:w="3"/><text x="2.8666%" y="1199.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (3 samples, 0.04%)</title><rect x="2.6166%" y="1173" width="0.0355%" height="15" fill="rgb(231,13,6)" fg:x="221" fg:w="3"/><text x="2.8666%" y="1183.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (3 samples, 0.04%)</title><rect x="2.6166%" y="1157" width="0.0355%" height="15" fill="rgb(207,181,40)" fg:x="221" fg:w="3"/><text x="2.8666%" y="1167.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (2 samples, 0.02%)</title><rect x="2.6285%" y="1141" width="0.0237%" height="15" fill="rgb(254,173,49)" fg:x="222" fg:w="2"/><text x="2.8785%" y="1151.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (2 samples, 0.02%)</title><rect x="2.6285%" y="1125" width="0.0237%" height="15" fill="rgb(221,1,38)" fg:x="222" fg:w="2"/><text x="2.8785%" y="1135.50"></text></g><g><title>&lt;rotmguard::extra_datatypes::ObjectId as core::cmp::Ord&gt;::cmp (2 samples, 0.02%)</title><rect x="2.6285%" y="1109" width="0.0237%" height="15" fill="rgb(206,124,46)" fg:x="222" fg:w="2"/><text x="2.8785%" y="1119.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (2 samples, 0.02%)</title><rect x="2.6285%" y="1093" width="0.0237%" height="15" fill="rgb(249,21,11)" fg:x="222" fg:w="2"/><text x="2.8785%" y="1103.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.02%)</title><rect x="2.6521%" y="1189" width="0.0237%" height="15" fill="rgb(222,201,40)" fg:x="224" fg:w="2"/><text x="2.9021%" y="1199.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (1 samples, 0.01%)</title><rect x="2.6758%" y="1189" width="0.0118%" height="15" fill="rgb(235,61,29)" fg:x="226" fg:w="1"/><text x="2.9258%" y="1199.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="2.6877%" y="1189" width="0.0237%" height="15" fill="rgb(219,207,3)" fg:x="227" fg:w="2"/><text x="2.9377%" y="1199.50"></text></g><g><title>clock_gettime (1 samples, 0.01%)</title><rect x="2.7113%" y="1189" width="0.0118%" height="15" fill="rgb(222,56,46)" fg:x="229" fg:w="1"/><text x="2.9613%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;rotmguard::module::autonexus::AutonexusInst as rotmguard::module::ModuleInstance&gt;::client_packet::{{closure}}&gt; (1 samples, 0.01%)</title><rect x="2.7232%" y="1189" width="0.0118%" height="15" fill="rgb(239,76,54)" fg:x="230" fg:w="1"/><text x="2.9732%" y="1199.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (3 samples, 0.04%)</title><rect x="2.7350%" y="1173" width="0.0355%" height="15" fill="rgb(231,124,27)" fg:x="231" fg:w="3"/><text x="2.9850%" y="1183.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.04%)</title><rect x="2.7350%" y="1157" width="0.0355%" height="15" fill="rgb(249,195,6)" fg:x="231" fg:w="3"/><text x="2.9850%" y="1167.50"></text></g><g><title>core::slice::rotate::ptr_rotate (4 samples, 0.05%)</title><rect x="2.7350%" y="1189" width="0.0474%" height="15" fill="rgb(237,174,47)" fg:x="231" fg:w="4"/><text x="2.9850%" y="1199.50"></text></g><g><title>core::ptr::swap_nonoverlapping (1 samples, 0.01%)</title><rect x="2.7705%" y="1173" width="0.0118%" height="15" fill="rgb(206,201,31)" fg:x="234" fg:w="1"/><text x="3.0205%" y="1183.50"></text></g><g><title>core::ptr::swap_nonoverlapping_simple_untyped (1 samples, 0.01%)</title><rect x="2.7705%" y="1157" width="0.0118%" height="15" fill="rgb(231,57,52)" fg:x="234" fg:w="1"/><text x="3.0205%" y="1167.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="2.7705%" y="1141" width="0.0118%" height="15" fill="rgb(248,177,22)" fg:x="234" fg:w="1"/><text x="3.0205%" y="1151.50"></text></g><g><title>malloc (3 samples, 0.04%)</title><rect x="2.7824%" y="1189" width="0.0355%" height="15" fill="rgb(215,211,37)" fg:x="235" fg:w="3"/><text x="3.0324%" y="1199.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (1 samples, 0.01%)</title><rect x="2.8179%" y="1189" width="0.0118%" height="15" fill="rgb(241,128,51)" fg:x="238" fg:w="1"/><text x="3.0679%" y="1199.50"></text></g><g><title>pow (1 samples, 0.01%)</title><rect x="2.8297%" y="1189" width="0.0118%" height="15" fill="rgb(227,165,31)" fg:x="239" fg:w="1"/><text x="3.0797%" y="1199.50"></text></g><g><title>rc4::Rc4State::prga (6 samples, 0.07%)</title><rect x="2.8416%" y="1189" width="0.0710%" height="15" fill="rgb(228,167,24)" fg:x="240" fg:w="6"/><text x="3.0916%" y="1199.50"></text></g><g><title>core::num::&lt;impl u8&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="2.9008%" y="1173" width="0.0118%" height="15" fill="rgb(228,143,12)" fg:x="245" fg:w="1"/><text x="3.1508%" y="1183.50"></text></g><g><title>rotmguard::module::autonexus::passive::Passive::apply_passive (1 samples, 0.01%)</title><rect x="2.9126%" y="1189" width="0.0118%" height="15" fill="rgb(249,149,8)" fg:x="246" fg:w="1"/><text x="3.1626%" y="1199.50"></text></g><g><title>rotmguard::module::autonexus::projectiles::Projectiles::add_remove_objects (1 samples, 0.01%)</title><rect x="2.9245%" y="1189" width="0.0118%" height="15" fill="rgb(243,35,44)" fg:x="247" fg:w="1"/><text x="3.1745%" y="1199.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (1 samples, 0.01%)</title><rect x="2.9245%" y="1173" width="0.0118%" height="15" fill="rgb(246,89,9)" fg:x="247" fg:w="1"/><text x="3.1745%" y="1183.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove_entry (1 samples, 0.01%)</title><rect x="2.9245%" y="1157" width="0.0118%" height="15" fill="rgb(233,213,13)" fg:x="247" fg:w="1"/><text x="3.1745%" y="1167.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.01%)</title><rect x="2.9245%" y="1141" width="0.0118%" height="15" fill="rgb(233,141,41)" fg:x="247" fg:w="1"/><text x="3.1745%" y="1151.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1 samples, 0.01%)</title><rect x="2.9245%" y="1125" width="0.0118%" height="15" fill="rgb(239,167,4)" fg:x="247" fg:w="1"/><text x="3.1745%" y="1135.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1 samples, 0.01%)</title><rect x="2.9245%" y="1109" width="0.0118%" height="15" fill="rgb(209,217,16)" fg:x="247" fg:w="1"/><text x="3.1745%" y="1119.50"></text></g><g><title>&lt;rotmguard::extra_datatypes::ObjectId as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="2.9245%" y="1093" width="0.0118%" height="15" fill="rgb(219,88,35)" fg:x="247" fg:w="1"/><text x="3.1745%" y="1103.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (1 samples, 0.01%)</title><rect x="2.9245%" y="1077" width="0.0118%" height="15" fill="rgb(220,193,23)" fg:x="247" fg:w="1"/><text x="3.1745%" y="1087.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (4 samples, 0.05%)</title><rect x="3.0192%" y="1157" width="0.0474%" height="15" fill="rgb(230,90,52)" fg:x="255" fg:w="4"/><text x="3.2692%" y="1167.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::filled (1 samples, 0.01%)</title><rect x="3.0665%" y="1157" width="0.0118%" height="15" fill="rgb(252,106,19)" fg:x="259" fg:w="1"/><text x="3.3165%" y="1167.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.01%)</title><rect x="3.0665%" y="1141" width="0.0118%" height="15" fill="rgb(206,74,20)" fg:x="259" fg:w="1"/><text x="3.3165%" y="1151.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="3.0665%" y="1125" width="0.0118%" height="15" fill="rgb(230,138,44)" fg:x="259" fg:w="1"/><text x="3.3165%" y="1135.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="3.0665%" y="1109" width="0.0118%" height="15" fill="rgb(235,182,43)" fg:x="259" fg:w="1"/><text x="3.3165%" y="1119.50"></text></g><g><title>&lt;tokio::io::util::read::Read&lt;R&gt; as core::future::future::Future&gt;::poll (9 samples, 0.11%)</title><rect x="2.9837%" y="1173" width="0.1066%" height="15" fill="rgb(242,16,51)" fg:x="252" fg:w="9"/><text x="3.2337%" y="1183.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::new (1 samples, 0.01%)</title><rect x="3.0784%" y="1157" width="0.0118%" height="15" fill="rgb(248,9,4)" fg:x="260" fg:w="1"/><text x="3.3284%" y="1167.50"></text></g><g><title>&lt;inout::inout_buf::InOutBufIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="3.0902%" y="1077" width="0.0355%" height="15" fill="rgb(210,31,22)" fg:x="261" fg:w="3"/><text x="3.3402%" y="1087.50"></text></g><g><title>&lt;rc4::Backend as cipher::stream_core::StreamBackend&gt;::gen_ks_block (3 samples, 0.04%)</title><rect x="3.1257%" y="1077" width="0.0355%" height="15" fill="rgb(239,54,39)" fg:x="264" fg:w="3"/><text x="3.3757%" y="1087.50"></text></g><g><title>rotmguard::proxy::PacketReader::wait_for_whole_packet::_{{closure}} (20 samples, 0.24%)</title><rect x="2.9363%" y="1189" width="0.2368%" height="15" fill="rgb(230,99,41)" fg:x="248" fg:w="20"/><text x="3.1863%" y="1199.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (7 samples, 0.08%)</title><rect x="3.0902%" y="1173" width="0.0829%" height="15" fill="rgb(253,106,12)" fg:x="261" fg:w="7"/><text x="3.3402%" y="1183.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (7 samples, 0.08%)</title><rect x="3.0902%" y="1157" width="0.0829%" height="15" fill="rgb(213,46,41)" fg:x="261" fg:w="7"/><text x="3.3402%" y="1167.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (7 samples, 0.08%)</title><rect x="3.0902%" y="1141" width="0.0829%" height="15" fill="rgb(215,133,35)" fg:x="261" fg:w="7"/><text x="3.3402%" y="1151.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (7 samples, 0.08%)</title><rect x="3.0902%" y="1125" width="0.0829%" height="15" fill="rgb(213,28,5)" fg:x="261" fg:w="7"/><text x="3.3402%" y="1135.50"></text></g><g><title>&lt;rc4::Rc4Core&lt;KeySize&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (7 samples, 0.08%)</title><rect x="3.0902%" y="1109" width="0.0829%" height="15" fill="rgb(215,77,49)" fg:x="261" fg:w="7"/><text x="3.3402%" y="1119.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (7 samples, 0.08%)</title><rect x="3.0902%" y="1093" width="0.0829%" height="15" fill="rgb(248,100,22)" fg:x="261" fg:w="7"/><text x="3.3402%" y="1103.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (1 samples, 0.01%)</title><rect x="3.1613%" y="1077" width="0.0118%" height="15" fill="rgb(208,67,9)" fg:x="267" fg:w="1"/><text x="3.4113%" y="1087.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="3.1613%" y="1061" width="0.0118%" height="15" fill="rgb(219,133,21)" fg:x="267" fg:w="1"/><text x="3.4113%" y="1071.50"></text></g><g><title>rotmguard::proxy::Proxy::run::_{{closure}}::_{{closure}} (7 samples, 0.08%)</title><rect x="3.1731%" y="1189" width="0.0829%" height="15" fill="rgb(246,46,29)" fg:x="268" fg:w="7"/><text x="3.4231%" y="1199.50"></text></g><g><title>&lt;rotmguard::module::RootModuleInstance as rotmguard::module::ModuleInstance&gt;::server_packet::_{{closure}} (4 samples, 0.05%)</title><rect x="3.2086%" y="1173" width="0.0474%" height="15" fill="rgb(246,185,52)" fg:x="271" fg:w="4"/><text x="3.4586%" y="1183.50"></text></g><g><title>&lt;rotmguard::module::autonexus::AutonexusInst as rotmguard::module::ModuleInstance&gt;::server_packet::_{{closure}} (3 samples, 0.04%)</title><rect x="3.2205%" y="1157" width="0.0355%" height="15" fill="rgb(252,136,11)" fg:x="272" fg:w="3"/><text x="3.4705%" y="1167.50"></text></g><g><title>rotmguard::proxy::ProxyWriteHalf::send_client::_{{closure}} (3 samples, 0.04%)</title><rect x="3.2560%" y="1189" width="0.0355%" height="15" fill="rgb(219,138,53)" fg:x="275" fg:w="3"/><text x="3.5060%" y="1199.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (1 samples, 0.01%)</title><rect x="3.2797%" y="1173" width="0.0118%" height="15" fill="rgb(211,51,23)" fg:x="277" fg:w="1"/><text x="3.5297%" y="1183.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (1 samples, 0.01%)</title><rect x="3.2797%" y="1157" width="0.0118%" height="15" fill="rgb(247,221,28)" fg:x="277" fg:w="1"/><text x="3.5297%" y="1167.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (1 samples, 0.01%)</title><rect x="3.2797%" y="1141" width="0.0118%" height="15" fill="rgb(251,222,45)" fg:x="277" fg:w="1"/><text x="3.5297%" y="1151.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (1 samples, 0.01%)</title><rect x="3.2797%" y="1125" width="0.0118%" height="15" fill="rgb(217,162,53)" fg:x="277" fg:w="1"/><text x="3.5297%" y="1135.50"></text></g><g><title>&lt;rc4::Rc4Core&lt;KeySize&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1 samples, 0.01%)</title><rect x="3.2797%" y="1109" width="0.0118%" height="15" fill="rgb(229,93,14)" fg:x="277" fg:w="1"/><text x="3.5297%" y="1119.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.01%)</title><rect x="3.2797%" y="1093" width="0.0118%" height="15" fill="rgb(209,67,49)" fg:x="277" fg:w="1"/><text x="3.5297%" y="1103.50"></text></g><g><title>&lt;rc4::Backend as cipher::stream_core::StreamBackend&gt;::gen_ks_block (1 samples, 0.01%)</title><rect x="3.2797%" y="1077" width="0.0118%" height="15" fill="rgb(213,87,29)" fg:x="277" fg:w="1"/><text x="3.5297%" y="1087.50"></text></g><g><title>rotmguard::proxy::ProxyWriteHalf::send_server::_{{closure}} (4 samples, 0.05%)</title><rect x="3.2915%" y="1189" width="0.0474%" height="15" fill="rgb(205,151,52)" fg:x="278" fg:w="4"/><text x="3.5415%" y="1199.50"></text></g><g><title>&lt;u32 as rotmguard::write::RPWrite&gt;::rp_write (2 samples, 0.02%)</title><rect x="3.3152%" y="1173" width="0.0237%" height="15" fill="rgb(253,215,39)" fg:x="280" fg:w="2"/><text x="3.5652%" y="1183.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (2 samples, 0.02%)</title><rect x="3.3152%" y="1157" width="0.0237%" height="15" fill="rgb(221,220,41)" fg:x="280" fg:w="2"/><text x="3.5652%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.02%)</title><rect x="3.3152%" y="1141" width="0.0237%" height="15" fill="rgb(218,133,21)" fg:x="280" fg:w="2"/><text x="3.5652%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="3.3152%" y="1125" width="0.0237%" height="15" fill="rgb(221,193,43)" fg:x="280" fg:w="2"/><text x="3.5652%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.02%)</title><rect x="3.3152%" y="1109" width="0.0237%" height="15" fill="rgb(240,128,52)" fg:x="280" fg:w="2"/><text x="3.5652%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.02%)</title><rect x="3.3152%" y="1093" width="0.0237%" height="15" fill="rgb(253,114,12)" fg:x="280" fg:w="2"/><text x="3.5652%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.02%)</title><rect x="3.3152%" y="1077" width="0.0237%" height="15" fill="rgb(215,223,47)" fg:x="280" fg:w="2"/><text x="3.5652%" y="1087.50"></text></g><g><title>rotmguard::write::write_compressed_int (4 samples, 0.05%)</title><rect x="3.3389%" y="1189" width="0.0474%" height="15" fill="rgb(248,225,23)" fg:x="282" fg:w="4"/><text x="3.5889%" y="1199.50"></text></g><g><title>&lt;u8 as rotmguard::write::RPWrite&gt;::rp_write (1 samples, 0.01%)</title><rect x="3.3744%" y="1173" width="0.0118%" height="15" fill="rgb(250,108,0)" fg:x="285" fg:w="1"/><text x="3.6244%" y="1183.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.01%)</title><rect x="3.3744%" y="1157" width="0.0118%" height="15" fill="rgb(228,208,7)" fg:x="285" fg:w="1"/><text x="3.6244%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="3.3744%" y="1141" width="0.0118%" height="15" fill="rgb(244,45,10)" fg:x="285" fg:w="1"/><text x="3.6244%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="3.3744%" y="1125" width="0.0118%" height="15" fill="rgb(207,125,25)" fg:x="285" fg:w="1"/><text x="3.6244%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="3.3744%" y="1109" width="0.0118%" height="15" fill="rgb(210,195,18)" fg:x="285" fg:w="1"/><text x="3.6244%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="3.3744%" y="1093" width="0.0118%" height="15" fill="rgb(249,80,12)" fg:x="285" fg:w="1"/><text x="3.6244%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="3.3744%" y="1077" width="0.0118%" height="15" fill="rgb(221,65,9)" fg:x="285" fg:w="1"/><text x="3.6244%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.01%)</title><rect x="3.3744%" y="1061" width="0.0118%" height="15" fill="rgb(235,49,36)" fg:x="285" fg:w="1"/><text x="3.6244%" y="1071.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.01%)</title><rect x="3.3862%" y="1189" width="0.0118%" height="15" fill="rgb(225,32,20)" fg:x="286" fg:w="1"/><text x="3.6362%" y="1199.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.01%)</title><rect x="3.3862%" y="1173" width="0.0118%" height="15" fill="rgb(215,141,46)" fg:x="286" fg:w="1"/><text x="3.6362%" y="1183.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.01%)</title><rect x="3.3862%" y="1157" width="0.0118%" height="15" fill="rgb(250,160,47)" fg:x="286" fg:w="1"/><text x="3.6362%" y="1167.50"></text></g><g><title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.01%)</title><rect x="3.3862%" y="1141" width="0.0118%" height="15" fill="rgb(216,222,40)" fg:x="286" fg:w="1"/><text x="3.6362%" y="1151.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.01%)</title><rect x="3.3862%" y="1125" width="0.0118%" height="15" fill="rgb(234,217,39)" fg:x="286" fg:w="1"/><text x="3.6362%" y="1135.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.01%)</title><rect x="3.3862%" y="1109" width="0.0118%" height="15" fill="rgb(207,178,40)" fg:x="286" fg:w="1"/><text x="3.6362%" y="1119.50"></text></g><g><title>serde_json::ser::Formatter::end_string (1 samples, 0.01%)</title><rect x="3.3862%" y="1093" width="0.0118%" height="15" fill="rgb(221,136,13)" fg:x="286" fg:w="1"/><text x="3.6362%" y="1103.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="3.3862%" y="1077" width="0.0118%" height="15" fill="rgb(249,199,10)" fg:x="286" fg:w="1"/><text x="3.6362%" y="1087.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.02%)</title><rect x="3.3981%" y="1189" width="0.0237%" height="15" fill="rgb(249,222,13)" fg:x="287" fg:w="2"/><text x="3.6481%" y="1199.50"></text></g><g><title>serde_json::ser::Formatter::end_string (1 samples, 0.01%)</title><rect x="3.4099%" y="1173" width="0.0118%" height="15" fill="rgb(244,185,38)" fg:x="288" fg:w="1"/><text x="3.6599%" y="1183.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="3.4099%" y="1157" width="0.0118%" height="15" fill="rgb(236,202,9)" fg:x="288" fg:w="1"/><text x="3.6599%" y="1167.50"></text></g><g><title>&lt;tracing_subscriber::fmt::writer::WriteAdaptor as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="3.4099%" y="1141" width="0.0118%" height="15" fill="rgb(250,229,37)" fg:x="288" fg:w="1"/><text x="3.6599%" y="1151.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="3.4099%" y="1125" width="0.0118%" height="15" fill="rgb(206,174,23)" fg:x="288" fg:w="1"/><text x="3.6599%" y="1135.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="3.4099%" y="1109" width="0.0118%" height="15" fill="rgb(211,33,43)" fg:x="288" fg:w="1"/><text x="3.6599%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="3.4099%" y="1093" width="0.0118%" height="15" fill="rgb(245,58,50)" fg:x="288" fg:w="1"/><text x="3.6599%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="3.4099%" y="1077" width="0.0118%" height="15" fill="rgb(244,68,36)" fg:x="288" fg:w="1"/><text x="3.6599%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="3.4099%" y="1061" width="0.0118%" height="15" fill="rgb(232,229,15)" fg:x="288" fg:w="1"/><text x="3.6599%" y="1071.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="3.4099%" y="1045" width="0.0118%" height="15" fill="rgb(254,30,23)" fg:x="288" fg:w="1"/><text x="3.6599%" y="1055.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (2 samples, 0.02%)</title><rect x="3.4217%" y="1157" width="0.0237%" height="15" fill="rgb(235,160,14)" fg:x="289" fg:w="2"/><text x="3.6717%" y="1167.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="3.4217%" y="1141" width="0.0237%" height="15" fill="rgb(212,155,44)" fg:x="289" fg:w="2"/><text x="3.6717%" y="1151.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::_{{closure}} (2 samples, 0.02%)</title><rect x="3.4217%" y="1125" width="0.0237%" height="15" fill="rgb(226,2,50)" fg:x="289" fg:w="2"/><text x="3.6717%" y="1135.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::_{{closure}} (2 samples, 0.02%)</title><rect x="3.4217%" y="1109" width="0.0237%" height="15" fill="rgb(234,177,6)" fg:x="289" fg:w="2"/><text x="3.6717%" y="1119.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (2 samples, 0.02%)</title><rect x="3.4217%" y="1093" width="0.0237%" height="15" fill="rgb(217,24,9)" fg:x="289" fg:w="2"/><text x="3.6717%" y="1103.50"></text></g><g><title>core::cmp::PartialEq::ne (1 samples, 0.01%)</title><rect x="3.4336%" y="1077" width="0.0118%" height="15" fill="rgb(220,13,46)" fg:x="290" fg:w="1"/><text x="3.6836%" y="1087.50"></text></g><g><title>&lt;sharded_slab::page::slot::Generation&lt;C&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="3.4336%" y="1061" width="0.0118%" height="15" fill="rgb(239,221,27)" fg:x="290" fg:w="1"/><text x="3.6836%" y="1071.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (3 samples, 0.04%)</title><rect x="3.4217%" y="1189" width="0.0355%" height="15" fill="rgb(222,198,25)" fg:x="289" fg:w="3"/><text x="3.6717%" y="1199.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (3 samples, 0.04%)</title><rect x="3.4217%" y="1173" width="0.0355%" height="15" fill="rgb(211,99,13)" fg:x="289" fg:w="3"/><text x="3.6717%" y="1183.50"></text></g><g><title>sharded_slab::page::indices (1 samples, 0.01%)</title><rect x="3.4454%" y="1157" width="0.0118%" height="15" fill="rgb(232,111,31)" fg:x="291" fg:w="1"/><text x="3.6954%" y="1167.50"></text></g><g><title>sharded_slab::page::Addr&lt;C&gt;::index (1 samples, 0.01%)</title><rect x="3.4454%" y="1141" width="0.0118%" height="15" fill="rgb(245,82,37)" fg:x="291" fg:w="1"/><text x="3.6954%" y="1151.50"></text></g><g><title>core::num::&lt;impl usize&gt;::leading_zeros (1 samples, 0.01%)</title><rect x="3.4454%" y="1125" width="0.0118%" height="15" fill="rgb(227,149,46)" fg:x="291" fg:w="1"/><text x="3.6954%" y="1135.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="3.4573%" y="1189" width="0.0118%" height="15" fill="rgb(218,36,50)" fg:x="292" fg:w="1"/><text x="3.7073%" y="1199.50"></text></g><g><title>_ZN5tokio7runtime4time5wheel5Wheel15next_expiration17h9e47eb8568393497E.llvm.15467044453606460770 (3 samples, 0.04%)</title><rect x="3.5283%" y="1173" width="0.0355%" height="15" fill="rgb(226,80,48)" fg:x="298" fg:w="3"/><text x="3.7783%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (1 samples, 0.01%)</title><rect x="3.5757%" y="1157" width="0.0118%" height="15" fill="rgb(238,224,15)" fg:x="302" fg:w="1"/><text x="3.8257%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_parked (1 samples, 0.01%)</title><rect x="3.5757%" y="1141" width="0.0118%" height="15" fill="rgb(241,136,10)" fg:x="302" fg:w="1"/><text x="3.8257%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (1 samples, 0.01%)</title><rect x="3.5757%" y="1125" width="0.0118%" height="15" fill="rgb(208,32,45)" fg:x="302" fg:w="1"/><text x="3.8257%" y="1135.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="3.5757%" y="1109" width="0.0118%" height="15" fill="rgb(207,135,9)" fg:x="302" fg:w="1"/><text x="3.8257%" y="1119.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="3.5757%" y="1093" width="0.0118%" height="15" fill="rgb(206,86,44)" fg:x="302" fg:w="1"/><text x="3.8257%" y="1103.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="3.5875%" y="1141" width="0.0118%" height="15" fill="rgb(245,177,15)" fg:x="303" fg:w="1"/><text x="3.8375%" y="1151.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.01%)</title><rect x="3.5875%" y="1125" width="0.0118%" height="15" fill="rgb(206,64,50)" fg:x="303" fg:w="1"/><text x="3.8375%" y="1135.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="3.5875%" y="1109" width="0.0118%" height="15" fill="rgb(234,36,40)" fg:x="303" fg:w="1"/><text x="3.8375%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (4 samples, 0.05%)</title><rect x="3.5638%" y="1173" width="0.0474%" height="15" fill="rgb(213,64,8)" fg:x="301" fg:w="4"/><text x="3.8138%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (2 samples, 0.02%)</title><rect x="3.5875%" y="1157" width="0.0237%" height="15" fill="rgb(210,75,36)" fg:x="303" fg:w="2"/><text x="3.8375%" y="1167.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.01%)</title><rect x="3.5993%" y="1141" width="0.0118%" height="15" fill="rgb(229,88,21)" fg:x="304" fg:w="1"/><text x="3.8493%" y="1151.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.01%)</title><rect x="3.5993%" y="1125" width="0.0118%" height="15" fill="rgb(252,204,47)" fg:x="304" fg:w="1"/><text x="3.8493%" y="1135.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.01%)</title><rect x="3.5993%" y="1109" width="0.0118%" height="15" fill="rgb(208,77,27)" fg:x="304" fg:w="1"/><text x="3.8493%" y="1119.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (17 samples, 0.20%)</title><rect x="3.4691%" y="1189" width="0.2013%" height="15" fill="rgb(221,76,26)" fg:x="293" fg:w="17"/><text x="3.7191%" y="1199.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (5 samples, 0.06%)</title><rect x="3.6112%" y="1173" width="0.0592%" height="15" fill="rgb(225,139,18)" fg:x="305" fg:w="5"/><text x="3.8612%" y="1183.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (1 samples, 0.01%)</title><rect x="3.6585%" y="1157" width="0.0118%" height="15" fill="rgb(230,137,11)" fg:x="309" fg:w="1"/><text x="3.9085%" y="1167.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (1 samples, 0.01%)</title><rect x="3.6585%" y="1141" width="0.0118%" height="15" fill="rgb(212,28,1)" fg:x="309" fg:w="1"/><text x="3.9085%" y="1151.50"></text></g><g><title>std::time::Instant::duration_since (1 samples, 0.01%)</title><rect x="3.6704%" y="1189" width="0.0118%" height="15" fill="rgb(248,164,17)" fg:x="310" fg:w="1"/><text x="3.9204%" y="1199.50"></text></g><g><title>std::time::Instant::now (2 samples, 0.02%)</title><rect x="3.6822%" y="1189" width="0.0237%" height="15" fill="rgb(222,171,42)" fg:x="311" fg:w="2"/><text x="3.9322%" y="1199.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.01%)</title><rect x="3.7769%" y="1157" width="0.0118%" height="15" fill="rgb(243,84,45)" fg:x="319" fg:w="1"/><text x="4.0269%" y="1167.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.01%)</title><rect x="3.7769%" y="1141" width="0.0118%" height="15" fill="rgb(252,49,23)" fg:x="319" fg:w="1"/><text x="4.0269%" y="1151.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::advance (2 samples, 0.02%)</title><rect x="3.7769%" y="1173" width="0.0237%" height="15" fill="rgb(215,19,7)" fg:x="319" fg:w="2"/><text x="4.0269%" y="1183.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::set_filled (1 samples, 0.01%)</title><rect x="3.7888%" y="1157" width="0.0118%" height="15" fill="rgb(238,81,41)" fg:x="320" fg:w="1"/><text x="4.0388%" y="1167.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (9 samples, 0.11%)</title><rect x="3.7059%" y="1189" width="0.1066%" height="15" fill="rgb(210,199,37)" fg:x="313" fg:w="9"/><text x="3.9559%" y="1199.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::assume_init (1 samples, 0.01%)</title><rect x="3.8006%" y="1173" width="0.0118%" height="15" fill="rgb(244,192,49)" fg:x="321" fg:w="1"/><text x="4.0506%" y="1183.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (1 samples, 0.01%)</title><rect x="3.8125%" y="1189" width="0.0118%" height="15" fill="rgb(226,211,11)" fg:x="322" fg:w="1"/><text x="4.0625%" y="1199.50"></text></g><g><title>tokio::runtime::context::with_scheduler (5 samples, 0.06%)</title><rect x="3.8243%" y="1189" width="0.0592%" height="15" fill="rgb(236,162,54)" fg:x="323" fg:w="5"/><text x="4.0743%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.06%)</title><rect x="3.8243%" y="1173" width="0.0592%" height="15" fill="rgb(220,229,9)" fg:x="323" fg:w="5"/><text x="4.0743%" y="1183.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (5 samples, 0.06%)</title><rect x="3.8243%" y="1157" width="0.0592%" height="15" fill="rgb(250,87,22)" fg:x="323" fg:w="5"/><text x="4.0743%" y="1167.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (5 samples, 0.06%)</title><rect x="3.8243%" y="1141" width="0.0592%" height="15" fill="rgb(239,43,17)" fg:x="323" fg:w="5"/><text x="4.0743%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (5 samples, 0.06%)</title><rect x="3.8243%" y="1125" width="0.0592%" height="15" fill="rgb(231,177,25)" fg:x="323" fg:w="5"/><text x="4.0743%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (5 samples, 0.06%)</title><rect x="3.8243%" y="1109" width="0.0592%" height="15" fill="rgb(219,179,1)" fg:x="323" fg:w="5"/><text x="4.0743%" y="1119.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (5 samples, 0.06%)</title><rect x="3.8243%" y="1093" width="0.0592%" height="15" fill="rgb(238,219,53)" fg:x="323" fg:w="5"/><text x="4.0743%" y="1103.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (5 samples, 0.06%)</title><rect x="3.8243%" y="1077" width="0.0592%" height="15" fill="rgb(232,167,36)" fg:x="323" fg:w="5"/><text x="4.0743%" y="1087.50"></text></g><g><title>core::cell::BorrowRefMut::new (5 samples, 0.06%)</title><rect x="3.8243%" y="1061" width="0.0592%" height="15" fill="rgb(244,19,51)" fg:x="323" fg:w="5"/><text x="4.0743%" y="1071.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (8 samples, 0.09%)</title><rect x="3.8835%" y="1189" width="0.0947%" height="15" fill="rgb(224,6,22)" fg:x="328" fg:w="8"/><text x="4.1335%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::coop::RestoreOnPending&gt; (1 samples, 0.01%)</title><rect x="4.0019%" y="1173" width="0.0118%" height="15" fill="rgb(224,145,5)" fg:x="338" fg:w="1"/><text x="4.2519%" y="1183.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="4.0019%" y="1157" width="0.0118%" height="15" fill="rgb(234,130,49)" fg:x="338" fg:w="1"/><text x="4.2519%" y="1167.50"></text></g><g><title>tokio::runtime::coop::Budget::is_unconstrained (1 samples, 0.01%)</title><rect x="4.0019%" y="1141" width="0.0118%" height="15" fill="rgb(254,6,2)" fg:x="338" fg:w="1"/><text x="4.2519%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (1 samples, 0.01%)</title><rect x="4.0019%" y="1125" width="0.0118%" height="15" fill="rgb(208,96,46)" fg:x="338" fg:w="1"/><text x="4.2519%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.01%)</title><rect x="4.0019%" y="1109" width="0.0118%" height="15" fill="rgb(239,3,39)" fg:x="338" fg:w="1"/><text x="4.2519%" y="1119.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (7 samples, 0.08%)</title><rect x="3.9782%" y="1189" width="0.0829%" height="15" fill="rgb(233,210,1)" fg:x="336" fg:w="7"/><text x="4.2282%" y="1199.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (4 samples, 0.05%)</title><rect x="4.0137%" y="1173" width="0.0474%" height="15" fill="rgb(244,137,37)" fg:x="339" fg:w="4"/><text x="4.2637%" y="1183.50"></text></g><g><title>tokio::runtime::context::budget (4 samples, 0.05%)</title><rect x="4.0137%" y="1157" width="0.0474%" height="15" fill="rgb(240,136,2)" fg:x="339" fg:w="4"/><text x="4.2637%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.05%)</title><rect x="4.0137%" y="1141" width="0.0474%" height="15" fill="rgb(239,18,37)" fg:x="339" fg:w="4"/><text x="4.2637%" y="1151.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (1 samples, 0.01%)</title><rect x="4.0493%" y="1125" width="0.0118%" height="15" fill="rgb(218,185,22)" fg:x="342" fg:w="1"/><text x="4.2993%" y="1135.50"></text></g><g><title>std::sys::thread_local::fast_local::eager::Storage&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="4.0493%" y="1109" width="0.0118%" height="15" fill="rgb(225,218,4)" fg:x="342" fg:w="1"/><text x="4.2993%" y="1119.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="4.0493%" y="1093" width="0.0118%" height="15" fill="rgb(230,182,32)" fg:x="342" fg:w="1"/><text x="4.2993%" y="1103.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (2 samples, 0.02%)</title><rect x="4.0611%" y="1189" width="0.0237%" height="15" fill="rgb(242,56,43)" fg:x="343" fg:w="2"/><text x="4.3111%" y="1199.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (1 samples, 0.01%)</title><rect x="4.0848%" y="1189" width="0.0118%" height="15" fill="rgb(233,99,24)" fg:x="345" fg:w="1"/><text x="4.3348%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (3 samples, 0.04%)</title><rect x="4.0966%" y="1189" width="0.0355%" height="15" fill="rgb(234,209,42)" fg:x="346" fg:w="3"/><text x="4.3466%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (3 samples, 0.04%)</title><rect x="4.0966%" y="1173" width="0.0355%" height="15" fill="rgb(227,7,12)" fg:x="346" fg:w="3"/><text x="4.3466%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (2 samples, 0.02%)</title><rect x="4.1085%" y="1157" width="0.0237%" height="15" fill="rgb(245,203,43)" fg:x="347" fg:w="2"/><text x="4.3585%" y="1167.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="4.1913%" y="1173" width="0.0118%" height="15" fill="rgb(238,205,33)" fg:x="354" fg:w="1"/><text x="4.4413%" y="1183.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.01%)</title><rect x="4.1913%" y="1157" width="0.0118%" height="15" fill="rgb(231,56,7)" fg:x="354" fg:w="1"/><text x="4.4413%" y="1167.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="4.1913%" y="1141" width="0.0118%" height="15" fill="rgb(244,186,29)" fg:x="354" fg:w="1"/><text x="4.4413%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (7 samples, 0.08%)</title><rect x="4.1321%" y="1189" width="0.0829%" height="15" fill="rgb(234,111,31)" fg:x="349" fg:w="7"/><text x="4.3821%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (1 samples, 0.01%)</title><rect x="4.2032%" y="1173" width="0.0118%" height="15" fill="rgb(241,149,10)" fg:x="355" fg:w="1"/><text x="4.4532%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (2 samples, 0.02%)</title><rect x="4.2150%" y="1189" width="0.0237%" height="15" fill="rgb(249,206,44)" fg:x="356" fg:w="2"/><text x="4.4650%" y="1199.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="4.2387%" y="1173" width="0.0118%" height="15" fill="rgb(251,153,30)" fg:x="358" fg:w="1"/><text x="4.4887%" y="1183.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.01%)</title><rect x="4.2387%" y="1157" width="0.0118%" height="15" fill="rgb(239,152,38)" fg:x="358" fg:w="1"/><text x="4.4887%" y="1167.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="4.2387%" y="1141" width="0.0118%" height="15" fill="rgb(249,139,47)" fg:x="358" fg:w="1"/><text x="4.4887%" y="1151.50"></text></g><g><title>_ZN5tokio7runtime4time5wheel5Wheel15next_expiration17h9e47eb8568393497E.llvm.15467044453606460770 (1 samples, 0.01%)</title><rect x="4.2505%" y="1141" width="0.0118%" height="15" fill="rgb(244,64,35)" fg:x="359" fg:w="1"/><text x="4.5005%" y="1151.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (1 samples, 0.01%)</title><rect x="4.2624%" y="1029" width="0.0118%" height="15" fill="rgb(216,46,15)" fg:x="360" fg:w="1"/><text x="4.5124%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (1 samples, 0.01%)</title><rect x="4.2624%" y="1013" width="0.0118%" height="15" fill="rgb(250,74,19)" fg:x="360" fg:w="1"/><text x="4.5124%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (1 samples, 0.01%)</title><rect x="4.2624%" y="997" width="0.0118%" height="15" fill="rgb(249,42,33)" fg:x="360" fg:w="1"/><text x="4.5124%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (1 samples, 0.01%)</title><rect x="4.2624%" y="981" width="0.0118%" height="15" fill="rgb(242,149,17)" fg:x="360" fg:w="1"/><text x="4.5124%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="4.2624%" y="965" width="0.0118%" height="15" fill="rgb(244,29,21)" fg:x="360" fg:w="1"/><text x="4.5124%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 0.01%)</title><rect x="4.2624%" y="949" width="0.0118%" height="15" fill="rgb(220,130,37)" fg:x="360" fg:w="1"/><text x="4.5124%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="4.2624%" y="933" width="0.0118%" height="15" fill="rgb(211,67,2)" fg:x="360" fg:w="1"/><text x="4.5124%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (1 samples, 0.01%)</title><rect x="4.2624%" y="917" width="0.0118%" height="15" fill="rgb(235,68,52)" fg:x="360" fg:w="1"/><text x="4.5124%" y="927.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.01%)</title><rect x="4.2624%" y="901" width="0.0118%" height="15" fill="rgb(246,142,3)" fg:x="360" fg:w="1"/><text x="4.5124%" y="911.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (1 samples, 0.01%)</title><rect x="4.2624%" y="885" width="0.0118%" height="15" fill="rgb(241,25,7)" fg:x="360" fg:w="1"/><text x="4.5124%" y="895.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (2 samples, 0.02%)</title><rect x="4.2624%" y="1045" width="0.0237%" height="15" fill="rgb(242,119,39)" fg:x="360" fg:w="2"/><text x="4.5124%" y="1055.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (1 samples, 0.01%)</title><rect x="4.2742%" y="1029" width="0.0118%" height="15" fill="rgb(241,98,45)" fg:x="361" fg:w="1"/><text x="4.5242%" y="1039.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::instant_to_tick (1 samples, 0.01%)</title><rect x="4.2742%" y="1013" width="0.0118%" height="15" fill="rgb(254,28,30)" fg:x="361" fg:w="1"/><text x="4.5242%" y="1023.50"></text></g><g><title>tokio::time::instant::Instant::saturating_duration_since (1 samples, 0.01%)</title><rect x="4.2742%" y="997" width="0.0118%" height="15" fill="rgb(241,142,54)" fg:x="361" fg:w="1"/><text x="4.5242%" y="1007.50"></text></g><g><title>tokio::runtime::context::with_scheduler (3 samples, 0.04%)</title><rect x="4.2624%" y="1141" width="0.0355%" height="15" fill="rgb(222,85,15)" fg:x="360" fg:w="3"/><text x="4.5124%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.04%)</title><rect x="4.2624%" y="1125" width="0.0355%" height="15" fill="rgb(210,85,47)" fg:x="360" fg:w="3"/><text x="4.5124%" y="1135.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (3 samples, 0.04%)</title><rect x="4.2624%" y="1109" width="0.0355%" height="15" fill="rgb(224,206,25)" fg:x="360" fg:w="3"/><text x="4.5124%" y="1119.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (3 samples, 0.04%)</title><rect x="4.2624%" y="1093" width="0.0355%" height="15" fill="rgb(243,201,19)" fg:x="360" fg:w="3"/><text x="4.5124%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (3 samples, 0.04%)</title><rect x="4.2624%" y="1077" width="0.0355%" height="15" fill="rgb(236,59,4)" fg:x="360" fg:w="3"/><text x="4.5124%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (3 samples, 0.04%)</title><rect x="4.2624%" y="1061" width="0.0355%" height="15" fill="rgb(254,179,45)" fg:x="360" fg:w="3"/><text x="4.5124%" y="1071.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (1 samples, 0.01%)</title><rect x="4.2861%" y="1045" width="0.0118%" height="15" fill="rgb(226,14,10)" fg:x="362" fg:w="1"/><text x="4.5361%" y="1055.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (3 samples, 0.04%)</title><rect x="4.2979%" y="1141" width="0.0355%" height="15" fill="rgb(244,27,41)" fg:x="363" fg:w="3"/><text x="4.5479%" y="1151.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (1 samples, 0.01%)</title><rect x="4.3216%" y="1125" width="0.0118%" height="15" fill="rgb(235,35,32)" fg:x="365" fg:w="1"/><text x="4.5716%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.01%)</title><rect x="4.3216%" y="1109" width="0.0118%" height="15" fill="rgb(218,68,31)" fg:x="365" fg:w="1"/><text x="4.5716%" y="1119.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::set_elapsed (3 samples, 0.04%)</title><rect x="4.3334%" y="1125" width="0.0355%" height="15" fill="rgb(207,120,37)" fg:x="366" fg:w="3"/><text x="4.5834%" y="1135.50"></text></g><g><title>core::fmt::Arguments::new_v1 (2 samples, 0.02%)</title><rect x="4.3453%" y="1109" width="0.0237%" height="15" fill="rgb(227,98,0)" fg:x="367" fg:w="2"/><text x="4.5953%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (12 samples, 0.14%)</title><rect x="4.2387%" y="1189" width="0.1421%" height="15" fill="rgb(207,7,3)" fg:x="358" fg:w="12"/><text x="4.4887%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (11 samples, 0.13%)</title><rect x="4.2505%" y="1173" width="0.1302%" height="15" fill="rgb(206,98,19)" fg:x="359" fg:w="11"/><text x="4.5005%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (11 samples, 0.13%)</title><rect x="4.2505%" y="1157" width="0.1302%" height="15" fill="rgb(217,5,26)" fg:x="359" fg:w="11"/><text x="4.5005%" y="1167.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (4 samples, 0.05%)</title><rect x="4.3334%" y="1141" width="0.0474%" height="15" fill="rgb(235,190,38)" fg:x="366" fg:w="4"/><text x="4.5834%" y="1151.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (1 samples, 0.01%)</title><rect x="4.3689%" y="1125" width="0.0118%" height="15" fill="rgb(247,86,24)" fg:x="369" fg:w="1"/><text x="4.6189%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (2 samples, 0.02%)</title><rect x="4.3808%" y="1189" width="0.0237%" height="15" fill="rgb(205,101,16)" fg:x="370" fg:w="2"/><text x="4.6308%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (1 samples, 0.01%)</title><rect x="4.3926%" y="1173" width="0.0118%" height="15" fill="rgb(246,168,33)" fg:x="371" fg:w="1"/><text x="4.6426%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (1 samples, 0.01%)</title><rect x="4.3926%" y="1157" width="0.0118%" height="15" fill="rgb(231,114,1)" fg:x="371" fg:w="1"/><text x="4.6426%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::is_parked (1 samples, 0.01%)</title><rect x="4.3926%" y="1141" width="0.0118%" height="15" fill="rgb(207,184,53)" fg:x="371" fg:w="1"/><text x="4.6426%" y="1151.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (1 samples, 0.01%)</title><rect x="4.3926%" y="1125" width="0.0118%" height="15" fill="rgb(224,95,51)" fg:x="371" fg:w="1"/><text x="4.6426%" y="1135.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (1 samples, 0.01%)</title><rect x="4.3926%" y="1109" width="0.0118%" height="15" fill="rgb(212,188,45)" fg:x="371" fg:w="1"/><text x="4.6426%" y="1119.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1 samples, 0.01%)</title><rect x="4.3926%" y="1093" width="0.0118%" height="15" fill="rgb(223,154,38)" fg:x="371" fg:w="1"/><text x="4.6426%" y="1103.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="4.3926%" y="1077" width="0.0118%" height="15" fill="rgb(251,22,52)" fg:x="371" fg:w="1"/><text x="4.6426%" y="1087.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="4.3926%" y="1061" width="0.0118%" height="15" fill="rgb(229,209,22)" fg:x="371" fg:w="1"/><text x="4.6426%" y="1071.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="4.3926%" y="1045" width="0.0118%" height="15" fill="rgb(234,138,34)" fg:x="371" fg:w="1"/><text x="4.6426%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (3 samples, 0.04%)</title><rect x="4.4045%" y="1189" width="0.0355%" height="15" fill="rgb(212,95,11)" fg:x="372" fg:w="3"/><text x="4.6545%" y="1199.50"></text></g><g><title>tokio::runtime::coop::budget (1 samples, 0.01%)</title><rect x="4.4281%" y="1173" width="0.0118%" height="15" fill="rgb(240,179,47)" fg:x="374" fg:w="1"/><text x="4.6781%" y="1183.50"></text></g><g><title>tokio::runtime::coop::with_budget (1 samples, 0.01%)</title><rect x="4.4281%" y="1157" width="0.0118%" height="15" fill="rgb(240,163,11)" fg:x="374" fg:w="1"/><text x="4.6781%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (1 samples, 0.01%)</title><rect x="4.4281%" y="1141" width="0.0118%" height="15" fill="rgb(236,37,12)" fg:x="374" fg:w="1"/><text x="4.6781%" y="1151.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.01%)</title><rect x="4.4281%" y="1125" width="0.0118%" height="15" fill="rgb(232,164,16)" fg:x="374" fg:w="1"/><text x="4.6781%" y="1135.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.01%)</title><rect x="4.4281%" y="1109" width="0.0118%" height="15" fill="rgb(244,205,15)" fg:x="374" fg:w="1"/><text x="4.6781%" y="1119.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.01%)</title><rect x="4.4281%" y="1093" width="0.0118%" height="15" fill="rgb(223,117,47)" fg:x="374" fg:w="1"/><text x="4.6781%" y="1103.50"></text></g><g><title>tokio::runtime::signal::Driver::process (8 samples, 0.09%)</title><rect x="4.4400%" y="1189" width="0.0947%" height="15" fill="rgb(244,107,35)" fg:x="375" fg:w="8"/><text x="4.6900%" y="1199.50"></text></g><g><title>tokio::runtime::io::driver::signal::&lt;impl tokio::runtime::io::driver::Driver&gt;::consume_signal_ready (8 samples, 0.09%)</title><rect x="4.4400%" y="1173" width="0.0947%" height="15" fill="rgb(205,140,8)" fg:x="375" fg:w="8"/><text x="4.6900%" y="1183.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (4 samples, 0.05%)</title><rect x="4.5347%" y="1189" width="0.0474%" height="15" fill="rgb(228,84,46)" fg:x="383" fg:w="4"/><text x="4.7847%" y="1199.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (4 samples, 0.05%)</title><rect x="4.5347%" y="1173" width="0.0474%" height="15" fill="rgb(254,188,9)" fg:x="383" fg:w="4"/><text x="4.7847%" y="1183.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (4 samples, 0.05%)</title><rect x="4.5347%" y="1157" width="0.0474%" height="15" fill="rgb(206,112,54)" fg:x="383" fg:w="4"/><text x="4.7847%" y="1167.50"></text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (6 samples, 0.07%)</title><rect x="4.5821%" y="1189" width="0.0710%" height="15" fill="rgb(216,84,49)" fg:x="387" fg:w="6"/><text x="4.8321%" y="1199.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.01%)</title><rect x="4.6531%" y="1189" width="0.0118%" height="15" fill="rgb(214,194,35)" fg:x="393" fg:w="1"/><text x="4.9031%" y="1199.50"></text></g><g><title>tokio::runtime::task::raw::poll (1 samples, 0.01%)</title><rect x="4.6649%" y="1189" width="0.0118%" height="15" fill="rgb(249,28,3)" fg:x="394" fg:w="1"/><text x="4.9149%" y="1199.50"></text></g><g><title>tokio::runtime::task::raw::schedule (5 samples, 0.06%)</title><rect x="4.6768%" y="1189" width="0.0592%" height="15" fill="rgb(222,56,52)" fg:x="395" fg:w="5"/><text x="4.9268%" y="1199.50"></text></g><g><title>tokio::runtime::task::core::Header::get_scheduler (4 samples, 0.05%)</title><rect x="4.6886%" y="1173" width="0.0474%" height="15" fill="rgb(245,217,50)" fg:x="396" fg:w="4"/><text x="4.9386%" y="1183.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (1 samples, 0.01%)</title><rect x="4.7360%" y="1189" width="0.0118%" height="15" fill="rgb(213,201,24)" fg:x="400" fg:w="1"/><text x="4.9860%" y="1199.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (3 samples, 0.04%)</title><rect x="4.7478%" y="1189" width="0.0355%" height="15" fill="rgb(248,116,28)" fg:x="401" fg:w="3"/><text x="4.9978%" y="1199.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (1 samples, 0.01%)</title><rect x="4.7715%" y="1173" width="0.0118%" height="15" fill="rgb(219,72,43)" fg:x="403" fg:w="1"/><text x="5.0215%" y="1183.50"></text></g><g><title>tokio::runtime::task::state::State::load (1 samples, 0.01%)</title><rect x="4.7715%" y="1157" width="0.0118%" height="15" fill="rgb(209,138,14)" fg:x="403" fg:w="1"/><text x="5.0215%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="4.7715%" y="1141" width="0.0118%" height="15" fill="rgb(222,18,33)" fg:x="403" fg:w="1"/><text x="5.0215%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="4.7715%" y="1125" width="0.0118%" height="15" fill="rgb(213,199,7)" fg:x="403" fg:w="1"/><text x="5.0215%" y="1135.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (2 samples, 0.02%)</title><rect x="4.7833%" y="1189" width="0.0237%" height="15" fill="rgb(250,110,10)" fg:x="404" fg:w="2"/><text x="5.0333%" y="1199.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (1 samples, 0.01%)</title><rect x="4.8070%" y="1189" width="0.0118%" height="15" fill="rgb(248,123,6)" fg:x="406" fg:w="1"/><text x="5.0570%" y="1199.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_ref (1 samples, 0.01%)</title><rect x="4.8070%" y="1173" width="0.0118%" height="15" fill="rgb(206,91,31)" fg:x="406" fg:w="1"/><text x="5.0570%" y="1183.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_ref (1 samples, 0.01%)</title><rect x="4.8070%" y="1157" width="0.0118%" height="15" fill="rgb(211,154,13)" fg:x="406" fg:w="1"/><text x="5.0570%" y="1167.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (1 samples, 0.01%)</title><rect x="4.8070%" y="1141" width="0.0118%" height="15" fill="rgb(225,148,7)" fg:x="406" fg:w="1"/><text x="5.0570%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="4.8070%" y="1125" width="0.0118%" height="15" fill="rgb(220,160,43)" fg:x="406" fg:w="1"/><text x="5.0570%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="4.8070%" y="1109" width="0.0118%" height="15" fill="rgb(213,52,39)" fg:x="406" fg:w="1"/><text x="5.0570%" y="1119.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (2 samples, 0.02%)</title><rect x="4.8188%" y="1189" width="0.0237%" height="15" fill="rgb(243,137,7)" fg:x="407" fg:w="2"/><text x="5.0688%" y="1199.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (5 samples, 0.06%)</title><rect x="4.8544%" y="1173" width="0.0592%" height="15" fill="rgb(230,79,13)" fg:x="410" fg:w="5"/><text x="5.1044%" y="1183.50"></text></g><g><title>tokio::util::wake_list::WakeList::new (1 samples, 0.01%)</title><rect x="4.9136%" y="1173" width="0.0118%" height="15" fill="rgb(247,105,23)" fg:x="415" fg:w="1"/><text x="5.1636%" y="1183.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (8 samples, 0.09%)</title><rect x="4.8425%" y="1189" width="0.0947%" height="15" fill="rgb(223,179,41)" fg:x="409" fg:w="8"/><text x="5.0925%" y="1199.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (1 samples, 0.01%)</title><rect x="4.9254%" y="1173" width="0.0118%" height="15" fill="rgb(218,9,34)" fg:x="416" fg:w="1"/><text x="5.1754%" y="1183.50"></text></g><g><title>core::ptr::eq (1 samples, 0.01%)</title><rect x="4.9254%" y="1157" width="0.0118%" height="15" fill="rgb(222,106,8)" fg:x="416" fg:w="1"/><text x="5.1754%" y="1167.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (1 samples, 0.01%)</title><rect x="4.9728%" y="965" width="0.0118%" height="15" fill="rgb(211,220,0)" fg:x="420" fg:w="1"/><text x="5.2228%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::wheel::Wheel&gt;&gt; (2 samples, 0.02%)</title><rect x="4.9728%" y="1029" width="0.0237%" height="15" fill="rgb(229,52,16)" fg:x="420" fg:w="2"/><text x="5.2228%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::time::wheel::Wheel&gt;&gt; (2 samples, 0.02%)</title><rect x="4.9728%" y="1013" width="0.0237%" height="15" fill="rgb(212,155,18)" fg:x="420" fg:w="2"/><text x="5.2228%" y="1023.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="4.9728%" y="997" width="0.0237%" height="15" fill="rgb(242,21,14)" fg:x="420" fg:w="2"/><text x="5.2228%" y="1007.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2 samples, 0.02%)</title><rect x="4.9728%" y="981" width="0.0237%" height="15" fill="rgb(222,19,48)" fg:x="420" fg:w="2"/><text x="5.2228%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.01%)</title><rect x="4.9846%" y="965" width="0.0118%" height="15" fill="rgb(232,45,27)" fg:x="421" fg:w="1"/><text x="5.2346%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="4.9846%" y="949" width="0.0118%" height="15" fill="rgb(249,103,42)" fg:x="421" fg:w="1"/><text x="5.2346%" y="959.50"></text></g><g><title>tokio::runtime::time::Inner::lock_sharded_wheel (2 samples, 0.02%)</title><rect x="4.9964%" y="1029" width="0.0237%" height="15" fill="rgb(246,81,33)" fg:x="422" fg:w="2"/><text x="5.2464%" y="1039.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="5.0083%" y="1013" width="0.0118%" height="15" fill="rgb(252,33,42)" fg:x="423" fg:w="1"/><text x="5.2583%" y="1023.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.01%)</title><rect x="5.0083%" y="997" width="0.0118%" height="15" fill="rgb(209,212,41)" fg:x="423" fg:w="1"/><text x="5.2583%" y="1007.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.01%)</title><rect x="5.0083%" y="981" width="0.0118%" height="15" fill="rgb(207,154,6)" fg:x="423" fg:w="1"/><text x="5.2583%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.01%)</title><rect x="5.0083%" y="965" width="0.0118%" height="15" fill="rgb(223,64,47)" fg:x="423" fg:w="1"/><text x="5.2583%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="5.0083%" y="949" width="0.0118%" height="15" fill="rgb(211,161,38)" fg:x="423" fg:w="1"/><text x="5.2583%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (5 samples, 0.06%)</title><rect x="4.9728%" y="1173" width="0.0592%" height="15" fill="rgb(219,138,40)" fg:x="420" fg:w="5"/><text x="5.2228%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (5 samples, 0.06%)</title><rect x="4.9728%" y="1157" width="0.0592%" height="15" fill="rgb(241,228,46)" fg:x="420" fg:w="5"/><text x="5.2228%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (5 samples, 0.06%)</title><rect x="4.9728%" y="1141" width="0.0592%" height="15" fill="rgb(223,209,38)" fg:x="420" fg:w="5"/><text x="5.2228%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.06%)</title><rect x="4.9728%" y="1125" width="0.0592%" height="15" fill="rgb(236,164,45)" fg:x="420" fg:w="5"/><text x="5.2228%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (5 samples, 0.06%)</title><rect x="4.9728%" y="1109" width="0.0592%" height="15" fill="rgb(231,15,5)" fg:x="420" fg:w="5"/><text x="5.2228%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.06%)</title><rect x="4.9728%" y="1093" width="0.0592%" height="15" fill="rgb(252,35,15)" fg:x="420" fg:w="5"/><text x="5.2228%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (5 samples, 0.06%)</title><rect x="4.9728%" y="1077" width="0.0592%" height="15" fill="rgb(248,181,18)" fg:x="420" fg:w="5"/><text x="5.2228%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.06%)</title><rect x="4.9728%" y="1061" width="0.0592%" height="15" fill="rgb(233,39,42)" fg:x="420" fg:w="5"/><text x="5.2228%" y="1071.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (5 samples, 0.06%)</title><rect x="4.9728%" y="1045" width="0.0592%" height="15" fill="rgb(238,110,33)" fg:x="420" fg:w="5"/><text x="5.2228%" y="1055.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (1 samples, 0.01%)</title><rect x="5.0201%" y="1029" width="0.0118%" height="15" fill="rgb(233,195,10)" fg:x="424" fg:w="1"/><text x="5.2701%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="5.0201%" y="1013" width="0.0118%" height="15" fill="rgb(254,105,3)" fg:x="424" fg:w="1"/><text x="5.2701%" y="1023.50"></text></g><g><title>tokio::runtime::driver::Handle::time (1 samples, 0.01%)</title><rect x="5.0320%" y="1173" width="0.0118%" height="15" fill="rgb(221,225,9)" fg:x="425" fg:w="1"/><text x="5.2820%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="5.0320%" y="1157" width="0.0118%" height="15" fill="rgb(224,227,45)" fg:x="425" fg:w="1"/><text x="5.2820%" y="1167.50"></text></g><g><title>tokio::runtime::driver::IoStack::park (1 samples, 0.01%)</title><rect x="5.0438%" y="1173" width="0.0118%" height="15" fill="rgb(229,198,43)" fg:x="426" fg:w="1"/><text x="5.2938%" y="1183.50"></text></g><g><title>tokio::runtime::process::Driver::park (1 samples, 0.01%)</title><rect x="5.0438%" y="1157" width="0.0118%" height="15" fill="rgb(206,209,35)" fg:x="426" fg:w="1"/><text x="5.2938%" y="1167.50"></text></g><g><title>tokio::runtime::signal::Driver::park (1 samples, 0.01%)</title><rect x="5.0438%" y="1141" width="0.0118%" height="15" fill="rgb(245,195,53)" fg:x="426" fg:w="1"/><text x="5.2938%" y="1151.50"></text></g><g><title>tokio::runtime::io::driver::Driver::park (1 samples, 0.01%)</title><rect x="5.0438%" y="1125" width="0.0118%" height="15" fill="rgb(240,92,26)" fg:x="426" fg:w="1"/><text x="5.2938%" y="1135.50"></text></g><g><title>tokio::runtime::driver::Handle::io (1 samples, 0.01%)</title><rect x="5.0438%" y="1109" width="0.0118%" height="15" fill="rgb(207,40,23)" fg:x="426" fg:w="1"/><text x="5.2938%" y="1119.50"></text></g><g><title>tokio::runtime::driver::IoHandle::as_ref (1 samples, 0.01%)</title><rect x="5.0438%" y="1093" width="0.0118%" height="15" fill="rgb(223,111,35)" fg:x="426" fg:w="1"/><text x="5.2938%" y="1103.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (11 samples, 0.13%)</title><rect x="4.9372%" y="1189" width="0.1302%" height="15" fill="rgb(229,147,28)" fg:x="417" fg:w="11"/><text x="5.1872%" y="1199.50"></text></g><g><title>tokio::runtime::time::Inner::get_shard_size (1 samples, 0.01%)</title><rect x="5.0556%" y="1173" width="0.0118%" height="15" fill="rgb(211,29,28)" fg:x="427" fg:w="1"/><text x="5.3056%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="5.1504%" y="1173" width="0.0118%" height="15" fill="rgb(228,72,33)" fg:x="435" fg:w="1"/><text x="5.4004%" y="1183.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="5.1504%" y="1157" width="0.0118%" height="15" fill="rgb(205,214,31)" fg:x="435" fg:w="1"/><text x="5.4004%" y="1167.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="5.1504%" y="1141" width="0.0118%" height="15" fill="rgb(224,111,15)" fg:x="435" fg:w="1"/><text x="5.4004%" y="1151.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (9 samples, 0.11%)</title><rect x="5.0675%" y="1189" width="0.1066%" height="15" fill="rgb(253,21,26)" fg:x="428" fg:w="9"/><text x="5.3175%" y="1199.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (1 samples, 0.01%)</title><rect x="5.1622%" y="1173" width="0.0118%" height="15" fill="rgb(245,139,43)" fg:x="436" fg:w="1"/><text x="5.4122%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.01%)</title><rect x="5.1622%" y="1157" width="0.0118%" height="15" fill="rgb(252,170,7)" fg:x="436" fg:w="1"/><text x="5.4122%" y="1167.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (3 samples, 0.04%)</title><rect x="5.1740%" y="1189" width="0.0355%" height="15" fill="rgb(231,118,14)" fg:x="437" fg:w="3"/><text x="5.4240%" y="1199.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (1 samples, 0.01%)</title><rect x="5.1977%" y="1173" width="0.0118%" height="15" fill="rgb(238,83,0)" fg:x="439" fg:w="1"/><text x="5.4477%" y="1183.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::enter (3 samples, 0.04%)</title><rect x="5.2096%" y="1189" width="0.0355%" height="15" fill="rgb(221,39,39)" fg:x="440" fg:w="3"/><text x="5.4596%" y="1199.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::subscriber (1 samples, 0.01%)</title><rect x="5.2332%" y="1173" width="0.0118%" height="15" fill="rgb(222,119,46)" fg:x="442" fg:w="1"/><text x="5.4832%" y="1183.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::try_close (1 samples, 0.01%)</title><rect x="5.2451%" y="1189" width="0.0118%" height="15" fill="rgb(222,165,49)" fg:x="443" fg:w="1"/><text x="5.4951%" y="1199.50"></text></g><g><title>tracing_core::dispatcher::get_default (4 samples, 0.05%)</title><rect x="5.2569%" y="1189" width="0.0474%" height="15" fill="rgb(219,113,52)" fg:x="444" fg:w="4"/><text x="5.5069%" y="1199.50"></text></g><g><title>tracing_core::dispatcher::get_global (1 samples, 0.01%)</title><rect x="5.2924%" y="1173" width="0.0118%" height="15" fill="rgb(214,7,15)" fg:x="447" fg:w="1"/><text x="5.5424%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="5.2924%" y="1157" width="0.0118%" height="15" fill="rgb(235,32,4)" fg:x="447" fg:w="1"/><text x="5.5424%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="5.2924%" y="1141" width="0.0118%" height="15" fill="rgb(238,90,54)" fg:x="447" fg:w="1"/><text x="5.5424%" y="1151.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::cares_about_span (3 samples, 0.04%)</title><rect x="5.3043%" y="1189" width="0.0355%" height="15" fill="rgb(213,208,19)" fg:x="448" fg:w="3"/><text x="5.5543%" y="1199.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::on_enter (6 samples, 0.07%)</title><rect x="5.3398%" y="1189" width="0.0710%" height="15" fill="rgb(233,156,4)" fg:x="451" fg:w="6"/><text x="5.5898%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="5.3872%" y="1173" width="0.0237%" height="15" fill="rgb(207,194,5)" fg:x="455" fg:w="2"/><text x="5.6372%" y="1183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.02%)</title><rect x="5.3872%" y="1157" width="0.0237%" height="15" fill="rgb(206,111,30)" fg:x="455" fg:w="2"/><text x="5.6372%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.02%)</title><rect x="5.3872%" y="1141" width="0.0237%" height="15" fill="rgb(243,70,54)" fg:x="455" fg:w="2"/><text x="5.6372%" y="1151.50"></text></g><g><title>tracing_subscriber::fmt::format::json::&lt;impl tracing_subscriber::fmt::format::FormatEvent&lt;S,N&gt; for tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::json::Json,T&gt;&gt;::format_event (2 samples, 0.02%)</title><rect x="5.4108%" y="1189" width="0.0237%" height="15" fill="rgb(242,28,8)" fg:x="457" fg:w="2"/><text x="5.6608%" y="1199.50"></text></g><g><title>[[heap]] (378 samples, 4.48%)</title><rect x="0.9946%" y="1205" width="4.4755%" height="15" fill="rgb(219,106,18)" fg:x="84" fg:w="378"/><text x="1.2446%" y="1215.50">[[hea..</text></g><g><title>tracing_subscriber::layer::context::Context&lt;S&gt;::if_enabled_for (3 samples, 0.04%)</title><rect x="5.4345%" y="1189" width="0.0355%" height="15" fill="rgb(244,222,10)" fg:x="459" fg:w="3"/><text x="5.6845%" y="1199.50"></text></g><g><title>tracing_subscriber::layer::context::Context&lt;S&gt;::is_enabled_inner (1 samples, 0.01%)</title><rect x="5.4582%" y="1173" width="0.0118%" height="15" fill="rgb(236,179,52)" fg:x="461" fg:w="1"/><text x="5.7082%" y="1183.50"></text></g><g><title>tracing_subscriber::layer::context::Context&lt;S&gt;::span (1 samples, 0.01%)</title><rect x="5.4582%" y="1157" width="0.0118%" height="15" fill="rgb(213,23,39)" fg:x="461" fg:w="1"/><text x="5.7082%" y="1167.50"></text></g><g><title>tracing_subscriber::registry::LookupSpan::span (1 samples, 0.01%)</title><rect x="5.4582%" y="1141" width="0.0118%" height="15" fill="rgb(238,48,10)" fg:x="461" fg:w="1"/><text x="5.7082%" y="1151.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="5.4582%" y="1125" width="0.0118%" height="15" fill="rgb(251,196,23)" fg:x="461" fg:w="1"/><text x="5.7082%" y="1135.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (2 samples, 0.02%)</title><rect x="5.4700%" y="1189" width="0.0237%" height="15" fill="rgb(250,152,24)" fg:x="462" fg:w="2"/><text x="5.7200%" y="1199.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (5 samples, 0.06%)</title><rect x="5.4937%" y="1189" width="0.0592%" height="15" fill="rgb(209,150,17)" fg:x="464" fg:w="5"/><text x="5.7437%" y="1199.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (1 samples, 0.01%)</title><rect x="5.5529%" y="1189" width="0.0118%" height="15" fill="rgb(234,202,34)" fg:x="469" fg:w="1"/><text x="5.8029%" y="1199.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="5.5529%" y="1173" width="0.0118%" height="15" fill="rgb(253,148,53)" fg:x="469" fg:w="1"/><text x="5.8029%" y="1183.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="5.5529%" y="1157" width="0.0118%" height="15" fill="rgb(218,129,16)" fg:x="469" fg:w="1"/><text x="5.8029%" y="1167.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="5.5529%" y="1141" width="0.0118%" height="15" fill="rgb(216,85,19)" fg:x="469" fg:w="1"/><text x="5.8029%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="5.5529%" y="1125" width="0.0118%" height="15" fill="rgb(235,228,7)" fg:x="469" fg:w="1"/><text x="5.8029%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="5.5529%" y="1109" width="0.0118%" height="15" fill="rgb(245,175,0)" fg:x="469" fg:w="1"/><text x="5.8029%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="5.5529%" y="1093" width="0.0118%" height="15" fill="rgb(208,168,36)" fg:x="469" fg:w="1"/><text x="5.8029%" y="1103.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="5.5529%" y="1077" width="0.0118%" height="15" fill="rgb(246,171,24)" fg:x="469" fg:w="1"/><text x="5.8029%" y="1087.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="5.5529%" y="1061" width="0.0118%" height="15" fill="rgb(215,142,24)" fg:x="469" fg:w="1"/><text x="5.8029%" y="1071.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="5.5529%" y="1045" width="0.0118%" height="15" fill="rgb(250,187,7)" fg:x="469" fg:w="1"/><text x="5.8029%" y="1055.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="5.5529%" y="1029" width="0.0118%" height="15" fill="rgb(228,66,33)" fg:x="469" fg:w="1"/><text x="5.8029%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="5.5529%" y="1013" width="0.0118%" height="15" fill="rgb(234,215,21)" fg:x="469" fg:w="1"/><text x="5.8029%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="5.5529%" y="997" width="0.0118%" height="15" fill="rgb(222,191,20)" fg:x="469" fg:w="1"/><text x="5.8029%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="5.5529%" y="981" width="0.0118%" height="15" fill="rgb(245,79,54)" fg:x="469" fg:w="1"/><text x="5.8029%" y="991.50"></text></g><g><title>&lt;&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::collect_str::Adapter&lt;W,F&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="5.5648%" y="1189" width="0.0118%" height="15" fill="rgb(240,10,37)" fg:x="470" fg:w="1"/><text x="5.8148%" y="1199.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (2 samples, 0.02%)</title><rect x="5.5766%" y="1189" width="0.0237%" height="15" fill="rgb(214,192,32)" fg:x="471" fg:w="2"/><text x="5.8266%" y="1199.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="5.6003%" y="1189" width="0.0237%" height="15" fill="rgb(209,36,54)" fg:x="473" fg:w="2"/><text x="5.8503%" y="1199.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.02%)</title><rect x="5.6003%" y="1173" width="0.0237%" height="15" fill="rgb(220,10,11)" fg:x="473" fg:w="2"/><text x="5.8503%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.02%)</title><rect x="5.6003%" y="1157" width="0.0237%" height="15" fill="rgb(221,106,17)" fg:x="473" fg:w="2"/><text x="5.8503%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="5.6003%" y="1141" width="0.0237%" height="15" fill="rgb(251,142,44)" fg:x="473" fg:w="2"/><text x="5.8503%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.02%)</title><rect x="5.6003%" y="1125" width="0.0237%" height="15" fill="rgb(238,13,15)" fg:x="473" fg:w="2"/><text x="5.8503%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="5.6121%" y="1109" width="0.0118%" height="15" fill="rgb(208,107,27)" fg:x="474" fg:w="1"/><text x="5.8621%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="5.6121%" y="1093" width="0.0118%" height="15" fill="rgb(205,136,37)" fg:x="474" fg:w="1"/><text x="5.8621%" y="1103.50"></text></g><g><title>&lt;bool as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="5.6240%" y="1189" width="0.0118%" height="15" fill="rgb(250,205,27)" fg:x="475" fg:w="1"/><text x="5.8740%" y="1199.50"></text></g><g><title>&lt;core::fmt::Arguments as tracing_core::field::Value&gt;::record (1 samples, 0.01%)</title><rect x="5.6358%" y="1189" width="0.0118%" height="15" fill="rgb(210,80,43)" fg:x="476" fg:w="1"/><text x="5.8858%" y="1199.50"></text></g><g><title>&lt;f64 as tracing_core::field::Value&gt;::record (1 samples, 0.01%)</title><rect x="5.6476%" y="1189" width="0.0118%" height="15" fill="rgb(247,160,36)" fg:x="477" fg:w="1"/><text x="5.8976%" y="1199.50"></text></g><g><title>&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::line_terminator (2 samples, 0.02%)</title><rect x="5.6595%" y="1189" width="0.0237%" height="15" fill="rgb(234,13,49)" fg:x="478" fg:w="2"/><text x="5.9095%" y="1199.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (2 samples, 0.02%)</title><rect x="5.6595%" y="1173" width="0.0237%" height="15" fill="rgb(234,122,0)" fg:x="478" fg:w="2"/><text x="5.9095%" y="1183.50"></text></g><g><title>&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::line_terminator::_{{closure}} (2 samples, 0.02%)</title><rect x="5.6595%" y="1157" width="0.0237%" height="15" fill="rgb(207,146,38)" fg:x="478" fg:w="2"/><text x="5.9095%" y="1167.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::match_string (2 samples, 0.02%)</title><rect x="5.6595%" y="1141" width="0.0237%" height="15" fill="rgb(207,177,25)" fg:x="478" fg:w="2"/><text x="5.9095%" y="1151.50"></text></g><g><title>pest::position::Position::pos (1 samples, 0.01%)</title><rect x="5.6713%" y="1125" width="0.0118%" height="15" fill="rgb(211,178,42)" fg:x="479" fg:w="1"/><text x="5.9213%" y="1135.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.08%)</title><rect x="5.6832%" y="1189" width="0.0829%" height="15" fill="rgb(230,69,54)" fg:x="480" fg:w="7"/><text x="5.9332%" y="1199.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (5 samples, 0.06%)</title><rect x="5.7068%" y="1173" width="0.0592%" height="15" fill="rgb(214,135,41)" fg:x="482" fg:w="5"/><text x="5.9568%" y="1183.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (5 samples, 0.06%)</title><rect x="5.7068%" y="1157" width="0.0592%" height="15" fill="rgb(237,67,25)" fg:x="482" fg:w="5"/><text x="5.9568%" y="1167.50"></text></g><g><title>&lt;rotmguard::extra_datatypes::object_status_data::ObjectStatusData as rotmguard::read::RPRead&gt;::rp_read (1 samples, 0.01%)</title><rect x="5.7660%" y="1189" width="0.0118%" height="15" fill="rgb(222,189,50)" fg:x="487" fg:w="1"/><text x="6.0160%" y="1199.50"></text></g><g><title>&lt;rotmguard::extra_datatypes::object_status_data::ObjectStatusData as rotmguard::write::RPWrite&gt;::rp_write (1 samples, 0.01%)</title><rect x="5.7779%" y="1189" width="0.0118%" height="15" fill="rgb(245,148,34)" fg:x="488" fg:w="1"/><text x="6.0279%" y="1199.50"></text></g><g><title>&lt;rotmguard::module::RootModuleInstance as rotmguard::module::ModuleInstance&gt;::client_packet::_{{closure}} (4 samples, 0.05%)</title><rect x="5.7897%" y="1189" width="0.0474%" height="15" fill="rgb(222,29,6)" fg:x="489" fg:w="4"/><text x="6.0397%" y="1199.50"></text></g><g><title>&lt;rotmguard::module::general::GeneralInst as rotmguard::module::ModuleInstance&gt;::client_packet::_{{closure}} (1 samples, 0.01%)</title><rect x="5.8252%" y="1173" width="0.0118%" height="15" fill="rgb(221,189,43)" fg:x="492" fg:w="1"/><text x="6.0752%" y="1183.50"></text></g><g><title>&lt;rotmguard::packets::_10_new_tick::NewTick as rotmguard::read::RPRead&gt;::rp_read (1 samples, 0.01%)</title><rect x="5.8371%" y="1189" width="0.0118%" height="15" fill="rgb(207,36,27)" fg:x="493" fg:w="1"/><text x="6.0871%" y="1199.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="5.8371%" y="1173" width="0.0118%" height="15" fill="rgb(217,90,24)" fg:x="493" fg:w="1"/><text x="6.0871%" y="1183.50"></text></g><g><title>&lt;rotmguard::packets::_11_show_effect::ShowEffect as rotmguard::read::RPRead&gt;::rp_read (2 samples, 0.02%)</title><rect x="5.8489%" y="1189" width="0.0237%" height="15" fill="rgb(224,66,35)" fg:x="494" fg:w="2"/><text x="6.0989%" y="1199.50"></text></g><g><title>&lt;rotmguard::packets::_42_update::UpdatePacket as rotmguard::read::RPRead&gt;::rp_read (1 samples, 0.01%)</title><rect x="5.8726%" y="1189" width="0.0118%" height="15" fill="rgb(221,13,50)" fg:x="496" fg:w="1"/><text x="6.1226%" y="1199.50"></text></g><g><title>&lt;rotmguard::packets::_42_update::UpdatePacket as rotmguard::write::RPWrite&gt;::rp_write (1 samples, 0.01%)</title><rect x="5.8844%" y="1189" width="0.0118%" height="15" fill="rgb(236,68,49)" fg:x="497" fg:w="1"/><text x="6.1344%" y="1199.50"></text></g><g><title>&lt;i16 as rotmguard::write::RPWrite&gt;::rp_write (1 samples, 0.01%)</title><rect x="5.8844%" y="1173" width="0.0118%" height="15" fill="rgb(229,146,28)" fg:x="497" fg:w="1"/><text x="6.1344%" y="1183.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.01%)</title><rect x="5.8844%" y="1157" width="0.0118%" height="15" fill="rgb(225,31,38)" fg:x="497" fg:w="1"/><text x="6.1344%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="5.8844%" y="1141" width="0.0118%" height="15" fill="rgb(250,208,3)" fg:x="497" fg:w="1"/><text x="6.1344%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="5.8844%" y="1125" width="0.0118%" height="15" fill="rgb(246,54,23)" fg:x="497" fg:w="1"/><text x="6.1344%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="5.8844%" y="1109" width="0.0118%" height="15" fill="rgb(243,76,11)" fg:x="497" fg:w="1"/><text x="6.1344%" y="1119.50"></text></g><g><title>&lt;rotmguard::packets::_67_notification::NotificationPacket as rotmguard::read::RPRead&gt;::rp_read (1 samples, 0.01%)</title><rect x="5.8963%" y="1189" width="0.0118%" height="15" fill="rgb(245,21,50)" fg:x="498" fg:w="1"/><text x="6.1463%" y="1199.50"></text></g><g><title>&lt;u8 as rotmguard::read::RPRead&gt;::rp_read (1 samples, 0.01%)</title><rect x="5.8963%" y="1173" width="0.0118%" height="15" fill="rgb(228,9,43)" fg:x="498" fg:w="1"/><text x="6.1463%" y="1183.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (1 samples, 0.01%)</title><rect x="5.8963%" y="1157" width="0.0118%" height="15" fill="rgb(208,100,47)" fg:x="498" fg:w="1"/><text x="6.1463%" y="1167.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.02%)</title><rect x="5.9081%" y="1189" width="0.0237%" height="15" fill="rgb(232,26,8)" fg:x="499" fg:w="2"/><text x="6.1581%" y="1199.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (4 samples, 0.05%)</title><rect x="5.9318%" y="1189" width="0.0474%" height="15" fill="rgb(216,166,38)" fg:x="501" fg:w="4"/><text x="6.1818%" y="1199.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (2 samples, 0.02%)</title><rect x="5.9555%" y="1173" width="0.0237%" height="15" fill="rgb(251,202,51)" fg:x="503" fg:w="2"/><text x="6.2055%" y="1183.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.04%)</title><rect x="5.9792%" y="1189" width="0.0355%" height="15" fill="rgb(254,216,34)" fg:x="505" fg:w="3"/><text x="6.2292%" y="1199.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.02%)</title><rect x="6.0147%" y="1189" width="0.0237%" height="15" fill="rgb(251,32,27)" fg:x="508" fg:w="2"/><text x="6.2647%" y="1199.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.01%)</title><rect x="6.0265%" y="1173" width="0.0118%" height="15" fill="rgb(208,127,28)" fg:x="509" fg:w="1"/><text x="6.2765%" y="1183.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.01%)</title><rect x="6.0265%" y="1157" width="0.0118%" height="15" fill="rgb(224,137,22)" fg:x="509" fg:w="1"/><text x="6.2765%" y="1167.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.01%)</title><rect x="6.0265%" y="1141" width="0.0118%" height="15" fill="rgb(254,70,32)" fg:x="509" fg:w="1"/><text x="6.2765%" y="1151.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1 samples, 0.01%)</title><rect x="6.0265%" y="1125" width="0.0118%" height="15" fill="rgb(229,75,37)" fg:x="509" fg:w="1"/><text x="6.2765%" y="1135.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="6.0384%" y="1189" width="0.0237%" height="15" fill="rgb(252,64,23)" fg:x="510" fg:w="2"/><text x="6.2884%" y="1199.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="6.0620%" y="1189" width="0.0118%" height="15" fill="rgb(232,162,48)" fg:x="512" fg:w="1"/><text x="6.3120%" y="1199.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.01%)</title><rect x="6.0739%" y="1189" width="0.0118%" height="15" fill="rgb(246,160,12)" fg:x="513" fg:w="1"/><text x="6.3239%" y="1199.50"></text></g><g><title>&lt;tracing_core::event::Event as tracing_log::NormalizeEvent&gt;::normalized_metadata (3 samples, 0.04%)</title><rect x="6.0857%" y="1189" width="0.0355%" height="15" fill="rgb(247,166,0)" fg:x="514" fg:w="3"/><text x="6.3357%" y="1199.50"></text></g><g><title>&lt;tracing_core::field::DebugValue&lt;T&gt; as tracing_core::field::Value&gt;::record (1 samples, 0.01%)</title><rect x="6.1212%" y="1189" width="0.0118%" height="15" fill="rgb(249,219,21)" fg:x="517" fg:w="1"/><text x="6.3712%" y="1199.50"></text></g><g><title>&lt;tracing_serde::SerdeMapVisitor&lt;S&gt; as tracing_core::field::Visit&gt;::record_debug (1 samples, 0.01%)</title><rect x="6.1331%" y="1189" width="0.0118%" height="15" fill="rgb(205,209,3)" fg:x="518" fg:w="1"/><text x="6.3831%" y="1199.50"></text></g><g><title>core::fmt::Arguments::new_v1 (1 samples, 0.01%)</title><rect x="6.1331%" y="1173" width="0.0118%" height="15" fill="rgb(243,44,1)" fg:x="518" fg:w="1"/><text x="6.3831%" y="1183.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_map (2 samples, 0.02%)</title><rect x="6.1686%" y="1173" width="0.0237%" height="15" fill="rgb(206,159,16)" fg:x="521" fg:w="2"/><text x="6.4186%" y="1183.50"></text></g><g><title>serde_json::ser::Formatter::begin_object (2 samples, 0.02%)</title><rect x="6.1686%" y="1157" width="0.0237%" height="15" fill="rgb(244,77,30)" fg:x="521" fg:w="2"/><text x="6.4186%" y="1167.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.02%)</title><rect x="6.1686%" y="1141" width="0.0237%" height="15" fill="rgb(218,69,12)" fg:x="521" fg:w="2"/><text x="6.4186%" y="1151.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.01%)</title><rect x="6.1804%" y="1125" width="0.0118%" height="15" fill="rgb(212,87,7)" fg:x="522" fg:w="1"/><text x="6.4304%" y="1135.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="6.1804%" y="1109" width="0.0118%" height="15" fill="rgb(245,114,25)" fg:x="522" fg:w="1"/><text x="6.4304%" y="1119.50"></text></g><g><title>&lt;tracing_serde::fields::SerializeFieldMap&lt;tracing_core::event::Event&gt; as serde::ser::Serialize&gt;::serialize (6 samples, 0.07%)</title><rect x="6.1449%" y="1189" width="0.0710%" height="15" fill="rgb(210,61,42)" fg:x="519" fg:w="6"/><text x="6.3949%" y="1199.50"></text></g><g><title>tracing_core::event::Event::record (2 samples, 0.02%)</title><rect x="6.1923%" y="1173" width="0.0237%" height="15" fill="rgb(211,52,33)" fg:x="523" fg:w="2"/><text x="6.4423%" y="1183.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (9 samples, 0.11%)</title><rect x="6.2160%" y="1189" width="0.1066%" height="15" fill="rgb(234,58,33)" fg:x="525" fg:w="9"/><text x="6.4660%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (1 samples, 0.01%)</title><rect x="6.3225%" y="1189" width="0.0118%" height="15" fill="rgb(220,115,36)" fg:x="534" fg:w="1"/><text x="6.5725%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="6.3225%" y="1173" width="0.0118%" height="15" fill="rgb(243,153,54)" fg:x="534" fg:w="1"/><text x="6.5725%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="6.3225%" y="1157" width="0.0118%" height="15" fill="rgb(251,47,18)" fg:x="534" fg:w="1"/><text x="6.5725%" y="1167.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event::_{{closure}} (1 samples, 0.01%)</title><rect x="6.3225%" y="1141" width="0.0118%" height="15" fill="rgb(242,102,42)" fg:x="534" fg:w="1"/><text x="6.5725%" y="1151.50"></text></g><g><title>tracing_subscriber::fmt::format::Writer::with_ansi (1 samples, 0.01%)</title><rect x="6.3225%" y="1125" width="0.0118%" height="15" fill="rgb(234,31,38)" fg:x="534" fg:w="1"/><text x="6.5725%" y="1135.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::json::SerializableSpan&lt;Span,N&gt; as serde::ser::Serialize&gt;::serialize (3 samples, 0.04%)</title><rect x="6.3344%" y="1189" width="0.0355%" height="15" fill="rgb(221,117,51)" fg:x="535" fg:w="3"/><text x="6.5844%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::SystemTime as tracing_subscriber::fmt::time::FormatTime&gt;::format_time (2 samples, 0.02%)</title><rect x="6.3699%" y="1189" width="0.0237%" height="15" fill="rgb(212,20,18)" fg:x="538" fg:w="2"/><text x="6.6199%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::convert::From&lt;std::time::SystemTime&gt;&gt;::from (1 samples, 0.01%)</title><rect x="6.3936%" y="1189" width="0.0118%" height="15" fill="rgb(245,133,36)" fg:x="540" fg:w="1"/><text x="6.6436%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::fmt::writer::WriteAdaptor as std::io::Write&gt;::write (4 samples, 0.05%)</title><rect x="6.4054%" y="1189" width="0.0474%" height="15" fill="rgb(212,6,19)" fg:x="541" fg:w="4"/><text x="6.6554%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (1 samples, 0.01%)</title><rect x="6.4528%" y="1189" width="0.0118%" height="15" fill="rgb(218,1,36)" fg:x="545" fg:w="1"/><text x="6.7028%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (3 samples, 0.04%)</title><rect x="6.4646%" y="1189" width="0.0355%" height="15" fill="rgb(246,84,54)" fg:x="546" fg:w="3"/><text x="6.7146%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::registry::Scope&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="6.5001%" y="1189" width="0.0237%" height="15" fill="rgb(242,110,6)" fg:x="549" fg:w="2"/><text x="6.7501%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::clone_span (1 samples, 0.01%)</title><rect x="6.5238%" y="1189" width="0.0118%" height="15" fill="rgb(214,47,5)" fg:x="551" fg:w="1"/><text x="6.7738%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::enter (1 samples, 0.01%)</title><rect x="6.5356%" y="1189" width="0.0118%" height="15" fill="rgb(218,159,25)" fg:x="552" fg:w="1"/><text x="6.7856%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::event_enabled (1 samples, 0.01%)</title><rect x="6.5475%" y="1189" width="0.0118%" height="15" fill="rgb(215,211,28)" fg:x="553" fg:w="1"/><text x="6.7975%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.01%)</title><rect x="6.5593%" y="1189" width="0.0118%" height="15" fill="rgb(238,59,32)" fg:x="554" fg:w="1"/><text x="6.8093%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="6.5712%" y="1189" width="0.0118%" height="15" fill="rgb(226,82,3)" fg:x="555" fg:w="1"/><text x="6.8212%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (2 samples, 0.02%)</title><rect x="6.5830%" y="1189" width="0.0237%" height="15" fill="rgb(240,164,32)" fg:x="556" fg:w="2"/><text x="6.8330%" y="1199.50"></text></g><g><title>[libc.so.6] (59 samples, 0.70%)</title><rect x="6.6067%" y="1189" width="0.6986%" height="15" fill="rgb(232,46,7)" fg:x="558" fg:w="59"/><text x="6.8567%" y="1199.50"></text></g><g><title>[libm.so.6] (3 samples, 0.04%)</title><rect x="7.3052%" y="1189" width="0.0355%" height="15" fill="rgb(229,129,53)" fg:x="617" fg:w="3"/><text x="7.5552%" y="1199.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (1 samples, 0.01%)</title><rect x="7.3408%" y="1173" width="0.0118%" height="15" fill="rgb(234,188,29)" fg:x="620" fg:w="1"/><text x="7.5908%" y="1183.50"></text></g><g><title>[rotmguard] (2 samples, 0.02%)</title><rect x="7.3408%" y="1189" width="0.0237%" height="15" fill="rgb(246,141,4)" fg:x="620" fg:w="2"/><text x="7.5908%" y="1199.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.01%)</title><rect x="7.3526%" y="1173" width="0.0118%" height="15" fill="rgb(229,23,39)" fg:x="621" fg:w="1"/><text x="7.6026%" y="1183.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.01%)</title><rect x="7.3526%" y="1157" width="0.0118%" height="15" fill="rgb(206,12,3)" fg:x="621" fg:w="1"/><text x="7.6026%" y="1167.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::eat_char (1 samples, 0.01%)</title><rect x="7.3526%" y="1141" width="0.0118%" height="15" fill="rgb(252,226,20)" fg:x="621" fg:w="1"/><text x="7.6026%" y="1151.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::discard (1 samples, 0.01%)</title><rect x="7.3526%" y="1125" width="0.0118%" height="15" fill="rgb(216,123,35)" fg:x="621" fg:w="1"/><text x="7.6026%" y="1135.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::discard (1 samples, 0.01%)</title><rect x="7.3526%" y="1109" width="0.0118%" height="15" fill="rgb(212,68,40)" fg:x="621" fg:w="1"/><text x="7.6026%" y="1119.50"></text></g><g><title>__floattidf (1 samples, 0.01%)</title><rect x="7.3644%" y="1189" width="0.0118%" height="15" fill="rgb(254,125,32)" fg:x="622" fg:w="1"/><text x="7.6144%" y="1199.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="7.3763%" y="1189" width="0.0118%" height="15" fill="rgb(253,97,22)" fg:x="623" fg:w="1"/><text x="7.6263%" y="1199.50"></text></g><g><title>__rust_dealloc (2 samples, 0.02%)</title><rect x="7.3881%" y="1189" width="0.0237%" height="15" fill="rgb(241,101,14)" fg:x="624" fg:w="2"/><text x="7.6381%" y="1199.50"></text></g><g><title>__send (1 samples, 0.01%)</title><rect x="7.4118%" y="1189" width="0.0118%" height="15" fill="rgb(238,103,29)" fg:x="626" fg:w="1"/><text x="7.6618%" y="1199.50"></text></g><g><title>__vdso_clock_gettime (9 samples, 0.11%)</title><rect x="7.4236%" y="1189" width="0.1066%" height="15" fill="rgb(233,195,47)" fg:x="627" fg:w="9"/><text x="7.6736%" y="1199.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.04%)</title><rect x="7.5302%" y="1189" width="0.0355%" height="15" fill="rgb(246,218,30)" fg:x="636" fg:w="3"/><text x="7.7802%" y="1199.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (1 samples, 0.01%)</title><rect x="7.5539%" y="1173" width="0.0118%" height="15" fill="rgb(219,145,47)" fg:x="638" fg:w="1"/><text x="7.8039%" y="1183.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.01%)</title><rect x="7.5539%" y="1157" width="0.0118%" height="15" fill="rgb(243,12,26)" fg:x="638" fg:w="1"/><text x="7.8039%" y="1167.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1 samples, 0.01%)</title><rect x="7.5539%" y="1141" width="0.0118%" height="15" fill="rgb(214,87,16)" fg:x="638" fg:w="1"/><text x="7.8039%" y="1151.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1 samples, 0.01%)</title><rect x="7.5539%" y="1125" width="0.0118%" height="15" fill="rgb(208,99,42)" fg:x="638" fg:w="1"/><text x="7.8039%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="7.5539%" y="1109" width="0.0118%" height="15" fill="rgb(253,99,2)" fg:x="638" fg:w="1"/><text x="7.8039%" y="1119.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="7.5539%" y="1093" width="0.0118%" height="15" fill="rgb(220,168,23)" fg:x="638" fg:w="1"/><text x="7.8039%" y="1103.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="7.5539%" y="1077" width="0.0118%" height="15" fill="rgb(242,38,24)" fg:x="638" fg:w="1"/><text x="7.8039%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.01%)</title><rect x="7.5657%" y="1189" width="0.0118%" height="15" fill="rgb(225,182,9)" fg:x="639" fg:w="1"/><text x="7.8157%" y="1199.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.02%)</title><rect x="7.5776%" y="1189" width="0.0237%" height="15" fill="rgb(243,178,37)" fg:x="640" fg:w="2"/><text x="7.8276%" y="1199.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.01%)</title><rect x="7.6012%" y="1189" width="0.0118%" height="15" fill="rgb(232,139,19)" fg:x="642" fg:w="1"/><text x="7.8512%" y="1199.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (1 samples, 0.01%)</title><rect x="7.6131%" y="1189" width="0.0118%" height="15" fill="rgb(225,201,24)" fg:x="643" fg:w="1"/><text x="7.8631%" y="1199.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="7.6249%" y="1189" width="0.0118%" height="15" fill="rgb(221,47,46)" fg:x="644" fg:w="1"/><text x="7.8749%" y="1199.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.01%)</title><rect x="7.6368%" y="1189" width="0.0118%" height="15" fill="rgb(249,23,13)" fg:x="645" fg:w="1"/><text x="7.8868%" y="1199.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.01%)</title><rect x="7.6486%" y="1189" width="0.0118%" height="15" fill="rgb(219,9,5)" fg:x="646" fg:w="1"/><text x="7.8986%" y="1199.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_exact (1 samples, 0.01%)</title><rect x="7.6604%" y="1189" width="0.0118%" height="15" fill="rgb(254,171,16)" fg:x="647" fg:w="1"/><text x="7.9104%" y="1199.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_shortest (1 samples, 0.01%)</title><rect x="7.6723%" y="1189" width="0.0118%" height="15" fill="rgb(230,171,20)" fg:x="648" fg:w="1"/><text x="7.9223%" y="1199.50"></text></g><g><title>core::num::flt2dec::to_shortest_str (1 samples, 0.01%)</title><rect x="7.6723%" y="1173" width="0.0118%" height="15" fill="rgb(210,71,41)" fg:x="648" fg:w="1"/><text x="7.9223%" y="1183.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u16&gt;::fmt (1 samples, 0.01%)</title><rect x="7.6841%" y="1189" width="0.0118%" height="15" fill="rgb(206,173,20)" fg:x="649" fg:w="1"/><text x="7.9341%" y="1199.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (1 samples, 0.01%)</title><rect x="7.6960%" y="1189" width="0.0118%" height="15" fill="rgb(233,88,34)" fg:x="650" fg:w="1"/><text x="7.9460%" y="1199.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact_opt (1 samples, 0.01%)</title><rect x="7.7078%" y="1189" width="0.0118%" height="15" fill="rgb(223,209,46)" fg:x="651" fg:w="1"/><text x="7.9578%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;rotmguard::module::general::GeneralInst as rotmguard::module::ModuleInstance&gt;::client_packet::{{closure}}&gt; (1 samples, 0.01%)</title><rect x="7.7196%" y="1189" width="0.0118%" height="15" fill="rgb(250,43,18)" fg:x="652" fg:w="1"/><text x="7.9696%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;rotmguard::packets::ServerPacket&gt; (3 samples, 0.04%)</title><rect x="7.7315%" y="1189" width="0.0355%" height="15" fill="rgb(208,13,10)" fg:x="653" fg:w="3"/><text x="7.9815%" y="1199.50"></text></g><g><title>core::slice::rotate::ptr_rotate (4 samples, 0.05%)</title><rect x="7.7670%" y="1189" width="0.0474%" height="15" fill="rgb(212,200,36)" fg:x="656" fg:w="4"/><text x="8.0170%" y="1199.50"></text></g><g><title>core::ptr::swap_nonoverlapping (1 samples, 0.01%)</title><rect x="7.8025%" y="1173" width="0.0118%" height="15" fill="rgb(225,90,30)" fg:x="659" fg:w="1"/><text x="8.0525%" y="1183.50"></text></g><g><title>core::ptr::swap_nonoverlapping_simple_untyped (1 samples, 0.01%)</title><rect x="7.8025%" y="1157" width="0.0118%" height="15" fill="rgb(236,182,39)" fg:x="659" fg:w="1"/><text x="8.0525%" y="1167.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="7.8025%" y="1141" width="0.0118%" height="15" fill="rgb(212,144,35)" fg:x="659" fg:w="1"/><text x="8.0525%" y="1151.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.01%)</title><rect x="7.8143%" y="1189" width="0.0118%" height="15" fill="rgb(228,63,44)" fg:x="660" fg:w="1"/><text x="8.0643%" y="1199.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.01%)</title><rect x="7.8143%" y="1173" width="0.0118%" height="15" fill="rgb(228,109,6)" fg:x="660" fg:w="1"/><text x="8.0643%" y="1183.50"></text></g><g><title>malloc (5 samples, 0.06%)</title><rect x="7.8262%" y="1189" width="0.0592%" height="15" fill="rgb(238,117,24)" fg:x="661" fg:w="5"/><text x="8.0762%" y="1199.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (1 samples, 0.01%)</title><rect x="7.8854%" y="1189" width="0.0118%" height="15" fill="rgb(242,26,26)" fg:x="666" fg:w="1"/><text x="8.1354%" y="1199.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.01%)</title><rect x="7.9327%" y="1173" width="0.0118%" height="15" fill="rgb(221,92,48)" fg:x="670" fg:w="1"/><text x="8.1827%" y="1183.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;u8&gt; for usize&gt;::from (1 samples, 0.01%)</title><rect x="7.9327%" y="1157" width="0.0118%" height="15" fill="rgb(209,209,32)" fg:x="670" fg:w="1"/><text x="8.1827%" y="1167.50"></text></g><g><title>core::num::&lt;impl u8&gt;::wrapping_add (4 samples, 0.05%)</title><rect x="7.9446%" y="1173" width="0.0474%" height="15" fill="rgb(221,70,22)" fg:x="671" fg:w="4"/><text x="8.1946%" y="1183.50"></text></g><g><title>rc4::Rc4State::prga (9 samples, 0.11%)</title><rect x="7.8972%" y="1189" width="0.1066%" height="15" fill="rgb(248,145,5)" fg:x="667" fg:w="9"/><text x="8.1472%" y="1199.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.01%)</title><rect x="7.9919%" y="1173" width="0.0118%" height="15" fill="rgb(226,116,26)" fg:x="675" fg:w="1"/><text x="8.2419%" y="1183.50"></text></g><g><title>core::ptr::swap (1 samples, 0.01%)</title><rect x="7.9919%" y="1157" width="0.0118%" height="15" fill="rgb(244,5,17)" fg:x="675" fg:w="1"/><text x="8.2419%" y="1167.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.01%)</title><rect x="7.9919%" y="1141" width="0.0118%" height="15" fill="rgb(252,159,33)" fg:x="675" fg:w="1"/><text x="8.2419%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::descend (1 samples, 0.01%)</title><rect x="8.0038%" y="1141" width="0.0118%" height="15" fill="rgb(206,71,0)" fg:x="676" fg:w="1"/><text x="8.2538%" y="1151.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (1 samples, 0.01%)</title><rect x="8.0038%" y="1125" width="0.0118%" height="15" fill="rgb(233,118,54)" fg:x="676" fg:w="1"/><text x="8.2538%" y="1135.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (1 samples, 0.01%)</title><rect x="8.0038%" y="1109" width="0.0118%" height="15" fill="rgb(234,83,48)" fg:x="676" fg:w="1"/><text x="8.2538%" y="1119.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="8.0038%" y="1093" width="0.0118%" height="15" fill="rgb(228,3,54)" fg:x="676" fg:w="1"/><text x="8.2538%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="8.0156%" y="1109" width="0.0118%" height="15" fill="rgb(226,155,13)" fg:x="677" fg:w="1"/><text x="8.2656%" y="1119.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="8.0156%" y="1093" width="0.0118%" height="15" fill="rgb(241,28,37)" fg:x="677" fg:w="1"/><text x="8.2656%" y="1103.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="8.0156%" y="1077" width="0.0118%" height="15" fill="rgb(233,93,10)" fg:x="677" fg:w="1"/><text x="8.2656%" y="1087.50"></text></g><g><title>rotmguard::module::autonexus::projectiles::Projectiles::add_bullet (4 samples, 0.05%)</title><rect x="8.0038%" y="1189" width="0.0474%" height="15" fill="rgb(225,113,19)" fg:x="676" fg:w="4"/><text x="8.2538%" y="1199.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (4 samples, 0.05%)</title><rect x="8.0038%" y="1173" width="0.0474%" height="15" fill="rgb(241,2,18)" fg:x="676" fg:w="4"/><text x="8.2538%" y="1183.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (4 samples, 0.05%)</title><rect x="8.0038%" y="1157" width="0.0474%" height="15" fill="rgb(228,207,21)" fg:x="676" fg:w="4"/><text x="8.2538%" y="1167.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (3 samples, 0.04%)</title><rect x="8.0156%" y="1141" width="0.0355%" height="15" fill="rgb(213,211,35)" fg:x="677" fg:w="3"/><text x="8.2656%" y="1151.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (3 samples, 0.04%)</title><rect x="8.0156%" y="1125" width="0.0355%" height="15" fill="rgb(209,83,10)" fg:x="677" fg:w="3"/><text x="8.2656%" y="1135.50"></text></g><g><title>&lt;rotmguard::extra_datatypes::ObjectId as core::cmp::Ord&gt;::cmp (2 samples, 0.02%)</title><rect x="8.0275%" y="1109" width="0.0237%" height="15" fill="rgb(209,164,1)" fg:x="678" fg:w="2"/><text x="8.2775%" y="1119.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (2 samples, 0.02%)</title><rect x="8.0275%" y="1093" width="0.0237%" height="15" fill="rgb(213,184,43)" fg:x="678" fg:w="2"/><text x="8.2775%" y="1103.50"></text></g><g><title>rotmguard::module::autonexus::projectiles::Projectiles::add_remove_objects (1 samples, 0.01%)</title><rect x="8.0511%" y="1189" width="0.0118%" height="15" fill="rgb(231,61,34)" fg:x="680" fg:w="1"/><text x="8.3011%" y="1199.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (1 samples, 0.01%)</title><rect x="8.0511%" y="1173" width="0.0118%" height="15" fill="rgb(235,75,3)" fg:x="680" fg:w="1"/><text x="8.3011%" y="1183.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove_entry (1 samples, 0.01%)</title><rect x="8.0511%" y="1157" width="0.0118%" height="15" fill="rgb(220,106,47)" fg:x="680" fg:w="1"/><text x="8.3011%" y="1167.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.01%)</title><rect x="8.0511%" y="1141" width="0.0118%" height="15" fill="rgb(210,196,33)" fg:x="680" fg:w="1"/><text x="8.3011%" y="1151.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1 samples, 0.01%)</title><rect x="8.0511%" y="1125" width="0.0118%" height="15" fill="rgb(229,154,42)" fg:x="680" fg:w="1"/><text x="8.3011%" y="1135.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1 samples, 0.01%)</title><rect x="8.0511%" y="1109" width="0.0118%" height="15" fill="rgb(228,114,26)" fg:x="680" fg:w="1"/><text x="8.3011%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.01%)</title><rect x="8.1222%" y="1173" width="0.0118%" height="15" fill="rgb(208,144,1)" fg:x="686" fg:w="1"/><text x="8.3722%" y="1183.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.01%)</title><rect x="8.1222%" y="1157" width="0.0118%" height="15" fill="rgb(239,112,37)" fg:x="686" fg:w="1"/><text x="8.3722%" y="1167.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.01%)</title><rect x="8.1222%" y="1141" width="0.0118%" height="15" fill="rgb(210,96,50)" fg:x="686" fg:w="1"/><text x="8.3722%" y="1151.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::filled (1 samples, 0.01%)</title><rect x="8.1340%" y="1157" width="0.0118%" height="15" fill="rgb(222,178,2)" fg:x="687" fg:w="1"/><text x="8.3840%" y="1167.50"></text></g><g><title>&lt;tokio::io::util::read::Read&lt;R&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="8.1340%" y="1173" width="0.0237%" height="15" fill="rgb(226,74,18)" fg:x="687" fg:w="2"/><text x="8.3840%" y="1183.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::new (1 samples, 0.01%)</title><rect x="8.1459%" y="1157" width="0.0118%" height="15" fill="rgb(225,67,54)" fg:x="688" fg:w="1"/><text x="8.3959%" y="1167.50"></text></g><g><title>rotmguard::proxy::PacketReader::wait_for_whole_packet::_{{closure}} (9 samples, 0.11%)</title><rect x="8.0630%" y="1189" width="0.1066%" height="15" fill="rgb(251,92,32)" fg:x="681" fg:w="9"/><text x="8.3130%" y="1199.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="8.1577%" y="1173" width="0.0118%" height="15" fill="rgb(228,149,22)" fg:x="689" fg:w="1"/><text x="8.4077%" y="1183.50"></text></g><g><title>&lt;rotmguard::module::antidebuffs::AntidebuffsInst as rotmguard::module::ModuleInstance&gt;::server_packet::_{{closure}} (2 samples, 0.02%)</title><rect x="8.2643%" y="1157" width="0.0237%" height="15" fill="rgb(243,54,13)" fg:x="698" fg:w="2"/><text x="8.5143%" y="1167.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (1 samples, 0.01%)</title><rect x="8.2761%" y="1141" width="0.0118%" height="15" fill="rgb(243,180,28)" fg:x="699" fg:w="1"/><text x="8.5261%" y="1151.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="8.2761%" y="1125" width="0.0118%" height="15" fill="rgb(208,167,24)" fg:x="699" fg:w="1"/><text x="8.5261%" y="1135.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="8.2761%" y="1109" width="0.0118%" height="15" fill="rgb(245,73,45)" fg:x="699" fg:w="1"/><text x="8.5261%" y="1119.50"></text></g><g><title>&lt;rotmguard::module::RootModuleInstance as rotmguard::module::ModuleInstance&gt;::server_packet::_{{closure}} (9 samples, 0.11%)</title><rect x="8.2169%" y="1173" width="0.1066%" height="15" fill="rgb(237,203,48)" fg:x="694" fg:w="9"/><text x="8.4669%" y="1183.50"></text></g><g><title>&lt;rotmguard::module::autonexus::AutonexusInst as rotmguard::module::ModuleInstance&gt;::server_packet::_{{closure}} (3 samples, 0.04%)</title><rect x="8.2879%" y="1157" width="0.0355%" height="15" fill="rgb(211,197,16)" fg:x="700" fg:w="3"/><text x="8.5379%" y="1167.50"></text></g><g><title>rotmguard::module::autonexus::ground::Ground::add_tiles (1 samples, 0.01%)</title><rect x="8.3116%" y="1141" width="0.0118%" height="15" fill="rgb(243,99,51)" fg:x="702" fg:w="1"/><text x="8.5616%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1 samples, 0.01%)</title><rect x="8.3116%" y="1125" width="0.0118%" height="15" fill="rgb(215,123,29)" fg:x="702" fg:w="1"/><text x="8.5616%" y="1135.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.01%)</title><rect x="8.3116%" y="1109" width="0.0118%" height="15" fill="rgb(239,186,37)" fg:x="702" fg:w="1"/><text x="8.5616%" y="1119.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1 samples, 0.01%)</title><rect x="8.3116%" y="1093" width="0.0118%" height="15" fill="rgb(252,136,39)" fg:x="702" fg:w="1"/><text x="8.5616%" y="1103.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1 samples, 0.01%)</title><rect x="8.3116%" y="1077" width="0.0118%" height="15" fill="rgb(223,213,32)" fg:x="702" fg:w="1"/><text x="8.5616%" y="1087.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (1 samples, 0.01%)</title><rect x="8.3116%" y="1061" width="0.0118%" height="15" fill="rgb(233,115,5)" fg:x="702" fg:w="1"/><text x="8.5616%" y="1071.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (5 samples, 0.06%)</title><rect x="8.3235%" y="1173" width="0.0592%" height="15" fill="rgb(207,226,44)" fg:x="703" fg:w="5"/><text x="8.5735%" y="1183.50"></text></g><g><title>rotmguard::proxy::Proxy::run::_{{closure}}::_{{closure}}::_{{closure}} (5 samples, 0.06%)</title><rect x="8.3235%" y="1157" width="0.0592%" height="15" fill="rgb(208,126,0)" fg:x="703" fg:w="5"/><text x="8.5735%" y="1167.50"></text></g><g><title>core::time::Duration::as_micros (1 samples, 0.01%)</title><rect x="8.3827%" y="1173" width="0.0118%" height="15" fill="rgb(244,66,21)" fg:x="708" fg:w="1"/><text x="8.6327%" y="1183.50"></text></g><g><title>rotmguard::proxy::Proxy::run::_{{closure}}::_{{closure}} (20 samples, 0.24%)</title><rect x="8.1695%" y="1189" width="0.2368%" height="15" fill="rgb(222,97,12)" fg:x="690" fg:w="20"/><text x="8.4195%" y="1199.50"></text></g><g><title>rotmguard::proxy::PacketReader::pop_packet (1 samples, 0.01%)</title><rect x="8.3945%" y="1173" width="0.0118%" height="15" fill="rgb(219,213,19)" fg:x="709" fg:w="1"/><text x="8.6445%" y="1183.50"></text></g><g><title>rotmguard::proxy::ProxyWriteHalf::send_client::_{{closure}} (6 samples, 0.07%)</title><rect x="8.4063%" y="1189" width="0.0710%" height="15" fill="rgb(252,169,30)" fg:x="710" fg:w="6"/><text x="8.6563%" y="1199.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (4 samples, 0.05%)</title><rect x="8.4300%" y="1173" width="0.0474%" height="15" fill="rgb(206,32,51)" fg:x="712" fg:w="4"/><text x="8.6800%" y="1183.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="8.4655%" y="1157" width="0.0118%" height="15" fill="rgb(250,172,42)" fg:x="715" fg:w="1"/><text x="8.7155%" y="1167.50"></text></g><g><title>rotmguard::proxy::ProxyWriteHalf::send_server::_{{closure}} (2 samples, 0.02%)</title><rect x="8.4774%" y="1189" width="0.0237%" height="15" fill="rgb(209,34,43)" fg:x="716" fg:w="2"/><text x="8.7274%" y="1199.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="8.4892%" y="1173" width="0.0118%" height="15" fill="rgb(223,11,35)" fg:x="717" fg:w="1"/><text x="8.7392%" y="1183.50"></text></g><g><title>rotmguard::read::read_compressed_int (6 samples, 0.07%)</title><rect x="8.5011%" y="1189" width="0.0710%" height="15" fill="rgb(251,219,26)" fg:x="718" fg:w="6"/><text x="8.7511%" y="1199.50"></text></g><g><title>&lt;u8 as rotmguard::read::RPRead&gt;::rp_read (4 samples, 0.05%)</title><rect x="8.5247%" y="1173" width="0.0474%" height="15" fill="rgb(231,119,3)" fg:x="720" fg:w="4"/><text x="8.7747%" y="1183.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (4 samples, 0.05%)</title><rect x="8.5247%" y="1157" width="0.0474%" height="15" fill="rgb(216,97,11)" fg:x="720" fg:w="4"/><text x="8.7747%" y="1167.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (1 samples, 0.01%)</title><rect x="8.5603%" y="1141" width="0.0118%" height="15" fill="rgb(223,59,9)" fg:x="723" fg:w="1"/><text x="8.8103%" y="1151.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_checked (1 samples, 0.01%)</title><rect x="8.5603%" y="1125" width="0.0118%" height="15" fill="rgb(233,93,31)" fg:x="723" fg:w="1"/><text x="8.8103%" y="1135.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (1 samples, 0.01%)</title><rect x="8.5603%" y="1109" width="0.0118%" height="15" fill="rgb(239,81,33)" fg:x="723" fg:w="1"/><text x="8.8103%" y="1119.50"></text></g><g><title>ryu::pretty::format64 (2 samples, 0.02%)</title><rect x="8.5721%" y="1189" width="0.0237%" height="15" fill="rgb(213,120,34)" fg:x="724" fg:w="2"/><text x="8.8221%" y="1199.50"></text></g><g><title>ryu::d2s::d2d (2 samples, 0.02%)</title><rect x="8.5721%" y="1173" width="0.0237%" height="15" fill="rgb(243,49,53)" fg:x="724" fg:w="2"/><text x="8.8221%" y="1183.50"></text></g><g><title>ryu::pretty::mantissa::write_mantissa_long (1 samples, 0.01%)</title><rect x="8.5958%" y="1189" width="0.0118%" height="15" fill="rgb(247,216,33)" fg:x="726" fg:w="1"/><text x="8.8458%" y="1199.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (1 samples, 0.01%)</title><rect x="8.6076%" y="1189" width="0.0118%" height="15" fill="rgb(226,26,14)" fg:x="727" fg:w="1"/><text x="8.8576%" y="1199.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.01%)</title><rect x="8.6076%" y="1173" width="0.0118%" height="15" fill="rgb(215,49,53)" fg:x="727" fg:w="1"/><text x="8.8576%" y="1183.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.01%)</title><rect x="8.6076%" y="1157" width="0.0118%" height="15" fill="rgb(245,162,40)" fg:x="727" fg:w="1"/><text x="8.8576%" y="1167.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.01%)</title><rect x="8.6076%" y="1141" width="0.0118%" height="15" fill="rgb(229,68,17)" fg:x="727" fg:w="1"/><text x="8.8576%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.01%)</title><rect x="8.6076%" y="1125" width="0.0118%" height="15" fill="rgb(213,182,10)" fg:x="727" fg:w="1"/><text x="8.8576%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="8.6076%" y="1109" width="0.0118%" height="15" fill="rgb(245,125,30)" fg:x="727" fg:w="1"/><text x="8.8576%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="8.6076%" y="1093" width="0.0118%" height="15" fill="rgb(232,202,2)" fg:x="727" fg:w="1"/><text x="8.8576%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="8.6076%" y="1077" width="0.0118%" height="15" fill="rgb(237,140,51)" fg:x="727" fg:w="1"/><text x="8.8576%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="8.6076%" y="1061" width="0.0118%" height="15" fill="rgb(236,157,25)" fg:x="727" fg:w="1"/><text x="8.8576%" y="1071.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="8.6076%" y="1045" width="0.0118%" height="15" fill="rgb(219,209,0)" fg:x="727" fg:w="1"/><text x="8.8576%" y="1055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="8.6076%" y="1029" width="0.0118%" height="15" fill="rgb(240,116,54)" fg:x="727" fg:w="1"/><text x="8.8576%" y="1039.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (2 samples, 0.02%)</title><rect x="8.6313%" y="1173" width="0.0237%" height="15" fill="rgb(216,10,36)" fg:x="729" fg:w="2"/><text x="8.8813%" y="1183.50"></text></g><g><title>serde_json::ser::Formatter::begin_object_key (2 samples, 0.02%)</title><rect x="8.6313%" y="1157" width="0.0237%" height="15" fill="rgb(222,72,44)" fg:x="729" fg:w="2"/><text x="8.8813%" y="1167.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.02%)</title><rect x="8.6313%" y="1141" width="0.0237%" height="15" fill="rgb(232,159,9)" fg:x="729" fg:w="2"/><text x="8.8813%" y="1151.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.05%)</title><rect x="8.6195%" y="1189" width="0.0474%" height="15" fill="rgb(210,39,32)" fg:x="728" fg:w="4"/><text x="8.8695%" y="1199.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.01%)</title><rect x="8.6550%" y="1173" width="0.0118%" height="15" fill="rgb(216,194,45)" fg:x="731" fg:w="1"/><text x="8.9050%" y="1183.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for core::fmt::Arguments&gt;::serialize (1 samples, 0.01%)</title><rect x="8.6550%" y="1157" width="0.0118%" height="15" fill="rgb(218,18,35)" fg:x="731" fg:w="1"/><text x="8.9050%" y="1167.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::collect_str (1 samples, 0.01%)</title><rect x="8.6550%" y="1141" width="0.0118%" height="15" fill="rgb(207,83,51)" fg:x="731" fg:w="1"/><text x="8.9050%" y="1151.50"></text></g><g><title>serde_json::ser::Formatter::begin_string (1 samples, 0.01%)</title><rect x="8.6550%" y="1125" width="0.0118%" height="15" fill="rgb(225,63,43)" fg:x="731" fg:w="1"/><text x="8.9050%" y="1135.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="8.6550%" y="1109" width="0.0118%" height="15" fill="rgb(207,57,36)" fg:x="731" fg:w="1"/><text x="8.9050%" y="1119.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (6 samples, 0.07%)</title><rect x="8.6668%" y="1189" width="0.0710%" height="15" fill="rgb(216,99,33)" fg:x="732" fg:w="6"/><text x="8.9168%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="8.7260%" y="1173" width="0.0118%" height="15" fill="rgb(225,42,16)" fg:x="737" fg:w="1"/><text x="8.9760%" y="1183.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="8.7260%" y="1157" width="0.0118%" height="15" fill="rgb(220,201,45)" fg:x="737" fg:w="1"/><text x="8.9760%" y="1167.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="8.7260%" y="1141" width="0.0118%" height="15" fill="rgb(225,33,4)" fg:x="737" fg:w="1"/><text x="8.9760%" y="1151.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.04%)</title><rect x="8.7379%" y="1189" width="0.0355%" height="15" fill="rgb(224,33,50)" fg:x="738" fg:w="3"/><text x="8.9879%" y="1199.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.04%)</title><rect x="8.7379%" y="1173" width="0.0355%" height="15" fill="rgb(246,198,51)" fg:x="738" fg:w="3"/><text x="8.9879%" y="1183.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1 samples, 0.01%)</title><rect x="8.7615%" y="1157" width="0.0118%" height="15" fill="rgb(205,22,4)" fg:x="740" fg:w="1"/><text x="9.0115%" y="1167.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (1 samples, 0.01%)</title><rect x="8.7615%" y="1141" width="0.0118%" height="15" fill="rgb(206,3,8)" fg:x="740" fg:w="1"/><text x="9.0115%" y="1151.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (1 samples, 0.01%)</title><rect x="8.7615%" y="1125" width="0.0118%" height="15" fill="rgb(251,23,15)" fg:x="740" fg:w="1"/><text x="9.0115%" y="1135.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1 samples, 0.01%)</title><rect x="8.7615%" y="1109" width="0.0118%" height="15" fill="rgb(252,88,28)" fg:x="740" fg:w="1"/><text x="9.0115%" y="1119.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (2 samples, 0.02%)</title><rect x="8.7734%" y="1189" width="0.0237%" height="15" fill="rgb(212,127,14)" fg:x="741" fg:w="2"/><text x="9.0234%" y="1199.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (2 samples, 0.02%)</title><rect x="8.7734%" y="1173" width="0.0237%" height="15" fill="rgb(247,145,37)" fg:x="741" fg:w="2"/><text x="9.0234%" y="1183.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (2 samples, 0.02%)</title><rect x="8.7734%" y="1157" width="0.0237%" height="15" fill="rgb(209,117,53)" fg:x="741" fg:w="2"/><text x="9.0234%" y="1167.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="8.7734%" y="1141" width="0.0237%" height="15" fill="rgb(212,90,42)" fg:x="741" fg:w="2"/><text x="9.0234%" y="1151.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::_{{closure}} (2 samples, 0.02%)</title><rect x="8.7734%" y="1125" width="0.0237%" height="15" fill="rgb(218,164,37)" fg:x="741" fg:w="2"/><text x="9.0234%" y="1135.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::_{{closure}} (1 samples, 0.01%)</title><rect x="8.7852%" y="1109" width="0.0118%" height="15" fill="rgb(246,65,34)" fg:x="742" fg:w="1"/><text x="9.0352%" y="1119.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (1 samples, 0.01%)</title><rect x="8.7852%" y="1093" width="0.0118%" height="15" fill="rgb(231,100,33)" fg:x="742" fg:w="1"/><text x="9.0352%" y="1103.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.04%)</title><rect x="8.7971%" y="1189" width="0.0355%" height="15" fill="rgb(228,126,14)" fg:x="743" fg:w="3"/><text x="9.0471%" y="1199.50"></text></g><g><title>std::time::Instant::duration_since (1 samples, 0.01%)</title><rect x="8.8326%" y="1189" width="0.0118%" height="15" fill="rgb(215,173,21)" fg:x="746" fg:w="1"/><text x="9.0826%" y="1199.50"></text></g><g><title>std::time::Instant::elapsed (1 samples, 0.01%)</title><rect x="8.8444%" y="1189" width="0.0118%" height="15" fill="rgb(210,6,40)" fg:x="747" fg:w="1"/><text x="9.0944%" y="1199.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (3 samples, 0.04%)</title><rect x="8.8563%" y="1189" width="0.0355%" height="15" fill="rgb(212,48,18)" fg:x="748" fg:w="3"/><text x="9.1063%" y="1199.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::assume_init (2 samples, 0.02%)</title><rect x="8.8681%" y="1173" width="0.0237%" height="15" fill="rgb(230,214,11)" fg:x="749" fg:w="2"/><text x="9.1181%" y="1183.50"></text></g><g><title>tokio::runtime::context::with_scheduler (1 samples, 0.01%)</title><rect x="8.8918%" y="1189" width="0.0118%" height="15" fill="rgb(254,105,39)" fg:x="751" fg:w="1"/><text x="9.1418%" y="1199.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="8.9273%" y="1173" width="0.0118%" height="15" fill="rgb(245,158,5)" fg:x="754" fg:w="1"/><text x="9.1773%" y="1183.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.01%)</title><rect x="8.9273%" y="1157" width="0.0118%" height="15" fill="rgb(249,208,11)" fg:x="754" fg:w="1"/><text x="9.1773%" y="1167.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="8.9273%" y="1141" width="0.0118%" height="15" fill="rgb(210,39,28)" fg:x="754" fg:w="1"/><text x="9.1773%" y="1151.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="8.9273%" y="1125" width="0.0118%" height="15" fill="rgb(211,56,53)" fg:x="754" fg:w="1"/><text x="9.1773%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::coop::RestoreOnPending&gt; (1 samples, 0.01%)</title><rect x="8.9391%" y="1173" width="0.0118%" height="15" fill="rgb(226,201,30)" fg:x="755" fg:w="1"/><text x="9.1891%" y="1183.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="8.9391%" y="1157" width="0.0118%" height="15" fill="rgb(239,101,34)" fg:x="755" fg:w="1"/><text x="9.1891%" y="1167.50"></text></g><g><title>tokio::runtime::context::budget (1 samples, 0.01%)</title><rect x="8.9391%" y="1141" width="0.0118%" height="15" fill="rgb(226,209,5)" fg:x="755" fg:w="1"/><text x="9.1891%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="8.9391%" y="1125" width="0.0118%" height="15" fill="rgb(250,105,47)" fg:x="755" fg:w="1"/><text x="9.1891%" y="1135.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (1 samples, 0.01%)</title><rect x="8.9391%" y="1109" width="0.0118%" height="15" fill="rgb(230,72,3)" fg:x="755" fg:w="1"/><text x="9.1891%" y="1119.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop::_{{closure}} (1 samples, 0.01%)</title><rect x="8.9391%" y="1093" width="0.0118%" height="15" fill="rgb(232,218,39)" fg:x="755" fg:w="1"/><text x="9.1891%" y="1103.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.01%)</title><rect x="8.9391%" y="1077" width="0.0118%" height="15" fill="rgb(248,166,6)" fg:x="755" fg:w="1"/><text x="9.1891%" y="1087.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.01%)</title><rect x="8.9391%" y="1061" width="0.0118%" height="15" fill="rgb(247,89,20)" fg:x="755" fg:w="1"/><text x="9.1891%" y="1071.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="8.9391%" y="1045" width="0.0118%" height="15" fill="rgb(248,130,54)" fg:x="755" fg:w="1"/><text x="9.1891%" y="1055.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="8.9391%" y="1029" width="0.0118%" height="15" fill="rgb(234,196,4)" fg:x="755" fg:w="1"/><text x="9.1891%" y="1039.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.02%)</title><rect x="8.9510%" y="1173" width="0.0237%" height="15" fill="rgb(250,143,31)" fg:x="756" fg:w="2"/><text x="9.2010%" y="1183.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (2 samples, 0.02%)</title><rect x="8.9747%" y="1125" width="0.0237%" height="15" fill="rgb(211,110,34)" fg:x="758" fg:w="2"/><text x="9.2247%" y="1135.50"></text></g><g><title>std::sys::thread_local::fast_local::eager::Storage&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="8.9747%" y="1109" width="0.0237%" height="15" fill="rgb(215,124,48)" fg:x="758" fg:w="2"/><text x="9.2247%" y="1119.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="8.9747%" y="1093" width="0.0237%" height="15" fill="rgb(216,46,13)" fg:x="758" fg:w="2"/><text x="9.2247%" y="1103.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.02%)</title><rect x="8.9747%" y="1077" width="0.0237%" height="15" fill="rgb(205,184,25)" fg:x="758" fg:w="2"/><text x="9.2247%" y="1087.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (9 samples, 0.11%)</title><rect x="8.9036%" y="1189" width="0.1066%" height="15" fill="rgb(228,1,10)" fg:x="752" fg:w="9"/><text x="9.1536%" y="1199.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (3 samples, 0.04%)</title><rect x="8.9747%" y="1173" width="0.0355%" height="15" fill="rgb(213,116,27)" fg:x="758" fg:w="3"/><text x="9.2247%" y="1183.50"></text></g><g><title>tokio::runtime::context::budget (3 samples, 0.04%)</title><rect x="8.9747%" y="1157" width="0.0355%" height="15" fill="rgb(241,95,50)" fg:x="758" fg:w="3"/><text x="9.2247%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.04%)</title><rect x="8.9747%" y="1141" width="0.0355%" height="15" fill="rgb(238,48,32)" fg:x="758" fg:w="3"/><text x="9.2247%" y="1151.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (1 samples, 0.01%)</title><rect x="8.9983%" y="1125" width="0.0118%" height="15" fill="rgb(235,113,49)" fg:x="760" fg:w="1"/><text x="9.2483%" y="1135.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (1 samples, 0.01%)</title><rect x="8.9983%" y="1109" width="0.0118%" height="15" fill="rgb(205,127,43)" fg:x="760" fg:w="1"/><text x="9.2483%" y="1119.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.01%)</title><rect x="8.9983%" y="1093" width="0.0118%" height="15" fill="rgb(250,162,2)" fg:x="760" fg:w="1"/><text x="9.2483%" y="1103.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.01%)</title><rect x="8.9983%" y="1077" width="0.0118%" height="15" fill="rgb(220,13,41)" fg:x="760" fg:w="1"/><text x="9.2483%" y="1087.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="8.9983%" y="1061" width="0.0118%" height="15" fill="rgb(249,221,25)" fg:x="760" fg:w="1"/><text x="9.2483%" y="1071.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="8.9983%" y="1045" width="0.0118%" height="15" fill="rgb(215,208,19)" fg:x="760" fg:w="1"/><text x="9.2483%" y="1055.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="8.9983%" y="1029" width="0.0118%" height="15" fill="rgb(236,175,2)" fg:x="760" fg:w="1"/><text x="9.2483%" y="1039.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (2 samples, 0.02%)</title><rect x="9.0102%" y="1189" width="0.0237%" height="15" fill="rgb(241,52,2)" fg:x="761" fg:w="2"/><text x="9.2602%" y="1199.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (3 samples, 0.04%)</title><rect x="9.0339%" y="1189" width="0.0355%" height="15" fill="rgb(248,140,14)" fg:x="763" fg:w="3"/><text x="9.2839%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (6 samples, 0.07%)</title><rect x="9.0694%" y="1189" width="0.0710%" height="15" fill="rgb(253,22,42)" fg:x="766" fg:w="6"/><text x="9.3194%" y="1199.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="9.1286%" y="1173" width="0.0118%" height="15" fill="rgb(234,61,47)" fg:x="771" fg:w="1"/><text x="9.3786%" y="1183.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.01%)</title><rect x="9.1286%" y="1157" width="0.0118%" height="15" fill="rgb(208,226,15)" fg:x="771" fg:w="1"/><text x="9.3786%" y="1167.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="9.1286%" y="1141" width="0.0118%" height="15" fill="rgb(217,221,4)" fg:x="771" fg:w="1"/><text x="9.3786%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (1 samples, 0.01%)</title><rect x="9.1404%" y="1189" width="0.0118%" height="15" fill="rgb(212,174,34)" fg:x="772" fg:w="1"/><text x="9.3904%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (7 samples, 0.08%)</title><rect x="9.1523%" y="1189" width="0.0829%" height="15" fill="rgb(253,83,4)" fg:x="773" fg:w="7"/><text x="9.4023%" y="1199.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="9.2233%" y="1173" width="0.0118%" height="15" fill="rgb(250,195,49)" fg:x="779" fg:w="1"/><text x="9.4733%" y="1183.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.01%)</title><rect x="9.2233%" y="1157" width="0.0118%" height="15" fill="rgb(241,192,25)" fg:x="779" fg:w="1"/><text x="9.4733%" y="1167.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="9.2233%" y="1141" width="0.0118%" height="15" fill="rgb(208,124,10)" fg:x="779" fg:w="1"/><text x="9.4733%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (11 samples, 0.13%)</title><rect x="9.2351%" y="1189" width="0.1302%" height="15" fill="rgb(222,33,0)" fg:x="780" fg:w="11"/><text x="9.4851%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::defer::Defer::wake (2 samples, 0.02%)</title><rect x="9.3417%" y="1173" width="0.0237%" height="15" fill="rgb(234,209,28)" fg:x="789" fg:w="2"/><text x="9.5917%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;alloc::vec::Vec&lt;core::task::wake::Waker&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="9.3417%" y="1157" width="0.0237%" height="15" fill="rgb(224,11,23)" fg:x="789" fg:w="2"/><text x="9.5917%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (2 samples, 0.02%)</title><rect x="9.3417%" y="1141" width="0.0237%" height="15" fill="rgb(232,99,1)" fg:x="789" fg:w="2"/><text x="9.5917%" y="1151.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="9.3417%" y="1125" width="0.0237%" height="15" fill="rgb(237,95,45)" fg:x="789" fg:w="2"/><text x="9.5917%" y="1135.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.02%)</title><rect x="9.3417%" y="1109" width="0.0237%" height="15" fill="rgb(208,109,11)" fg:x="789" fg:w="2"/><text x="9.5917%" y="1119.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.02%)</title><rect x="9.3417%" y="1093" width="0.0237%" height="15" fill="rgb(216,190,48)" fg:x="789" fg:w="2"/><text x="9.5917%" y="1103.50"></text></g><g><title>core::mem::replace (2 samples, 0.02%)</title><rect x="9.3417%" y="1077" width="0.0237%" height="15" fill="rgb(251,171,36)" fg:x="789" fg:w="2"/><text x="9.5917%" y="1087.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="9.3417%" y="1061" width="0.0237%" height="15" fill="rgb(230,62,22)" fg:x="789" fg:w="2"/><text x="9.5917%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::task::Notified&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="9.3654%" y="1157" width="0.0118%" height="15" fill="rgb(225,114,35)" fg:x="791" fg:w="1"/><text x="9.6154%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::next_remote_task (1 samples, 0.01%)</title><rect x="9.3772%" y="1157" width="0.0118%" height="15" fill="rgb(215,118,42)" fg:x="792" fg:w="1"/><text x="9.6272%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::is_empty (1 samples, 0.01%)</title><rect x="9.3772%" y="1141" width="0.0118%" height="15" fill="rgb(243,119,21)" fg:x="792" fg:w="1"/><text x="9.6272%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::len (1 samples, 0.01%)</title><rect x="9.3772%" y="1125" width="0.0118%" height="15" fill="rgb(252,177,53)" fg:x="792" fg:w="1"/><text x="9.6272%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="9.3772%" y="1109" width="0.0118%" height="15" fill="rgb(237,209,29)" fg:x="792" fg:w="1"/><text x="9.6272%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="9.3772%" y="1093" width="0.0118%" height="15" fill="rgb(212,65,23)" fg:x="792" fg:w="1"/><text x="9.6272%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (3 samples, 0.04%)</title><rect x="9.3654%" y="1173" width="0.0355%" height="15" fill="rgb(230,222,46)" fg:x="791" fg:w="3"/><text x="9.6154%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::tune_global_queue_interval (1 samples, 0.01%)</title><rect x="9.3891%" y="1157" width="0.0118%" height="15" fill="rgb(215,135,32)" fg:x="793" fg:w="1"/><text x="9.6391%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::tuned_global_queue_interval (1 samples, 0.01%)</title><rect x="9.3891%" y="1141" width="0.0118%" height="15" fill="rgb(246,101,22)" fg:x="793" fg:w="1"/><text x="9.6391%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (4 samples, 0.05%)</title><rect x="9.3654%" y="1189" width="0.0474%" height="15" fill="rgb(206,107,13)" fg:x="791" fg:w="4"/><text x="9.6154%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (1 samples, 0.01%)</title><rect x="9.4009%" y="1173" width="0.0118%" height="15" fill="rgb(250,100,44)" fg:x="794" fg:w="1"/><text x="9.6509%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_searching (1 samples, 0.01%)</title><rect x="9.4009%" y="1157" width="0.0118%" height="15" fill="rgb(231,147,38)" fg:x="794" fg:w="1"/><text x="9.6509%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_searching (1 samples, 0.01%)</title><rect x="9.4009%" y="1141" width="0.0118%" height="15" fill="rgb(229,8,40)" fg:x="794" fg:w="1"/><text x="9.6509%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::inc_num_searching (1 samples, 0.01%)</title><rect x="9.4009%" y="1125" width="0.0118%" height="15" fill="rgb(221,135,30)" fg:x="794" fg:w="1"/><text x="9.6509%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="9.4009%" y="1109" width="0.0118%" height="15" fill="rgb(249,193,18)" fg:x="794" fg:w="1"/><text x="9.6509%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="9.4009%" y="1093" width="0.0118%" height="15" fill="rgb(209,133,39)" fg:x="794" fg:w="1"/><text x="9.6509%" y="1103.50"></text></g><g><title>tokio::runtime::task::state::State::load (6 samples, 0.07%)</title><rect x="9.4127%" y="1157" width="0.0710%" height="15" fill="rgb(232,100,14)" fg:x="795" fg:w="6"/><text x="9.6627%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (6 samples, 0.07%)</title><rect x="9.4127%" y="1141" width="0.0710%" height="15" fill="rgb(224,185,1)" fg:x="795" fg:w="6"/><text x="9.6627%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.07%)</title><rect x="9.4127%" y="1125" width="0.0710%" height="15" fill="rgb(223,139,8)" fg:x="795" fg:w="6"/><text x="9.6627%" y="1135.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (7 samples, 0.08%)</title><rect x="9.4127%" y="1189" width="0.0829%" height="15" fill="rgb(232,213,38)" fg:x="795" fg:w="7"/><text x="9.6627%" y="1199.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (7 samples, 0.08%)</title><rect x="9.4127%" y="1173" width="0.0829%" height="15" fill="rgb(207,94,22)" fg:x="795" fg:w="7"/><text x="9.6627%" y="1183.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val::_{{closure}} (1 samples, 0.01%)</title><rect x="9.4838%" y="1157" width="0.0118%" height="15" fill="rgb(219,183,54)" fg:x="801" fg:w="1"/><text x="9.7338%" y="1167.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::ref_inc (1 samples, 0.01%)</title><rect x="9.4838%" y="1141" width="0.0118%" height="15" fill="rgb(216,185,54)" fg:x="801" fg:w="1"/><text x="9.7338%" y="1151.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (1 samples, 0.01%)</title><rect x="9.4956%" y="1189" width="0.0118%" height="15" fill="rgb(254,217,39)" fg:x="802" fg:w="1"/><text x="9.7456%" y="1199.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (5 samples, 0.06%)</title><rect x="9.5075%" y="1189" width="0.0592%" height="15" fill="rgb(240,178,23)" fg:x="803" fg:w="5"/><text x="9.7575%" y="1199.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (3 samples, 0.04%)</title><rect x="9.5311%" y="1173" width="0.0355%" height="15" fill="rgb(218,11,47)" fg:x="805" fg:w="3"/><text x="9.7811%" y="1183.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (4 samples, 0.05%)</title><rect x="9.5667%" y="1189" width="0.0474%" height="15" fill="rgb(218,51,51)" fg:x="808" fg:w="4"/><text x="9.8167%" y="1199.50"></text></g><g><title>core::mem::drop (2 samples, 0.02%)</title><rect x="9.5903%" y="1173" width="0.0237%" height="15" fill="rgb(238,126,27)" fg:x="810" fg:w="2"/><text x="9.8403%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::wheel::Wheel&gt;&gt; (2 samples, 0.02%)</title><rect x="9.5903%" y="1157" width="0.0237%" height="15" fill="rgb(249,202,22)" fg:x="810" fg:w="2"/><text x="9.8403%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::time::wheel::Wheel&gt;&gt; (2 samples, 0.02%)</title><rect x="9.5903%" y="1141" width="0.0237%" height="15" fill="rgb(254,195,49)" fg:x="810" fg:w="2"/><text x="9.8403%" y="1151.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="9.5903%" y="1125" width="0.0237%" height="15" fill="rgb(208,123,14)" fg:x="810" fg:w="2"/><text x="9.8403%" y="1135.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2 samples, 0.02%)</title><rect x="9.5903%" y="1109" width="0.0237%" height="15" fill="rgb(224,200,8)" fg:x="810" fg:w="2"/><text x="9.8403%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (2 samples, 0.02%)</title><rect x="9.5903%" y="1093" width="0.0237%" height="15" fill="rgb(217,61,36)" fg:x="810" fg:w="2"/><text x="9.8403%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.02%)</title><rect x="9.5903%" y="1077" width="0.0237%" height="15" fill="rgb(206,35,45)" fg:x="810" fg:w="2"/><text x="9.8403%" y="1087.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (2 samples, 0.02%)</title><rect x="9.6140%" y="1189" width="0.0237%" height="15" fill="rgb(217,65,33)" fg:x="812" fg:w="2"/><text x="9.8640%" y="1199.50"></text></g><g><title>tokio::runtime::driver::Handle::time (2 samples, 0.02%)</title><rect x="9.6140%" y="1173" width="0.0237%" height="15" fill="rgb(222,158,48)" fg:x="812" fg:w="2"/><text x="9.8640%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="9.6140%" y="1157" width="0.0237%" height="15" fill="rgb(254,2,54)" fg:x="812" fg:w="2"/><text x="9.8640%" y="1167.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (2 samples, 0.02%)</title><rect x="9.6377%" y="1189" width="0.0237%" height="15" fill="rgb(250,143,38)" fg:x="814" fg:w="2"/><text x="9.8877%" y="1199.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (1 samples, 0.01%)</title><rect x="9.6495%" y="1173" width="0.0118%" height="15" fill="rgb(248,25,0)" fg:x="815" fg:w="1"/><text x="9.8995%" y="1183.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (1 samples, 0.01%)</title><rect x="9.6495%" y="1157" width="0.0118%" height="15" fill="rgb(206,152,27)" fg:x="815" fg:w="1"/><text x="9.8995%" y="1167.50"></text></g><g><title>tracing::__macro_support::__is_enabled (2 samples, 0.02%)</title><rect x="9.6614%" y="1189" width="0.0237%" height="15" fill="rgb(240,77,30)" fg:x="816" fg:w="2"/><text x="9.9114%" y="1199.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.01%)</title><rect x="9.6732%" y="1173" width="0.0118%" height="15" fill="rgb(231,5,3)" fg:x="817" fg:w="1"/><text x="9.9232%" y="1183.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::enter (5 samples, 0.06%)</title><rect x="9.6851%" y="1189" width="0.0592%" height="15" fill="rgb(207,226,32)" fg:x="818" fg:w="5"/><text x="9.9351%" y="1199.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::subscriber (3 samples, 0.04%)</title><rect x="9.7087%" y="1173" width="0.0355%" height="15" fill="rgb(222,207,47)" fg:x="820" fg:w="3"/><text x="9.9587%" y="1183.50"></text></g><g><title>tracing_core::event::Event::dispatch (1 samples, 0.01%)</title><rect x="9.7443%" y="1189" width="0.0118%" height="15" fill="rgb(229,115,45)" fg:x="823" fg:w="1"/><text x="9.9943%" y="1199.50"></text></g><g><title>tracing_core::field::Field::name (3 samples, 0.04%)</title><rect x="9.7561%" y="1189" width="0.0355%" height="15" fill="rgb(224,191,6)" fg:x="824" fg:w="3"/><text x="10.0061%" y="1199.50"></text></g><g><title>[anon] (366 samples, 4.33%)</title><rect x="5.4700%" y="1205" width="4.3334%" height="15" fill="rgb(230,227,24)" fg:x="462" fg:w="366"/><text x="5.7200%" y="1215.50">[anon]</text></g><g><title>tracing_core::span::Id::from_u64 (1 samples, 0.01%)</title><rect x="9.7916%" y="1189" width="0.0118%" height="15" fill="rgb(228,80,19)" fg:x="827" fg:w="1"/><text x="10.0416%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (1 samples, 0.01%)</title><rect x="9.7916%" y="1173" width="0.0118%" height="15" fill="rgb(247,229,0)" fg:x="827" fg:w="1"/><text x="10.0416%" y="1183.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_exit (1 samples, 0.01%)</title><rect x="10.1350%" y="1061" width="0.0118%" height="15" fill="rgb(237,194,15)" fg:x="856" fg:w="1"/><text x="10.3850%" y="1071.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (1 samples, 0.01%)</title><rect x="10.1468%" y="1045" width="0.0118%" height="15" fill="rgb(219,203,20)" fg:x="857" fg:w="1"/><text x="10.3968%" y="1055.50"></text></g><g><title>parking_lot_core::parking_lot::park (1 samples, 0.01%)</title><rect x="10.1468%" y="1029" width="0.0118%" height="15" fill="rgb(234,128,8)" fg:x="857" fg:w="1"/><text x="10.3968%" y="1039.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (1 samples, 0.01%)</title><rect x="10.1468%" y="1013" width="0.0118%" height="15" fill="rgb(248,202,8)" fg:x="857" fg:w="1"/><text x="10.3968%" y="1023.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (1 samples, 0.01%)</title><rect x="10.1468%" y="997" width="0.0118%" height="15" fill="rgb(206,104,37)" fg:x="857" fg:w="1"/><text x="10.3968%" y="1007.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (1 samples, 0.01%)</title><rect x="10.1468%" y="981" width="0.0118%" height="15" fill="rgb(223,8,27)" fg:x="857" fg:w="1"/><text x="10.3968%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (1 samples, 0.01%)</title><rect x="10.1468%" y="965" width="0.0118%" height="15" fill="rgb(216,217,28)" fg:x="857" fg:w="1"/><text x="10.3968%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="10.1468%" y="949" width="0.0118%" height="15" fill="rgb(249,199,1)" fg:x="857" fg:w="1"/><text x="10.3968%" y="959.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (1 samples, 0.01%)</title><rect x="10.1823%" y="965" width="0.0118%" height="15" fill="rgb(240,85,17)" fg:x="860" fg:w="1"/><text x="10.4323%" y="975.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (1 samples, 0.01%)</title><rect x="10.1823%" y="949" width="0.0118%" height="15" fill="rgb(206,108,45)" fg:x="860" fg:w="1"/><text x="10.4323%" y="959.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (3 samples, 0.04%)</title><rect x="10.1823%" y="1029" width="0.0355%" height="15" fill="rgb(245,210,41)" fg:x="860" fg:w="3"/><text x="10.4323%" y="1039.50"></text></g><g><title>std::time::Instant::duration_since (3 samples, 0.04%)</title><rect x="10.1823%" y="1013" width="0.0355%" height="15" fill="rgb(206,13,37)" fg:x="860" fg:w="3"/><text x="10.4323%" y="1023.50"></text></g><g><title>std::time::Instant::checked_duration_since (3 samples, 0.04%)</title><rect x="10.1823%" y="997" width="0.0355%" height="15" fill="rgb(250,61,18)" fg:x="860" fg:w="3"/><text x="10.4323%" y="1007.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (3 samples, 0.04%)</title><rect x="10.1823%" y="981" width="0.0355%" height="15" fill="rgb(235,172,48)" fg:x="860" fg:w="3"/><text x="10.4323%" y="991.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (2 samples, 0.02%)</title><rect x="10.1942%" y="965" width="0.0237%" height="15" fill="rgb(249,201,17)" fg:x="861" fg:w="2"/><text x="10.4442%" y="975.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (2 samples, 0.02%)</title><rect x="10.1942%" y="949" width="0.0237%" height="15" fill="rgb(219,208,6)" fg:x="861" fg:w="2"/><text x="10.4442%" y="959.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (2 samples, 0.02%)</title><rect x="10.1942%" y="933" width="0.0237%" height="15" fill="rgb(248,31,23)" fg:x="861" fg:w="2"/><text x="10.4442%" y="943.50"></text></g><g><title>__floattidf (4 samples, 0.05%)</title><rect x="10.2179%" y="997" width="0.0474%" height="15" fill="rgb(245,15,42)" fg:x="863" fg:w="4"/><text x="10.4679%" y="1007.50"></text></g><g><title>compiler_builtins::float::conv::__floattidf (3 samples, 0.04%)</title><rect x="10.2297%" y="981" width="0.0355%" height="15" fill="rgb(222,217,39)" fg:x="864" fg:w="3"/><text x="10.4797%" y="991.50"></text></g><g><title>core::num::&lt;impl i128&gt;::unsigned_abs (2 samples, 0.02%)</title><rect x="10.2415%" y="965" width="0.0237%" height="15" fill="rgb(210,219,27)" fg:x="865" fg:w="2"/><text x="10.4915%" y="975.50"></text></g><g><title>core::num::&lt;impl i128&gt;::wrapping_abs (2 samples, 0.02%)</title><rect x="10.2415%" y="949" width="0.0237%" height="15" fill="rgb(252,166,36)" fg:x="865" fg:w="2"/><text x="10.4915%" y="959.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.01%)</title><rect x="10.2771%" y="981" width="0.0118%" height="15" fill="rgb(245,132,34)" fg:x="868" fg:w="1"/><text x="10.5271%" y="991.50"></text></g><g><title>[libm.so.6] (7 samples, 0.08%)</title><rect x="10.2889%" y="981" width="0.0829%" height="15" fill="rgb(236,54,3)" fg:x="869" fg:w="7"/><text x="10.5389%" y="991.50"></text></g><g><title>__floattidf (2 samples, 0.02%)</title><rect x="10.3718%" y="981" width="0.0237%" height="15" fill="rgb(241,173,43)" fg:x="876" fg:w="2"/><text x="10.6218%" y="991.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (19 samples, 0.22%)</title><rect x="10.2179%" y="1029" width="0.2250%" height="15" fill="rgb(215,190,9)" fg:x="863" fg:w="19"/><text x="10.4679%" y="1039.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (19 samples, 0.22%)</title><rect x="10.2179%" y="1013" width="0.2250%" height="15" fill="rgb(242,101,16)" fg:x="863" fg:w="19"/><text x="10.4679%" y="1023.50"></text></g><g><title>pow (15 samples, 0.18%)</title><rect x="10.2652%" y="997" width="0.1776%" height="15" fill="rgb(223,190,21)" fg:x="867" fg:w="15"/><text x="10.5152%" y="1007.50"></text></g><g><title>pow (4 samples, 0.05%)</title><rect x="10.3955%" y="981" width="0.0474%" height="15" fill="rgb(215,228,25)" fg:x="878" fg:w="4"/><text x="10.6455%" y="991.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_processing_scheduled_tasks (1 samples, 0.01%)</title><rect x="10.4428%" y="1029" width="0.0118%" height="15" fill="rgb(225,36,22)" fg:x="882" fg:w="1"/><text x="10.6928%" y="1039.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1 samples, 0.01%)</title><rect x="10.4428%" y="1013" width="0.0118%" height="15" fill="rgb(251,106,46)" fg:x="882" fg:w="1"/><text x="10.6928%" y="1023.50"></text></g><g><title>clock_gettime (1 samples, 0.01%)</title><rect x="10.4428%" y="997" width="0.0118%" height="15" fill="rgb(208,90,1)" fg:x="882" fg:w="1"/><text x="10.6928%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::maintenance (1 samples, 0.01%)</title><rect x="10.4547%" y="1029" width="0.0118%" height="15" fill="rgb(243,10,4)" fg:x="883" fg:w="1"/><text x="10.7047%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (1 samples, 0.01%)</title><rect x="10.4547%" y="1013" width="0.0118%" height="15" fill="rgb(212,137,27)" fg:x="883" fg:w="1"/><text x="10.7047%" y="1023.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1 samples, 0.01%)</title><rect x="10.4547%" y="997" width="0.0118%" height="15" fill="rgb(231,220,49)" fg:x="883" fg:w="1"/><text x="10.7047%" y="1007.50"></text></g><g><title>clock_gettime (1 samples, 0.01%)</title><rect x="10.4547%" y="981" width="0.0118%" height="15" fill="rgb(237,96,20)" fg:x="883" fg:w="1"/><text x="10.7047%" y="991.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.05%)</title><rect x="10.5612%" y="1013" width="0.0474%" height="15" fill="rgb(239,229,30)" fg:x="892" fg:w="4"/><text x="10.8112%" y="1023.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (4 samples, 0.05%)</title><rect x="10.5612%" y="997" width="0.0474%" height="15" fill="rgb(219,65,33)" fg:x="892" fg:w="4"/><text x="10.8112%" y="1007.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (4 samples, 0.05%)</title><rect x="10.5612%" y="981" width="0.0474%" height="15" fill="rgb(243,134,7)" fg:x="892" fg:w="4"/><text x="10.8112%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.01%)</title><rect x="10.6204%" y="981" width="0.0118%" height="15" fill="rgb(216,177,54)" fg:x="897" fg:w="1"/><text x="10.8704%" y="991.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (15 samples, 0.18%)</title><rect x="10.4665%" y="1029" width="0.1776%" height="15" fill="rgb(211,160,20)" fg:x="884" fg:w="15"/><text x="10.7165%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (3 samples, 0.04%)</title><rect x="10.6086%" y="1013" width="0.0355%" height="15" fill="rgb(239,85,39)" fg:x="896" fg:w="3"/><text x="10.8586%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::unpark_worker_by_id (3 samples, 0.04%)</title><rect x="10.6086%" y="997" width="0.0355%" height="15" fill="rgb(232,125,22)" fg:x="896" fg:w="3"/><text x="10.8586%" y="1007.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.01%)</title><rect x="10.6323%" y="981" width="0.0118%" height="15" fill="rgb(244,57,34)" fg:x="898" fg:w="1"/><text x="10.8823%" y="991.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.01%)</title><rect x="10.6323%" y="965" width="0.0118%" height="15" fill="rgb(214,203,32)" fg:x="898" fg:w="1"/><text x="10.8823%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.01%)</title><rect x="10.6323%" y="949" width="0.0118%" height="15" fill="rgb(207,58,43)" fg:x="898" fg:w="1"/><text x="10.8823%" y="959.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="10.6441%" y="997" width="0.0118%" height="15" fill="rgb(215,193,15)" fg:x="899" fg:w="1"/><text x="10.8941%" y="1007.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.01%)</title><rect x="10.6441%" y="981" width="0.0118%" height="15" fill="rgb(232,15,44)" fg:x="899" fg:w="1"/><text x="10.8941%" y="991.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="10.6441%" y="965" width="0.0118%" height="15" fill="rgb(212,3,48)" fg:x="899" fg:w="1"/><text x="10.8941%" y="975.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="10.6559%" y="965" width="0.0237%" height="15" fill="rgb(218,128,7)" fg:x="900" fg:w="2"/><text x="10.9059%" y="975.50"></text></g><g><title>clock_gettime (2 samples, 0.02%)</title><rect x="10.7151%" y="949" width="0.0237%" height="15" fill="rgb(226,216,39)" fg:x="905" fg:w="2"/><text x="10.9651%" y="959.50"></text></g><g><title>[libc.so.6] (5 samples, 0.06%)</title><rect x="10.9519%" y="933" width="0.0592%" height="15" fill="rgb(243,47,51)" fg:x="925" fg:w="5"/><text x="11.2019%" y="943.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="11.6150%" y="853" width="0.0118%" height="15" fill="rgb(241,183,40)" fg:x="981" fg:w="1"/><text x="11.8650%" y="863.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="11.6150%" y="837" width="0.0118%" height="15" fill="rgb(231,217,32)" fg:x="981" fg:w="1"/><text x="11.8650%" y="847.50"></text></g><g><title>__common_interrupt (1 samples, 0.01%)</title><rect x="11.6150%" y="821" width="0.0118%" height="15" fill="rgb(229,61,38)" fg:x="981" fg:w="1"/><text x="11.8650%" y="831.50"></text></g><g><title>handle_edge_irq (1 samples, 0.01%)</title><rect x="11.6150%" y="805" width="0.0118%" height="15" fill="rgb(225,210,5)" fg:x="981" fg:w="1"/><text x="11.8650%" y="815.50"></text></g><g><title>handle_irq_event (1 samples, 0.01%)</title><rect x="11.6150%" y="789" width="0.0118%" height="15" fill="rgb(231,79,45)" fg:x="981" fg:w="1"/><text x="11.8650%" y="799.50"></text></g><g><title>__put_user_nocheck_4 (20 samples, 0.24%)</title><rect x="11.4018%" y="869" width="0.2368%" height="15" fill="rgb(224,100,7)" fg:x="963" fg:w="20"/><text x="11.6518%" y="879.50"></text></g><g><title>asm_sysvec_call_function_single (1 samples, 0.01%)</title><rect x="11.6268%" y="853" width="0.0118%" height="15" fill="rgb(241,198,18)" fg:x="982" fg:w="1"/><text x="11.8768%" y="863.50"></text></g><g><title>sysvec_call_function_single (1 samples, 0.01%)</title><rect x="11.6268%" y="837" width="0.0118%" height="15" fill="rgb(252,97,53)" fg:x="982" fg:w="1"/><text x="11.8768%" y="847.50"></text></g><g><title>__sysvec_call_function_single (1 samples, 0.01%)</title><rect x="11.6268%" y="821" width="0.0118%" height="15" fill="rgb(220,88,7)" fg:x="982" fg:w="1"/><text x="11.8768%" y="831.50"></text></g><g><title>__flush_smp_call_function_queue (1 samples, 0.01%)</title><rect x="11.6268%" y="805" width="0.0118%" height="15" fill="rgb(213,176,14)" fg:x="982" fg:w="1"/><text x="11.8768%" y="815.50"></text></g><g><title>sched_ttwu_pending (1 samples, 0.01%)</title><rect x="11.6268%" y="789" width="0.0118%" height="15" fill="rgb(246,73,7)" fg:x="982" fg:w="1"/><text x="11.8768%" y="799.50"></text></g><g><title>ttwu_do_activate (1 samples, 0.01%)</title><rect x="11.6268%" y="773" width="0.0118%" height="15" fill="rgb(245,64,36)" fg:x="982" fg:w="1"/><text x="11.8768%" y="783.50"></text></g><g><title>enqueue_task (1 samples, 0.01%)</title><rect x="11.6268%" y="757" width="0.0118%" height="15" fill="rgb(245,80,10)" fg:x="982" fg:w="1"/><text x="11.8768%" y="767.50"></text></g><g><title>psi_task_change (1 samples, 0.01%)</title><rect x="11.6268%" y="741" width="0.0118%" height="15" fill="rgb(232,107,50)" fg:x="982" fg:w="1"/><text x="11.8768%" y="751.50"></text></g><g><title>psi_group_change (1 samples, 0.01%)</title><rect x="11.6268%" y="725" width="0.0118%" height="15" fill="rgb(253,3,0)" fg:x="982" fg:w="1"/><text x="11.8768%" y="735.50"></text></g><g><title>_raw_write_lock_irq (1 samples, 0.01%)</title><rect x="11.6386%" y="869" width="0.0118%" height="15" fill="rgb(212,99,53)" fg:x="983" fg:w="1"/><text x="11.8886%" y="879.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="11.6505%" y="869" width="0.0118%" height="15" fill="rgb(249,111,54)" fg:x="984" fg:w="1"/><text x="11.9005%" y="879.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="11.6505%" y="853" width="0.0118%" height="15" fill="rgb(249,55,30)" fg:x="984" fg:w="1"/><text x="11.9005%" y="863.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="11.6505%" y="837" width="0.0118%" height="15" fill="rgb(237,47,42)" fg:x="984" fg:w="1"/><text x="11.9005%" y="847.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="11.6505%" y="821" width="0.0118%" height="15" fill="rgb(211,20,18)" fg:x="984" fg:w="1"/><text x="11.9005%" y="831.50"></text></g><g><title>clockevents_program_event (1 samples, 0.01%)</title><rect x="11.6505%" y="805" width="0.0118%" height="15" fill="rgb(231,203,46)" fg:x="984" fg:w="1"/><text x="11.9005%" y="815.50"></text></g><g><title>ktime_get (1 samples, 0.01%)</title><rect x="11.6505%" y="789" width="0.0118%" height="15" fill="rgb(237,142,3)" fg:x="984" fg:w="1"/><text x="11.9005%" y="799.50"></text></g><g><title>__wake_up_common (1 samples, 0.01%)</title><rect x="11.6623%" y="725" width="0.0118%" height="15" fill="rgb(241,107,1)" fg:x="985" fg:w="1"/><text x="11.9123%" y="735.50"></text></g><g><title>asm_sysvec_irq_work (2 samples, 0.02%)</title><rect x="11.6623%" y="869" width="0.0237%" height="15" fill="rgb(229,83,13)" fg:x="985" fg:w="2"/><text x="11.9123%" y="879.50"></text></g><g><title>sysvec_irq_work (2 samples, 0.02%)</title><rect x="11.6623%" y="853" width="0.0237%" height="15" fill="rgb(241,91,40)" fg:x="985" fg:w="2"/><text x="11.9123%" y="863.50"></text></g><g><title>__sysvec_irq_work (2 samples, 0.02%)</title><rect x="11.6623%" y="837" width="0.0237%" height="15" fill="rgb(225,3,45)" fg:x="985" fg:w="2"/><text x="11.9123%" y="847.50"></text></g><g><title>irq_work_run (2 samples, 0.02%)</title><rect x="11.6623%" y="821" width="0.0237%" height="15" fill="rgb(244,223,14)" fg:x="985" fg:w="2"/><text x="11.9123%" y="831.50"></text></g><g><title>irq_work_run_list (2 samples, 0.02%)</title><rect x="11.6623%" y="805" width="0.0237%" height="15" fill="rgb(224,124,37)" fg:x="985" fg:w="2"/><text x="11.9123%" y="815.50"></text></g><g><title>irq_work_single (2 samples, 0.02%)</title><rect x="11.6623%" y="789" width="0.0237%" height="15" fill="rgb(251,171,30)" fg:x="985" fg:w="2"/><text x="11.9123%" y="799.50"></text></g><g><title>perf_pending_irq (2 samples, 0.02%)</title><rect x="11.6623%" y="773" width="0.0237%" height="15" fill="rgb(236,46,54)" fg:x="985" fg:w="2"/><text x="11.9123%" y="783.50"></text></g><g><title>perf_event_wakeup (2 samples, 0.02%)</title><rect x="11.6623%" y="757" width="0.0237%" height="15" fill="rgb(245,213,5)" fg:x="985" fg:w="2"/><text x="11.9123%" y="767.50"></text></g><g><title>__wake_up (2 samples, 0.02%)</title><rect x="11.6623%" y="741" width="0.0237%" height="15" fill="rgb(230,144,27)" fg:x="985" fg:w="2"/><text x="11.9123%" y="751.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="11.6742%" y="725" width="0.0118%" height="15" fill="rgb(220,86,6)" fg:x="986" fg:w="1"/><text x="11.9242%" y="735.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="11.8518%" y="853" width="0.0118%" height="15" fill="rgb(240,20,13)" fg:x="1001" fg:w="1"/><text x="12.1018%" y="863.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="11.8518%" y="837" width="0.0118%" height="15" fill="rgb(217,89,34)" fg:x="1001" fg:w="1"/><text x="12.1018%" y="847.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.01%)</title><rect x="11.8518%" y="821" width="0.0118%" height="15" fill="rgb(229,13,5)" fg:x="1001" fg:w="1"/><text x="12.1018%" y="831.50"></text></g><g><title>handle_softirqs (1 samples, 0.01%)</title><rect x="11.8518%" y="805" width="0.0118%" height="15" fill="rgb(244,67,35)" fg:x="1001" fg:w="1"/><text x="12.1018%" y="815.50"></text></g><g><title>net_rx_action (1 samples, 0.01%)</title><rect x="11.8518%" y="789" width="0.0118%" height="15" fill="rgb(221,40,2)" fg:x="1001" fg:w="1"/><text x="12.1018%" y="799.50"></text></g><g><title>__napi_poll (1 samples, 0.01%)</title><rect x="11.8518%" y="773" width="0.0118%" height="15" fill="rgb(237,157,21)" fg:x="1001" fg:w="1"/><text x="12.1018%" y="783.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="11.8518%" y="757" width="0.0118%" height="15" fill="rgb(222,94,11)" fg:x="1001" fg:w="1"/><text x="12.1018%" y="767.50"></text></g><g><title>eventfd_poll (3 samples, 0.04%)</title><rect x="11.8636%" y="853" width="0.0355%" height="15" fill="rgb(249,113,6)" fg:x="1002" fg:w="3"/><text x="12.1136%" y="863.50"></text></g><g><title>fput (1 samples, 0.01%)</title><rect x="11.8991%" y="853" width="0.0118%" height="15" fill="rgb(238,137,36)" fg:x="1005" fg:w="1"/><text x="12.1491%" y="863.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="12.1359%" y="821" width="0.0118%" height="15" fill="rgb(210,102,26)" fg:x="1025" fg:w="1"/><text x="12.3859%" y="831.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="12.1359%" y="805" width="0.0118%" height="15" fill="rgb(218,30,30)" fg:x="1025" fg:w="1"/><text x="12.3859%" y="815.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.01%)</title><rect x="12.1359%" y="789" width="0.0118%" height="15" fill="rgb(214,67,26)" fg:x="1025" fg:w="1"/><text x="12.3859%" y="799.50"></text></g><g><title>handle_softirqs (1 samples, 0.01%)</title><rect x="12.1359%" y="773" width="0.0118%" height="15" fill="rgb(251,9,53)" fg:x="1025" fg:w="1"/><text x="12.3859%" y="783.50"></text></g><g><title>net_rx_action (1 samples, 0.01%)</title><rect x="12.1359%" y="757" width="0.0118%" height="15" fill="rgb(228,204,25)" fg:x="1025" fg:w="1"/><text x="12.3859%" y="767.50"></text></g><g><title>ep_item_poll.isra.0 (40 samples, 0.47%)</title><rect x="11.6860%" y="869" width="0.4736%" height="15" fill="rgb(207,153,8)" fg:x="987" fg:w="40"/><text x="11.9360%" y="879.50"></text></g><g><title>sock_poll (21 samples, 0.25%)</title><rect x="11.9110%" y="853" width="0.2486%" height="15" fill="rgb(242,9,16)" fg:x="1006" fg:w="21"/><text x="12.1610%" y="863.50"></text></g><g><title>tcp_poll (6 samples, 0.07%)</title><rect x="12.0886%" y="837" width="0.0710%" height="15" fill="rgb(217,211,10)" fg:x="1021" fg:w="6"/><text x="12.3386%" y="847.50"></text></g><g><title>tcp_stream_memory_free (1 samples, 0.01%)</title><rect x="12.1478%" y="821" width="0.0118%" height="15" fill="rgb(219,228,52)" fg:x="1026" fg:w="1"/><text x="12.3978%" y="831.50"></text></g><g><title>fput (5 samples, 0.06%)</title><rect x="12.1596%" y="869" width="0.0592%" height="15" fill="rgb(231,92,29)" fg:x="1027" fg:w="5"/><text x="12.4096%" y="879.50"></text></g><g><title>mutex_lock (6 samples, 0.07%)</title><rect x="12.2188%" y="869" width="0.0710%" height="15" fill="rgb(232,8,23)" fg:x="1032" fg:w="6"/><text x="12.4688%" y="879.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="12.4911%" y="805" width="0.0118%" height="15" fill="rgb(216,211,34)" fg:x="1055" fg:w="1"/><text x="12.7411%" y="815.50"></text></g><g><title>perf_event_set_state (1 samples, 0.01%)</title><rect x="12.6450%" y="741" width="0.0118%" height="15" fill="rgb(236,151,0)" fg:x="1068" fg:w="1"/><text x="12.8950%" y="751.50"></text></g><g><title>perf_ibs_del (10 samples, 0.12%)</title><rect x="12.6569%" y="741" width="0.1184%" height="15" fill="rgb(209,168,3)" fg:x="1069" fg:w="10"/><text x="12.9069%" y="751.50"></text></g><g><title>perf_ibs_stop (7 samples, 0.08%)</title><rect x="12.6924%" y="725" width="0.0829%" height="15" fill="rgb(208,129,28)" fg:x="1072" fg:w="7"/><text x="12.9424%" y="735.50"></text></g><g><title>native_read_msr (4 samples, 0.05%)</title><rect x="12.7279%" y="709" width="0.0474%" height="15" fill="rgb(229,78,22)" fg:x="1075" fg:w="4"/><text x="12.9779%" y="719.50"></text></g><g><title>__pmu_ctx_sched_out (22 samples, 0.26%)</title><rect x="12.5385%" y="789" width="0.2605%" height="15" fill="rgb(228,187,13)" fg:x="1059" fg:w="22"/><text x="12.7885%" y="799.50"></text></g><g><title>group_sched_out (18 samples, 0.21%)</title><rect x="12.5858%" y="773" width="0.2131%" height="15" fill="rgb(240,119,24)" fg:x="1063" fg:w="18"/><text x="12.8358%" y="783.50"></text></g><g><title>event_sched_out (16 samples, 0.19%)</title><rect x="12.6095%" y="757" width="0.1894%" height="15" fill="rgb(209,194,42)" fg:x="1065" fg:w="16"/><text x="12.8595%" y="767.50"></text></g><g><title>perf_swevent_del (2 samples, 0.02%)</title><rect x="12.7753%" y="741" width="0.0237%" height="15" fill="rgb(247,200,46)" fg:x="1079" fg:w="2"/><text x="13.0253%" y="751.50"></text></g><g><title>ctx_sched_out (27 samples, 0.32%)</title><rect x="12.5030%" y="805" width="0.3197%" height="15" fill="rgb(218,76,16)" fg:x="1056" fg:w="27"/><text x="12.7530%" y="815.50"></text></g><g><title>local_clock (2 samples, 0.02%)</title><rect x="12.7990%" y="789" width="0.0237%" height="15" fill="rgb(225,21,48)" fg:x="1081" fg:w="2"/><text x="13.0490%" y="799.50"></text></g><g><title>local_clock_noinstr (1 samples, 0.01%)</title><rect x="12.8108%" y="773" width="0.0118%" height="15" fill="rgb(239,223,50)" fg:x="1082" fg:w="1"/><text x="13.0608%" y="783.50"></text></g><g><title>native_sched_clock (1 samples, 0.01%)</title><rect x="12.8108%" y="757" width="0.0118%" height="15" fill="rgb(244,45,21)" fg:x="1082" fg:w="1"/><text x="13.0608%" y="767.50"></text></g><g><title>perf_ctx_disable (7 samples, 0.08%)</title><rect x="12.8226%" y="805" width="0.0829%" height="15" fill="rgb(232,33,43)" fg:x="1083" fg:w="7"/><text x="13.0726%" y="815.50"></text></g><g><title>perf_pmu_nop_void (1 samples, 0.01%)</title><rect x="12.8937%" y="789" width="0.0118%" height="15" fill="rgb(209,8,3)" fg:x="1089" fg:w="1"/><text x="13.1437%" y="799.50"></text></g><g><title>__perf_event_task_sched_out (39 samples, 0.46%)</title><rect x="12.4674%" y="821" width="0.4618%" height="15" fill="rgb(214,25,53)" fg:x="1053" fg:w="39"/><text x="12.7174%" y="831.50"></text></g><g><title>perf_ctx_sched_task_cb (2 samples, 0.02%)</title><rect x="12.9055%" y="805" width="0.0237%" height="15" fill="rgb(254,186,54)" fg:x="1090" fg:w="2"/><text x="13.1555%" y="815.50"></text></g><g><title>__calc_delta.constprop.0 (4 samples, 0.05%)</title><rect x="13.1897%" y="789" width="0.0474%" height="15" fill="rgb(208,174,49)" fg:x="1114" fg:w="4"/><text x="13.4397%" y="799.50"></text></g><g><title>avg_vruntime (1 samples, 0.01%)</title><rect x="13.2370%" y="789" width="0.0118%" height="15" fill="rgb(233,191,51)" fg:x="1118" fg:w="1"/><text x="13.4870%" y="799.50"></text></g><g><title>reweight_entity (1 samples, 0.01%)</title><rect x="13.2489%" y="789" width="0.0118%" height="15" fill="rgb(222,134,10)" fg:x="1119" fg:w="1"/><text x="13.4989%" y="799.50"></text></g><g><title>update_cfs_group (2 samples, 0.02%)</title><rect x="13.2607%" y="789" width="0.0237%" height="15" fill="rgb(230,226,20)" fg:x="1120" fg:w="2"/><text x="13.5107%" y="799.50"></text></g><g><title>__calc_delta.constprop.0 (3 samples, 0.04%)</title><rect x="13.3910%" y="773" width="0.0355%" height="15" fill="rgb(251,111,25)" fg:x="1131" fg:w="3"/><text x="13.6410%" y="783.50"></text></g><g><title>__cgroup_account_cputime (5 samples, 0.06%)</title><rect x="13.4265%" y="773" width="0.0592%" height="15" fill="rgb(224,40,46)" fg:x="1134" fg:w="5"/><text x="13.6765%" y="783.50"></text></g><g><title>cpuacct_charge (3 samples, 0.04%)</title><rect x="13.4857%" y="773" width="0.0355%" height="15" fill="rgb(236,108,47)" fg:x="1139" fg:w="3"/><text x="13.7357%" y="783.50"></text></g><g><title>update_curr_se (2 samples, 0.02%)</title><rect x="13.5212%" y="773" width="0.0237%" height="15" fill="rgb(234,93,0)" fg:x="1142" fg:w="2"/><text x="13.7712%" y="783.50"></text></g><g><title>update_curr (28 samples, 0.33%)</title><rect x="13.2844%" y="789" width="0.3315%" height="15" fill="rgb(224,213,32)" fg:x="1122" fg:w="28"/><text x="13.5344%" y="799.50"></text></g><g><title>update_min_vruntime (6 samples, 0.07%)</title><rect x="13.5449%" y="773" width="0.0710%" height="15" fill="rgb(251,11,48)" fg:x="1144" fg:w="6"/><text x="13.7949%" y="783.50"></text></g><g><title>__update_load_avg_cfs_rq (3 samples, 0.04%)</title><rect x="13.7343%" y="773" width="0.0355%" height="15" fill="rgb(236,173,5)" fg:x="1160" fg:w="3"/><text x="13.9843%" y="783.50"></text></g><g><title>__update_load_avg_se (3 samples, 0.04%)</title><rect x="13.7698%" y="773" width="0.0355%" height="15" fill="rgb(230,95,12)" fg:x="1163" fg:w="3"/><text x="14.0198%" y="783.50"></text></g><g><title>dequeue_entity (65 samples, 0.77%)</title><rect x="13.0476%" y="805" width="0.7696%" height="15" fill="rgb(232,209,1)" fg:x="1102" fg:w="65"/><text x="13.2976%" y="815.50"></text></g><g><title>update_load_avg (17 samples, 0.20%)</title><rect x="13.6159%" y="789" width="0.2013%" height="15" fill="rgb(232,6,1)" fg:x="1150" fg:w="17"/><text x="13.8659%" y="799.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.01%)</title><rect x="13.8054%" y="773" width="0.0118%" height="15" fill="rgb(210,224,50)" fg:x="1166" fg:w="1"/><text x="14.0554%" y="783.50"></text></g><g><title>set_next_buddy (1 samples, 0.01%)</title><rect x="13.8172%" y="805" width="0.0118%" height="15" fill="rgb(228,127,35)" fg:x="1167" fg:w="1"/><text x="14.0672%" y="815.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="13.8290%" y="805" width="0.0118%" height="15" fill="rgb(245,102,45)" fg:x="1168" fg:w="1"/><text x="14.0790%" y="815.50"></text></g><g><title>dequeue_task_fair (80 samples, 0.95%)</title><rect x="12.9292%" y="821" width="0.9472%" height="15" fill="rgb(214,1,49)" fg:x="1092" fg:w="80"/><text x="13.1792%" y="831.50"></text></g><g><title>update_load_avg (3 samples, 0.04%)</title><rect x="13.8409%" y="805" width="0.0355%" height="15" fill="rgb(226,163,40)" fg:x="1169" fg:w="3"/><text x="14.0909%" y="815.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.01%)</title><rect x="13.8646%" y="789" width="0.0118%" height="15" fill="rgb(239,212,28)" fg:x="1171" fg:w="1"/><text x="14.1146%" y="799.50"></text></g><g><title>__rcu_read_unlock (2 samples, 0.02%)</title><rect x="14.1605%" y="789" width="0.0237%" height="15" fill="rgb(220,20,13)" fg:x="1196" fg:w="2"/><text x="14.4105%" y="799.50"></text></g><g><title>_raw_spin_unlock (2 samples, 0.02%)</title><rect x="14.1842%" y="789" width="0.0237%" height="15" fill="rgb(210,164,35)" fg:x="1198" fg:w="2"/><text x="14.4342%" y="799.50"></text></g><g><title>__rcu_read_unlock (4 samples, 0.05%)</title><rect x="15.2025%" y="709" width="0.0474%" height="15" fill="rgb(248,109,41)" fg:x="1284" fg:w="4"/><text x="15.4525%" y="719.50"></text></g><g><title>cyc2ns_read_begin (1 samples, 0.01%)</title><rect x="16.9311%" y="677" width="0.0118%" height="15" fill="rgb(238,23,50)" fg:x="1430" fg:w="1"/><text x="17.1811%" y="687.50"></text></g><g><title>arch_perf_update_userpage (34 samples, 0.40%)</title><rect x="16.5522%" y="693" width="0.4026%" height="15" fill="rgb(211,48,49)" fg:x="1398" fg:w="34"/><text x="16.8022%" y="703.50"></text></g><g><title>sched_clock_stable (1 samples, 0.01%)</title><rect x="16.9429%" y="677" width="0.0118%" height="15" fill="rgb(223,36,21)" fg:x="1431" fg:w="1"/><text x="17.1929%" y="687.50"></text></g><g><title>perf_event_idx_default (3 samples, 0.04%)</title><rect x="16.9548%" y="693" width="0.0355%" height="15" fill="rgb(207,123,46)" fg:x="1432" fg:w="3"/><text x="17.2048%" y="703.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="16.9903%" y="693" width="0.0118%" height="15" fill="rgb(240,218,32)" fg:x="1435" fg:w="1"/><text x="17.2403%" y="703.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="16.9903%" y="677" width="0.0118%" height="15" fill="rgb(252,5,43)" fg:x="1435" fg:w="1"/><text x="17.2403%" y="687.50"></text></g><g><title>perf_event_update_userpage (149 samples, 1.76%)</title><rect x="15.2498%" y="709" width="1.7641%" height="15" fill="rgb(252,84,19)" fg:x="1288" fg:w="149"/><text x="15.4998%" y="719.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="17.0021%" y="693" width="0.0118%" height="15" fill="rgb(243,152,39)" fg:x="1436" fg:w="1"/><text x="17.2521%" y="703.50"></text></g><g><title>perf_ibs_add (170 samples, 2.01%)</title><rect x="15.0367%" y="725" width="2.0128%" height="15" fill="rgb(234,160,15)" fg:x="1270" fg:w="170"/><text x="15.2867%" y="735.50">p..</text></g><g><title>srso_alias_return_thunk (3 samples, 0.04%)</title><rect x="17.0140%" y="709" width="0.0355%" height="15" fill="rgb(237,34,20)" fg:x="1437" fg:w="3"/><text x="17.2640%" y="719.50"></text></g><g><title>srso_alias_safe_ret (3 samples, 0.04%)</title><rect x="17.0140%" y="693" width="0.0355%" height="15" fill="rgb(229,97,13)" fg:x="1437" fg:w="3"/><text x="17.2640%" y="703.50"></text></g><g><title>event_sched_in (206 samples, 2.44%)</title><rect x="14.6697%" y="741" width="2.4390%" height="15" fill="rgb(234,71,50)" fg:x="1239" fg:w="206"/><text x="14.9197%" y="751.50">ev..</text></g><g><title>srso_alias_return_thunk (5 samples, 0.06%)</title><rect x="17.0495%" y="725" width="0.0592%" height="15" fill="rgb(253,155,4)" fg:x="1440" fg:w="5"/><text x="17.2995%" y="735.50"></text></g><g><title>srso_alias_safe_ret (5 samples, 0.06%)</title><rect x="17.0495%" y="709" width="0.0592%" height="15" fill="rgb(222,185,37)" fg:x="1440" fg:w="5"/><text x="17.2995%" y="719.50"></text></g><g><title>merge_sched_in (234 samples, 2.77%)</title><rect x="14.3737%" y="757" width="2.7705%" height="15" fill="rgb(251,177,13)" fg:x="1214" fg:w="234"/><text x="14.6237%" y="767.50">me..</text></g><g><title>perf_pmu_nop_int (3 samples, 0.04%)</title><rect x="17.1087%" y="741" width="0.0355%" height="15" fill="rgb(250,179,40)" fg:x="1445" fg:w="3"/><text x="17.3587%" y="751.50"></text></g><g><title>rb_next (21 samples, 0.25%)</title><rect x="17.5112%" y="741" width="0.2486%" height="15" fill="rgb(242,44,2)" fg:x="1479" fg:w="21"/><text x="17.7612%" y="751.50"></text></g><g><title>perf_event_groups_next (54 samples, 0.64%)</title><rect x="17.1442%" y="757" width="0.6394%" height="15" fill="rgb(216,177,13)" fg:x="1448" fg:w="54"/><text x="17.3942%" y="767.50"></text></g><g><title>srso_alias_return_thunk (2 samples, 0.02%)</title><rect x="17.7599%" y="741" width="0.0237%" height="15" fill="rgb(216,106,43)" fg:x="1500" fg:w="2"/><text x="18.0099%" y="751.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="17.7717%" y="725" width="0.0118%" height="15" fill="rgb(216,183,2)" fg:x="1501" fg:w="1"/><text x="18.0217%" y="735.50"></text></g><g><title>ctx_groups_sched_in (311 samples, 3.68%)</title><rect x="14.2079%" y="789" width="3.6822%" height="15" fill="rgb(249,75,3)" fg:x="1200" fg:w="311"/><text x="14.4579%" y="799.50">ctx_..</text></g><g><title>visit_groups_merge.constprop.0.isra.0 (309 samples, 3.66%)</title><rect x="14.2316%" y="773" width="3.6585%" height="15" fill="rgb(219,67,39)" fg:x="1202" fg:w="309"/><text x="14.4816%" y="783.50">visi..</text></g><g><title>srso_alias_return_thunk (9 samples, 0.11%)</title><rect x="17.7836%" y="757" width="0.1066%" height="15" fill="rgb(253,228,2)" fg:x="1502" fg:w="9"/><text x="18.0336%" y="767.50"></text></g><g><title>srso_alias_safe_ret (9 samples, 0.11%)</title><rect x="17.7836%" y="741" width="0.1066%" height="15" fill="rgb(235,138,27)" fg:x="1502" fg:w="9"/><text x="18.0336%" y="751.50"></text></g><g><title>perf_ctx_enable (19 samples, 0.22%)</title><rect x="17.8901%" y="789" width="0.2250%" height="15" fill="rgb(236,97,51)" fg:x="1511" fg:w="19"/><text x="18.1401%" y="799.50"></text></g><g><title>perf_pmu_nop_void (4 samples, 0.05%)</title><rect x="18.0677%" y="773" width="0.0474%" height="15" fill="rgb(240,80,30)" fg:x="1526" fg:w="4"/><text x="18.3177%" y="783.50"></text></g><g><title>__perf_event_task_sched_in (358 samples, 4.24%)</title><rect x="14.0066%" y="805" width="4.2387%" height="15" fill="rgb(230,178,19)" fg:x="1183" fg:w="358"/><text x="14.2566%" y="815.50">__per..</text></g><g><title>perf_ctx_sched_task_cb (11 samples, 0.13%)</title><rect x="18.1151%" y="789" width="0.1302%" height="15" fill="rgb(210,190,27)" fg:x="1530" fg:w="11"/><text x="18.3651%" y="799.50"></text></g><g><title>__napi_alloc_skb (1 samples, 0.01%)</title><rect x="18.2453%" y="693" width="0.0118%" height="15" fill="rgb(222,107,31)" fg:x="1541" fg:w="1"/><text x="18.4953%" y="703.50"></text></g><g><title>__napi_build_skb (1 samples, 0.01%)</title><rect x="18.2453%" y="677" width="0.0118%" height="15" fill="rgb(216,127,34)" fg:x="1541" fg:w="1"/><text x="18.4953%" y="687.50"></text></g><g><title>__build_skb_around (1 samples, 0.01%)</title><rect x="18.2453%" y="661" width="0.0118%" height="15" fill="rgb(234,116,52)" fg:x="1541" fg:w="1"/><text x="18.4953%" y="671.50"></text></g><g><title>__sk_dst_check (1 samples, 0.01%)</title><rect x="18.2690%" y="485" width="0.0118%" height="15" fill="rgb(222,124,15)" fg:x="1543" fg:w="1"/><text x="18.5190%" y="495.50"></text></g><g><title>[[ip_tables]] (1 samples, 0.01%)</title><rect x="18.2808%" y="437" width="0.0118%" height="15" fill="rgb(231,179,28)" fg:x="1544" fg:w="1"/><text x="18.5308%" y="447.50"></text></g><g><title>[[nf_conntrack]] (1 samples, 0.01%)</title><rect x="18.2927%" y="437" width="0.0118%" height="15" fill="rgb(226,93,45)" fg:x="1545" fg:w="1"/><text x="18.5427%" y="447.50"></text></g><g><title>__tcp_transmit_skb (4 samples, 0.05%)</title><rect x="18.2690%" y="517" width="0.0474%" height="15" fill="rgb(215,8,51)" fg:x="1543" fg:w="4"/><text x="18.5190%" y="527.50"></text></g><g><title>__ip_queue_xmit (4 samples, 0.05%)</title><rect x="18.2690%" y="501" width="0.0474%" height="15" fill="rgb(223,106,5)" fg:x="1543" fg:w="4"/><text x="18.5190%" y="511.50"></text></g><g><title>ip_local_out (3 samples, 0.04%)</title><rect x="18.2808%" y="485" width="0.0355%" height="15" fill="rgb(250,191,5)" fg:x="1544" fg:w="3"/><text x="18.5308%" y="495.50"></text></g><g><title>__ip_local_out (3 samples, 0.04%)</title><rect x="18.2808%" y="469" width="0.0355%" height="15" fill="rgb(242,132,44)" fg:x="1544" fg:w="3"/><text x="18.5308%" y="479.50"></text></g><g><title>nf_hook_slow (3 samples, 0.04%)</title><rect x="18.2808%" y="453" width="0.0355%" height="15" fill="rgb(251,152,29)" fg:x="1544" fg:w="3"/><text x="18.5308%" y="463.50"></text></g><g><title>[[nf_nat]] (1 samples, 0.01%)</title><rect x="18.3045%" y="437" width="0.0118%" height="15" fill="rgb(218,179,5)" fg:x="1546" fg:w="1"/><text x="18.5545%" y="447.50"></text></g><g><title>[[nf_nat]] (1 samples, 0.01%)</title><rect x="18.3045%" y="421" width="0.0118%" height="15" fill="rgb(227,67,19)" fg:x="1546" fg:w="1"/><text x="18.5545%" y="431.50"></text></g><g><title>__xfrm_decode_session (1 samples, 0.01%)</title><rect x="18.3045%" y="405" width="0.0118%" height="15" fill="rgb(233,119,31)" fg:x="1546" fg:w="1"/><text x="18.5545%" y="415.50"></text></g><g><title>__skb_flow_dissect (1 samples, 0.01%)</title><rect x="18.3045%" y="389" width="0.0118%" height="15" fill="rgb(241,120,22)" fg:x="1546" fg:w="1"/><text x="18.5545%" y="399.50"></text></g><g><title>ip_local_deliver (6 samples, 0.07%)</title><rect x="18.2572%" y="613" width="0.0710%" height="15" fill="rgb(224,102,30)" fg:x="1542" fg:w="6"/><text x="18.5072%" y="623.50"></text></g><g><title>ip_local_deliver_finish (6 samples, 0.07%)</title><rect x="18.2572%" y="597" width="0.0710%" height="15" fill="rgb(210,164,37)" fg:x="1542" fg:w="6"/><text x="18.5072%" y="607.50"></text></g><g><title>ip_protocol_deliver_rcu (6 samples, 0.07%)</title><rect x="18.2572%" y="581" width="0.0710%" height="15" fill="rgb(226,191,16)" fg:x="1542" fg:w="6"/><text x="18.5072%" y="591.50"></text></g><g><title>tcp_v4_rcv (6 samples, 0.07%)</title><rect x="18.2572%" y="565" width="0.0710%" height="15" fill="rgb(214,40,45)" fg:x="1542" fg:w="6"/><text x="18.5072%" y="575.50"></text></g><g><title>tcp_v4_do_rcv (6 samples, 0.07%)</title><rect x="18.2572%" y="549" width="0.0710%" height="15" fill="rgb(244,29,26)" fg:x="1542" fg:w="6"/><text x="18.5072%" y="559.50"></text></g><g><title>tcp_rcv_established (6 samples, 0.07%)</title><rect x="18.2572%" y="533" width="0.0710%" height="15" fill="rgb(216,16,5)" fg:x="1542" fg:w="6"/><text x="18.5072%" y="543.50"></text></g><g><title>tcp_mstamp_refresh (1 samples, 0.01%)</title><rect x="18.3164%" y="517" width="0.0118%" height="15" fill="rgb(249,76,35)" fg:x="1547" fg:w="1"/><text x="18.5664%" y="527.50"></text></g><g><title>ktime_get (1 samples, 0.01%)</title><rect x="18.3164%" y="501" width="0.0118%" height="15" fill="rgb(207,11,44)" fg:x="1547" fg:w="1"/><text x="18.5664%" y="511.50"></text></g><g><title>asm_common_interrupt (8 samples, 0.09%)</title><rect x="18.2453%" y="805" width="0.0947%" height="15" fill="rgb(228,190,49)" fg:x="1541" fg:w="8"/><text x="18.4953%" y="815.50"></text></g><g><title>common_interrupt (8 samples, 0.09%)</title><rect x="18.2453%" y="789" width="0.0947%" height="15" fill="rgb(214,173,12)" fg:x="1541" fg:w="8"/><text x="18.4953%" y="799.50"></text></g><g><title>__irq_exit_rcu (8 samples, 0.09%)</title><rect x="18.2453%" y="773" width="0.0947%" height="15" fill="rgb(218,26,35)" fg:x="1541" fg:w="8"/><text x="18.4953%" y="783.50"></text></g><g><title>handle_softirqs (8 samples, 0.09%)</title><rect x="18.2453%" y="757" width="0.0947%" height="15" fill="rgb(220,200,19)" fg:x="1541" fg:w="8"/><text x="18.4953%" y="767.50"></text></g><g><title>net_rx_action (8 samples, 0.09%)</title><rect x="18.2453%" y="741" width="0.0947%" height="15" fill="rgb(239,95,49)" fg:x="1541" fg:w="8"/><text x="18.4953%" y="751.50"></text></g><g><title>__napi_poll (8 samples, 0.09%)</title><rect x="18.2453%" y="725" width="0.0947%" height="15" fill="rgb(235,85,53)" fg:x="1541" fg:w="8"/><text x="18.4953%" y="735.50"></text></g><g><title>[[r8169]] (8 samples, 0.09%)</title><rect x="18.2453%" y="709" width="0.0947%" height="15" fill="rgb(233,133,31)" fg:x="1541" fg:w="8"/><text x="18.4953%" y="719.50"></text></g><g><title>napi_complete_done (7 samples, 0.08%)</title><rect x="18.2572%" y="693" width="0.0829%" height="15" fill="rgb(218,25,20)" fg:x="1542" fg:w="7"/><text x="18.5072%" y="703.50"></text></g><g><title>netif_receive_skb_list_internal (7 samples, 0.08%)</title><rect x="18.2572%" y="677" width="0.0829%" height="15" fill="rgb(252,210,38)" fg:x="1542" fg:w="7"/><text x="18.5072%" y="687.50"></text></g><g><title>__netif_receive_skb_list_core (7 samples, 0.08%)</title><rect x="18.2572%" y="661" width="0.0829%" height="15" fill="rgb(242,134,21)" fg:x="1542" fg:w="7"/><text x="18.5072%" y="671.50"></text></g><g><title>ip_list_rcv (7 samples, 0.08%)</title><rect x="18.2572%" y="645" width="0.0829%" height="15" fill="rgb(213,28,48)" fg:x="1542" fg:w="7"/><text x="18.5072%" y="655.50"></text></g><g><title>ip_sublist_rcv (7 samples, 0.08%)</title><rect x="18.2572%" y="629" width="0.0829%" height="15" fill="rgb(250,196,2)" fg:x="1542" fg:w="7"/><text x="18.5072%" y="639.50"></text></g><g><title>ip_rcv_finish_core.isra.0 (1 samples, 0.01%)</title><rect x="18.3282%" y="613" width="0.0118%" height="15" fill="rgb(227,5,17)" fg:x="1548" fg:w="1"/><text x="18.5782%" y="623.50"></text></g><g><title>ip_route_input_noref (1 samples, 0.01%)</title><rect x="18.3282%" y="597" width="0.0118%" height="15" fill="rgb(221,226,24)" fg:x="1548" fg:w="1"/><text x="18.5782%" y="607.50"></text></g><g><title>ip_route_input_slow (1 samples, 0.01%)</title><rect x="18.3282%" y="581" width="0.0118%" height="15" fill="rgb(211,5,48)" fg:x="1548" fg:w="1"/><text x="18.5782%" y="591.50"></text></g><g><title>fib_validate_source (1 samples, 0.01%)</title><rect x="18.3282%" y="565" width="0.0118%" height="15" fill="rgb(219,150,6)" fg:x="1548" fg:w="1"/><text x="18.5782%" y="575.50"></text></g><g><title>__fib_validate_source (1 samples, 0.01%)</title><rect x="18.3282%" y="549" width="0.0118%" height="15" fill="rgb(251,46,16)" fg:x="1548" fg:w="1"/><text x="18.5782%" y="559.50"></text></g><g><title>error_entry (1 samples, 0.01%)</title><rect x="18.3519%" y="789" width="0.0118%" height="15" fill="rgb(220,204,40)" fg:x="1550" fg:w="1"/><text x="18.6019%" y="799.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="18.3637%" y="741" width="0.0237%" height="15" fill="rgb(211,85,2)" fg:x="1551" fg:w="2"/><text x="18.6137%" y="751.50"></text></g><g><title>__napi_poll (2 samples, 0.02%)</title><rect x="18.3637%" y="725" width="0.0237%" height="15" fill="rgb(229,17,7)" fg:x="1551" fg:w="2"/><text x="18.6137%" y="735.50"></text></g><g><title>[[r8169]] (2 samples, 0.02%)</title><rect x="18.3637%" y="709" width="0.0237%" height="15" fill="rgb(239,72,28)" fg:x="1551" fg:w="2"/><text x="18.6137%" y="719.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="18.3756%" y="693" width="0.0118%" height="15" fill="rgb(230,47,54)" fg:x="1552" fg:w="1"/><text x="18.6256%" y="703.50"></text></g><g><title>__irq_exit_rcu (4 samples, 0.05%)</title><rect x="18.3637%" y="773" width="0.0474%" height="15" fill="rgb(214,50,8)" fg:x="1551" fg:w="4"/><text x="18.6137%" y="783.50"></text></g><g><title>handle_softirqs (4 samples, 0.05%)</title><rect x="18.3637%" y="757" width="0.0474%" height="15" fill="rgb(216,198,43)" fg:x="1551" fg:w="4"/><text x="18.6137%" y="767.50"></text></g><g><title>run_rebalance_domains (2 samples, 0.02%)</title><rect x="18.3874%" y="741" width="0.0237%" height="15" fill="rgb(234,20,35)" fg:x="1553" fg:w="2"/><text x="18.6374%" y="751.50"></text></g><g><title>update_blocked_averages (2 samples, 0.02%)</title><rect x="18.3874%" y="725" width="0.0237%" height="15" fill="rgb(254,45,19)" fg:x="1553" fg:w="2"/><text x="18.6374%" y="735.50"></text></g><g><title>update_rt_rq_load_avg (1 samples, 0.01%)</title><rect x="18.3992%" y="709" width="0.0118%" height="15" fill="rgb(219,14,44)" fg:x="1554" fg:w="1"/><text x="18.6492%" y="719.50"></text></g><g><title>perf_event_task_tick (1 samples, 0.01%)</title><rect x="18.4111%" y="677" width="0.0118%" height="15" fill="rgb(217,220,26)" fg:x="1555" fg:w="1"/><text x="18.6611%" y="687.50"></text></g><g><title>perf_adjust_freq_unthr_context (1 samples, 0.01%)</title><rect x="18.4111%" y="661" width="0.0118%" height="15" fill="rgb(213,158,28)" fg:x="1555" fg:w="1"/><text x="18.6611%" y="671.50"></text></g><g><title>tick_nohz_handler (2 samples, 0.02%)</title><rect x="18.4111%" y="725" width="0.0237%" height="15" fill="rgb(252,51,52)" fg:x="1555" fg:w="2"/><text x="18.6611%" y="735.50"></text></g><g><title>update_process_times (2 samples, 0.02%)</title><rect x="18.4111%" y="709" width="0.0237%" height="15" fill="rgb(246,89,16)" fg:x="1555" fg:w="2"/><text x="18.6611%" y="719.50"></text></g><g><title>scheduler_tick (2 samples, 0.02%)</title><rect x="18.4111%" y="693" width="0.0237%" height="15" fill="rgb(216,158,49)" fg:x="1555" fg:w="2"/><text x="18.6611%" y="703.50"></text></g><g><title>task_tick_fair (1 samples, 0.01%)</title><rect x="18.4229%" y="677" width="0.0118%" height="15" fill="rgb(236,107,19)" fg:x="1556" fg:w="1"/><text x="18.6729%" y="687.50"></text></g><g><title>update_load_avg (1 samples, 0.01%)</title><rect x="18.4229%" y="661" width="0.0118%" height="15" fill="rgb(228,185,30)" fg:x="1556" fg:w="1"/><text x="18.6729%" y="671.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (9 samples, 0.11%)</title><rect x="18.3400%" y="805" width="0.1066%" height="15" fill="rgb(246,134,8)" fg:x="1549" fg:w="9"/><text x="18.5900%" y="815.50"></text></g><g><title>sysvec_apic_timer_interrupt (7 samples, 0.08%)</title><rect x="18.3637%" y="789" width="0.0829%" height="15" fill="rgb(214,143,50)" fg:x="1551" fg:w="7"/><text x="18.6137%" y="799.50"></text></g><g><title>__sysvec_apic_timer_interrupt (3 samples, 0.04%)</title><rect x="18.4111%" y="773" width="0.0355%" height="15" fill="rgb(228,75,8)" fg:x="1555" fg:w="3"/><text x="18.6611%" y="783.50"></text></g><g><title>hrtimer_interrupt (3 samples, 0.04%)</title><rect x="18.4111%" y="757" width="0.0355%" height="15" fill="rgb(207,175,4)" fg:x="1555" fg:w="3"/><text x="18.6611%" y="767.50"></text></g><g><title>__hrtimer_run_queues (3 samples, 0.04%)</title><rect x="18.4111%" y="741" width="0.0355%" height="15" fill="rgb(205,108,24)" fg:x="1555" fg:w="3"/><text x="18.6611%" y="751.50"></text></g><g><title>timerfd_tmrproc (1 samples, 0.01%)</title><rect x="18.4348%" y="725" width="0.0118%" height="15" fill="rgb(244,120,49)" fg:x="1557" fg:w="1"/><text x="18.6848%" y="735.50"></text></g><g><title>__wake_up_common (1 samples, 0.01%)</title><rect x="18.4348%" y="709" width="0.0118%" height="15" fill="rgb(223,47,38)" fg:x="1557" fg:w="1"/><text x="18.6848%" y="719.50"></text></g><g><title>ep_poll_callback (1 samples, 0.01%)</title><rect x="18.4348%" y="693" width="0.0118%" height="15" fill="rgb(229,179,11)" fg:x="1557" fg:w="1"/><text x="18.6848%" y="703.50"></text></g><g><title>__wake_up (1 samples, 0.01%)</title><rect x="18.4348%" y="677" width="0.0118%" height="15" fill="rgb(231,122,1)" fg:x="1557" fg:w="1"/><text x="18.6848%" y="687.50"></text></g><g><title>__wake_up_common (1 samples, 0.01%)</title><rect x="18.4348%" y="661" width="0.0118%" height="15" fill="rgb(245,119,9)" fg:x="1557" fg:w="1"/><text x="18.6848%" y="671.50"></text></g><g><title>ep_autoremove_wake_function (1 samples, 0.01%)</title><rect x="18.4348%" y="645" width="0.0118%" height="15" fill="rgb(241,163,25)" fg:x="1557" fg:w="1"/><text x="18.6848%" y="655.50"></text></g><g><title>try_to_wake_up (1 samples, 0.01%)</title><rect x="18.4348%" y="629" width="0.0118%" height="15" fill="rgb(217,214,3)" fg:x="1557" fg:w="1"/><text x="18.6848%" y="639.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="18.4348%" y="613" width="0.0118%" height="15" fill="rgb(240,86,28)" fg:x="1557" fg:w="1"/><text x="18.6848%" y="623.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="18.4584%" y="725" width="0.0118%" height="15" fill="rgb(215,47,9)" fg:x="1559" fg:w="1"/><text x="18.7084%" y="735.50"></text></g><g><title>enqueue_entity (1 samples, 0.01%)</title><rect x="18.4703%" y="677" width="0.0118%" height="15" fill="rgb(252,25,45)" fg:x="1560" fg:w="1"/><text x="18.7203%" y="687.50"></text></g><g><title>place_entity (1 samples, 0.01%)</title><rect x="18.4703%" y="661" width="0.0118%" height="15" fill="rgb(251,164,9)" fg:x="1560" fg:w="1"/><text x="18.7203%" y="671.50"></text></g><g><title>avg_vruntime (1 samples, 0.01%)</title><rect x="18.4703%" y="645" width="0.0118%" height="15" fill="rgb(233,194,0)" fg:x="1560" fg:w="1"/><text x="18.7203%" y="655.50"></text></g><g><title>reweight_entity (1 samples, 0.01%)</title><rect x="18.4821%" y="677" width="0.0118%" height="15" fill="rgb(249,111,24)" fg:x="1561" fg:w="1"/><text x="18.7321%" y="687.50"></text></g><g><title>avg_vruntime (1 samples, 0.01%)</title><rect x="18.4821%" y="661" width="0.0118%" height="15" fill="rgb(250,223,3)" fg:x="1561" fg:w="1"/><text x="18.7321%" y="671.50"></text></g><g><title>ttwu_do_activate (4 samples, 0.05%)</title><rect x="18.4703%" y="725" width="0.0474%" height="15" fill="rgb(236,178,37)" fg:x="1560" fg:w="4"/><text x="18.7203%" y="735.50"></text></g><g><title>enqueue_task (4 samples, 0.05%)</title><rect x="18.4703%" y="709" width="0.0474%" height="15" fill="rgb(241,158,50)" fg:x="1560" fg:w="4"/><text x="18.7203%" y="719.50"></text></g><g><title>enqueue_task_fair (4 samples, 0.05%)</title><rect x="18.4703%" y="693" width="0.0474%" height="15" fill="rgb(213,121,41)" fg:x="1560" fg:w="4"/><text x="18.7203%" y="703.50"></text></g><g><title>update_load_avg (2 samples, 0.02%)</title><rect x="18.4940%" y="677" width="0.0237%" height="15" fill="rgb(240,92,3)" fg:x="1562" fg:w="2"/><text x="18.7440%" y="687.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.01%)</title><rect x="18.5058%" y="661" width="0.0118%" height="15" fill="rgb(205,123,3)" fg:x="1563" fg:w="1"/><text x="18.7558%" y="671.50"></text></g><g><title>asm_sysvec_call_function_single (7 samples, 0.08%)</title><rect x="18.4466%" y="805" width="0.0829%" height="15" fill="rgb(205,97,47)" fg:x="1558" fg:w="7"/><text x="18.6966%" y="815.50"></text></g><g><title>sysvec_call_function_single (6 samples, 0.07%)</title><rect x="18.4584%" y="789" width="0.0710%" height="15" fill="rgb(247,152,14)" fg:x="1559" fg:w="6"/><text x="18.7084%" y="799.50"></text></g><g><title>__sysvec_call_function_single (6 samples, 0.07%)</title><rect x="18.4584%" y="773" width="0.0710%" height="15" fill="rgb(248,195,53)" fg:x="1559" fg:w="6"/><text x="18.7084%" y="783.50"></text></g><g><title>__flush_smp_call_function_queue (6 samples, 0.07%)</title><rect x="18.4584%" y="757" width="0.0710%" height="15" fill="rgb(226,201,16)" fg:x="1559" fg:w="6"/><text x="18.7084%" y="767.50"></text></g><g><title>sched_ttwu_pending (6 samples, 0.07%)</title><rect x="18.4584%" y="741" width="0.0710%" height="15" fill="rgb(205,98,0)" fg:x="1559" fg:w="6"/><text x="18.7084%" y="751.50"></text></g><g><title>update_rq_clock (1 samples, 0.01%)</title><rect x="18.5176%" y="725" width="0.0118%" height="15" fill="rgb(214,191,48)" fg:x="1564" fg:w="1"/><text x="18.7676%" y="735.50"></text></g><g><title>psi_account_irqtime (1 samples, 0.01%)</title><rect x="18.5176%" y="709" width="0.0118%" height="15" fill="rgb(237,112,39)" fg:x="1564" fg:w="1"/><text x="18.7676%" y="719.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.01%)</title><rect x="18.5768%" y="773" width="0.0118%" height="15" fill="rgb(247,203,27)" fg:x="1569" fg:w="1"/><text x="18.8268%" y="783.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="18.7071%" y="613" width="0.0118%" height="15" fill="rgb(235,124,28)" fg:x="1580" fg:w="1"/><text x="18.9571%" y="623.50"></text></g><g><title>select_idle_core.isra.0 (1 samples, 0.01%)</title><rect x="18.7189%" y="597" width="0.0118%" height="15" fill="rgb(208,207,46)" fg:x="1581" fg:w="1"/><text x="18.9689%" y="607.50"></text></g><g><title>_find_next_bit (1 samples, 0.01%)</title><rect x="18.7189%" y="581" width="0.0118%" height="15" fill="rgb(234,176,4)" fg:x="1581" fg:w="1"/><text x="18.9689%" y="591.50"></text></g><g><title>select_task_rq_fair (2 samples, 0.02%)</title><rect x="18.7189%" y="613" width="0.0237%" height="15" fill="rgb(230,133,28)" fg:x="1581" fg:w="2"/><text x="18.9689%" y="623.50"></text></g><g><title>task_h_load (1 samples, 0.01%)</title><rect x="18.7308%" y="597" width="0.0118%" height="15" fill="rgb(211,137,40)" fg:x="1582" fg:w="1"/><text x="18.9808%" y="607.50"></text></g><g><title>ttwu_queue_wakelist (1 samples, 0.01%)</title><rect x="18.7426%" y="613" width="0.0118%" height="15" fill="rgb(254,35,13)" fg:x="1583" fg:w="1"/><text x="18.9926%" y="623.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.01%)</title><rect x="18.7426%" y="597" width="0.0118%" height="15" fill="rgb(225,49,51)" fg:x="1583" fg:w="1"/><text x="18.9926%" y="607.50"></text></g><g><title>sched_clock (1 samples, 0.01%)</title><rect x="18.7426%" y="581" width="0.0118%" height="15" fill="rgb(251,10,15)" fg:x="1583" fg:w="1"/><text x="18.9926%" y="591.50"></text></g><g><title>native_sched_clock (1 samples, 0.01%)</title><rect x="18.7426%" y="565" width="0.0118%" height="15" fill="rgb(228,207,15)" fg:x="1583" fg:w="1"/><text x="18.9926%" y="575.50"></text></g><g><title>__wake_up_common (11 samples, 0.13%)</title><rect x="18.6360%" y="661" width="0.1302%" height="15" fill="rgb(241,99,19)" fg:x="1574" fg:w="11"/><text x="18.8860%" y="671.50"></text></g><g><title>pollwake (8 samples, 0.09%)</title><rect x="18.6716%" y="645" width="0.0947%" height="15" fill="rgb(207,104,49)" fg:x="1577" fg:w="8"/><text x="18.9216%" y="655.50"></text></g><g><title>try_to_wake_up (5 samples, 0.06%)</title><rect x="18.7071%" y="629" width="0.0592%" height="15" fill="rgb(234,99,18)" fg:x="1580" fg:w="5"/><text x="18.9571%" y="639.50"></text></g><g><title>update_rq_clock (1 samples, 0.01%)</title><rect x="18.7544%" y="613" width="0.0118%" height="15" fill="rgb(213,191,49)" fg:x="1584" fg:w="1"/><text x="19.0044%" y="623.50"></text></g><g><title>psi_account_irqtime (1 samples, 0.01%)</title><rect x="18.7544%" y="597" width="0.0118%" height="15" fill="rgb(210,226,19)" fg:x="1584" fg:w="1"/><text x="19.0044%" y="607.50"></text></g><g><title>finish_task_switch.isra.0 (415 samples, 4.91%)</title><rect x="13.8764%" y="821" width="4.9136%" height="15" fill="rgb(229,97,18)" fg:x="1172" fg:w="415"/><text x="14.1264%" y="831.50">finish..</text></g><g><title>asm_sysvec_irq_work (22 samples, 0.26%)</title><rect x="18.5295%" y="805" width="0.2605%" height="15" fill="rgb(211,167,15)" fg:x="1565" fg:w="22"/><text x="18.7795%" y="815.50"></text></g><g><title>sysvec_irq_work (19 samples, 0.22%)</title><rect x="18.5650%" y="789" width="0.2250%" height="15" fill="rgb(210,169,34)" fg:x="1568" fg:w="19"/><text x="18.8150%" y="799.50"></text></g><g><title>__sysvec_irq_work (17 samples, 0.20%)</title><rect x="18.5887%" y="773" width="0.2013%" height="15" fill="rgb(241,121,31)" fg:x="1570" fg:w="17"/><text x="18.8387%" y="783.50"></text></g><g><title>irq_work_run (17 samples, 0.20%)</title><rect x="18.5887%" y="757" width="0.2013%" height="15" fill="rgb(232,40,11)" fg:x="1570" fg:w="17"/><text x="18.8387%" y="767.50"></text></g><g><title>irq_work_run_list (17 samples, 0.20%)</title><rect x="18.5887%" y="741" width="0.2013%" height="15" fill="rgb(205,86,26)" fg:x="1570" fg:w="17"/><text x="18.8387%" y="751.50"></text></g><g><title>irq_work_single (16 samples, 0.19%)</title><rect x="18.6005%" y="725" width="0.1894%" height="15" fill="rgb(231,126,28)" fg:x="1571" fg:w="16"/><text x="18.8505%" y="735.50"></text></g><g><title>perf_pending_irq (15 samples, 0.18%)</title><rect x="18.6124%" y="709" width="0.1776%" height="15" fill="rgb(219,221,18)" fg:x="1572" fg:w="15"/><text x="18.8624%" y="719.50"></text></g><g><title>perf_event_wakeup (15 samples, 0.18%)</title><rect x="18.6124%" y="693" width="0.1776%" height="15" fill="rgb(211,40,0)" fg:x="1572" fg:w="15"/><text x="18.8624%" y="703.50"></text></g><g><title>__wake_up (14 samples, 0.17%)</title><rect x="18.6242%" y="677" width="0.1658%" height="15" fill="rgb(239,85,43)" fg:x="1573" fg:w="14"/><text x="18.8742%" y="687.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.02%)</title><rect x="18.7663%" y="661" width="0.0237%" height="15" fill="rgb(231,55,21)" fg:x="1585" fg:w="2"/><text x="19.0163%" y="671.50"></text></g><g><title>_find_next_and_bit (1 samples, 0.01%)</title><rect x="18.9084%" y="773" width="0.0118%" height="15" fill="rgb(225,184,43)" fg:x="1597" fg:w="1"/><text x="19.1584%" y="783.50"></text></g><g><title>_raw_spin_rq_lock_irqsave (2 samples, 0.02%)</title><rect x="18.9202%" y="773" width="0.0237%" height="15" fill="rgb(251,158,41)" fg:x="1598" fg:w="2"/><text x="19.1702%" y="783.50"></text></g><g><title>raw_spin_rq_lock_nested (2 samples, 0.02%)</title><rect x="18.9202%" y="757" width="0.0237%" height="15" fill="rgb(234,159,37)" fg:x="1598" fg:w="2"/><text x="19.1702%" y="767.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.02%)</title><rect x="18.9202%" y="741" width="0.0237%" height="15" fill="rgb(216,204,22)" fg:x="1598" fg:w="2"/><text x="19.1702%" y="751.50"></text></g><g><title>native_queued_spin_lock_slowpath (2 samples, 0.02%)</title><rect x="18.9202%" y="725" width="0.0237%" height="15" fill="rgb(214,17,3)" fg:x="1598" fg:w="2"/><text x="19.1702%" y="735.50"></text></g><g><title>place_entity (1 samples, 0.01%)</title><rect x="18.9439%" y="709" width="0.0118%" height="15" fill="rgb(212,111,17)" fg:x="1600" fg:w="1"/><text x="19.1939%" y="719.50"></text></g><g><title>avg_vruntime (1 samples, 0.01%)</title><rect x="18.9439%" y="693" width="0.0118%" height="15" fill="rgb(221,157,24)" fg:x="1600" fg:w="1"/><text x="19.1939%" y="703.50"></text></g><g><title>update_curr (1 samples, 0.01%)</title><rect x="18.9557%" y="709" width="0.0118%" height="15" fill="rgb(252,16,13)" fg:x="1601" fg:w="1"/><text x="19.2057%" y="719.50"></text></g><g><title>update_min_vruntime (1 samples, 0.01%)</title><rect x="18.9557%" y="693" width="0.0118%" height="15" fill="rgb(221,62,2)" fg:x="1601" fg:w="1"/><text x="19.2057%" y="703.50"></text></g><g><title>enqueue_task_fair (3 samples, 0.04%)</title><rect x="18.9439%" y="741" width="0.0355%" height="15" fill="rgb(247,87,22)" fg:x="1600" fg:w="3"/><text x="19.1939%" y="751.50"></text></g><g><title>enqueue_entity (3 samples, 0.04%)</title><rect x="18.9439%" y="725" width="0.0355%" height="15" fill="rgb(215,73,9)" fg:x="1600" fg:w="3"/><text x="19.1939%" y="735.50"></text></g><g><title>update_load_avg (1 samples, 0.01%)</title><rect x="18.9676%" y="709" width="0.0118%" height="15" fill="rgb(207,175,33)" fg:x="1602" fg:w="1"/><text x="19.2176%" y="719.50"></text></g><g><title>activate_task (5 samples, 0.06%)</title><rect x="18.9439%" y="773" width="0.0592%" height="15" fill="rgb(243,129,54)" fg:x="1600" fg:w="5"/><text x="19.1939%" y="783.50"></text></g><g><title>enqueue_task (5 samples, 0.06%)</title><rect x="18.9439%" y="757" width="0.0592%" height="15" fill="rgb(227,119,45)" fg:x="1600" fg:w="5"/><text x="19.1939%" y="767.50"></text></g><g><title>psi_task_change (2 samples, 0.02%)</title><rect x="18.9794%" y="741" width="0.0237%" height="15" fill="rgb(205,109,36)" fg:x="1603" fg:w="2"/><text x="19.2294%" y="751.50"></text></g><g><title>psi_group_change (2 samples, 0.02%)</title><rect x="18.9794%" y="725" width="0.0237%" height="15" fill="rgb(205,6,39)" fg:x="1603" fg:w="2"/><text x="19.2294%" y="735.50"></text></g><g><title>can_migrate_task (2 samples, 0.02%)</title><rect x="19.0031%" y="773" width="0.0237%" height="15" fill="rgb(221,32,16)" fg:x="1605" fg:w="2"/><text x="19.2531%" y="783.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.02%)</title><rect x="19.0268%" y="773" width="0.0237%" height="15" fill="rgb(228,144,50)" fg:x="1607" fg:w="2"/><text x="19.2768%" y="783.50"></text></g><g><title>dequeue_entity (2 samples, 0.02%)</title><rect x="19.0268%" y="757" width="0.0237%" height="15" fill="rgb(229,201,53)" fg:x="1607" fg:w="2"/><text x="19.2768%" y="767.50"></text></g><g><title>update_load_avg (1 samples, 0.01%)</title><rect x="19.0386%" y="741" width="0.0118%" height="15" fill="rgb(249,153,27)" fg:x="1608" fg:w="1"/><text x="19.2886%" y="751.50"></text></g><g><title>_find_next_and_bit (1 samples, 0.01%)</title><rect x="19.3228%" y="741" width="0.0118%" height="15" fill="rgb(227,106,25)" fg:x="1632" fg:w="1"/><text x="19.5728%" y="751.50"></text></g><g><title>cpu_util (2 samples, 0.02%)</title><rect x="19.3346%" y="741" width="0.0237%" height="15" fill="rgb(230,65,29)" fg:x="1633" fg:w="2"/><text x="19.5846%" y="751.50"></text></g><g><title>idle_cpu (3 samples, 0.04%)</title><rect x="19.3583%" y="741" width="0.0355%" height="15" fill="rgb(221,57,46)" fg:x="1635" fg:w="3"/><text x="19.6083%" y="751.50"></text></g><g><title>find_busiest_group (31 samples, 0.37%)</title><rect x="19.0504%" y="773" width="0.3670%" height="15" fill="rgb(229,161,17)" fg:x="1609" fg:w="31"/><text x="19.3004%" y="783.50"></text></g><g><title>update_sd_lb_stats.constprop.0 (28 samples, 0.33%)</title><rect x="19.0860%" y="757" width="0.3315%" height="15" fill="rgb(222,213,11)" fg:x="1612" fg:w="28"/><text x="19.3360%" y="767.50"></text></g><g><title>srso_alias_return_thunk (2 samples, 0.02%)</title><rect x="19.3938%" y="741" width="0.0237%" height="15" fill="rgb(235,35,13)" fg:x="1638" fg:w="2"/><text x="19.6438%" y="751.50"></text></g><g><title>srso_alias_safe_ret (2 samples, 0.02%)</title><rect x="19.3938%" y="725" width="0.0237%" height="15" fill="rgb(233,158,34)" fg:x="1638" fg:w="2"/><text x="19.6438%" y="735.50"></text></g><g><title>raw_spin_rq_lock_nested (1 samples, 0.01%)</title><rect x="19.4175%" y="773" width="0.0118%" height="15" fill="rgb(215,151,48)" fg:x="1640" fg:w="1"/><text x="19.6675%" y="783.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="19.4175%" y="757" width="0.0118%" height="15" fill="rgb(229,84,14)" fg:x="1640" fg:w="1"/><text x="19.6675%" y="767.50"></text></g><g><title>load_balance (48 samples, 0.57%)</title><rect x="18.8728%" y="789" width="0.5683%" height="15" fill="rgb(229,68,14)" fg:x="1594" fg:w="48"/><text x="19.1228%" y="799.50"></text></g><g><title>update_rq_clock (1 samples, 0.01%)</title><rect x="19.4293%" y="773" width="0.0118%" height="15" fill="rgb(243,106,26)" fg:x="1641" fg:w="1"/><text x="19.6793%" y="783.50"></text></g><g><title>psi_account_irqtime (1 samples, 0.01%)</title><rect x="19.4293%" y="757" width="0.0118%" height="15" fill="rgb(206,45,38)" fg:x="1641" fg:w="1"/><text x="19.6793%" y="767.50"></text></g><g><title>sched_clock_cpu (2 samples, 0.02%)</title><rect x="19.4412%" y="789" width="0.0237%" height="15" fill="rgb(226,6,15)" fg:x="1642" fg:w="2"/><text x="19.6912%" y="799.50"></text></g><g><title>sched_clock (2 samples, 0.02%)</title><rect x="19.4412%" y="773" width="0.0237%" height="15" fill="rgb(232,22,54)" fg:x="1642" fg:w="2"/><text x="19.6912%" y="783.50"></text></g><g><title>native_sched_clock (2 samples, 0.02%)</title><rect x="19.4412%" y="757" width="0.0237%" height="15" fill="rgb(229,222,32)" fg:x="1642" fg:w="2"/><text x="19.6912%" y="767.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="19.5359%" y="773" width="0.0118%" height="15" fill="rgb(228,62,29)" fg:x="1650" fg:w="1"/><text x="19.7859%" y="783.50"></text></g><g><title>update_load_avg (2 samples, 0.02%)</title><rect x="19.5477%" y="773" width="0.0237%" height="15" fill="rgb(251,103,34)" fg:x="1651" fg:w="2"/><text x="19.7977%" y="783.50"></text></g><g><title>__update_load_avg_cfs_rq (2 samples, 0.02%)</title><rect x="19.5477%" y="757" width="0.0237%" height="15" fill="rgb(233,12,30)" fg:x="1651" fg:w="2"/><text x="19.7977%" y="767.50"></text></g><g><title>newidle_balance (68 samples, 0.81%)</title><rect x="18.8255%" y="805" width="0.8051%" height="15" fill="rgb(238,52,0)" fg:x="1590" fg:w="68"/><text x="19.0755%" y="815.50"></text></g><g><title>update_blocked_averages (14 samples, 0.17%)</title><rect x="19.4648%" y="789" width="0.1658%" height="15" fill="rgb(223,98,5)" fg:x="1644" fg:w="14"/><text x="19.7148%" y="799.50"></text></g><g><title>update_rq_clock (5 samples, 0.06%)</title><rect x="19.5714%" y="773" width="0.0592%" height="15" fill="rgb(228,75,37)" fg:x="1653" fg:w="5"/><text x="19.8214%" y="783.50"></text></g><g><title>psi_account_irqtime (2 samples, 0.02%)</title><rect x="19.6069%" y="757" width="0.0237%" height="15" fill="rgb(205,115,49)" fg:x="1656" fg:w="2"/><text x="19.8569%" y="767.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.01%)</title><rect x="19.6188%" y="741" width="0.0118%" height="15" fill="rgb(250,154,43)" fg:x="1657" fg:w="1"/><text x="19.8688%" y="751.50"></text></g><g><title>sched_clock (1 samples, 0.01%)</title><rect x="19.6188%" y="725" width="0.0118%" height="15" fill="rgb(226,43,29)" fg:x="1657" fg:w="1"/><text x="19.8688%" y="735.50"></text></g><g><title>native_sched_clock (1 samples, 0.01%)</title><rect x="19.6188%" y="709" width="0.0118%" height="15" fill="rgb(249,228,39)" fg:x="1657" fg:w="1"/><text x="19.8688%" y="719.50"></text></g><g><title>pick_eevdf (1 samples, 0.01%)</title><rect x="19.6306%" y="805" width="0.0118%" height="15" fill="rgb(216,79,43)" fg:x="1658" fg:w="1"/><text x="19.8806%" y="815.50"></text></g><g><title>pick_next_task_fair (73 samples, 0.86%)</title><rect x="18.7900%" y="821" width="0.8643%" height="15" fill="rgb(228,95,12)" fg:x="1587" fg:w="73"/><text x="19.0400%" y="831.50"></text></g><g><title>update_curr (1 samples, 0.01%)</title><rect x="19.6424%" y="805" width="0.0118%" height="15" fill="rgb(249,221,15)" fg:x="1659" fg:w="1"/><text x="19.8924%" y="815.50"></text></g><g><title>update_curr_se (1 samples, 0.01%)</title><rect x="19.6424%" y="789" width="0.0118%" height="15" fill="rgb(233,34,13)" fg:x="1659" fg:w="1"/><text x="19.8924%" y="799.50"></text></g><g><title>pick_next_task_idle (1 samples, 0.01%)</title><rect x="19.6543%" y="821" width="0.0118%" height="15" fill="rgb(214,103,39)" fg:x="1660" fg:w="1"/><text x="19.9043%" y="831.50"></text></g><g><title>__update_idle_core (1 samples, 0.01%)</title><rect x="19.6543%" y="805" width="0.0118%" height="15" fill="rgb(251,126,39)" fg:x="1660" fg:w="1"/><text x="19.9043%" y="815.50"></text></g><g><title>psi_task_switch (11 samples, 0.13%)</title><rect x="19.6661%" y="821" width="0.1302%" height="15" fill="rgb(214,216,36)" fg:x="1661" fg:w="11"/><text x="19.9161%" y="831.50"></text></g><g><title>psi_group_change (10 samples, 0.12%)</title><rect x="19.6780%" y="805" width="0.1184%" height="15" fill="rgb(220,221,8)" fg:x="1662" fg:w="10"/><text x="19.9280%" y="815.50"></text></g><g><title>record_times (2 samples, 0.02%)</title><rect x="19.7727%" y="789" width="0.0237%" height="15" fill="rgb(240,216,3)" fg:x="1670" fg:w="2"/><text x="20.0227%" y="799.50"></text></g><g><title>put_prev_entity (4 samples, 0.05%)</title><rect x="19.7964%" y="805" width="0.0474%" height="15" fill="rgb(232,218,17)" fg:x="1672" fg:w="4"/><text x="20.0464%" y="815.50"></text></g><g><title>check_cfs_rq_runtime (1 samples, 0.01%)</title><rect x="19.8319%" y="789" width="0.0118%" height="15" fill="rgb(229,163,45)" fg:x="1675" fg:w="1"/><text x="20.0819%" y="799.50"></text></g><g><title>put_prev_task_fair (5 samples, 0.06%)</title><rect x="19.7964%" y="821" width="0.0592%" height="15" fill="rgb(231,110,42)" fg:x="1672" fg:w="5"/><text x="20.0464%" y="831.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="19.8437%" y="805" width="0.0118%" height="15" fill="rgb(208,170,48)" fg:x="1676" fg:w="1"/><text x="20.0937%" y="815.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="19.8437%" y="789" width="0.0118%" height="15" fill="rgb(239,116,25)" fg:x="1676" fg:w="1"/><text x="20.0937%" y="799.50"></text></g><g><title>psi_account_irqtime (7 samples, 0.08%)</title><rect x="19.8674%" y="805" width="0.0829%" height="15" fill="rgb(219,200,50)" fg:x="1678" fg:w="7"/><text x="20.1174%" y="815.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.01%)</title><rect x="19.9384%" y="789" width="0.0118%" height="15" fill="rgb(245,200,0)" fg:x="1684" fg:w="1"/><text x="20.1884%" y="799.50"></text></g><g><title>sched_clock (1 samples, 0.01%)</title><rect x="19.9384%" y="773" width="0.0118%" height="15" fill="rgb(245,119,33)" fg:x="1684" fg:w="1"/><text x="20.1884%" y="783.50"></text></g><g><title>native_sched_clock (1 samples, 0.01%)</title><rect x="19.9384%" y="757" width="0.0118%" height="15" fill="rgb(231,125,12)" fg:x="1684" fg:w="1"/><text x="20.1884%" y="767.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.01%)</title><rect x="19.9503%" y="805" width="0.0118%" height="15" fill="rgb(216,96,41)" fg:x="1685" fg:w="1"/><text x="20.2003%" y="815.50"></text></g><g><title>schedule (642 samples, 7.60%)</title><rect x="12.3727%" y="853" width="7.6012%" height="15" fill="rgb(248,43,45)" fg:x="1045" fg:w="642"/><text x="12.6227%" y="863.50">schedule</text></g><g><title>__schedule (639 samples, 7.57%)</title><rect x="12.4082%" y="837" width="7.5657%" height="15" fill="rgb(217,222,7)" fg:x="1048" fg:w="639"/><text x="12.6582%" y="847.50">__schedule</text></g><g><title>update_rq_clock (10 samples, 0.12%)</title><rect x="19.8556%" y="821" width="0.1184%" height="15" fill="rgb(233,28,6)" fg:x="1677" fg:w="10"/><text x="20.1056%" y="831.50"></text></g><g><title>update_irq_load_avg (1 samples, 0.01%)</title><rect x="19.9621%" y="805" width="0.0118%" height="15" fill="rgb(231,218,15)" fg:x="1686" fg:w="1"/><text x="20.2121%" y="815.50"></text></g><g><title>__x64_sys_epoll_wait (753 samples, 8.92%)</title><rect x="11.0703%" y="901" width="8.9155%" height="15" fill="rgb(226,171,48)" fg:x="935" fg:w="753"/><text x="11.3203%" y="911.50">__x64_sys_epo..</text></g><g><title>do_epoll_wait (753 samples, 8.92%)</title><rect x="11.0703%" y="885" width="8.9155%" height="15" fill="rgb(235,201,9)" fg:x="935" fg:w="753"/><text x="11.3203%" y="895.50">do_epoll_wait</text></g><g><title>schedule_hrtimeout_range_clock (650 samples, 7.70%)</title><rect x="12.2898%" y="869" width="7.6960%" height="15" fill="rgb(217,80,15)" fg:x="1038" fg:w="650"/><text x="12.5398%" y="879.50">schedule_hr..</text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="19.9740%" y="853" width="0.0118%" height="15" fill="rgb(219,152,8)" fg:x="1687" fg:w="1"/><text x="20.2240%" y="863.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="19.9740%" y="837" width="0.0118%" height="15" fill="rgb(243,107,38)" fg:x="1687" fg:w="1"/><text x="20.2240%" y="847.50"></text></g><g><title>__get_user_8 (25 samples, 0.30%)</title><rect x="20.1752%" y="869" width="0.2960%" height="15" fill="rgb(231,17,5)" fg:x="1704" fg:w="25"/><text x="20.4252%" y="879.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="20.4594%" y="853" width="0.0118%" height="15" fill="rgb(209,25,54)" fg:x="1728" fg:w="1"/><text x="20.7094%" y="863.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="20.4594%" y="837" width="0.0118%" height="15" fill="rgb(219,0,2)" fg:x="1728" fg:w="1"/><text x="20.7094%" y="847.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.01%)</title><rect x="20.4594%" y="821" width="0.0118%" height="15" fill="rgb(246,9,5)" fg:x="1728" fg:w="1"/><text x="20.7094%" y="831.50"></text></g><g><title>handle_softirqs (1 samples, 0.01%)</title><rect x="20.4594%" y="805" width="0.0118%" height="15" fill="rgb(226,159,4)" fg:x="1728" fg:w="1"/><text x="20.7094%" y="815.50"></text></g><g><title>net_rx_action (1 samples, 0.01%)</title><rect x="20.4594%" y="789" width="0.0118%" height="15" fill="rgb(219,175,34)" fg:x="1728" fg:w="1"/><text x="20.7094%" y="799.50"></text></g><g><title>__napi_poll (1 samples, 0.01%)</title><rect x="20.4594%" y="773" width="0.0118%" height="15" fill="rgb(236,10,46)" fg:x="1728" fg:w="1"/><text x="20.7094%" y="783.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="20.4594%" y="757" width="0.0118%" height="15" fill="rgb(240,211,16)" fg:x="1728" fg:w="1"/><text x="20.7094%" y="767.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="20.4594%" y="741" width="0.0118%" height="15" fill="rgb(205,3,43)" fg:x="1728" fg:w="1"/><text x="20.7094%" y="751.50"></text></g><g><title>iommu_dma_unmap_page (1 samples, 0.01%)</title><rect x="20.4594%" y="725" width="0.0118%" height="15" fill="rgb(245,7,22)" fg:x="1728" fg:w="1"/><text x="20.7094%" y="735.50"></text></g><g><title>__iommu_dma_unmap (1 samples, 0.01%)</title><rect x="20.4594%" y="709" width="0.0118%" height="15" fill="rgb(239,132,32)" fg:x="1728" fg:w="1"/><text x="20.7094%" y="719.50"></text></g><g><title>__iommu_unmap (1 samples, 0.01%)</title><rect x="20.4594%" y="693" width="0.0118%" height="15" fill="rgb(228,202,34)" fg:x="1728" fg:w="1"/><text x="20.7094%" y="703.50"></text></g><g><title>iommu_pgsize.isra.0 (1 samples, 0.01%)</title><rect x="20.4594%" y="677" width="0.0118%" height="15" fill="rgb(254,200,22)" fg:x="1728" fg:w="1"/><text x="20.7094%" y="687.50"></text></g><g><title>__rseq_handle_notify_resume (30 samples, 0.36%)</title><rect x="20.1279%" y="885" width="0.3552%" height="15" fill="rgb(219,10,39)" fg:x="1700" fg:w="30"/><text x="20.3779%" y="895.50"></text></g><g><title>__put_user_8 (1 samples, 0.01%)</title><rect x="20.4712%" y="869" width="0.0118%" height="15" fill="rgb(226,210,39)" fg:x="1729" fg:w="1"/><text x="20.7212%" y="879.50"></text></g><g><title>blkcg_maybe_throttle_current (1 samples, 0.01%)</title><rect x="20.4831%" y="885" width="0.0118%" height="15" fill="rgb(208,219,16)" fg:x="1730" fg:w="1"/><text x="20.7331%" y="895.50"></text></g><g><title>mem_cgroup_handle_over_high (1 samples, 0.01%)</title><rect x="20.4949%" y="885" width="0.0118%" height="15" fill="rgb(216,158,51)" fg:x="1731" fg:w="1"/><text x="20.7449%" y="895.50"></text></g><g><title>restore_fpregs_from_fpstate (22 samples, 0.26%)</title><rect x="20.5778%" y="869" width="0.2605%" height="15" fill="rgb(233,14,44)" fg:x="1738" fg:w="22"/><text x="20.8278%" y="879.50"></text></g><g><title>switch_fpu_return (29 samples, 0.34%)</title><rect x="20.5067%" y="885" width="0.3434%" height="15" fill="rgb(237,97,39)" fg:x="1732" fg:w="29"/><text x="20.7567%" y="895.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="20.8383%" y="869" width="0.0118%" height="15" fill="rgb(218,198,43)" fg:x="1760" fg:w="1"/><text x="21.0883%" y="879.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="20.8383%" y="853" width="0.0118%" height="15" fill="rgb(231,104,20)" fg:x="1760" fg:w="1"/><text x="21.0883%" y="863.50"></text></g><g><title>entry_SYSCALL_64 (832 samples, 9.85%)</title><rect x="11.0111%" y="933" width="9.8508%" height="15" fill="rgb(254,36,13)" fg:x="930" fg:w="832"/><text x="11.2611%" y="943.50">entry_SYSCALL_..</text></g><g><title>do_syscall_64 (832 samples, 9.85%)</title><rect x="11.0111%" y="917" width="9.8508%" height="15" fill="rgb(248,14,50)" fg:x="930" fg:w="832"/><text x="11.2611%" y="927.50">do_syscall_64</text></g><g><title>syscall_exit_to_user_mode (74 samples, 0.88%)</title><rect x="19.9858%" y="901" width="0.8762%" height="15" fill="rgb(217,107,29)" fg:x="1688" fg:w="74"/><text x="20.2358%" y="911.50"></text></g><g><title>syscall_exit_to_user_mode_prepare (1 samples, 0.01%)</title><rect x="20.8501%" y="885" width="0.0118%" height="15" fill="rgb(251,169,33)" fg:x="1761" fg:w="1"/><text x="21.1001%" y="895.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="20.8501%" y="869" width="0.0118%" height="15" fill="rgb(217,108,32)" fg:x="1761" fg:w="1"/><text x="21.1001%" y="879.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (862 samples, 10.21%)</title><rect x="10.6796%" y="965" width="10.2060%" height="15" fill="rgb(219,66,42)" fg:x="902" fg:w="862"/><text x="10.9296%" y="975.50">mio::sys::unix:..</text></g><g><title>epoll_wait (857 samples, 10.15%)</title><rect x="10.7388%" y="949" width="10.1468%" height="15" fill="rgb(206,180,7)" fg:x="907" fg:w="857"/><text x="10.9888%" y="959.50">epoll_wait</text></g><g><title>syscall_return_via_sysret (2 samples, 0.02%)</title><rect x="20.8619%" y="933" width="0.0237%" height="15" fill="rgb(208,226,31)" fg:x="1762" fg:w="2"/><text x="21.1119%" y="943.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (1 samples, 0.01%)</title><rect x="20.8856%" y="965" width="0.0118%" height="15" fill="rgb(218,26,49)" fg:x="1764" fg:w="1"/><text x="21.1356%" y="975.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (1 samples, 0.01%)</title><rect x="20.8975%" y="965" width="0.0118%" height="15" fill="rgb(233,197,48)" fg:x="1765" fg:w="1"/><text x="21.1475%" y="975.50"></text></g><g><title>_ZN5tokio7runtime2io6driver6Driver4turn17hcf7e58f2c67b2c80E.llvm.3466439444723293063 (867 samples, 10.27%)</title><rect x="10.6559%" y="981" width="10.2652%" height="15" fill="rgb(252,181,51)" fg:x="900" fg:w="867"/><text x="10.9059%" y="991.50">_ZN5tokio7runti..</text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (1 samples, 0.01%)</title><rect x="20.9093%" y="965" width="0.0118%" height="15" fill="rgb(253,90,19)" fg:x="1766" fg:w="1"/><text x="21.1593%" y="975.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (1 samples, 0.01%)</title><rect x="20.9093%" y="949" width="0.0118%" height="15" fill="rgb(215,171,30)" fg:x="1766" fg:w="1"/><text x="21.1593%" y="959.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (1 samples, 0.01%)</title><rect x="20.9093%" y="933" width="0.0118%" height="15" fill="rgb(214,222,9)" fg:x="1766" fg:w="1"/><text x="21.1593%" y="943.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="20.9803%" y="965" width="0.0118%" height="15" fill="rgb(223,3,22)" fg:x="1772" fg:w="1"/><text x="21.2303%" y="975.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="21.0040%" y="917" width="0.0355%" height="15" fill="rgb(225,196,46)" fg:x="1774" fg:w="3"/><text x="21.2540%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (2 samples, 0.02%)</title><rect x="21.0159%" y="901" width="0.0237%" height="15" fill="rgb(209,110,37)" fg:x="1775" fg:w="2"/><text x="21.2659%" y="911.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (2 samples, 0.02%)</title><rect x="21.0159%" y="885" width="0.0237%" height="15" fill="rgb(249,89,12)" fg:x="1775" fg:w="2"/><text x="21.2659%" y="895.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (1 samples, 0.01%)</title><rect x="21.0395%" y="885" width="0.0118%" height="15" fill="rgb(226,27,33)" fg:x="1777" fg:w="1"/><text x="21.2895%" y="895.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="21.0514%" y="853" width="0.0237%" height="15" fill="rgb(213,82,22)" fg:x="1778" fg:w="2"/><text x="21.3014%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (2 samples, 0.02%)</title><rect x="21.0514%" y="837" width="0.0237%" height="15" fill="rgb(248,140,0)" fg:x="1778" fg:w="2"/><text x="21.3014%" y="847.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="21.0514%" y="821" width="0.0237%" height="15" fill="rgb(228,106,3)" fg:x="1778" fg:w="2"/><text x="21.3014%" y="831.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="21.0632%" y="805" width="0.0118%" height="15" fill="rgb(209,23,37)" fg:x="1779" fg:w="1"/><text x="21.3132%" y="815.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="21.0632%" y="789" width="0.0118%" height="15" fill="rgb(241,93,50)" fg:x="1779" fg:w="1"/><text x="21.3132%" y="799.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="21.0632%" y="773" width="0.0118%" height="15" fill="rgb(253,46,43)" fg:x="1779" fg:w="1"/><text x="21.3132%" y="783.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="21.0632%" y="757" width="0.0118%" height="15" fill="rgb(226,206,43)" fg:x="1779" fg:w="1"/><text x="21.3132%" y="767.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="21.0632%" y="741" width="0.0118%" height="15" fill="rgb(217,54,7)" fg:x="1779" fg:w="1"/><text x="21.3132%" y="751.50"></text></g><g><title>_raw_spin_lock_irq (1 samples, 0.01%)</title><rect x="21.0632%" y="725" width="0.0118%" height="15" fill="rgb(223,5,52)" fg:x="1779" fg:w="1"/><text x="21.3132%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.01%)</title><rect x="21.0751%" y="773" width="0.0118%" height="15" fill="rgb(206,52,46)" fg:x="1780" fg:w="1"/><text x="21.3251%" y="783.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="21.0751%" y="757" width="0.0118%" height="15" fill="rgb(253,136,11)" fg:x="1780" fg:w="1"/><text x="21.3251%" y="767.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="21.0751%" y="741" width="0.0118%" height="15" fill="rgb(208,106,33)" fg:x="1780" fg:w="1"/><text x="21.3251%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (2 samples, 0.02%)</title><rect x="21.0869%" y="773" width="0.0237%" height="15" fill="rgb(206,54,4)" fg:x="1781" fg:w="2"/><text x="21.3369%" y="783.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (6 samples, 0.07%)</title><rect x="21.0514%" y="869" width="0.0710%" height="15" fill="rgb(213,3,15)" fg:x="1778" fg:w="6"/><text x="21.3014%" y="879.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (4 samples, 0.05%)</title><rect x="21.0751%" y="853" width="0.0474%" height="15" fill="rgb(252,211,39)" fg:x="1780" fg:w="4"/><text x="21.3251%" y="863.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (4 samples, 0.05%)</title><rect x="21.0751%" y="837" width="0.0474%" height="15" fill="rgb(223,6,36)" fg:x="1780" fg:w="4"/><text x="21.3251%" y="847.50"></text></g><g><title>tokio::runtime::context::with_scheduler (4 samples, 0.05%)</title><rect x="21.0751%" y="821" width="0.0474%" height="15" fill="rgb(252,169,45)" fg:x="1780" fg:w="4"/><text x="21.3251%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.05%)</title><rect x="21.0751%" y="805" width="0.0474%" height="15" fill="rgb(212,48,26)" fg:x="1780" fg:w="4"/><text x="21.3251%" y="815.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (4 samples, 0.05%)</title><rect x="21.0751%" y="789" width="0.0474%" height="15" fill="rgb(251,102,48)" fg:x="1780" fg:w="4"/><text x="21.3251%" y="799.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="21.1106%" y="773" width="0.0118%" height="15" fill="rgb(243,208,16)" fg:x="1783" fg:w="1"/><text x="21.3606%" y="783.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (1 samples, 0.01%)</title><rect x="21.1106%" y="757" width="0.0118%" height="15" fill="rgb(219,96,24)" fg:x="1783" fg:w="1"/><text x="21.3606%" y="767.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (1 samples, 0.01%)</title><rect x="21.1106%" y="741" width="0.0118%" height="15" fill="rgb(219,33,29)" fg:x="1783" fg:w="1"/><text x="21.3606%" y="751.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::ptr_eq (1 samples, 0.01%)</title><rect x="21.1106%" y="725" width="0.0118%" height="15" fill="rgb(223,176,5)" fg:x="1783" fg:w="1"/><text x="21.3606%" y="735.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="21.1106%" y="709" width="0.0118%" height="15" fill="rgb(228,140,14)" fg:x="1783" fg:w="1"/><text x="21.3606%" y="719.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="21.1106%" y="693" width="0.0118%" height="15" fill="rgb(217,179,31)" fg:x="1783" fg:w="1"/><text x="21.3606%" y="703.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="21.1106%" y="677" width="0.0118%" height="15" fill="rgb(230,9,30)" fg:x="1783" fg:w="1"/><text x="21.3606%" y="687.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="21.1106%" y="661" width="0.0118%" height="15" fill="rgb(230,136,20)" fg:x="1783" fg:w="1"/><text x="21.3606%" y="671.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="21.1106%" y="645" width="0.0118%" height="15" fill="rgb(215,210,22)" fg:x="1783" fg:w="1"/><text x="21.3606%" y="655.50"></text></g><g><title>tick_nohz_handler (1 samples, 0.01%)</title><rect x="21.1106%" y="629" width="0.0118%" height="15" fill="rgb(218,43,5)" fg:x="1783" fg:w="1"/><text x="21.3606%" y="639.50"></text></g><g><title>run_posix_cpu_timers (1 samples, 0.01%)</title><rect x="21.1106%" y="613" width="0.0118%" height="15" fill="rgb(216,11,5)" fg:x="1783" fg:w="1"/><text x="21.3606%" y="623.50"></text></g><g><title>tokio::runtime::task::raw::schedule (1 samples, 0.01%)</title><rect x="21.1224%" y="869" width="0.0118%" height="15" fill="rgb(209,82,29)" fg:x="1784" fg:w="1"/><text x="21.3724%" y="879.50"></text></g><g><title>tokio::runtime::task::core::Header::get_scheduler (1 samples, 0.01%)</title><rect x="21.1224%" y="853" width="0.0118%" height="15" fill="rgb(244,115,12)" fg:x="1784" fg:w="1"/><text x="21.3724%" y="863.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (1 samples, 0.01%)</title><rect x="21.1343%" y="869" width="0.0118%" height="15" fill="rgb(222,82,18)" fg:x="1785" fg:w="1"/><text x="21.3843%" y="879.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (11 samples, 0.13%)</title><rect x="21.0514%" y="885" width="0.1302%" height="15" fill="rgb(249,227,8)" fg:x="1778" fg:w="11"/><text x="21.3014%" y="895.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (3 samples, 0.04%)</title><rect x="21.1461%" y="869" width="0.0355%" height="15" fill="rgb(253,141,45)" fg:x="1786" fg:w="3"/><text x="21.3961%" y="879.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (2 samples, 0.02%)</title><rect x="21.1816%" y="885" width="0.0237%" height="15" fill="rgb(234,184,4)" fg:x="1789" fg:w="2"/><text x="21.4316%" y="895.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (2 samples, 0.02%)</title><rect x="21.1816%" y="869" width="0.0237%" height="15" fill="rgb(218,194,23)" fg:x="1789" fg:w="2"/><text x="21.4316%" y="879.50"></text></g><g><title>tokio::runtime::task::state::State::load (1 samples, 0.01%)</title><rect x="21.1935%" y="853" width="0.0118%" height="15" fill="rgb(235,66,41)" fg:x="1790" fg:w="1"/><text x="21.4435%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="21.1935%" y="837" width="0.0118%" height="15" fill="rgb(245,217,1)" fg:x="1790" fg:w="1"/><text x="21.4435%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="21.1935%" y="821" width="0.0118%" height="15" fill="rgb(229,91,1)" fg:x="1790" fg:w="1"/><text x="21.4435%" y="831.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="21.1935%" y="805" width="0.0118%" height="15" fill="rgb(207,101,30)" fg:x="1790" fg:w="1"/><text x="21.4435%" y="815.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="21.1935%" y="789" width="0.0118%" height="15" fill="rgb(223,82,49)" fg:x="1790" fg:w="1"/><text x="21.4435%" y="799.50"></text></g><g><title>__common_interrupt (1 samples, 0.01%)</title><rect x="21.1935%" y="773" width="0.0118%" height="15" fill="rgb(218,167,17)" fg:x="1790" fg:w="1"/><text x="21.4435%" y="783.50"></text></g><g><title>handle_edge_irq (1 samples, 0.01%)</title><rect x="21.1935%" y="757" width="0.0118%" height="15" fill="rgb(208,103,14)" fg:x="1790" fg:w="1"/><text x="21.4435%" y="767.50"></text></g><g><title>handle_irq_event (1 samples, 0.01%)</title><rect x="21.1935%" y="741" width="0.0118%" height="15" fill="rgb(238,20,8)" fg:x="1790" fg:w="1"/><text x="21.4435%" y="751.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="21.1935%" y="725" width="0.0118%" height="15" fill="rgb(218,80,54)" fg:x="1790" fg:w="1"/><text x="21.4435%" y="735.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="21.1935%" y="709" width="0.0118%" height="15" fill="rgb(240,144,17)" fg:x="1790" fg:w="1"/><text x="21.4435%" y="719.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (26 samples, 0.31%)</title><rect x="20.9211%" y="981" width="0.3078%" height="15" fill="rgb(245,27,50)" fg:x="1767" fg:w="26"/><text x="21.1711%" y="991.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (20 samples, 0.24%)</title><rect x="20.9922%" y="965" width="0.2368%" height="15" fill="rgb(251,51,7)" fg:x="1773" fg:w="20"/><text x="21.2422%" y="975.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (19 samples, 0.22%)</title><rect x="21.0040%" y="949" width="0.2250%" height="15" fill="rgb(245,217,29)" fg:x="1774" fg:w="19"/><text x="21.2540%" y="959.50"></text></g><g><title>core::task::wake::Waker::wake (19 samples, 0.22%)</title><rect x="21.0040%" y="933" width="0.2250%" height="15" fill="rgb(221,176,29)" fg:x="1774" fg:w="19"/><text x="21.2540%" y="943.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (16 samples, 0.19%)</title><rect x="21.0395%" y="917" width="0.1894%" height="15" fill="rgb(212,180,24)" fg:x="1777" fg:w="16"/><text x="21.2895%" y="927.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (16 samples, 0.19%)</title><rect x="21.0395%" y="901" width="0.1894%" height="15" fill="rgb(254,24,2)" fg:x="1777" fg:w="16"/><text x="21.2895%" y="911.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (2 samples, 0.02%)</title><rect x="21.2053%" y="885" width="0.0237%" height="15" fill="rgb(230,100,2)" fg:x="1791" fg:w="2"/><text x="21.4553%" y="895.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (2 samples, 0.02%)</title><rect x="21.2053%" y="869" width="0.0237%" height="15" fill="rgb(219,142,25)" fg:x="1791" fg:w="2"/><text x="21.4553%" y="879.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (1 samples, 0.01%)</title><rect x="21.2290%" y="981" width="0.0118%" height="15" fill="rgb(240,73,43)" fg:x="1793" fg:w="1"/><text x="21.4790%" y="991.50"></text></g><g><title>tokio::runtime::signal::Driver::process (1 samples, 0.01%)</title><rect x="21.2408%" y="981" width="0.0118%" height="15" fill="rgb(214,114,15)" fg:x="1794" fg:w="1"/><text x="21.4908%" y="991.50"></text></g><g><title>tokio::runtime::io::driver::signal::&lt;impl tokio::runtime::io::driver::Driver&gt;::consume_signal_ready (1 samples, 0.01%)</title><rect x="21.2408%" y="965" width="0.0118%" height="15" fill="rgb(207,130,4)" fg:x="1794" fg:w="1"/><text x="21.4908%" y="975.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="21.2527%" y="965" width="0.0118%" height="15" fill="rgb(221,25,40)" fg:x="1795" fg:w="1"/><text x="21.5027%" y="975.50"></text></g><g><title>__vdso_clock_gettime (3 samples, 0.04%)</title><rect x="21.3592%" y="933" width="0.0355%" height="15" fill="rgb(241,184,7)" fg:x="1804" fg:w="3"/><text x="21.6092%" y="943.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="21.3829%" y="917" width="0.0118%" height="15" fill="rgb(235,159,4)" fg:x="1806" fg:w="1"/><text x="21.6329%" y="927.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="21.3829%" y="901" width="0.0118%" height="15" fill="rgb(214,87,48)" fg:x="1806" fg:w="1"/><text x="21.6329%" y="911.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.01%)</title><rect x="21.3829%" y="885" width="0.0118%" height="15" fill="rgb(246,198,24)" fg:x="1806" fg:w="1"/><text x="21.6329%" y="895.50"></text></g><g><title>handle_softirqs (1 samples, 0.01%)</title><rect x="21.3829%" y="869" width="0.0118%" height="15" fill="rgb(209,66,40)" fg:x="1806" fg:w="1"/><text x="21.6329%" y="879.50"></text></g><g><title>net_rx_action (1 samples, 0.01%)</title><rect x="21.3829%" y="853" width="0.0118%" height="15" fill="rgb(233,147,39)" fg:x="1806" fg:w="1"/><text x="21.6329%" y="863.50"></text></g><g><title>__napi_poll (1 samples, 0.01%)</title><rect x="21.3829%" y="837" width="0.0118%" height="15" fill="rgb(231,145,52)" fg:x="1806" fg:w="1"/><text x="21.6329%" y="847.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="21.3829%" y="821" width="0.0118%" height="15" fill="rgb(206,20,26)" fg:x="1806" fg:w="1"/><text x="21.6329%" y="831.50"></text></g><g><title>napi_complete_done (1 samples, 0.01%)</title><rect x="21.3829%" y="805" width="0.0118%" height="15" fill="rgb(238,220,4)" fg:x="1806" fg:w="1"/><text x="21.6329%" y="815.50"></text></g><g><title>netif_receive_skb_list_internal (1 samples, 0.01%)</title><rect x="21.3829%" y="789" width="0.0118%" height="15" fill="rgb(252,195,42)" fg:x="1806" fg:w="1"/><text x="21.6329%" y="799.50"></text></g><g><title>__netif_receive_skb_list_core (1 samples, 0.01%)</title><rect x="21.3829%" y="773" width="0.0118%" height="15" fill="rgb(209,10,6)" fg:x="1806" fg:w="1"/><text x="21.6329%" y="783.50"></text></g><g><title>ip_list_rcv (1 samples, 0.01%)</title><rect x="21.3829%" y="757" width="0.0118%" height="15" fill="rgb(229,3,52)" fg:x="1806" fg:w="1"/><text x="21.6329%" y="767.50"></text></g><g><title>ip_sublist_rcv (1 samples, 0.01%)</title><rect x="21.3829%" y="741" width="0.0118%" height="15" fill="rgb(253,49,37)" fg:x="1806" fg:w="1"/><text x="21.6329%" y="751.50"></text></g><g><title>ip_local_deliver (1 samples, 0.01%)</title><rect x="21.3829%" y="725" width="0.0118%" height="15" fill="rgb(240,103,49)" fg:x="1806" fg:w="1"/><text x="21.6329%" y="735.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.01%)</title><rect x="21.3829%" y="709" width="0.0118%" height="15" fill="rgb(250,182,30)" fg:x="1806" fg:w="1"/><text x="21.6329%" y="719.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.01%)</title><rect x="21.3829%" y="693" width="0.0118%" height="15" fill="rgb(248,8,30)" fg:x="1806" fg:w="1"/><text x="21.6329%" y="703.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.01%)</title><rect x="21.3829%" y="677" width="0.0118%" height="15" fill="rgb(237,120,30)" fg:x="1806" fg:w="1"/><text x="21.6329%" y="687.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.01%)</title><rect x="21.3829%" y="661" width="0.0118%" height="15" fill="rgb(221,146,34)" fg:x="1806" fg:w="1"/><text x="21.6329%" y="671.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.01%)</title><rect x="21.3829%" y="645" width="0.0118%" height="15" fill="rgb(242,55,13)" fg:x="1806" fg:w="1"/><text x="21.6329%" y="655.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.01%)</title><rect x="21.3829%" y="629" width="0.0118%" height="15" fill="rgb(242,112,31)" fg:x="1806" fg:w="1"/><text x="21.6329%" y="639.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.01%)</title><rect x="21.3829%" y="613" width="0.0118%" height="15" fill="rgb(249,192,27)" fg:x="1806" fg:w="1"/><text x="21.6329%" y="623.50"></text></g><g><title>ip_output (1 samples, 0.01%)</title><rect x="21.3829%" y="597" width="0.0118%" height="15" fill="rgb(208,204,44)" fg:x="1806" fg:w="1"/><text x="21.6329%" y="607.50"></text></g><g><title>clock_gettime (9 samples, 0.11%)</title><rect x="21.3119%" y="949" width="0.1066%" height="15" fill="rgb(208,93,54)" fg:x="1800" fg:w="9"/><text x="21.5619%" y="959.50"></text></g><g><title>clock_gettime (2 samples, 0.02%)</title><rect x="21.3947%" y="933" width="0.0237%" height="15" fill="rgb(242,1,31)" fg:x="1807" fg:w="2"/><text x="21.6447%" y="943.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (15 samples, 0.18%)</title><rect x="21.2645%" y="965" width="0.1776%" height="15" fill="rgb(241,83,25)" fg:x="1796" fg:w="15"/><text x="21.5145%" y="975.50"></text></g><g><title>std::time::Instant::now (2 samples, 0.02%)</title><rect x="21.4184%" y="949" width="0.0237%" height="15" fill="rgb(205,169,50)" fg:x="1809" fg:w="2"/><text x="21.6684%" y="959.50"></text></g><g><title>std::time::Instant::now (6 samples, 0.07%)</title><rect x="21.4421%" y="965" width="0.0710%" height="15" fill="rgb(239,186,37)" fg:x="1811" fg:w="6"/><text x="21.6921%" y="975.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (6 samples, 0.07%)</title><rect x="21.4421%" y="949" width="0.0710%" height="15" fill="rgb(205,221,10)" fg:x="1811" fg:w="6"/><text x="21.6921%" y="959.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (2 samples, 0.02%)</title><rect x="21.5131%" y="965" width="0.0237%" height="15" fill="rgb(218,196,15)" fg:x="1817" fg:w="2"/><text x="21.7631%" y="975.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (3 samples, 0.04%)</title><rect x="21.5368%" y="965" width="0.0355%" height="15" fill="rgb(218,196,35)" fg:x="1819" fg:w="3"/><text x="21.7868%" y="975.50"></text></g><g><title>_ZN5tokio7runtime4time5wheel5Wheel15next_expiration17h9e47eb8568393497E.llvm.15467044453606460770 (1 samples, 0.01%)</title><rect x="21.5723%" y="949" width="0.0118%" height="15" fill="rgb(233,63,24)" fg:x="1822" fg:w="1"/><text x="21.8223%" y="959.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (1 samples, 0.01%)</title><rect x="21.6079%" y="885" width="0.0118%" height="15" fill="rgb(225,8,4)" fg:x="1825" fg:w="1"/><text x="21.8579%" y="895.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (1 samples, 0.01%)</title><rect x="21.6079%" y="869" width="0.0118%" height="15" fill="rgb(234,105,35)" fg:x="1825" fg:w="1"/><text x="21.8579%" y="879.50"></text></g><g><title>tokio::runtime::time::Inner::lock_sharded_wheel (4 samples, 0.05%)</title><rect x="21.5842%" y="949" width="0.0474%" height="15" fill="rgb(236,21,32)" fg:x="1823" fg:w="4"/><text x="21.8342%" y="959.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (2 samples, 0.02%)</title><rect x="21.6079%" y="933" width="0.0237%" height="15" fill="rgb(228,109,6)" fg:x="1825" fg:w="2"/><text x="21.8579%" y="943.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.02%)</title><rect x="21.6079%" y="917" width="0.0237%" height="15" fill="rgb(229,215,31)" fg:x="1825" fg:w="2"/><text x="21.8579%" y="927.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.02%)</title><rect x="21.6079%" y="901" width="0.0237%" height="15" fill="rgb(221,52,54)" fg:x="1825" fg:w="2"/><text x="21.8579%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.01%)</title><rect x="21.6197%" y="885" width="0.0118%" height="15" fill="rgb(252,129,43)" fg:x="1826" fg:w="1"/><text x="21.8697%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="21.6197%" y="869" width="0.0118%" height="15" fill="rgb(248,183,27)" fg:x="1826" fg:w="1"/><text x="21.8697%" y="879.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::elapsed (1 samples, 0.01%)</title><rect x="21.6315%" y="949" width="0.0118%" height="15" fill="rgb(250,0,22)" fg:x="1827" fg:w="1"/><text x="21.8815%" y="959.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (2 samples, 0.02%)</title><rect x="21.6434%" y="949" width="0.0237%" height="15" fill="rgb(213,166,10)" fg:x="1828" fg:w="2"/><text x="21.8934%" y="959.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (1 samples, 0.01%)</title><rect x="21.6552%" y="933" width="0.0118%" height="15" fill="rgb(207,163,36)" fg:x="1829" fg:w="1"/><text x="21.9052%" y="943.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (1 samples, 0.01%)</title><rect x="21.6552%" y="917" width="0.0118%" height="15" fill="rgb(208,122,22)" fg:x="1829" fg:w="1"/><text x="21.9052%" y="927.50"></text></g><g><title>_ZN5tokio7runtime4time5wheel5Wheel15next_expiration17h9e47eb8568393497E.llvm.15467044453606460770 (11 samples, 0.13%)</title><rect x="21.6671%" y="933" width="0.1302%" height="15" fill="rgb(207,104,49)" fg:x="1830" fg:w="11"/><text x="21.9171%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.08%)</title><rect x="22.1999%" y="917" width="0.0829%" height="15" fill="rgb(248,211,50)" fg:x="1875" fg:w="7"/><text x="22.4499%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.08%)</title><rect x="22.1999%" y="901" width="0.0829%" height="15" fill="rgb(217,13,45)" fg:x="1875" fg:w="7"/><text x="22.4499%" y="911.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.08%)</title><rect x="22.1999%" y="885" width="0.0829%" height="15" fill="rgb(211,216,49)" fg:x="1875" fg:w="7"/><text x="22.4499%" y="895.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.01%)</title><rect x="22.4485%" y="853" width="0.0118%" height="15" fill="rgb(221,58,53)" fg:x="1896" fg:w="1"/><text x="22.6985%" y="863.50"></text></g><g><title>handle_softirqs (1 samples, 0.01%)</title><rect x="22.4485%" y="837" width="0.0118%" height="15" fill="rgb(220,112,41)" fg:x="1896" fg:w="1"/><text x="22.6985%" y="847.50"></text></g><g><title>net_rx_action (1 samples, 0.01%)</title><rect x="22.4485%" y="821" width="0.0118%" height="15" fill="rgb(236,38,28)" fg:x="1896" fg:w="1"/><text x="22.6985%" y="831.50"></text></g><g><title>__napi_poll (1 samples, 0.01%)</title><rect x="22.4485%" y="805" width="0.0118%" height="15" fill="rgb(227,195,22)" fg:x="1896" fg:w="1"/><text x="22.6985%" y="815.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="22.4485%" y="789" width="0.0118%" height="15" fill="rgb(214,55,33)" fg:x="1896" fg:w="1"/><text x="22.6985%" y="799.50"></text></g><g><title>napi_complete_done (1 samples, 0.01%)</title><rect x="22.4485%" y="773" width="0.0118%" height="15" fill="rgb(248,80,13)" fg:x="1896" fg:w="1"/><text x="22.6985%" y="783.50"></text></g><g><title>netif_receive_skb_list_internal (1 samples, 0.01%)</title><rect x="22.4485%" y="757" width="0.0118%" height="15" fill="rgb(238,52,6)" fg:x="1896" fg:w="1"/><text x="22.6985%" y="767.50"></text></g><g><title>__netif_receive_skb_list_core (1 samples, 0.01%)</title><rect x="22.4485%" y="741" width="0.0118%" height="15" fill="rgb(224,198,47)" fg:x="1896" fg:w="1"/><text x="22.6985%" y="751.50"></text></g><g><title>ip_list_rcv (1 samples, 0.01%)</title><rect x="22.4485%" y="725" width="0.0118%" height="15" fill="rgb(233,171,20)" fg:x="1896" fg:w="1"/><text x="22.6985%" y="735.50"></text></g><g><title>ip_sublist_rcv (1 samples, 0.01%)</title><rect x="22.4485%" y="709" width="0.0118%" height="15" fill="rgb(241,30,25)" fg:x="1896" fg:w="1"/><text x="22.6985%" y="719.50"></text></g><g><title>ip_local_deliver (1 samples, 0.01%)</title><rect x="22.4485%" y="693" width="0.0118%" height="15" fill="rgb(207,171,38)" fg:x="1896" fg:w="1"/><text x="22.6985%" y="703.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.01%)</title><rect x="22.4485%" y="677" width="0.0118%" height="15" fill="rgb(234,70,1)" fg:x="1896" fg:w="1"/><text x="22.6985%" y="687.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.01%)</title><rect x="22.4485%" y="661" width="0.0118%" height="15" fill="rgb(232,178,18)" fg:x="1896" fg:w="1"/><text x="22.6985%" y="671.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.01%)</title><rect x="22.4485%" y="645" width="0.0118%" height="15" fill="rgb(241,78,40)" fg:x="1896" fg:w="1"/><text x="22.6985%" y="655.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.01%)</title><rect x="22.4485%" y="629" width="0.0118%" height="15" fill="rgb(222,35,25)" fg:x="1896" fg:w="1"/><text x="22.6985%" y="639.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.01%)</title><rect x="22.4485%" y="613" width="0.0118%" height="15" fill="rgb(207,92,16)" fg:x="1896" fg:w="1"/><text x="22.6985%" y="623.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.01%)</title><rect x="22.4485%" y="597" width="0.0118%" height="15" fill="rgb(216,59,51)" fg:x="1896" fg:w="1"/><text x="22.6985%" y="607.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.01%)</title><rect x="22.4485%" y="581" width="0.0118%" height="15" fill="rgb(213,80,28)" fg:x="1896" fg:w="1"/><text x="22.6985%" y="591.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.01%)</title><rect x="22.4485%" y="565" width="0.0118%" height="15" fill="rgb(220,93,7)" fg:x="1896" fg:w="1"/><text x="22.6985%" y="575.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.01%)</title><rect x="22.4485%" y="549" width="0.0118%" height="15" fill="rgb(225,24,44)" fg:x="1896" fg:w="1"/><text x="22.6985%" y="559.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="22.4603%" y="821" width="0.0118%" height="15" fill="rgb(243,74,40)" fg:x="1897" fg:w="1"/><text x="22.7103%" y="831.50"></text></g><g><title>tick_nohz_handler (1 samples, 0.01%)</title><rect x="22.4603%" y="805" width="0.0118%" height="15" fill="rgb(228,39,7)" fg:x="1897" fg:w="1"/><text x="22.7103%" y="815.50"></text></g><g><title>update_process_times (1 samples, 0.01%)</title><rect x="22.4603%" y="789" width="0.0118%" height="15" fill="rgb(227,79,8)" fg:x="1897" fg:w="1"/><text x="22.7103%" y="799.50"></text></g><g><title>scheduler_tick (1 samples, 0.01%)</title><rect x="22.4603%" y="773" width="0.0118%" height="15" fill="rgb(236,58,11)" fg:x="1897" fg:w="1"/><text x="22.7103%" y="783.50"></text></g><g><title>task_tick_fair (1 samples, 0.01%)</title><rect x="22.4603%" y="757" width="0.0118%" height="15" fill="rgb(249,63,35)" fg:x="1897" fg:w="1"/><text x="22.7103%" y="767.50"></text></g><g><title>update_cfs_group (1 samples, 0.01%)</title><rect x="22.4603%" y="741" width="0.0118%" height="15" fill="rgb(252,114,16)" fg:x="1897" fg:w="1"/><text x="22.7103%" y="751.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (3 samples, 0.04%)</title><rect x="22.4485%" y="885" width="0.0355%" height="15" fill="rgb(254,151,24)" fg:x="1896" fg:w="3"/><text x="22.6985%" y="895.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.04%)</title><rect x="22.4485%" y="869" width="0.0355%" height="15" fill="rgb(253,54,39)" fg:x="1896" fg:w="3"/><text x="22.6985%" y="879.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="22.4603%" y="853" width="0.0237%" height="15" fill="rgb(243,25,45)" fg:x="1897" fg:w="2"/><text x="22.7103%" y="863.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.02%)</title><rect x="22.4603%" y="837" width="0.0237%" height="15" fill="rgb(234,134,9)" fg:x="1897" fg:w="2"/><text x="22.7103%" y="847.50"></text></g><g><title>ktime_get_update_offsets_now (1 samples, 0.01%)</title><rect x="22.4722%" y="821" width="0.0118%" height="15" fill="rgb(227,166,31)" fg:x="1898" fg:w="1"/><text x="22.7222%" y="831.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (18 samples, 0.21%)</title><rect x="22.2827%" y="917" width="0.2131%" height="15" fill="rgb(245,143,41)" fg:x="1882" fg:w="18"/><text x="22.5327%" y="927.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (18 samples, 0.21%)</title><rect x="22.2827%" y="901" width="0.2131%" height="15" fill="rgb(238,181,32)" fg:x="1882" fg:w="18"/><text x="22.5327%" y="911.50"></text></g><g><title>asm_sysvec_call_function_single (1 samples, 0.01%)</title><rect x="22.4840%" y="885" width="0.0118%" height="15" fill="rgb(224,113,18)" fg:x="1899" fg:w="1"/><text x="22.7340%" y="895.50"></text></g><g><title>sysvec_call_function_single (1 samples, 0.01%)</title><rect x="22.4840%" y="869" width="0.0118%" height="15" fill="rgb(240,229,28)" fg:x="1899" fg:w="1"/><text x="22.7340%" y="879.50"></text></g><g><title>__sysvec_call_function_single (1 samples, 0.01%)</title><rect x="22.4840%" y="853" width="0.0118%" height="15" fill="rgb(250,185,3)" fg:x="1899" fg:w="1"/><text x="22.7340%" y="863.50"></text></g><g><title>__flush_smp_call_function_queue (1 samples, 0.01%)</title><rect x="22.4840%" y="837" width="0.0118%" height="15" fill="rgb(212,59,25)" fg:x="1899" fg:w="1"/><text x="22.7340%" y="847.50"></text></g><g><title>sched_ttwu_pending (1 samples, 0.01%)</title><rect x="22.4840%" y="821" width="0.0118%" height="15" fill="rgb(221,87,20)" fg:x="1899" fg:w="1"/><text x="22.7340%" y="831.50"></text></g><g><title>ttwu_do_activate (1 samples, 0.01%)</title><rect x="22.4840%" y="805" width="0.0118%" height="15" fill="rgb(213,74,28)" fg:x="1899" fg:w="1"/><text x="22.7340%" y="815.50"></text></g><g><title>enqueue_task (1 samples, 0.01%)</title><rect x="22.4840%" y="789" width="0.0118%" height="15" fill="rgb(224,132,34)" fg:x="1899" fg:w="1"/><text x="22.7340%" y="799.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.01%)</title><rect x="22.4840%" y="773" width="0.0118%" height="15" fill="rgb(222,101,24)" fg:x="1899" fg:w="1"/><text x="22.7340%" y="783.50"></text></g><g><title>enqueue_entity (1 samples, 0.01%)</title><rect x="22.4840%" y="757" width="0.0118%" height="15" fill="rgb(254,142,4)" fg:x="1899" fg:w="1"/><text x="22.7340%" y="767.50"></text></g><g><title>update_load_avg (1 samples, 0.01%)</title><rect x="22.4840%" y="741" width="0.0118%" height="15" fill="rgb(230,229,49)" fg:x="1899" fg:w="1"/><text x="22.7340%" y="751.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.01%)</title><rect x="22.4840%" y="725" width="0.0118%" height="15" fill="rgb(238,70,47)" fg:x="1899" fg:w="1"/><text x="22.7340%" y="735.50"></text></g><g><title>sched_clock (1 samples, 0.01%)</title><rect x="22.4840%" y="709" width="0.0118%" height="15" fill="rgb(231,160,17)" fg:x="1899" fg:w="1"/><text x="22.7340%" y="719.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (74 samples, 0.88%)</title><rect x="21.6671%" y="949" width="0.8762%" height="15" fill="rgb(218,68,53)" fg:x="1830" fg:w="74"/><text x="21.9171%" y="959.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (63 samples, 0.75%)</title><rect x="21.7973%" y="933" width="0.7459%" height="15" fill="rgb(236,111,10)" fg:x="1841" fg:w="63"/><text x="22.0473%" y="943.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (4 samples, 0.05%)</title><rect x="22.4959%" y="917" width="0.0474%" height="15" fill="rgb(224,34,41)" fg:x="1900" fg:w="4"/><text x="22.7459%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (4 samples, 0.05%)</title><rect x="22.4959%" y="901" width="0.0474%" height="15" fill="rgb(241,118,19)" fg:x="1900" fg:w="4"/><text x="22.7459%" y="911.50"></text></g><g><title>_ZN5tokio7runtime4time6Driver13park_internal17h5818add516c45510E.llvm.3466439444723293063 (1,007 samples, 11.92%)</title><rect x="10.6559%" y="997" width="11.9228%" height="15" fill="rgb(238,129,25)" fg:x="900" fg:w="1007"/><text x="10.9059%" y="1007.50">_ZN5tokio7runtime4..</text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (112 samples, 1.33%)</title><rect x="21.2527%" y="981" width="1.3261%" height="15" fill="rgb(238,22,31)" fg:x="1795" fg:w="112"/><text x="21.5027%" y="991.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (85 samples, 1.01%)</title><rect x="21.5723%" y="965" width="1.0064%" height="15" fill="rgb(222,174,48)" fg:x="1822" fg:w="85"/><text x="21.8223%" y="975.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (3 samples, 0.04%)</title><rect x="22.5432%" y="949" width="0.0355%" height="15" fill="rgb(206,152,40)" fg:x="1904" fg:w="3"/><text x="22.7932%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="22.5669%" y="933" width="0.0118%" height="15" fill="rgb(218,99,54)" fg:x="1906" fg:w="1"/><text x="22.8169%" y="943.50"></text></g><g><title>__x86_indirect_thunk_array (1 samples, 0.01%)</title><rect x="22.5906%" y="821" width="0.0118%" height="15" fill="rgb(220,174,26)" fg:x="1908" fg:w="1"/><text x="22.8406%" y="831.50"></text></g><g><title>__pmu_ctx_sched_out (3 samples, 0.04%)</title><rect x="22.6616%" y="645" width="0.0355%" height="15" fill="rgb(245,116,9)" fg:x="1914" fg:w="3"/><text x="22.9116%" y="655.50"></text></g><g><title>group_sched_out (2 samples, 0.02%)</title><rect x="22.6735%" y="629" width="0.0237%" height="15" fill="rgb(209,72,35)" fg:x="1915" fg:w="2"/><text x="22.9235%" y="639.50"></text></g><g><title>event_sched_out (2 samples, 0.02%)</title><rect x="22.6735%" y="613" width="0.0237%" height="15" fill="rgb(226,126,21)" fg:x="1915" fg:w="2"/><text x="22.9235%" y="623.50"></text></g><g><title>perf_ibs_del (2 samples, 0.02%)</title><rect x="22.6735%" y="597" width="0.0237%" height="15" fill="rgb(227,192,1)" fg:x="1915" fg:w="2"/><text x="22.9235%" y="607.50"></text></g><g><title>perf_ibs_stop (2 samples, 0.02%)</title><rect x="22.6735%" y="581" width="0.0237%" height="15" fill="rgb(237,180,29)" fg:x="1915" fg:w="2"/><text x="22.9235%" y="591.50"></text></g><g><title>__perf_event_task_sched_out (4 samples, 0.05%)</title><rect x="22.6616%" y="677" width="0.0474%" height="15" fill="rgb(230,197,35)" fg:x="1914" fg:w="4"/><text x="22.9116%" y="687.50"></text></g><g><title>ctx_sched_out (4 samples, 0.05%)</title><rect x="22.6616%" y="661" width="0.0474%" height="15" fill="rgb(246,193,31)" fg:x="1914" fg:w="4"/><text x="22.9116%" y="671.50"></text></g><g><title>local_clock (1 samples, 0.01%)</title><rect x="22.6971%" y="645" width="0.0118%" height="15" fill="rgb(241,36,4)" fg:x="1917" fg:w="1"/><text x="22.9471%" y="655.50"></text></g><g><title>local_clock_noinstr (1 samples, 0.01%)</title><rect x="22.6971%" y="629" width="0.0118%" height="15" fill="rgb(241,130,17)" fg:x="1917" fg:w="1"/><text x="22.9471%" y="639.50"></text></g><g><title>native_sched_clock (1 samples, 0.01%)</title><rect x="22.6971%" y="613" width="0.0118%" height="15" fill="rgb(206,137,32)" fg:x="1917" fg:w="1"/><text x="22.9471%" y="623.50"></text></g><g><title>update_cfs_group (1 samples, 0.01%)</title><rect x="22.7208%" y="645" width="0.0118%" height="15" fill="rgb(237,228,51)" fg:x="1919" fg:w="1"/><text x="22.9708%" y="655.50"></text></g><g><title>cpuacct_charge (1 samples, 0.01%)</title><rect x="22.7327%" y="629" width="0.0118%" height="15" fill="rgb(243,6,42)" fg:x="1920" fg:w="1"/><text x="22.9827%" y="639.50"></text></g><g><title>dequeue_entity (3 samples, 0.04%)</title><rect x="22.7208%" y="661" width="0.0355%" height="15" fill="rgb(251,74,28)" fg:x="1919" fg:w="3"/><text x="22.9708%" y="671.50"></text></g><g><title>update_curr (2 samples, 0.02%)</title><rect x="22.7327%" y="645" width="0.0237%" height="15" fill="rgb(218,20,49)" fg:x="1920" fg:w="2"/><text x="22.9827%" y="655.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="22.7445%" y="629" width="0.0118%" height="15" fill="rgb(238,28,14)" fg:x="1921" fg:w="1"/><text x="22.9945%" y="639.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="22.7445%" y="613" width="0.0118%" height="15" fill="rgb(229,40,46)" fg:x="1921" fg:w="1"/><text x="22.9945%" y="623.50"></text></g><g><title>dequeue_task_fair (5 samples, 0.06%)</title><rect x="22.7090%" y="677" width="0.0592%" height="15" fill="rgb(244,195,20)" fg:x="1918" fg:w="5"/><text x="22.9590%" y="687.50"></text></g><g><title>update_cfs_group (1 samples, 0.01%)</title><rect x="22.7563%" y="661" width="0.0118%" height="15" fill="rgb(253,56,35)" fg:x="1922" fg:w="1"/><text x="23.0063%" y="671.50"></text></g><g><title>ctx_groups_sched_in (35 samples, 0.41%)</title><rect x="22.8037%" y="645" width="0.4144%" height="15" fill="rgb(210,149,44)" fg:x="1926" fg:w="35"/><text x="23.0537%" y="655.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (34 samples, 0.40%)</title><rect x="22.8155%" y="629" width="0.4026%" height="15" fill="rgb(240,135,12)" fg:x="1927" fg:w="34"/><text x="23.0655%" y="639.50"></text></g><g><title>merge_sched_in (24 samples, 0.28%)</title><rect x="22.9339%" y="613" width="0.2842%" height="15" fill="rgb(251,24,50)" fg:x="1937" fg:w="24"/><text x="23.1839%" y="623.50"></text></g><g><title>event_sched_in (24 samples, 0.28%)</title><rect x="22.9339%" y="597" width="0.2842%" height="15" fill="rgb(243,200,47)" fg:x="1937" fg:w="24"/><text x="23.1839%" y="607.50"></text></g><g><title>perf_ibs_add (23 samples, 0.27%)</title><rect x="22.9458%" y="581" width="0.2723%" height="15" fill="rgb(224,166,26)" fg:x="1938" fg:w="23"/><text x="23.1958%" y="591.50"></text></g><g><title>perf_event_update_userpage (22 samples, 0.26%)</title><rect x="22.9576%" y="565" width="0.2605%" height="15" fill="rgb(233,0,47)" fg:x="1939" fg:w="22"/><text x="23.2076%" y="575.50"></text></g><g><title>arch_perf_update_userpage (8 samples, 0.09%)</title><rect x="23.1234%" y="549" width="0.0947%" height="15" fill="rgb(253,80,5)" fg:x="1953" fg:w="8"/><text x="23.3734%" y="559.50"></text></g><g><title>cyc2ns_read_end (1 samples, 0.01%)</title><rect x="23.2063%" y="533" width="0.0118%" height="15" fill="rgb(214,133,25)" fg:x="1960" fg:w="1"/><text x="23.4563%" y="543.50"></text></g><g><title>perf_ctx_enable (2 samples, 0.02%)</title><rect x="23.2181%" y="645" width="0.0237%" height="15" fill="rgb(209,27,14)" fg:x="1961" fg:w="2"/><text x="23.4681%" y="655.50"></text></g><g><title>__perf_event_task_sched_in (40 samples, 0.47%)</title><rect x="22.7800%" y="661" width="0.4736%" height="15" fill="rgb(219,102,51)" fg:x="1924" fg:w="40"/><text x="23.0300%" y="671.50"></text></g><g><title>perf_ctx_sched_task_cb (1 samples, 0.01%)</title><rect x="23.2418%" y="645" width="0.0118%" height="15" fill="rgb(237,18,16)" fg:x="1963" fg:w="1"/><text x="23.4918%" y="655.50"></text></g><g><title>set_task_cpu (1 samples, 0.01%)</title><rect x="23.2773%" y="469" width="0.0118%" height="15" fill="rgb(241,85,17)" fg:x="1966" fg:w="1"/><text x="23.5273%" y="479.50"></text></g><g><title>migrate_task_rq_fair (1 samples, 0.01%)</title><rect x="23.2773%" y="453" width="0.0118%" height="15" fill="rgb(236,90,42)" fg:x="1966" fg:w="1"/><text x="23.5273%" y="463.50"></text></g><g><title>finish_task_switch.isra.0 (45 samples, 0.53%)</title><rect x="22.7682%" y="677" width="0.5328%" height="15" fill="rgb(249,57,21)" fg:x="1923" fg:w="45"/><text x="23.0182%" y="687.50"></text></g><g><title>asm_sysvec_irq_work (4 samples, 0.05%)</title><rect x="23.2536%" y="661" width="0.0474%" height="15" fill="rgb(243,12,36)" fg:x="1964" fg:w="4"/><text x="23.5036%" y="671.50"></text></g><g><title>sysvec_irq_work (2 samples, 0.02%)</title><rect x="23.2773%" y="645" width="0.0237%" height="15" fill="rgb(253,128,47)" fg:x="1966" fg:w="2"/><text x="23.5273%" y="655.50"></text></g><g><title>__sysvec_irq_work (2 samples, 0.02%)</title><rect x="23.2773%" y="629" width="0.0237%" height="15" fill="rgb(207,33,20)" fg:x="1966" fg:w="2"/><text x="23.5273%" y="639.50"></text></g><g><title>irq_work_run (2 samples, 0.02%)</title><rect x="23.2773%" y="613" width="0.0237%" height="15" fill="rgb(233,215,35)" fg:x="1966" fg:w="2"/><text x="23.5273%" y="623.50"></text></g><g><title>irq_work_run_list (2 samples, 0.02%)</title><rect x="23.2773%" y="597" width="0.0237%" height="15" fill="rgb(249,188,52)" fg:x="1966" fg:w="2"/><text x="23.5273%" y="607.50"></text></g><g><title>irq_work_single (2 samples, 0.02%)</title><rect x="23.2773%" y="581" width="0.0237%" height="15" fill="rgb(225,12,32)" fg:x="1966" fg:w="2"/><text x="23.5273%" y="591.50"></text></g><g><title>perf_pending_irq (2 samples, 0.02%)</title><rect x="23.2773%" y="565" width="0.0237%" height="15" fill="rgb(247,98,14)" fg:x="1966" fg:w="2"/><text x="23.5273%" y="575.50"></text></g><g><title>perf_event_wakeup (2 samples, 0.02%)</title><rect x="23.2773%" y="549" width="0.0237%" height="15" fill="rgb(247,219,48)" fg:x="1966" fg:w="2"/><text x="23.5273%" y="559.50"></text></g><g><title>__wake_up (2 samples, 0.02%)</title><rect x="23.2773%" y="533" width="0.0237%" height="15" fill="rgb(253,60,48)" fg:x="1966" fg:w="2"/><text x="23.5273%" y="543.50"></text></g><g><title>__wake_up_common (2 samples, 0.02%)</title><rect x="23.2773%" y="517" width="0.0237%" height="15" fill="rgb(245,15,52)" fg:x="1966" fg:w="2"/><text x="23.5273%" y="527.50"></text></g><g><title>pollwake (2 samples, 0.02%)</title><rect x="23.2773%" y="501" width="0.0237%" height="15" fill="rgb(220,133,28)" fg:x="1966" fg:w="2"/><text x="23.5273%" y="511.50"></text></g><g><title>try_to_wake_up (2 samples, 0.02%)</title><rect x="23.2773%" y="485" width="0.0237%" height="15" fill="rgb(217,180,4)" fg:x="1966" fg:w="2"/><text x="23.5273%" y="495.50"></text></g><g><title>ttwu_do_activate (1 samples, 0.01%)</title><rect x="23.2891%" y="469" width="0.0118%" height="15" fill="rgb(251,24,1)" fg:x="1967" fg:w="1"/><text x="23.5391%" y="479.50"></text></g><g><title>enqueue_task (1 samples, 0.01%)</title><rect x="23.2891%" y="453" width="0.0118%" height="15" fill="rgb(212,185,49)" fg:x="1967" fg:w="1"/><text x="23.5391%" y="463.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.01%)</title><rect x="23.2891%" y="437" width="0.0118%" height="15" fill="rgb(215,175,22)" fg:x="1967" fg:w="1"/><text x="23.5391%" y="447.50"></text></g><g><title>enqueue_entity (1 samples, 0.01%)</title><rect x="23.2891%" y="421" width="0.0118%" height="15" fill="rgb(250,205,14)" fg:x="1967" fg:w="1"/><text x="23.5391%" y="431.50"></text></g><g><title>update_curr (1 samples, 0.01%)</title><rect x="23.2891%" y="405" width="0.0118%" height="15" fill="rgb(225,211,22)" fg:x="1967" fg:w="1"/><text x="23.5391%" y="415.50"></text></g><g><title>cpuacct_charge (1 samples, 0.01%)</title><rect x="23.2891%" y="389" width="0.0118%" height="15" fill="rgb(251,179,42)" fg:x="1967" fg:w="1"/><text x="23.5391%" y="399.50"></text></g><g><title>load_balance (3 samples, 0.04%)</title><rect x="23.3010%" y="645" width="0.0355%" height="15" fill="rgb(208,216,51)" fg:x="1968" fg:w="3"/><text x="23.5510%" y="655.50"></text></g><g><title>find_busiest_group (2 samples, 0.02%)</title><rect x="23.3128%" y="629" width="0.0237%" height="15" fill="rgb(235,36,11)" fg:x="1969" fg:w="2"/><text x="23.5628%" y="639.50"></text></g><g><title>update_sd_lb_stats.constprop.0 (2 samples, 0.02%)</title><rect x="23.3128%" y="613" width="0.0237%" height="15" fill="rgb(213,189,28)" fg:x="1969" fg:w="2"/><text x="23.5628%" y="623.50"></text></g><g><title>idle_cpu (1 samples, 0.01%)</title><rect x="23.3247%" y="597" width="0.0118%" height="15" fill="rgb(227,203,42)" fg:x="1970" fg:w="1"/><text x="23.5747%" y="607.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.01%)</title><rect x="23.3365%" y="645" width="0.0118%" height="15" fill="rgb(244,72,36)" fg:x="1971" fg:w="1"/><text x="23.5865%" y="655.50"></text></g><g><title>sched_clock (1 samples, 0.01%)</title><rect x="23.3365%" y="629" width="0.0118%" height="15" fill="rgb(213,53,17)" fg:x="1971" fg:w="1"/><text x="23.5865%" y="639.50"></text></g><g><title>sched_clock_noinstr (1 samples, 0.01%)</title><rect x="23.3365%" y="613" width="0.0118%" height="15" fill="rgb(207,167,3)" fg:x="1971" fg:w="1"/><text x="23.5865%" y="623.50"></text></g><g><title>update_load_avg (1 samples, 0.01%)</title><rect x="23.3602%" y="629" width="0.0118%" height="15" fill="rgb(216,98,30)" fg:x="1973" fg:w="1"/><text x="23.6102%" y="639.50"></text></g><g><title>newidle_balance (7 samples, 0.08%)</title><rect x="23.3010%" y="661" width="0.0829%" height="15" fill="rgb(236,123,15)" fg:x="1968" fg:w="7"/><text x="23.5510%" y="671.50"></text></g><g><title>update_blocked_averages (3 samples, 0.04%)</title><rect x="23.3483%" y="645" width="0.0355%" height="15" fill="rgb(248,81,50)" fg:x="1972" fg:w="3"/><text x="23.5983%" y="655.50"></text></g><g><title>update_rt_rq_load_avg (1 samples, 0.01%)</title><rect x="23.3720%" y="629" width="0.0118%" height="15" fill="rgb(214,120,4)" fg:x="1974" fg:w="1"/><text x="23.6220%" y="639.50"></text></g><g><title>pick_next_task_fair (8 samples, 0.09%)</title><rect x="23.3010%" y="677" width="0.0947%" height="15" fill="rgb(208,179,34)" fg:x="1968" fg:w="8"/><text x="23.5510%" y="687.50"></text></g><g><title>set_next_entity (1 samples, 0.01%)</title><rect x="23.3839%" y="661" width="0.0118%" height="15" fill="rgb(227,140,7)" fg:x="1975" fg:w="1"/><text x="23.6339%" y="671.50"></text></g><g><title>update_load_avg (1 samples, 0.01%)</title><rect x="23.3839%" y="645" width="0.0118%" height="15" fill="rgb(214,22,6)" fg:x="1975" fg:w="1"/><text x="23.6339%" y="655.50"></text></g><g><title>psi_task_switch (1 samples, 0.01%)</title><rect x="23.3957%" y="677" width="0.0118%" height="15" fill="rgb(207,137,27)" fg:x="1976" fg:w="1"/><text x="23.6457%" y="687.50"></text></g><g><title>psi_group_change (1 samples, 0.01%)</title><rect x="23.3957%" y="661" width="0.0118%" height="15" fill="rgb(210,8,46)" fg:x="1976" fg:w="1"/><text x="23.6457%" y="671.50"></text></g><g><title>put_prev_task_fair (1 samples, 0.01%)</title><rect x="23.4075%" y="677" width="0.0118%" height="15" fill="rgb(240,16,54)" fg:x="1977" fg:w="1"/><text x="23.6575%" y="687.50"></text></g><g><title>put_prev_entity (1 samples, 0.01%)</title><rect x="23.4075%" y="661" width="0.0118%" height="15" fill="rgb(211,209,29)" fg:x="1977" fg:w="1"/><text x="23.6575%" y="671.50"></text></g><g><title>__futex_wait (66 samples, 0.78%)</title><rect x="22.6498%" y="741" width="0.7814%" height="15" fill="rgb(226,228,24)" fg:x="1913" fg:w="66"/><text x="22.8998%" y="751.50"></text></g><g><title>futex_wait_queue (66 samples, 0.78%)</title><rect x="22.6498%" y="725" width="0.7814%" height="15" fill="rgb(222,84,9)" fg:x="1913" fg:w="66"/><text x="22.8998%" y="735.50"></text></g><g><title>schedule (66 samples, 0.78%)</title><rect x="22.6498%" y="709" width="0.7814%" height="15" fill="rgb(234,203,30)" fg:x="1913" fg:w="66"/><text x="22.8998%" y="719.50"></text></g><g><title>__schedule (66 samples, 0.78%)</title><rect x="22.6498%" y="693" width="0.7814%" height="15" fill="rgb(238,109,14)" fg:x="1913" fg:w="66"/><text x="22.8998%" y="703.50"></text></g><g><title>update_rq_clock (1 samples, 0.01%)</title><rect x="23.4194%" y="677" width="0.0118%" height="15" fill="rgb(233,206,34)" fg:x="1978" fg:w="1"/><text x="23.6694%" y="687.50"></text></g><g><title>update_irq_load_avg (1 samples, 0.01%)</title><rect x="23.4194%" y="661" width="0.0118%" height="15" fill="rgb(220,167,47)" fg:x="1978" fg:w="1"/><text x="23.6694%" y="671.50"></text></g><g><title>__x64_sys_futex (73 samples, 0.86%)</title><rect x="22.6024%" y="789" width="0.8643%" height="15" fill="rgb(238,105,10)" fg:x="1909" fg:w="73"/><text x="22.8524%" y="799.50"></text></g><g><title>do_futex (73 samples, 0.86%)</title><rect x="22.6024%" y="773" width="0.8643%" height="15" fill="rgb(213,227,17)" fg:x="1909" fg:w="73"/><text x="22.8524%" y="783.50"></text></g><g><title>futex_wait (73 samples, 0.86%)</title><rect x="22.6024%" y="757" width="0.8643%" height="15" fill="rgb(217,132,38)" fg:x="1909" fg:w="73"/><text x="22.8524%" y="767.50"></text></g><g><title>asm_sysvec_irq_work (3 samples, 0.04%)</title><rect x="23.4312%" y="741" width="0.0355%" height="15" fill="rgb(242,146,4)" fg:x="1979" fg:w="3"/><text x="23.6812%" y="751.50"></text></g><g><title>sysvec_irq_work (2 samples, 0.02%)</title><rect x="23.4430%" y="725" width="0.0237%" height="15" fill="rgb(212,61,9)" fg:x="1980" fg:w="2"/><text x="23.6930%" y="735.50"></text></g><g><title>__sysvec_irq_work (2 samples, 0.02%)</title><rect x="23.4430%" y="709" width="0.0237%" height="15" fill="rgb(247,126,22)" fg:x="1980" fg:w="2"/><text x="23.6930%" y="719.50"></text></g><g><title>irq_work_run (2 samples, 0.02%)</title><rect x="23.4430%" y="693" width="0.0237%" height="15" fill="rgb(220,196,2)" fg:x="1980" fg:w="2"/><text x="23.6930%" y="703.50"></text></g><g><title>irq_work_run_list (2 samples, 0.02%)</title><rect x="23.4430%" y="677" width="0.0237%" height="15" fill="rgb(208,46,4)" fg:x="1980" fg:w="2"/><text x="23.6930%" y="687.50"></text></g><g><title>irq_work_single (2 samples, 0.02%)</title><rect x="23.4430%" y="661" width="0.0237%" height="15" fill="rgb(252,104,46)" fg:x="1980" fg:w="2"/><text x="23.6930%" y="671.50"></text></g><g><title>perf_pending_irq (2 samples, 0.02%)</title><rect x="23.4430%" y="645" width="0.0237%" height="15" fill="rgb(237,152,48)" fg:x="1980" fg:w="2"/><text x="23.6930%" y="655.50"></text></g><g><title>perf_event_wakeup (2 samples, 0.02%)</title><rect x="23.4430%" y="629" width="0.0237%" height="15" fill="rgb(221,59,37)" fg:x="1980" fg:w="2"/><text x="23.6930%" y="639.50"></text></g><g><title>__wake_up (2 samples, 0.02%)</title><rect x="23.4430%" y="613" width="0.0237%" height="15" fill="rgb(209,202,51)" fg:x="1980" fg:w="2"/><text x="23.6930%" y="623.50"></text></g><g><title>__wake_up_common (2 samples, 0.02%)</title><rect x="23.4430%" y="597" width="0.0237%" height="15" fill="rgb(228,81,30)" fg:x="1980" fg:w="2"/><text x="23.6930%" y="607.50"></text></g><g><title>pollwake (1 samples, 0.01%)</title><rect x="23.4549%" y="581" width="0.0118%" height="15" fill="rgb(227,42,39)" fg:x="1981" fg:w="1"/><text x="23.7049%" y="591.50"></text></g><g><title>try_to_wake_up (1 samples, 0.01%)</title><rect x="23.4549%" y="565" width="0.0118%" height="15" fill="rgb(221,26,2)" fg:x="1981" fg:w="1"/><text x="23.7049%" y="575.50"></text></g><g><title>__rseq_handle_notify_resume (1 samples, 0.01%)</title><rect x="23.5022%" y="773" width="0.0118%" height="15" fill="rgb(254,61,31)" fg:x="1985" fg:w="1"/><text x="23.7522%" y="783.50"></text></g><g><title>__get_user_8 (1 samples, 0.01%)</title><rect x="23.5022%" y="757" width="0.0118%" height="15" fill="rgb(222,173,38)" fg:x="1985" fg:w="1"/><text x="23.7522%" y="767.50"></text></g><g><title>do_syscall_64 (78 samples, 0.92%)</title><rect x="22.6024%" y="805" width="0.9235%" height="15" fill="rgb(218,50,12)" fg:x="1909" fg:w="78"/><text x="22.8524%" y="815.50"></text></g><g><title>syscall_exit_to_user_mode (5 samples, 0.06%)</title><rect x="23.4667%" y="789" width="0.0592%" height="15" fill="rgb(223,88,40)" fg:x="1982" fg:w="5"/><text x="23.7167%" y="799.50"></text></g><g><title>switch_fpu_return (1 samples, 0.01%)</title><rect x="23.5141%" y="773" width="0.0118%" height="15" fill="rgb(237,54,19)" fg:x="1986" fg:w="1"/><text x="23.7641%" y="783.50"></text></g><g><title>restore_fpregs_from_fpstate (1 samples, 0.01%)</title><rect x="23.5141%" y="757" width="0.0118%" height="15" fill="rgb(251,129,25)" fg:x="1986" fg:w="1"/><text x="23.7641%" y="767.50"></text></g><g><title>entry_SYSCALL_64 (79 samples, 0.94%)</title><rect x="22.6024%" y="821" width="0.9354%" height="15" fill="rgb(238,97,19)" fg:x="1909" fg:w="79"/><text x="22.8524%" y="831.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="23.5259%" y="805" width="0.0118%" height="15" fill="rgb(240,169,18)" fg:x="1987" fg:w="1"/><text x="23.7759%" y="815.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="23.5259%" y="789" width="0.0118%" height="15" fill="rgb(230,187,49)" fg:x="1987" fg:w="1"/><text x="23.7759%" y="799.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (82 samples, 0.97%)</title><rect x="22.5787%" y="997" width="0.9709%" height="15" fill="rgb(209,44,26)" fg:x="1907" fg:w="82"/><text x="22.8287%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (81 samples, 0.96%)</title><rect x="22.5906%" y="981" width="0.9590%" height="15" fill="rgb(244,0,6)" fg:x="1908" fg:w="81"/><text x="22.8406%" y="991.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (81 samples, 0.96%)</title><rect x="22.5906%" y="965" width="0.9590%" height="15" fill="rgb(248,18,21)" fg:x="1908" fg:w="81"/><text x="22.8406%" y="975.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (81 samples, 0.96%)</title><rect x="22.5906%" y="949" width="0.9590%" height="15" fill="rgb(245,180,19)" fg:x="1908" fg:w="81"/><text x="22.8406%" y="959.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (81 samples, 0.96%)</title><rect x="22.5906%" y="933" width="0.9590%" height="15" fill="rgb(252,118,36)" fg:x="1908" fg:w="81"/><text x="22.8406%" y="943.50"></text></g><g><title>parking_lot_core::parking_lot::park (81 samples, 0.96%)</title><rect x="22.5906%" y="917" width="0.9590%" height="15" fill="rgb(210,224,19)" fg:x="1908" fg:w="81"/><text x="22.8406%" y="927.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (81 samples, 0.96%)</title><rect x="22.5906%" y="901" width="0.9590%" height="15" fill="rgb(218,30,24)" fg:x="1908" fg:w="81"/><text x="22.8406%" y="911.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (81 samples, 0.96%)</title><rect x="22.5906%" y="885" width="0.9590%" height="15" fill="rgb(219,75,50)" fg:x="1908" fg:w="81"/><text x="22.8406%" y="895.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (81 samples, 0.96%)</title><rect x="22.5906%" y="869" width="0.9590%" height="15" fill="rgb(234,72,50)" fg:x="1908" fg:w="81"/><text x="22.8406%" y="879.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (81 samples, 0.96%)</title><rect x="22.5906%" y="853" width="0.9590%" height="15" fill="rgb(219,100,48)" fg:x="1908" fg:w="81"/><text x="22.8406%" y="863.50"></text></g><g><title>syscall (81 samples, 0.96%)</title><rect x="22.5906%" y="837" width="0.9590%" height="15" fill="rgb(253,5,41)" fg:x="1908" fg:w="81"/><text x="22.8406%" y="847.50"></text></g><g><title>syscall_return_via_sysret (1 samples, 0.01%)</title><rect x="23.5378%" y="821" width="0.0118%" height="15" fill="rgb(247,181,11)" fg:x="1988" fg:w="1"/><text x="23.7878%" y="831.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (3 samples, 0.04%)</title><rect x="23.5496%" y="997" width="0.0355%" height="15" fill="rgb(222,223,25)" fg:x="1989" fg:w="3"/><text x="23.7996%" y="1007.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.04%)</title><rect x="23.5496%" y="981" width="0.0355%" height="15" fill="rgb(214,198,28)" fg:x="1989" fg:w="3"/><text x="23.7996%" y="991.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (3 samples, 0.04%)</title><rect x="23.5496%" y="965" width="0.0355%" height="15" fill="rgb(230,46,43)" fg:x="1989" fg:w="3"/><text x="23.7996%" y="975.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (3 samples, 0.04%)</title><rect x="23.5496%" y="949" width="0.0355%" height="15" fill="rgb(233,65,53)" fg:x="1989" fg:w="3"/><text x="23.7996%" y="959.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (1 samples, 0.01%)</title><rect x="23.5851%" y="981" width="0.0118%" height="15" fill="rgb(221,121,27)" fg:x="1992" fg:w="1"/><text x="23.8351%" y="991.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_parked (1 samples, 0.01%)</title><rect x="23.5851%" y="965" width="0.0118%" height="15" fill="rgb(247,70,47)" fg:x="1992" fg:w="1"/><text x="23.8351%" y="975.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (1 samples, 0.01%)</title><rect x="23.5851%" y="949" width="0.0118%" height="15" fill="rgb(228,85,35)" fg:x="1992" fg:w="1"/><text x="23.8351%" y="959.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::is_empty (1 samples, 0.01%)</title><rect x="23.5851%" y="933" width="0.0118%" height="15" fill="rgb(209,50,18)" fg:x="1992" fg:w="1"/><text x="23.8351%" y="943.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::is_empty (1 samples, 0.01%)</title><rect x="23.5851%" y="917" width="0.0118%" height="15" fill="rgb(250,19,35)" fg:x="1992" fg:w="1"/><text x="23.8351%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (4 samples, 0.05%)</title><rect x="23.5851%" y="997" width="0.0474%" height="15" fill="rgb(253,107,29)" fg:x="1992" fg:w="4"/><text x="23.8351%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (3 samples, 0.04%)</title><rect x="23.5970%" y="981" width="0.0355%" height="15" fill="rgb(252,179,29)" fg:x="1993" fg:w="3"/><text x="23.8470%" y="991.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.01%)</title><rect x="23.6206%" y="965" width="0.0118%" height="15" fill="rgb(238,194,6)" fg:x="1995" fg:w="1"/><text x="23.8706%" y="975.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.01%)</title><rect x="23.6206%" y="949" width="0.0118%" height="15" fill="rgb(238,164,29)" fg:x="1995" fg:w="1"/><text x="23.8706%" y="959.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.01%)</title><rect x="23.6206%" y="933" width="0.0118%" height="15" fill="rgb(224,25,9)" fg:x="1995" fg:w="1"/><text x="23.8706%" y="943.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="23.6680%" y="981" width="0.0118%" height="15" fill="rgb(244,153,23)" fg:x="1999" fg:w="1"/><text x="23.9180%" y="991.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="23.6680%" y="965" width="0.0118%" height="15" fill="rgb(212,203,14)" fg:x="1999" fg:w="1"/><text x="23.9180%" y="975.50"></text></g><g><title>__common_interrupt (1 samples, 0.01%)</title><rect x="23.6680%" y="949" width="0.0118%" height="15" fill="rgb(220,164,20)" fg:x="1999" fg:w="1"/><text x="23.9180%" y="959.50"></text></g><g><title>handle_edge_irq (1 samples, 0.01%)</title><rect x="23.6680%" y="933" width="0.0118%" height="15" fill="rgb(222,203,48)" fg:x="1999" fg:w="1"/><text x="23.9180%" y="943.50"></text></g><g><title>handle_irq_event (1 samples, 0.01%)</title><rect x="23.6680%" y="917" width="0.0118%" height="15" fill="rgb(215,159,22)" fg:x="1999" fg:w="1"/><text x="23.9180%" y="927.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="23.6680%" y="901" width="0.0118%" height="15" fill="rgb(216,183,47)" fg:x="1999" fg:w="1"/><text x="23.9180%" y="911.50"></text></g><g><title>[[amdgpu]] (1 samples, 0.01%)</title><rect x="23.6680%" y="885" width="0.0118%" height="15" fill="rgb(229,195,25)" fg:x="1999" fg:w="1"/><text x="23.9180%" y="895.50"></text></g><g><title>[[amdgpu]] (1 samples, 0.01%)</title><rect x="23.6680%" y="869" width="0.0118%" height="15" fill="rgb(224,132,51)" fg:x="1999" fg:w="1"/><text x="23.9180%" y="879.50"></text></g><g><title>[[amdgpu]] (1 samples, 0.01%)</title><rect x="23.6680%" y="853" width="0.0118%" height="15" fill="rgb(240,63,7)" fg:x="1999" fg:w="1"/><text x="23.9180%" y="863.50"></text></g><g><title>[[amdgpu]] (1 samples, 0.01%)</title><rect x="23.6680%" y="837" width="0.0118%" height="15" fill="rgb(249,182,41)" fg:x="1999" fg:w="1"/><text x="23.9180%" y="847.50"></text></g><g><title>[[amdgpu]] (1 samples, 0.01%)</title><rect x="23.6680%" y="821" width="0.0118%" height="15" fill="rgb(243,47,26)" fg:x="1999" fg:w="1"/><text x="23.9180%" y="831.50"></text></g><g><title>drm_crtc_accurate_vblank_count (1 samples, 0.01%)</title><rect x="23.6680%" y="805" width="0.0118%" height="15" fill="rgb(233,48,2)" fg:x="1999" fg:w="1"/><text x="23.9180%" y="815.50"></text></g><g><title>drm_update_vblank_count (1 samples, 0.01%)</title><rect x="23.6680%" y="789" width="0.0118%" height="15" fill="rgb(244,165,34)" fg:x="1999" fg:w="1"/><text x="23.9180%" y="799.50"></text></g><g><title>[[amdgpu]] (1 samples, 0.01%)</title><rect x="23.6680%" y="773" width="0.0118%" height="15" fill="rgb(207,89,7)" fg:x="1999" fg:w="1"/><text x="23.9180%" y="783.50"></text></g><g><title>[[amdgpu]] (1 samples, 0.01%)</title><rect x="23.6680%" y="757" width="0.0118%" height="15" fill="rgb(244,117,36)" fg:x="1999" fg:w="1"/><text x="23.9180%" y="767.50"></text></g><g><title>[[amdgpu]] (1 samples, 0.01%)</title><rect x="23.6680%" y="741" width="0.0118%" height="15" fill="rgb(226,144,34)" fg:x="1999" fg:w="1"/><text x="23.9180%" y="751.50"></text></g><g><title>[[amdgpu]] (1 samples, 0.01%)</title><rect x="23.6680%" y="725" width="0.0118%" height="15" fill="rgb(213,23,19)" fg:x="1999" fg:w="1"/><text x="23.9180%" y="735.50"></text></g><g><title>[[amdgpu]] (1 samples, 0.01%)</title><rect x="23.6680%" y="709" width="0.0118%" height="15" fill="rgb(217,75,12)" fg:x="1999" fg:w="1"/><text x="23.9180%" y="719.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="23.6798%" y="981" width="0.0118%" height="15" fill="rgb(224,159,17)" fg:x="2000" fg:w="1"/><text x="23.9298%" y="991.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="23.6798%" y="965" width="0.0118%" height="15" fill="rgb(217,118,1)" fg:x="2000" fg:w="1"/><text x="23.9298%" y="975.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="23.6798%" y="949" width="0.0118%" height="15" fill="rgb(232,180,48)" fg:x="2000" fg:w="1"/><text x="23.9298%" y="959.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="23.6798%" y="933" width="0.0118%" height="15" fill="rgb(230,27,33)" fg:x="2000" fg:w="1"/><text x="23.9298%" y="943.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="23.6798%" y="917" width="0.0118%" height="15" fill="rgb(205,31,21)" fg:x="2000" fg:w="1"/><text x="23.9298%" y="927.50"></text></g><g><title>tick_nohz_handler (1 samples, 0.01%)</title><rect x="23.6798%" y="901" width="0.0118%" height="15" fill="rgb(253,59,4)" fg:x="2000" fg:w="1"/><text x="23.9298%" y="911.50"></text></g><g><title>update_process_times (1 samples, 0.01%)</title><rect x="23.6798%" y="885" width="0.0118%" height="15" fill="rgb(224,201,9)" fg:x="2000" fg:w="1"/><text x="23.9298%" y="895.50"></text></g><g><title>scheduler_tick (1 samples, 0.01%)</title><rect x="23.6798%" y="869" width="0.0118%" height="15" fill="rgb(229,206,30)" fg:x="2000" fg:w="1"/><text x="23.9298%" y="879.50"></text></g><g><title>perf_event_task_tick (1 samples, 0.01%)</title><rect x="23.6798%" y="853" width="0.0118%" height="15" fill="rgb(212,67,47)" fg:x="2000" fg:w="1"/><text x="23.9298%" y="863.50"></text></g><g><title>perf_adjust_freq_unthr_context (1 samples, 0.01%)</title><rect x="23.6798%" y="837" width="0.0118%" height="15" fill="rgb(211,96,50)" fg:x="2000" fg:w="1"/><text x="23.9298%" y="847.50"></text></g><g><title>tokio::runtime::driver::Handle::time (1 samples, 0.01%)</title><rect x="23.6917%" y="837" width="0.0118%" height="15" fill="rgb(252,114,18)" fg:x="2001" fg:w="1"/><text x="23.9417%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="23.6917%" y="821" width="0.0118%" height="15" fill="rgb(223,58,37)" fg:x="2001" fg:w="1"/><text x="23.9417%" y="831.50"></text></g><g><title>_ZN5tokio7runtime4time5wheel5Wheel15next_expiration17h9e47eb8568393497E.llvm.15467044453606460770 (1 samples, 0.01%)</title><rect x="23.7035%" y="821" width="0.0118%" height="15" fill="rgb(237,70,4)" fg:x="2002" fg:w="1"/><text x="23.9535%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="23.7390%" y="805" width="0.0237%" height="15" fill="rgb(244,85,46)" fg:x="2005" fg:w="2"/><text x="23.9890%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="23.7390%" y="789" width="0.0237%" height="15" fill="rgb(223,39,52)" fg:x="2005" fg:w="2"/><text x="23.9890%" y="799.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="23.7390%" y="773" width="0.0237%" height="15" fill="rgb(218,200,14)" fg:x="2005" fg:w="2"/><text x="23.9890%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (7 samples, 0.08%)</title><rect x="23.6917%" y="981" width="0.0829%" height="15" fill="rgb(208,171,16)" fg:x="2001" fg:w="7"/><text x="23.9417%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (7 samples, 0.08%)</title><rect x="23.6917%" y="965" width="0.0829%" height="15" fill="rgb(234,200,18)" fg:x="2001" fg:w="7"/><text x="23.9417%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (7 samples, 0.08%)</title><rect x="23.6917%" y="949" width="0.0829%" height="15" fill="rgb(228,45,11)" fg:x="2001" fg:w="7"/><text x="23.9417%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.08%)</title><rect x="23.6917%" y="933" width="0.0829%" height="15" fill="rgb(237,182,11)" fg:x="2001" fg:w="7"/><text x="23.9417%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (7 samples, 0.08%)</title><rect x="23.6917%" y="917" width="0.0829%" height="15" fill="rgb(241,175,49)" fg:x="2001" fg:w="7"/><text x="23.9417%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.08%)</title><rect x="23.6917%" y="901" width="0.0829%" height="15" fill="rgb(247,38,35)" fg:x="2001" fg:w="7"/><text x="23.9417%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (7 samples, 0.08%)</title><rect x="23.6917%" y="885" width="0.0829%" height="15" fill="rgb(228,39,49)" fg:x="2001" fg:w="7"/><text x="23.9417%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7 samples, 0.08%)</title><rect x="23.6917%" y="869" width="0.0829%" height="15" fill="rgb(226,101,26)" fg:x="2001" fg:w="7"/><text x="23.9417%" y="879.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (7 samples, 0.08%)</title><rect x="23.6917%" y="853" width="0.0829%" height="15" fill="rgb(206,141,19)" fg:x="2001" fg:w="7"/><text x="23.9417%" y="863.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (6 samples, 0.07%)</title><rect x="23.7035%" y="837" width="0.0710%" height="15" fill="rgb(211,200,13)" fg:x="2002" fg:w="6"/><text x="23.9535%" y="847.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (5 samples, 0.06%)</title><rect x="23.7154%" y="821" width="0.0592%" height="15" fill="rgb(241,121,6)" fg:x="2003" fg:w="5"/><text x="23.9654%" y="831.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (1 samples, 0.01%)</title><rect x="23.7627%" y="805" width="0.0118%" height="15" fill="rgb(234,221,29)" fg:x="2007" fg:w="1"/><text x="24.0127%" y="815.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (1 samples, 0.01%)</title><rect x="23.7627%" y="789" width="0.0118%" height="15" fill="rgb(229,136,5)" fg:x="2007" fg:w="1"/><text x="24.0127%" y="799.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="23.7746%" y="965" width="0.0118%" height="15" fill="rgb(238,36,11)" fg:x="2008" fg:w="1"/><text x="24.0246%" y="975.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="23.7746%" y="949" width="0.0118%" height="15" fill="rgb(251,55,41)" fg:x="2008" fg:w="1"/><text x="24.0246%" y="959.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.01%)</title><rect x="23.7746%" y="933" width="0.0118%" height="15" fill="rgb(242,34,40)" fg:x="2008" fg:w="1"/><text x="24.0246%" y="943.50"></text></g><g><title>handle_softirqs (1 samples, 0.01%)</title><rect x="23.7746%" y="917" width="0.0118%" height="15" fill="rgb(215,42,17)" fg:x="2008" fg:w="1"/><text x="24.0246%" y="927.50"></text></g><g><title>net_rx_action (1 samples, 0.01%)</title><rect x="23.7746%" y="901" width="0.0118%" height="15" fill="rgb(207,44,46)" fg:x="2008" fg:w="1"/><text x="24.0246%" y="911.50"></text></g><g><title>__napi_poll (1 samples, 0.01%)</title><rect x="23.7746%" y="885" width="0.0118%" height="15" fill="rgb(211,206,28)" fg:x="2008" fg:w="1"/><text x="24.0246%" y="895.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="23.7746%" y="869" width="0.0118%" height="15" fill="rgb(237,167,16)" fg:x="2008" fg:w="1"/><text x="24.0246%" y="879.50"></text></g><g><title>napi_complete_done (1 samples, 0.01%)</title><rect x="23.7746%" y="853" width="0.0118%" height="15" fill="rgb(233,66,6)" fg:x="2008" fg:w="1"/><text x="24.0246%" y="863.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (2 samples, 0.02%)</title><rect x="23.7746%" y="981" width="0.0237%" height="15" fill="rgb(246,123,29)" fg:x="2008" fg:w="2"/><text x="24.0246%" y="991.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::try_lock (1 samples, 0.01%)</title><rect x="23.7864%" y="965" width="0.0118%" height="15" fill="rgb(209,62,40)" fg:x="2009" fg:w="1"/><text x="24.0364%" y="975.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::try_lock (1 samples, 0.01%)</title><rect x="23.7864%" y="949" width="0.0118%" height="15" fill="rgb(218,4,25)" fg:x="2009" fg:w="1"/><text x="24.0364%" y="959.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::try_lock (1 samples, 0.01%)</title><rect x="23.7864%" y="933" width="0.0118%" height="15" fill="rgb(253,91,49)" fg:x="2009" fg:w="1"/><text x="24.0364%" y="943.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (1,112 samples, 13.17%)</title><rect x="10.6441%" y="1029" width="13.1660%" height="15" fill="rgb(228,155,29)" fg:x="899" fg:w="1112"/><text x="10.8941%" y="1039.50">tokio::runtime::sche..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (1,112 samples, 13.17%)</title><rect x="10.6441%" y="1013" width="13.1660%" height="15" fill="rgb(243,57,37)" fg:x="899" fg:w="1112"/><text x="10.8941%" y="1023.50">tokio::runtime::sche..</text></g><g><title>tokio::runtime::time::Driver::park_internal (15 samples, 0.18%)</title><rect x="23.6325%" y="997" width="0.1776%" height="15" fill="rgb(244,167,17)" fg:x="1996" fg:w="15"/><text x="23.8825%" y="1007.50"></text></g><g><title>tokio::runtime::signal::Driver::process (1 samples, 0.01%)</title><rect x="23.7982%" y="981" width="0.0118%" height="15" fill="rgb(207,181,38)" fg:x="2010" fg:w="1"/><text x="24.0482%" y="991.50"></text></g><g><title>tokio::runtime::io::driver::signal::&lt;impl tokio::runtime::io::driver::Driver&gt;::consume_signal_ready (1 samples, 0.01%)</title><rect x="23.7982%" y="965" width="0.0118%" height="15" fill="rgb(211,8,23)" fg:x="2010" fg:w="1"/><text x="24.0482%" y="975.50"></text></g><g><title>tokio::runtime::coop::budget (1 samples, 0.01%)</title><rect x="23.8101%" y="1013" width="0.0118%" height="15" fill="rgb(235,11,44)" fg:x="2011" fg:w="1"/><text x="24.0601%" y="1023.50"></text></g><g><title>tokio::runtime::coop::with_budget (1 samples, 0.01%)</title><rect x="23.8101%" y="997" width="0.0118%" height="15" fill="rgb(248,18,52)" fg:x="2011" fg:w="1"/><text x="24.0601%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;tokio::runtime::coop::with_budget::ResetGuard,std::thread::local::AccessError&gt;&gt; (1 samples, 0.01%)</title><rect x="23.8101%" y="981" width="0.0118%" height="15" fill="rgb(208,4,7)" fg:x="2011" fg:w="1"/><text x="24.0601%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::coop::with_budget::ResetGuard&gt; (1 samples, 0.01%)</title><rect x="23.8101%" y="965" width="0.0118%" height="15" fill="rgb(240,17,39)" fg:x="2011" fg:w="1"/><text x="24.0601%" y="975.50"></text></g><g><title>&lt;tokio::runtime::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="23.8101%" y="949" width="0.0118%" height="15" fill="rgb(207,170,3)" fg:x="2011" fg:w="1"/><text x="24.0601%" y="959.50"></text></g><g><title>tokio::runtime::context::budget (1 samples, 0.01%)</title><rect x="23.8101%" y="933" width="0.0118%" height="15" fill="rgb(236,100,52)" fg:x="2011" fg:w="1"/><text x="24.0601%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="23.8101%" y="917" width="0.0118%" height="15" fill="rgb(246,78,51)" fg:x="2011" fg:w="1"/><text x="24.0601%" y="927.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (1 samples, 0.01%)</title><rect x="23.8101%" y="901" width="0.0118%" height="15" fill="rgb(211,17,15)" fg:x="2011" fg:w="1"/><text x="24.0601%" y="911.50"></text></g><g><title>std::sys::thread_local::fast_local::eager::Storage&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="23.8101%" y="885" width="0.0118%" height="15" fill="rgb(209,59,46)" fg:x="2011" fg:w="1"/><text x="24.0601%" y="895.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (2 samples, 0.02%)</title><rect x="23.8101%" y="1029" width="0.0237%" height="15" fill="rgb(210,92,25)" fg:x="2011" fg:w="2"/><text x="24.0601%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_searching (1 samples, 0.01%)</title><rect x="23.8219%" y="1013" width="0.0118%" height="15" fill="rgb(238,174,52)" fg:x="2012" fg:w="1"/><text x="24.0719%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::transition_worker_from_searching (1 samples, 0.01%)</title><rect x="23.8219%" y="997" width="0.0118%" height="15" fill="rgb(230,73,7)" fg:x="2012" fg:w="1"/><text x="24.0719%" y="1007.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (1 samples, 0.01%)</title><rect x="23.8219%" y="981" width="0.0118%" height="15" fill="rgb(243,124,40)" fg:x="2012" fg:w="1"/><text x="24.0719%" y="991.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (1 samples, 0.01%)</title><rect x="23.8219%" y="965" width="0.0118%" height="15" fill="rgb(244,170,11)" fg:x="2012" fg:w="1"/><text x="24.0719%" y="975.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (1 samples, 0.01%)</title><rect x="23.8219%" y="949" width="0.0118%" height="15" fill="rgb(207,114,54)" fg:x="2012" fg:w="1"/><text x="24.0719%" y="959.50"></text></g><g><title>syscall (1 samples, 0.01%)</title><rect x="23.8219%" y="933" width="0.0118%" height="15" fill="rgb(205,42,20)" fg:x="2012" fg:w="1"/><text x="24.0719%" y="943.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="23.8219%" y="917" width="0.0118%" height="15" fill="rgb(230,30,28)" fg:x="2012" fg:w="1"/><text x="24.0719%" y="927.50"></text></g><g><title>do_syscall_64 (1 samples, 0.01%)</title><rect x="23.8219%" y="901" width="0.0118%" height="15" fill="rgb(205,73,54)" fg:x="2012" fg:w="1"/><text x="24.0719%" y="911.50"></text></g><g><title>__x64_sys_futex (1 samples, 0.01%)</title><rect x="23.8219%" y="885" width="0.0118%" height="15" fill="rgb(254,227,23)" fg:x="2012" fg:w="1"/><text x="24.0719%" y="895.50"></text></g><g><title>do_futex (1 samples, 0.01%)</title><rect x="23.8219%" y="869" width="0.0118%" height="15" fill="rgb(228,202,34)" fg:x="2012" fg:w="1"/><text x="24.0719%" y="879.50"></text></g><g><title>futex_wake (1 samples, 0.01%)</title><rect x="23.8219%" y="853" width="0.0118%" height="15" fill="rgb(222,225,37)" fg:x="2012" fg:w="1"/><text x="24.0719%" y="863.50"></text></g><g><title>wake_up_q (1 samples, 0.01%)</title><rect x="23.8219%" y="837" width="0.0118%" height="15" fill="rgb(221,14,54)" fg:x="2012" fg:w="1"/><text x="24.0719%" y="847.50"></text></g><g><title>try_to_wake_up (1 samples, 0.01%)</title><rect x="23.8219%" y="821" width="0.0118%" height="15" fill="rgb(254,102,2)" fg:x="2012" fg:w="1"/><text x="24.0719%" y="831.50"></text></g><g><title>ttwu_do_activate (1 samples, 0.01%)</title><rect x="23.8219%" y="805" width="0.0118%" height="15" fill="rgb(232,104,17)" fg:x="2012" fg:w="1"/><text x="24.0719%" y="815.50"></text></g><g><title>enqueue_task (1 samples, 0.01%)</title><rect x="23.8219%" y="789" width="0.0118%" height="15" fill="rgb(250,220,14)" fg:x="2012" fg:w="1"/><text x="24.0719%" y="799.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.01%)</title><rect x="23.8219%" y="773" width="0.0118%" height="15" fill="rgb(241,158,9)" fg:x="2012" fg:w="1"/><text x="24.0719%" y="783.50"></text></g><g><title>update_cfs_group (1 samples, 0.01%)</title><rect x="23.8219%" y="757" width="0.0118%" height="15" fill="rgb(246,9,43)" fg:x="2012" fg:w="1"/><text x="24.0719%" y="767.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::next_remote_task (1 samples, 0.01%)</title><rect x="23.8338%" y="1013" width="0.0118%" height="15" fill="rgb(206,73,33)" fg:x="2013" fg:w="1"/><text x="24.0838%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::is_empty (1 samples, 0.01%)</title><rect x="23.8338%" y="997" width="0.0118%" height="15" fill="rgb(222,79,8)" fg:x="2013" fg:w="1"/><text x="24.0838%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::len (1 samples, 0.01%)</title><rect x="23.8338%" y="981" width="0.0118%" height="15" fill="rgb(234,8,54)" fg:x="2013" fg:w="1"/><text x="24.0838%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="23.8338%" y="965" width="0.0118%" height="15" fill="rgb(209,134,38)" fg:x="2013" fg:w="1"/><text x="24.0838%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="23.8338%" y="949" width="0.0118%" height="15" fill="rgb(230,127,29)" fg:x="2013" fg:w="1"/><text x="24.0838%" y="959.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task (1 samples, 0.01%)</title><rect x="23.8456%" y="1013" width="0.0118%" height="15" fill="rgb(242,44,41)" fg:x="2014" fg:w="1"/><text x="24.0956%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.01%)</title><rect x="23.8456%" y="997" width="0.0118%" height="15" fill="rgb(222,56,43)" fg:x="2014" fg:w="1"/><text x="24.0956%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task::_{{closure}} (1 samples, 0.01%)</title><rect x="23.8456%" y="981" width="0.0118%" height="15" fill="rgb(238,39,47)" fg:x="2014" fg:w="1"/><text x="24.0956%" y="991.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::pop (1 samples, 0.01%)</title><rect x="23.8456%" y="965" width="0.0118%" height="15" fill="rgb(226,79,43)" fg:x="2014" fg:w="1"/><text x="24.0956%" y="975.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::unpack (1 samples, 0.01%)</title><rect x="23.8456%" y="949" width="0.0118%" height="15" fill="rgb(242,105,53)" fg:x="2014" fg:w="1"/><text x="24.0956%" y="959.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (3 samples, 0.04%)</title><rect x="23.8338%" y="1029" width="0.0355%" height="15" fill="rgb(251,132,46)" fg:x="2013" fg:w="3"/><text x="24.0838%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::tune_global_queue_interval (1 samples, 0.01%)</title><rect x="23.8574%" y="1013" width="0.0118%" height="15" fill="rgb(231,77,14)" fg:x="2015" fg:w="1"/><text x="24.1074%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::tuned_global_queue_interval (1 samples, 0.01%)</title><rect x="23.8574%" y="997" width="0.0118%" height="15" fill="rgb(240,135,9)" fg:x="2015" fg:w="1"/><text x="24.1074%" y="1007.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (2 samples, 0.02%)</title><rect x="23.8930%" y="1013" width="0.0237%" height="15" fill="rgb(248,109,14)" fg:x="2018" fg:w="2"/><text x="24.1430%" y="1023.50"></text></g><g><title>std::time::Instant::duration_since (2 samples, 0.02%)</title><rect x="23.8930%" y="997" width="0.0237%" height="15" fill="rgb(227,146,52)" fg:x="2018" fg:w="2"/><text x="24.1430%" y="1007.50"></text></g><g><title>std::time::Instant::checked_duration_since (2 samples, 0.02%)</title><rect x="23.8930%" y="981" width="0.0237%" height="15" fill="rgb(232,54,3)" fg:x="2018" fg:w="2"/><text x="24.1430%" y="991.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (2 samples, 0.02%)</title><rect x="23.8930%" y="965" width="0.0237%" height="15" fill="rgb(229,201,43)" fg:x="2018" fg:w="2"/><text x="24.1430%" y="975.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (2 samples, 0.02%)</title><rect x="23.8930%" y="949" width="0.0237%" height="15" fill="rgb(252,161,33)" fg:x="2018" fg:w="2"/><text x="24.1430%" y="959.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.02%)</title><rect x="23.9166%" y="1013" width="0.0237%" height="15" fill="rgb(226,146,40)" fg:x="2020" fg:w="2"/><text x="24.1666%" y="1023.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.02%)</title><rect x="23.9166%" y="997" width="0.0237%" height="15" fill="rgb(219,47,25)" fg:x="2020" fg:w="2"/><text x="24.1666%" y="1007.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.02%)</title><rect x="23.9166%" y="981" width="0.0237%" height="15" fill="rgb(250,135,13)" fg:x="2020" fg:w="2"/><text x="24.1666%" y="991.50"></text></g><g><title>tokio::loom::std::atomic_u32::AtomicU32::unsync_load (1 samples, 0.01%)</title><rect x="23.9522%" y="997" width="0.0118%" height="15" fill="rgb(219,229,18)" fg:x="2023" fg:w="1"/><text x="24.2022%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (1 samples, 0.01%)</title><rect x="23.9522%" y="981" width="0.0118%" height="15" fill="rgb(217,152,27)" fg:x="2023" fg:w="1"/><text x="24.2022%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="23.9522%" y="965" width="0.0118%" height="15" fill="rgb(225,71,47)" fg:x="2023" fg:w="1"/><text x="24.2022%" y="975.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="23.9758%" y="981" width="0.0118%" height="15" fill="rgb(220,139,14)" fg:x="2025" fg:w="1"/><text x="24.2258%" y="991.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="23.9758%" y="965" width="0.0118%" height="15" fill="rgb(247,54,32)" fg:x="2025" fg:w="1"/><text x="24.2258%" y="975.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="23.9758%" y="949" width="0.0118%" height="15" fill="rgb(252,131,39)" fg:x="2025" fg:w="1"/><text x="24.2258%" y="959.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="23.9758%" y="933" width="0.0118%" height="15" fill="rgb(210,108,39)" fg:x="2025" fg:w="1"/><text x="24.2258%" y="943.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="23.9758%" y="917" width="0.0118%" height="15" fill="rgb(205,23,29)" fg:x="2025" fg:w="1"/><text x="24.2258%" y="927.50"></text></g><g><title>tick_nohz_handler (1 samples, 0.01%)</title><rect x="23.9758%" y="901" width="0.0118%" height="15" fill="rgb(246,139,46)" fg:x="2025" fg:w="1"/><text x="24.2258%" y="911.50"></text></g><g><title>update_process_times (1 samples, 0.01%)</title><rect x="23.9758%" y="885" width="0.0118%" height="15" fill="rgb(250,81,26)" fg:x="2025" fg:w="1"/><text x="24.2258%" y="895.50"></text></g><g><title>scheduler_tick (1 samples, 0.01%)</title><rect x="23.9758%" y="869" width="0.0118%" height="15" fill="rgb(214,104,7)" fg:x="2025" fg:w="1"/><text x="24.2258%" y="879.50"></text></g><g><title>task_tick_fair (1 samples, 0.01%)</title><rect x="23.9758%" y="853" width="0.0118%" height="15" fill="rgb(233,189,8)" fg:x="2025" fg:w="1"/><text x="24.2258%" y="863.50"></text></g><g><title>update_load_avg (1 samples, 0.01%)</title><rect x="23.9758%" y="837" width="0.0118%" height="15" fill="rgb(228,141,17)" fg:x="2025" fg:w="1"/><text x="24.2258%" y="847.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (1 samples, 0.01%)</title><rect x="23.9877%" y="981" width="0.0118%" height="15" fill="rgb(247,157,1)" fg:x="2026" fg:w="1"/><text x="24.2377%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (1 samples, 0.01%)</title><rect x="23.9995%" y="981" width="0.0118%" height="15" fill="rgb(249,225,5)" fg:x="2027" fg:w="1"/><text x="24.2495%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="23.9995%" y="965" width="0.0118%" height="15" fill="rgb(242,55,13)" fg:x="2027" fg:w="1"/><text x="24.2495%" y="975.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="23.9995%" y="949" width="0.0118%" height="15" fill="rgb(230,49,50)" fg:x="2027" fg:w="1"/><text x="24.2495%" y="959.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="23.9995%" y="933" width="0.0118%" height="15" fill="rgb(241,111,38)" fg:x="2027" fg:w="1"/><text x="24.2495%" y="943.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.01%)</title><rect x="23.9995%" y="917" width="0.0118%" height="15" fill="rgb(252,155,4)" fg:x="2027" fg:w="1"/><text x="24.2495%" y="927.50"></text></g><g><title>handle_softirqs (1 samples, 0.01%)</title><rect x="23.9995%" y="901" width="0.0118%" height="15" fill="rgb(212,69,32)" fg:x="2027" fg:w="1"/><text x="24.2495%" y="911.50"></text></g><g><title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="23.9995%" y="885" width="0.0118%" height="15" fill="rgb(243,107,47)" fg:x="2027" fg:w="1"/><text x="24.2495%" y="895.50"></text></g><g><title>update_blocked_averages (1 samples, 0.01%)</title><rect x="23.9995%" y="869" width="0.0118%" height="15" fill="rgb(247,130,12)" fg:x="2027" fg:w="1"/><text x="24.2495%" y="879.50"></text></g><g><title>update_rq_clock (1 samples, 0.01%)</title><rect x="23.9995%" y="853" width="0.0118%" height="15" fill="rgb(233,74,16)" fg:x="2027" fg:w="1"/><text x="24.2495%" y="863.50"></text></g><g><title>psi_account_irqtime (1 samples, 0.01%)</title><rect x="23.9995%" y="837" width="0.0118%" height="15" fill="rgb(208,58,18)" fg:x="2027" fg:w="1"/><text x="24.2495%" y="847.50"></text></g><g><title>record_times (1 samples, 0.01%)</title><rect x="23.9995%" y="821" width="0.0118%" height="15" fill="rgb(242,225,1)" fg:x="2027" fg:w="1"/><text x="24.2495%" y="831.50"></text></g><g><title>[libc.so.6] (1,173 samples, 13.89%)</title><rect x="10.1350%" y="1189" width="13.8882%" height="15" fill="rgb(249,39,40)" fg:x="856" fg:w="1173"/><text x="10.3850%" y="1199.50">[libc.so.6]</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (1,173 samples, 13.89%)</title><rect x="10.1350%" y="1173" width="13.8882%" height="15" fill="rgb(207,72,44)" fg:x="856" fg:w="1173"/><text x="10.3850%" y="1183.50">std::sys::pal::unix::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1,173 samples, 13.89%)</title><rect x="10.1350%" y="1157" width="13.8882%" height="15" fill="rgb(215,193,12)" fg:x="856" fg:w="1173"/><text x="10.3850%" y="1167.50">core::ops::function::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,173 samples, 13.89%)</title><rect x="10.1350%" y="1141" width="13.8882%" height="15" fill="rgb(248,41,39)" fg:x="856" fg:w="1173"/><text x="10.3850%" y="1151.50">std::sys_common::back..</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (1,173 samples, 13.89%)</title><rect x="10.1350%" y="1125" width="13.8882%" height="15" fill="rgb(253,85,4)" fg:x="856" fg:w="1173"/><text x="10.3850%" y="1135.50">tokio::runtime::block..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1,173 samples, 13.89%)</title><rect x="10.1350%" y="1109" width="13.8882%" height="15" fill="rgb(243,70,31)" fg:x="856" fg:w="1173"/><text x="10.3850%" y="1119.50">tokio::runtime::task:..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1,173 samples, 13.89%)</title><rect x="10.1350%" y="1093" width="13.8882%" height="15" fill="rgb(253,195,26)" fg:x="856" fg:w="1173"/><text x="10.3850%" y="1103.50">tokio::runtime::task:..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (1,173 samples, 13.89%)</title><rect x="10.1350%" y="1077" width="13.8882%" height="15" fill="rgb(243,42,11)" fg:x="856" fg:w="1173"/><text x="10.3850%" y="1087.50">tokio::runtime::sched..</text></g><g><title>tokio::runtime::context::set_scheduler (1,172 samples, 13.88%)</title><rect x="10.1468%" y="1061" width="13.8764%" height="15" fill="rgb(239,66,17)" fg:x="857" fg:w="1172"/><text x="10.3968%" y="1071.50">tokio::runtime::conte..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (1,171 samples, 13.86%)</title><rect x="10.1587%" y="1045" width="13.8646%" height="15" fill="rgb(217,132,21)" fg:x="858" fg:w="1171"/><text x="10.4087%" y="1055.50">tokio::runtime::sched..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (13 samples, 0.15%)</title><rect x="23.8693%" y="1029" width="0.1539%" height="15" fill="rgb(252,202,21)" fg:x="2016" fg:w="13"/><text x="24.1193%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (7 samples, 0.08%)</title><rect x="23.9403%" y="1013" width="0.0829%" height="15" fill="rgb(233,98,36)" fg:x="2022" fg:w="7"/><text x="24.1903%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (5 samples, 0.06%)</title><rect x="23.9640%" y="997" width="0.0592%" height="15" fill="rgb(216,153,54)" fg:x="2024" fg:w="5"/><text x="24.2140%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::unpack (1 samples, 0.01%)</title><rect x="24.0114%" y="981" width="0.0118%" height="15" fill="rgb(250,99,7)" fg:x="2028" fg:w="1"/><text x="24.2614%" y="991.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="24.0114%" y="965" width="0.0118%" height="15" fill="rgb(207,56,50)" fg:x="2028" fg:w="1"/><text x="24.2614%" y="975.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="24.0114%" y="949" width="0.0118%" height="15" fill="rgb(244,61,34)" fg:x="2028" fg:w="1"/><text x="24.2614%" y="959.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.01%)</title><rect x="24.0114%" y="933" width="0.0118%" height="15" fill="rgb(241,50,38)" fg:x="2028" fg:w="1"/><text x="24.2614%" y="943.50"></text></g><g><title>handle_softirqs (1 samples, 0.01%)</title><rect x="24.0114%" y="917" width="0.0118%" height="15" fill="rgb(212,166,30)" fg:x="2028" fg:w="1"/><text x="24.2614%" y="927.50"></text></g><g><title>net_rx_action (1 samples, 0.01%)</title><rect x="24.0114%" y="901" width="0.0118%" height="15" fill="rgb(249,127,32)" fg:x="2028" fg:w="1"/><text x="24.2614%" y="911.50"></text></g><g><title>__napi_poll (1 samples, 0.01%)</title><rect x="24.0114%" y="885" width="0.0118%" height="15" fill="rgb(209,103,0)" fg:x="2028" fg:w="1"/><text x="24.2614%" y="895.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="24.0114%" y="869" width="0.0118%" height="15" fill="rgb(238,209,51)" fg:x="2028" fg:w="1"/><text x="24.2614%" y="879.50"></text></g><g><title>napi_complete_done (1 samples, 0.01%)</title><rect x="24.0114%" y="853" width="0.0118%" height="15" fill="rgb(237,56,23)" fg:x="2028" fg:w="1"/><text x="24.2614%" y="863.50"></text></g><g><title>netif_receive_skb_list_internal (1 samples, 0.01%)</title><rect x="24.0114%" y="837" width="0.0118%" height="15" fill="rgb(215,153,46)" fg:x="2028" fg:w="1"/><text x="24.2614%" y="847.50"></text></g><g><title>__netif_receive_skb_list_core (1 samples, 0.01%)</title><rect x="24.0114%" y="821" width="0.0118%" height="15" fill="rgb(224,49,31)" fg:x="2028" fg:w="1"/><text x="24.2614%" y="831.50"></text></g><g><title>ip_list_rcv (1 samples, 0.01%)</title><rect x="24.0114%" y="805" width="0.0118%" height="15" fill="rgb(250,18,42)" fg:x="2028" fg:w="1"/><text x="24.2614%" y="815.50"></text></g><g><title>ip_sublist_rcv (1 samples, 0.01%)</title><rect x="24.0114%" y="789" width="0.0118%" height="15" fill="rgb(215,176,39)" fg:x="2028" fg:w="1"/><text x="24.2614%" y="799.50"></text></g><g><title>ip_local_deliver (1 samples, 0.01%)</title><rect x="24.0114%" y="773" width="0.0118%" height="15" fill="rgb(223,77,29)" fg:x="2028" fg:w="1"/><text x="24.2614%" y="783.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.01%)</title><rect x="24.0114%" y="757" width="0.0118%" height="15" fill="rgb(234,94,52)" fg:x="2028" fg:w="1"/><text x="24.2614%" y="767.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.01%)</title><rect x="24.0114%" y="741" width="0.0118%" height="15" fill="rgb(220,154,50)" fg:x="2028" fg:w="1"/><text x="24.2614%" y="751.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.01%)</title><rect x="24.0114%" y="725" width="0.0118%" height="15" fill="rgb(212,11,10)" fg:x="2028" fg:w="1"/><text x="24.2614%" y="735.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.01%)</title><rect x="24.0114%" y="709" width="0.0118%" height="15" fill="rgb(205,166,19)" fg:x="2028" fg:w="1"/><text x="24.2614%" y="719.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.01%)</title><rect x="24.0114%" y="693" width="0.0118%" height="15" fill="rgb(244,198,16)" fg:x="2028" fg:w="1"/><text x="24.2614%" y="703.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.01%)</title><rect x="24.0114%" y="677" width="0.0118%" height="15" fill="rgb(219,69,12)" fg:x="2028" fg:w="1"/><text x="24.2614%" y="687.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.01%)</title><rect x="24.0114%" y="661" width="0.0118%" height="15" fill="rgb(245,30,7)" fg:x="2028" fg:w="1"/><text x="24.2614%" y="671.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.01%)</title><rect x="24.0114%" y="645" width="0.0118%" height="15" fill="rgb(218,221,48)" fg:x="2028" fg:w="1"/><text x="24.2614%" y="655.50"></text></g><g><title>sch_direct_xmit (1 samples, 0.01%)</title><rect x="24.0114%" y="629" width="0.0118%" height="15" fill="rgb(216,66,15)" fg:x="2028" fg:w="1"/><text x="24.2614%" y="639.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.01%)</title><rect x="24.0114%" y="613" width="0.0118%" height="15" fill="rgb(226,122,50)" fg:x="2028" fg:w="1"/><text x="24.2614%" y="623.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="24.0114%" y="597" width="0.0118%" height="15" fill="rgb(239,156,16)" fg:x="2028" fg:w="1"/><text x="24.2614%" y="607.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="24.0114%" y="581" width="0.0118%" height="15" fill="rgb(224,27,38)" fg:x="2028" fg:w="1"/><text x="24.2614%" y="591.50"></text></g><g><title>iommu_dma_map_page (1 samples, 0.01%)</title><rect x="24.0114%" y="565" width="0.0118%" height="15" fill="rgb(224,39,27)" fg:x="2028" fg:w="1"/><text x="24.2614%" y="575.50"></text></g><g><title>__iommu_dma_map (1 samples, 0.01%)</title><rect x="24.0114%" y="549" width="0.0118%" height="15" fill="rgb(215,92,29)" fg:x="2028" fg:w="1"/><text x="24.2614%" y="559.50"></text></g><g><title>iommu_map (1 samples, 0.01%)</title><rect x="24.0114%" y="533" width="0.0118%" height="15" fill="rgb(207,159,16)" fg:x="2028" fg:w="1"/><text x="24.2614%" y="543.50"></text></g><g><title>[libc.so.6] (1,202 samples, 14.23%)</title><rect x="9.8035%" y="1205" width="14.2316%" height="15" fill="rgb(238,163,47)" fg:x="828" fg:w="1202"/><text x="10.0535%" y="1215.50">[libc.so.6]</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.01%)</title><rect x="24.0232%" y="1189" width="0.0118%" height="15" fill="rgb(219,91,49)" fg:x="2029" fg:w="1"/><text x="24.2732%" y="1199.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.01%)</title><rect x="24.0232%" y="1173" width="0.0118%" height="15" fill="rgb(227,167,31)" fg:x="2029" fg:w="1"/><text x="24.2732%" y="1183.50"></text></g><g><title>serde_json::ser::Formatter::begin_object_value (1 samples, 0.01%)</title><rect x="24.0232%" y="1157" width="0.0118%" height="15" fill="rgb(234,80,54)" fg:x="2029" fg:w="1"/><text x="24.2732%" y="1167.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="24.0232%" y="1141" width="0.0118%" height="15" fill="rgb(212,114,2)" fg:x="2029" fg:w="1"/><text x="24.2732%" y="1151.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.01%)</title><rect x="24.0232%" y="1125" width="0.0118%" height="15" fill="rgb(234,50,24)" fg:x="2029" fg:w="1"/><text x="24.2732%" y="1135.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="24.0232%" y="1109" width="0.0118%" height="15" fill="rgb(221,68,8)" fg:x="2029" fg:w="1"/><text x="24.2732%" y="1119.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="24.0232%" y="1093" width="0.0118%" height="15" fill="rgb(254,180,31)" fg:x="2029" fg:w="1"/><text x="24.2732%" y="1103.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="24.0232%" y="1077" width="0.0118%" height="15" fill="rgb(247,130,50)" fg:x="2029" fg:w="1"/><text x="24.2732%" y="1087.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="24.0232%" y="1061" width="0.0118%" height="15" fill="rgb(211,109,4)" fg:x="2029" fg:w="1"/><text x="24.2732%" y="1071.50"></text></g><g><title>&lt;&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::collect_str::Adapter&lt;W,F&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="24.0350%" y="1189" width="0.0118%" height="15" fill="rgb(238,50,21)" fg:x="2030" fg:w="1"/><text x="24.2850%" y="1199.50"></text></g><g><title>&lt;bool as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="24.0469%" y="1189" width="0.0118%" height="15" fill="rgb(225,57,45)" fg:x="2031" fg:w="1"/><text x="24.2969%" y="1199.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="24.0587%" y="1189" width="0.0118%" height="15" fill="rgb(209,196,50)" fg:x="2032" fg:w="1"/><text x="24.3087%" y="1199.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.01%)</title><rect x="24.0706%" y="1189" width="0.0118%" height="15" fill="rgb(242,140,13)" fg:x="2033" fg:w="1"/><text x="24.3206%" y="1199.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1 samples, 0.01%)</title><rect x="24.0706%" y="1173" width="0.0118%" height="15" fill="rgb(217,111,7)" fg:x="2033" fg:w="1"/><text x="24.3206%" y="1183.50"></text></g><g><title>&lt;tracing_serde::fields::SerializeFieldMap&lt;tracing_core::event::Event&gt; as serde::ser::Serialize&gt;::serialize (1 samples, 0.01%)</title><rect x="24.0824%" y="1189" width="0.0118%" height="15" fill="rgb(253,193,51)" fg:x="2034" fg:w="1"/><text x="24.3324%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (1 samples, 0.01%)</title><rect x="24.0942%" y="1189" width="0.0118%" height="15" fill="rgb(252,70,29)" fg:x="2035" fg:w="1"/><text x="24.3442%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::fmt::writer::WriteAdaptor as std::io::Write&gt;::write (3 samples, 0.04%)</title><rect x="24.1061%" y="1189" width="0.0355%" height="15" fill="rgb(232,127,12)" fg:x="2036" fg:w="3"/><text x="24.3561%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="24.1416%" y="1189" width="0.0118%" height="15" fill="rgb(211,180,21)" fg:x="2039" fg:w="1"/><text x="24.3916%" y="1199.50"></text></g><g><title>[rotmguard] (1 samples, 0.01%)</title><rect x="24.1534%" y="1189" width="0.0118%" height="15" fill="rgb(229,72,13)" fg:x="2040" fg:w="1"/><text x="24.4034%" y="1199.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (1 samples, 0.01%)</title><rect x="24.1534%" y="1173" width="0.0118%" height="15" fill="rgb(240,211,49)" fg:x="2040" fg:w="1"/><text x="24.4034%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="24.1534%" y="1157" width="0.0118%" height="15" fill="rgb(219,149,40)" fg:x="2040" fg:w="1"/><text x="24.4034%" y="1167.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="24.1534%" y="1141" width="0.0118%" height="15" fill="rgb(210,127,46)" fg:x="2040" fg:w="1"/><text x="24.4034%" y="1151.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="24.1534%" y="1125" width="0.0118%" height="15" fill="rgb(220,106,7)" fg:x="2040" fg:w="1"/><text x="24.4034%" y="1135.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.01%)</title><rect x="24.1653%" y="1189" width="0.0118%" height="15" fill="rgb(249,31,22)" fg:x="2041" fg:w="1"/><text x="24.4153%" y="1199.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (1 samples, 0.01%)</title><rect x="24.1653%" y="1173" width="0.0118%" height="15" fill="rgb(253,1,49)" fg:x="2041" fg:w="1"/><text x="24.4153%" y="1183.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (1 samples, 0.01%)</title><rect x="24.1653%" y="1157" width="0.0118%" height="15" fill="rgb(227,144,33)" fg:x="2041" fg:w="1"/><text x="24.4153%" y="1167.50"></text></g><g><title>alloc::collections::btree::mem::replace (1 samples, 0.01%)</title><rect x="24.1653%" y="1141" width="0.0118%" height="15" fill="rgb(249,163,44)" fg:x="2041" fg:w="1"/><text x="24.4153%" y="1151.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="24.1653%" y="1125" width="0.0118%" height="15" fill="rgb(234,15,39)" fg:x="2041" fg:w="1"/><text x="24.4153%" y="1135.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.01%)</title><rect x="24.1771%" y="1189" width="0.0118%" height="15" fill="rgb(207,66,16)" fg:x="2042" fg:w="1"/><text x="24.4271%" y="1199.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="24.1890%" y="1189" width="0.0118%" height="15" fill="rgb(233,112,24)" fg:x="2043" fg:w="1"/><text x="24.4390%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="24.1890%" y="1173" width="0.0118%" height="15" fill="rgb(230,90,22)" fg:x="2043" fg:w="1"/><text x="24.4390%" y="1183.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="24.1890%" y="1157" width="0.0118%" height="15" fill="rgb(229,61,13)" fg:x="2043" fg:w="1"/><text x="24.4390%" y="1167.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="24.1890%" y="1141" width="0.0118%" height="15" fill="rgb(225,57,24)" fg:x="2043" fg:w="1"/><text x="24.4390%" y="1151.50"></text></g><g><title>core::fmt::write (2 samples, 0.02%)</title><rect x="24.2008%" y="1189" width="0.0237%" height="15" fill="rgb(208,169,48)" fg:x="2044" fg:w="2"/><text x="24.4508%" y="1199.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_exact (1 samples, 0.01%)</title><rect x="24.2126%" y="1173" width="0.0118%" height="15" fill="rgb(244,218,51)" fg:x="2045" fg:w="1"/><text x="24.4626%" y="1183.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts (1 samples, 0.01%)</title><rect x="24.2126%" y="1157" width="0.0118%" height="15" fill="rgb(214,148,10)" fg:x="2045" fg:w="1"/><text x="24.4626%" y="1167.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="24.2126%" y="1141" width="0.0118%" height="15" fill="rgb(225,174,27)" fg:x="2045" fg:w="1"/><text x="24.4626%" y="1151.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="24.2126%" y="1125" width="0.0118%" height="15" fill="rgb(230,96,26)" fg:x="2045" fg:w="1"/><text x="24.4626%" y="1135.50"></text></g><g><title>&lt;std::os::unix::net::stream::UnixStream as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="24.2126%" y="1109" width="0.0118%" height="15" fill="rgb(232,10,30)" fg:x="2045" fg:w="1"/><text x="24.4626%" y="1119.50"></text></g><g><title>write (1 samples, 0.01%)</title><rect x="24.2126%" y="1093" width="0.0118%" height="15" fill="rgb(222,8,50)" fg:x="2045" fg:w="1"/><text x="24.4626%" y="1103.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="24.2126%" y="1077" width="0.0118%" height="15" fill="rgb(213,81,27)" fg:x="2045" fg:w="1"/><text x="24.4626%" y="1087.50"></text></g><g><title>rc4::Rc4State::prga (1 samples, 0.01%)</title><rect x="24.2245%" y="1189" width="0.0118%" height="15" fill="rgb(245,50,10)" fg:x="2046" fg:w="1"/><text x="24.4745%" y="1199.50"></text></g><g><title>ryu::d2s_intrinsics::div10 (1 samples, 0.01%)</title><rect x="24.2600%" y="1157" width="0.0118%" height="15" fill="rgb(216,100,18)" fg:x="2049" fg:w="1"/><text x="24.5100%" y="1167.50"></text></g><g><title>ryu::pretty::format64 (4 samples, 0.05%)</title><rect x="24.2363%" y="1189" width="0.0474%" height="15" fill="rgb(236,147,54)" fg:x="2047" fg:w="4"/><text x="24.4863%" y="1199.50"></text></g><g><title>ryu::d2s::d2d (2 samples, 0.02%)</title><rect x="24.2600%" y="1173" width="0.0237%" height="15" fill="rgb(205,143,26)" fg:x="2049" fg:w="2"/><text x="24.5100%" y="1183.50"></text></g><g><title>ryu::d2s_intrinsics::mul_shift_all_64 (1 samples, 0.01%)</title><rect x="24.2718%" y="1157" width="0.0118%" height="15" fill="rgb(236,26,9)" fg:x="2050" fg:w="1"/><text x="24.5218%" y="1167.50"></text></g><g><title>ryu::d2s_intrinsics::mul_shift_64 (1 samples, 0.01%)</title><rect x="24.2718%" y="1141" width="0.0118%" height="15" fill="rgb(221,165,53)" fg:x="2050" fg:w="1"/><text x="24.5218%" y="1151.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.04%)</title><rect x="24.2837%" y="1189" width="0.0355%" height="15" fill="rgb(214,110,17)" fg:x="2051" fg:w="3"/><text x="24.5337%" y="1199.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.01%)</title><rect x="24.3074%" y="1173" width="0.0118%" height="15" fill="rgb(237,197,12)" fg:x="2053" fg:w="1"/><text x="24.5574%" y="1183.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (1 samples, 0.01%)</title><rect x="24.3074%" y="1157" width="0.0118%" height="15" fill="rgb(205,84,17)" fg:x="2053" fg:w="1"/><text x="24.5574%" y="1167.50"></text></g><g><title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.01%)</title><rect x="24.3074%" y="1141" width="0.0118%" height="15" fill="rgb(237,18,45)" fg:x="2053" fg:w="1"/><text x="24.5574%" y="1151.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.01%)</title><rect x="24.3074%" y="1125" width="0.0118%" height="15" fill="rgb(221,87,14)" fg:x="2053" fg:w="1"/><text x="24.5574%" y="1135.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.01%)</title><rect x="24.3074%" y="1109" width="0.0118%" height="15" fill="rgb(238,186,15)" fg:x="2053" fg:w="1"/><text x="24.5574%" y="1119.50"></text></g><g><title>serde_json::ser::Formatter::begin_string (1 samples, 0.01%)</title><rect x="24.3074%" y="1093" width="0.0118%" height="15" fill="rgb(208,115,11)" fg:x="2053" fg:w="1"/><text x="24.5574%" y="1103.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="24.3074%" y="1077" width="0.0118%" height="15" fill="rgb(254,175,0)" fg:x="2053" fg:w="1"/><text x="24.5574%" y="1087.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (4 samples, 0.05%)</title><rect x="24.3192%" y="1189" width="0.0474%" height="15" fill="rgb(227,24,42)" fg:x="2054" fg:w="4"/><text x="24.5692%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="24.3429%" y="1173" width="0.0237%" height="15" fill="rgb(223,211,37)" fg:x="2056" fg:w="2"/><text x="24.5929%" y="1183.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="24.3429%" y="1157" width="0.0237%" height="15" fill="rgb(235,49,27)" fg:x="2056" fg:w="2"/><text x="24.5929%" y="1167.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="24.3429%" y="1141" width="0.0237%" height="15" fill="rgb(254,97,51)" fg:x="2056" fg:w="2"/><text x="24.5929%" y="1151.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.04%)</title><rect x="24.3666%" y="1189" width="0.0355%" height="15" fill="rgb(249,51,40)" fg:x="2058" fg:w="3"/><text x="24.6166%" y="1199.50"></text></g><g><title>&lt;rotmguard::logging::LogWriter as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="24.3902%" y="1173" width="0.0118%" height="15" fill="rgb(210,128,45)" fg:x="2060" fg:w="1"/><text x="24.6402%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.01%)</title><rect x="24.3902%" y="1157" width="0.0118%" height="15" fill="rgb(224,137,50)" fg:x="2060" fg:w="1"/><text x="24.6402%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.01%)</title><rect x="24.3902%" y="1141" width="0.0118%" height="15" fill="rgb(242,15,9)" fg:x="2060" fg:w="1"/><text x="24.6402%" y="1151.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.01%)</title><rect x="24.3902%" y="1125" width="0.0118%" height="15" fill="rgb(233,187,41)" fg:x="2060" fg:w="1"/><text x="24.6402%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="24.3902%" y="1109" width="0.0118%" height="15" fill="rgb(227,2,29)" fg:x="2060" fg:w="1"/><text x="24.6402%" y="1119.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="24.3902%" y="1093" width="0.0118%" height="15" fill="rgb(222,70,3)" fg:x="2060" fg:w="1"/><text x="24.6402%" y="1103.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.01%)</title><rect x="24.3902%" y="1077" width="0.0118%" height="15" fill="rgb(213,11,42)" fg:x="2060" fg:w="1"/><text x="24.6402%" y="1087.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::_{{closure}} (1 samples, 0.01%)</title><rect x="24.3902%" y="1061" width="0.0118%" height="15" fill="rgb(225,150,9)" fg:x="2060" fg:w="1"/><text x="24.6402%" y="1071.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (2 samples, 0.02%)</title><rect x="24.4021%" y="1189" width="0.0237%" height="15" fill="rgb(230,162,45)" fg:x="2061" fg:w="2"/><text x="24.6521%" y="1199.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.01%)</title><rect x="24.4258%" y="1189" width="0.0118%" height="15" fill="rgb(222,14,52)" fg:x="2063" fg:w="1"/><text x="24.6758%" y="1199.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (2 samples, 0.02%)</title><rect x="24.4376%" y="1189" width="0.0237%" height="15" fill="rgb(254,198,14)" fg:x="2064" fg:w="2"/><text x="24.6876%" y="1199.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.01%)</title><rect x="24.4613%" y="1189" width="0.0118%" height="15" fill="rgb(220,217,30)" fg:x="2066" fg:w="1"/><text x="24.7113%" y="1199.50"></text></g><g><title>tracing_core::dispatcher::get_global (1 samples, 0.01%)</title><rect x="24.4613%" y="1173" width="0.0118%" height="15" fill="rgb(215,146,41)" fg:x="2066" fg:w="1"/><text x="24.7113%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="24.4613%" y="1157" width="0.0118%" height="15" fill="rgb(217,27,36)" fg:x="2066" fg:w="1"/><text x="24.7113%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="24.4613%" y="1141" width="0.0118%" height="15" fill="rgb(219,218,39)" fg:x="2066" fg:w="1"/><text x="24.7113%" y="1151.50"></text></g><g><title>[rotmguard] (38 samples, 0.45%)</title><rect x="24.0350%" y="1205" width="0.4499%" height="15" fill="rgb(219,4,42)" fg:x="2030" fg:w="38"/><text x="24.2850%" y="1215.50"></text></g><g><title>tracing_core::field::ValueSet::record (1 samples, 0.01%)</title><rect x="24.4731%" y="1189" width="0.0118%" height="15" fill="rgb(249,119,36)" fg:x="2067" fg:w="1"/><text x="24.7231%" y="1199.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (1 samples, 0.01%)</title><rect x="24.4731%" y="1173" width="0.0118%" height="15" fill="rgb(209,23,33)" fg:x="2067" fg:w="1"/><text x="24.7231%" y="1183.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="24.4850%" y="1189" width="0.0118%" height="15" fill="rgb(211,10,0)" fg:x="2068" fg:w="1"/><text x="24.7350%" y="1199.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.01%)</title><rect x="24.4968%" y="1189" width="0.0118%" height="15" fill="rgb(208,99,37)" fg:x="2069" fg:w="1"/><text x="24.7468%" y="1199.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (6 samples, 0.07%)</title><rect x="24.5086%" y="1189" width="0.0710%" height="15" fill="rgb(213,132,31)" fg:x="2070" fg:w="6"/><text x="24.7586%" y="1199.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (2 samples, 0.02%)</title><rect x="24.5560%" y="1173" width="0.0237%" height="15" fill="rgb(243,129,40)" fg:x="2074" fg:w="2"/><text x="24.8060%" y="1183.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (2 samples, 0.02%)</title><rect x="24.5560%" y="1157" width="0.0237%" height="15" fill="rgb(210,66,33)" fg:x="2074" fg:w="2"/><text x="24.8060%" y="1167.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_fmt (1 samples, 0.01%)</title><rect x="24.5797%" y="1189" width="0.0118%" height="15" fill="rgb(209,189,4)" fg:x="2076" fg:w="1"/><text x="24.8297%" y="1199.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="24.5915%" y="1189" width="0.0118%" height="15" fill="rgb(214,107,37)" fg:x="2077" fg:w="1"/><text x="24.8415%" y="1199.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="24.5915%" y="1173" width="0.0118%" height="15" fill="rgb(245,88,54)" fg:x="2077" fg:w="1"/><text x="24.8415%" y="1183.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="24.5915%" y="1157" width="0.0118%" height="15" fill="rgb(205,146,20)" fg:x="2077" fg:w="1"/><text x="24.8415%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="24.5915%" y="1141" width="0.0118%" height="15" fill="rgb(220,161,25)" fg:x="2077" fg:w="1"/><text x="24.8415%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="24.5915%" y="1125" width="0.0118%" height="15" fill="rgb(215,152,15)" fg:x="2077" fg:w="1"/><text x="24.8415%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="24.5915%" y="1109" width="0.0118%" height="15" fill="rgb(233,192,44)" fg:x="2077" fg:w="1"/><text x="24.8415%" y="1119.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="24.5915%" y="1093" width="0.0118%" height="15" fill="rgb(240,170,46)" fg:x="2077" fg:w="1"/><text x="24.8415%" y="1103.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.01%)</title><rect x="24.6034%" y="1189" width="0.0118%" height="15" fill="rgb(207,104,33)" fg:x="2078" fg:w="1"/><text x="24.8534%" y="1199.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (2 samples, 0.02%)</title><rect x="24.6152%" y="1189" width="0.0237%" height="15" fill="rgb(219,21,39)" fg:x="2079" fg:w="2"/><text x="24.8652%" y="1199.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;str&gt; as rotmguard::read::RPRead&gt;::rp_read (1 samples, 0.01%)</title><rect x="24.6389%" y="1189" width="0.0118%" height="15" fill="rgb(214,133,29)" fg:x="2081" fg:w="1"/><text x="24.8889%" y="1199.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.01%)</title><rect x="24.6389%" y="1173" width="0.0118%" height="15" fill="rgb(226,93,6)" fg:x="2081" fg:w="1"/><text x="24.8889%" y="1183.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="24.6389%" y="1157" width="0.0118%" height="15" fill="rgb(252,222,34)" fg:x="2081" fg:w="1"/><text x="24.8889%" y="1167.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="24.6389%" y="1141" width="0.0118%" height="15" fill="rgb(252,92,48)" fg:x="2081" fg:w="1"/><text x="24.8889%" y="1151.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="24.6389%" y="1125" width="0.0118%" height="15" fill="rgb(245,223,24)" fg:x="2081" fg:w="1"/><text x="24.8889%" y="1135.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="24.6389%" y="1109" width="0.0118%" height="15" fill="rgb(205,176,3)" fg:x="2081" fg:w="1"/><text x="24.8889%" y="1119.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="24.6507%" y="1189" width="0.0118%" height="15" fill="rgb(235,151,15)" fg:x="2082" fg:w="1"/><text x="24.9007%" y="1199.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="24.6507%" y="1173" width="0.0118%" height="15" fill="rgb(237,209,11)" fg:x="2082" fg:w="1"/><text x="24.9007%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="24.6507%" y="1157" width="0.0118%" height="15" fill="rgb(243,227,24)" fg:x="2082" fg:w="1"/><text x="24.9007%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="24.6507%" y="1141" width="0.0118%" height="15" fill="rgb(239,193,16)" fg:x="2082" fg:w="1"/><text x="24.9007%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="24.6507%" y="1125" width="0.0118%" height="15" fill="rgb(231,27,9)" fg:x="2082" fg:w="1"/><text x="24.9007%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="24.6507%" y="1109" width="0.0118%" height="15" fill="rgb(219,169,10)" fg:x="2082" fg:w="1"/><text x="24.9007%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="24.6507%" y="1093" width="0.0118%" height="15" fill="rgb(244,229,43)" fg:x="2082" fg:w="1"/><text x="24.9007%" y="1103.50"></text></g><g><title>&lt;core::fmt::Arguments as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="24.6626%" y="1189" width="0.0118%" height="15" fill="rgb(254,38,20)" fg:x="2083" fg:w="1"/><text x="24.9126%" y="1199.50"></text></g><g><title>&lt;core::fmt::Arguments as tracing_core::field::Value&gt;::record (1 samples, 0.01%)</title><rect x="24.6744%" y="1189" width="0.0118%" height="15" fill="rgb(250,47,30)" fg:x="2084" fg:w="1"/><text x="24.9244%" y="1199.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="24.6862%" y="1189" width="0.0355%" height="15" fill="rgb(224,124,36)" fg:x="2085" fg:w="3"/><text x="24.9362%" y="1199.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.01%)</title><rect x="24.7099%" y="1173" width="0.0118%" height="15" fill="rgb(246,68,51)" fg:x="2087" fg:w="1"/><text x="24.9599%" y="1183.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.01%)</title><rect x="24.7099%" y="1157" width="0.0118%" height="15" fill="rgb(253,43,49)" fg:x="2087" fg:w="1"/><text x="24.9599%" y="1167.50"></text></g><g><title>&lt;rotmguard::extra_datatypes::object_status_data::ObjectStatusData as rotmguard::read::RPRead&gt;::rp_read (7 samples, 0.08%)</title><rect x="24.7218%" y="1189" width="0.0829%" height="15" fill="rgb(219,54,36)" fg:x="2088" fg:w="7"/><text x="24.9718%" y="1199.50"></text></g><g><title>&lt;rotmguard::extra_datatypes::worldpos::WorldPos as rotmguard::read::RPRead&gt;::rp_read (1 samples, 0.01%)</title><rect x="24.7928%" y="1173" width="0.0118%" height="15" fill="rgb(227,133,34)" fg:x="2094" fg:w="1"/><text x="25.0428%" y="1183.50"></text></g><g><title>&lt;f32 as rotmguard::read::RPRead&gt;::rp_read (1 samples, 0.01%)</title><rect x="24.7928%" y="1157" width="0.0118%" height="15" fill="rgb(247,227,15)" fg:x="2094" fg:w="1"/><text x="25.0428%" y="1167.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (1 samples, 0.01%)</title><rect x="24.7928%" y="1141" width="0.0118%" height="15" fill="rgb(229,96,14)" fg:x="2094" fg:w="1"/><text x="25.0428%" y="1151.50"></text></g><g><title>&lt;rotmguard::extra_datatypes::statdata::StatData as rotmguard::read::RPRead&gt;::rp_read (7 samples, 0.08%)</title><rect x="24.8046%" y="1189" width="0.0829%" height="15" fill="rgb(220,79,17)" fg:x="2095" fg:w="7"/><text x="25.0546%" y="1199.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (3 samples, 0.04%)</title><rect x="24.8520%" y="1173" width="0.0355%" height="15" fill="rgb(205,131,53)" fg:x="2099" fg:w="3"/><text x="25.1020%" y="1183.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceContains&gt;::slice_contains (3 samples, 0.04%)</title><rect x="24.8520%" y="1157" width="0.0355%" height="15" fill="rgb(209,50,29)" fg:x="2099" fg:w="3"/><text x="25.1020%" y="1167.50"></text></g><g><title>core::slice::memchr::memchr (3 samples, 0.04%)</title><rect x="24.8520%" y="1141" width="0.0355%" height="15" fill="rgb(245,86,46)" fg:x="2099" fg:w="3"/><text x="25.1020%" y="1151.50"></text></g><g><title>core::slice::memchr::memchr_naive (3 samples, 0.04%)</title><rect x="24.8520%" y="1125" width="0.0355%" height="15" fill="rgb(235,66,46)" fg:x="2099" fg:w="3"/><text x="25.1020%" y="1135.50"></text></g><g><title>&lt;rotmguard::module::RootModuleInstance as rotmguard::module::ModuleInstance&gt;::client_packet::_{{closure}} (8 samples, 0.09%)</title><rect x="24.8875%" y="1189" width="0.0947%" height="15" fill="rgb(232,148,31)" fg:x="2102" fg:w="8"/><text x="25.1375%" y="1199.50"></text></g><g><title>&lt;rotmguard::module::autonexus::AutonexusInst as rotmguard::module::ModuleInstance&gt;::client_packet::_{{closure}} (2 samples, 0.02%)</title><rect x="24.9586%" y="1173" width="0.0237%" height="15" fill="rgb(217,149,8)" fg:x="2108" fg:w="2"/><text x="25.2086%" y="1183.50"></text></g><g><title>rotmguard::module::autonexus::aoes::AOEs::check_aoes::_{{closure}} (2 samples, 0.02%)</title><rect x="24.9586%" y="1157" width="0.0237%" height="15" fill="rgb(209,183,11)" fg:x="2108" fg:w="2"/><text x="25.2086%" y="1167.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="24.9586%" y="1141" width="0.0237%" height="15" fill="rgb(208,55,20)" fg:x="2108" fg:w="2"/><text x="25.2086%" y="1151.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="24.9586%" y="1125" width="0.0237%" height="15" fill="rgb(218,39,14)" fg:x="2108" fg:w="2"/><text x="25.2086%" y="1135.50"></text></g><g><title>&lt;rotmguard::packets::ClientPacket as rotmguard::write::RPWrite&gt;::rp_write (3 samples, 0.04%)</title><rect x="24.9822%" y="1189" width="0.0355%" height="15" fill="rgb(216,169,33)" fg:x="2110" fg:w="3"/><text x="25.2322%" y="1199.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="25.0059%" y="1173" width="0.0118%" height="15" fill="rgb(233,80,24)" fg:x="2112" fg:w="1"/><text x="25.2559%" y="1183.50"></text></g><g><title>&lt;rotmguard::packets::ServerPacket as rotmguard::read::RPRead&gt;::rp_read (4 samples, 0.05%)</title><rect x="25.0178%" y="1189" width="0.0474%" height="15" fill="rgb(213,179,31)" fg:x="2113" fg:w="4"/><text x="25.2678%" y="1199.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="25.0533%" y="1173" width="0.0118%" height="15" fill="rgb(209,19,5)" fg:x="2116" fg:w="1"/><text x="25.3033%" y="1183.50"></text></g><g><title>&lt;rotmguard::packets::_10_new_tick::NewTick as rotmguard::read::RPRead&gt;::rp_read (2 samples, 0.02%)</title><rect x="25.0651%" y="1189" width="0.0237%" height="15" fill="rgb(219,18,35)" fg:x="2117" fg:w="2"/><text x="25.3151%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.02%)</title><rect x="25.0651%" y="1173" width="0.0237%" height="15" fill="rgb(209,169,16)" fg:x="2117" fg:w="2"/><text x="25.3151%" y="1183.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="25.0770%" y="1157" width="0.0118%" height="15" fill="rgb(245,90,51)" fg:x="2118" fg:w="1"/><text x="25.3270%" y="1167.50"></text></g><g><title>&lt;rotmguard::packets::_10_new_tick::NewTick as rotmguard::write::RPWrite&gt;::rp_write (1 samples, 0.01%)</title><rect x="25.0888%" y="1189" width="0.0118%" height="15" fill="rgb(220,99,45)" fg:x="2119" fg:w="1"/><text x="25.3388%" y="1199.50"></text></g><g><title>&lt;rotmguard::packets::_42_update::UpdatePacket as rotmguard::read::RPRead&gt;::rp_read (3 samples, 0.04%)</title><rect x="25.1006%" y="1189" width="0.0355%" height="15" fill="rgb(249,89,25)" fg:x="2120" fg:w="3"/><text x="25.3506%" y="1199.50"></text></g><g><title>&lt;i16 as rotmguard::read::RPRead&gt;::rp_read (1 samples, 0.01%)</title><rect x="25.1243%" y="1173" width="0.0118%" height="15" fill="rgb(239,193,0)" fg:x="2122" fg:w="1"/><text x="25.3743%" y="1183.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (1 samples, 0.01%)</title><rect x="25.1243%" y="1157" width="0.0118%" height="15" fill="rgb(231,126,1)" fg:x="2122" fg:w="1"/><text x="25.3743%" y="1167.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.01%)</title><rect x="25.1243%" y="1141" width="0.0118%" height="15" fill="rgb(243,166,3)" fg:x="2122" fg:w="1"/><text x="25.3743%" y="1151.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="25.1243%" y="1125" width="0.0118%" height="15" fill="rgb(223,22,34)" fg:x="2122" fg:w="1"/><text x="25.3743%" y="1135.50"></text></g><g><title>&lt;rotmguard::packets::_42_update::UpdatePacket as rotmguard::write::RPWrite&gt;::rp_write (1 samples, 0.01%)</title><rect x="25.1362%" y="1189" width="0.0118%" height="15" fill="rgb(251,52,51)" fg:x="2123" fg:w="1"/><text x="25.3862%" y="1199.50"></text></g><g><title>&lt;rotmguard::packets::_67_notification::NotificationPacket as rotmguard::read::RPRead&gt;::rp_read (2 samples, 0.02%)</title><rect x="25.1480%" y="1189" width="0.0237%" height="15" fill="rgb(221,165,28)" fg:x="2124" fg:w="2"/><text x="25.3980%" y="1199.50"></text></g><g><title>&lt;rotmguard::packets::_67_notification::NotificationPacket as rotmguard::write::RPWrite&gt;::rp_write (1 samples, 0.01%)</title><rect x="25.1717%" y="1189" width="0.0118%" height="15" fill="rgb(218,121,47)" fg:x="2126" fg:w="1"/><text x="25.4217%" y="1199.50"></text></g><g><title>&lt;u8 as rotmguard::write::RPWrite&gt;::rp_write (1 samples, 0.01%)</title><rect x="25.1717%" y="1173" width="0.0118%" height="15" fill="rgb(209,120,9)" fg:x="2126" fg:w="1"/><text x="25.4217%" y="1183.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.01%)</title><rect x="25.1717%" y="1157" width="0.0118%" height="15" fill="rgb(236,68,12)" fg:x="2126" fg:w="1"/><text x="25.4217%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="25.1717%" y="1141" width="0.0118%" height="15" fill="rgb(225,194,26)" fg:x="2126" fg:w="1"/><text x="25.4217%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="25.1717%" y="1125" width="0.0118%" height="15" fill="rgb(231,84,39)" fg:x="2126" fg:w="1"/><text x="25.4217%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="25.1717%" y="1109" width="0.0118%" height="15" fill="rgb(210,11,45)" fg:x="2126" fg:w="1"/><text x="25.4217%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="25.1717%" y="1093" width="0.0118%" height="15" fill="rgb(224,54,52)" fg:x="2126" fg:w="1"/><text x="25.4217%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="25.1717%" y="1077" width="0.0118%" height="15" fill="rgb(238,102,14)" fg:x="2126" fg:w="1"/><text x="25.4217%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.01%)</title><rect x="25.1717%" y="1061" width="0.0118%" height="15" fill="rgb(243,160,52)" fg:x="2126" fg:w="1"/><text x="25.4217%" y="1071.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="25.1717%" y="1045" width="0.0118%" height="15" fill="rgb(216,114,19)" fg:x="2126" fg:w="1"/><text x="25.4217%" y="1055.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.01%)</title><rect x="25.1835%" y="1189" width="0.0118%" height="15" fill="rgb(244,166,37)" fg:x="2127" fg:w="1"/><text x="25.4335%" y="1199.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.01%)</title><rect x="25.1954%" y="1189" width="0.0118%" height="15" fill="rgb(246,29,44)" fg:x="2128" fg:w="1"/><text x="25.4454%" y="1199.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1 samples, 0.01%)</title><rect x="25.1954%" y="1173" width="0.0118%" height="15" fill="rgb(215,56,53)" fg:x="2128" fg:w="1"/><text x="25.4454%" y="1183.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::end (1 samples, 0.01%)</title><rect x="25.2072%" y="1189" width="0.0118%" height="15" fill="rgb(217,60,2)" fg:x="2129" fg:w="1"/><text x="25.4572%" y="1199.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.01%)</title><rect x="25.2190%" y="1189" width="0.0118%" height="15" fill="rgb(207,26,24)" fg:x="2130" fg:w="1"/><text x="25.4690%" y="1199.50"></text></g><g><title>&lt;tokio::net::tcp::split::ReadHalf as tokio::io::async_read::AsyncRead&gt;::poll_read (4 samples, 0.05%)</title><rect x="25.2309%" y="1189" width="0.0474%" height="15" fill="rgb(252,210,15)" fg:x="2131" fg:w="4"/><text x="25.4809%" y="1199.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="25.2782%" y="1189" width="0.0118%" height="15" fill="rgb(253,209,26)" fg:x="2135" fg:w="1"/><text x="25.5282%" y="1199.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (1 samples, 0.01%)</title><rect x="25.2782%" y="1173" width="0.0118%" height="15" fill="rgb(238,170,14)" fg:x="2135" fg:w="1"/><text x="25.5282%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="25.2782%" y="1157" width="0.0118%" height="15" fill="rgb(216,178,15)" fg:x="2135" fg:w="1"/><text x="25.5282%" y="1167.50"></text></g><g><title>tokio::runtime::context::set_current_task_id::_{{closure}} (1 samples, 0.01%)</title><rect x="25.2782%" y="1141" width="0.0118%" height="15" fill="rgb(250,197,2)" fg:x="2135" fg:w="1"/><text x="25.5282%" y="1151.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.01%)</title><rect x="25.2782%" y="1125" width="0.0118%" height="15" fill="rgb(212,70,42)" fg:x="2135" fg:w="1"/><text x="25.5282%" y="1135.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="25.2782%" y="1109" width="0.0118%" height="15" fill="rgb(227,213,9)" fg:x="2135" fg:w="1"/><text x="25.5282%" y="1119.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="25.2782%" y="1093" width="0.0118%" height="15" fill="rgb(245,99,25)" fg:x="2135" fg:w="1"/><text x="25.5282%" y="1103.50"></text></g><g><title>&lt;tracing_serde::SerdeMapVisitor&lt;S&gt; as tracing_core::field::Visit&gt;::record_debug (2 samples, 0.02%)</title><rect x="25.2901%" y="1189" width="0.0237%" height="15" fill="rgb(250,82,29)" fg:x="2136" fg:w="2"/><text x="25.5401%" y="1199.50"></text></g><g><title>&lt;tracing_serde::SerializeLevel as serde::ser::Serialize&gt;::serialize (1 samples, 0.01%)</title><rect x="25.3138%" y="1189" width="0.0118%" height="15" fill="rgb(241,226,54)" fg:x="2138" fg:w="1"/><text x="25.5638%" y="1199.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="25.3138%" y="1173" width="0.0118%" height="15" fill="rgb(221,99,41)" fg:x="2138" fg:w="1"/><text x="25.5638%" y="1183.50"></text></g><g><title>&lt;tracing_core::metadata::Level as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="25.3138%" y="1157" width="0.0118%" height="15" fill="rgb(213,90,21)" fg:x="2138" fg:w="1"/><text x="25.5638%" y="1167.50"></text></g><g><title>&lt;tracing_core::metadata::LevelInner as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="25.3138%" y="1141" width="0.0118%" height="15" fill="rgb(205,208,24)" fg:x="2138" fg:w="1"/><text x="25.5638%" y="1151.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (4 samples, 0.05%)</title><rect x="25.3256%" y="1189" width="0.0474%" height="15" fill="rgb(246,31,12)" fg:x="2139" fg:w="4"/><text x="25.5756%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::Writer as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="25.3730%" y="1189" width="0.0118%" height="15" fill="rgb(213,154,6)" fg:x="2143" fg:w="1"/><text x="25.6230%" y="1199.50"></text></g><g><title>tracing_subscriber::fmt::format::Writer::write_str (1 samples, 0.01%)</title><rect x="25.3730%" y="1173" width="0.0118%" height="15" fill="rgb(222,163,29)" fg:x="2143" fg:w="1"/><text x="25.6230%" y="1183.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::json::SerializableContext&lt;Span,N&gt; as serde::ser::Serialize&gt;::serialize (1 samples, 0.01%)</title><rect x="25.3848%" y="1189" width="0.0118%" height="15" fill="rgb(227,201,8)" fg:x="2144" fg:w="1"/><text x="25.6348%" y="1199.50"></text></g><g><title>tracing_subscriber::registry::SpanRef&lt;R&gt;::scope (1 samples, 0.01%)</title><rect x="25.3848%" y="1173" width="0.0118%" height="15" fill="rgb(233,9,32)" fg:x="2144" fg:w="1"/><text x="25.6348%" y="1183.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::json::SerializableSpan&lt;Span,N&gt; as serde::ser::Serialize&gt;::serialize (1 samples, 0.01%)</title><rect x="25.3966%" y="1189" width="0.0118%" height="15" fill="rgb(217,54,24)" fg:x="2145" fg:w="1"/><text x="25.6466%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::convert::From&lt;std::time::SystemTime&gt;&gt;::from (2 samples, 0.02%)</title><rect x="25.4085%" y="1189" width="0.0237%" height="15" fill="rgb(235,192,0)" fg:x="2146" fg:w="2"/><text x="25.6585%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::fmt::Display&gt;::fmt (2 samples, 0.02%)</title><rect x="25.4322%" y="1189" width="0.0237%" height="15" fill="rgb(235,45,9)" fg:x="2148" fg:w="2"/><text x="25.6822%" y="1199.50"></text></g><g><title>core::fmt::Arguments::new_v1_formatted (1 samples, 0.01%)</title><rect x="25.4440%" y="1173" width="0.0118%" height="15" fill="rgb(246,42,40)" fg:x="2149" fg:w="1"/><text x="25.6940%" y="1183.50"></text></g><g><title>&lt;tracing_subscriber::fmt::writer::WriteAdaptor as std::io::Write&gt;::write (2 samples, 0.02%)</title><rect x="25.4558%" y="1189" width="0.0237%" height="15" fill="rgb(248,111,24)" fg:x="2150" fg:w="2"/><text x="25.7058%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enabled (1 samples, 0.01%)</title><rect x="25.4795%" y="1189" width="0.0118%" height="15" fill="rgb(249,65,22)" fg:x="2152" fg:w="1"/><text x="25.7295%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::enabled (1 samples, 0.01%)</title><rect x="25.4795%" y="1173" width="0.0118%" height="15" fill="rgb(238,111,51)" fg:x="2152" fg:w="1"/><text x="25.7295%" y="1183.50"></text></g><g><title>tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt;::id (1 samples, 0.01%)</title><rect x="25.4795%" y="1157" width="0.0118%" height="15" fill="rgb(250,118,22)" fg:x="2152" fg:w="1"/><text x="25.7295%" y="1167.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (2 samples, 0.02%)</title><rect x="25.4914%" y="1189" width="0.0237%" height="15" fill="rgb(234,84,26)" fg:x="2153" fg:w="2"/><text x="25.7414%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::clone_span (2 samples, 0.02%)</title><rect x="25.5150%" y="1189" width="0.0237%" height="15" fill="rgb(243,172,12)" fg:x="2155" fg:w="2"/><text x="25.7650%" y="1199.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::enter (9 samples, 0.11%)</title><rect x="25.5387%" y="1189" width="0.1066%" height="15" fill="rgb(236,150,49)" fg:x="2157" fg:w="9"/><text x="25.7887%" y="1199.50"></text></g><g><title>tracing_subscriber::registry::stack::SpanStack::push (6 samples, 0.07%)</title><rect x="25.5742%" y="1173" width="0.0710%" height="15" fill="rgb(225,197,26)" fg:x="2160" fg:w="6"/><text x="25.8242%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.07%)</title><rect x="25.5742%" y="1157" width="0.0710%" height="15" fill="rgb(214,17,42)" fg:x="2160" fg:w="6"/><text x="25.8242%" y="1167.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="25.6334%" y="1141" width="0.0118%" height="15" fill="rgb(224,165,40)" fg:x="2165" fg:w="1"/><text x="25.8834%" y="1151.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="25.6453%" y="1189" width="0.0118%" height="15" fill="rgb(246,100,4)" fg:x="2166" fg:w="1"/><text x="25.8953%" y="1199.50"></text></g><g><title>[libc.so.6] (57 samples, 0.67%)</title><rect x="25.6571%" y="1189" width="0.6749%" height="15" fill="rgb(222,103,0)" fg:x="2167" fg:w="57"/><text x="25.9071%" y="1199.50"></text></g><g><title>entry_SYSCALL_64 (9 samples, 0.11%)</title><rect x="26.2254%" y="1173" width="0.1066%" height="15" fill="rgb(227,189,26)" fg:x="2215" fg:w="9"/><text x="26.4754%" y="1183.50"></text></g><g><title>&lt;rotmguard::extra_datatypes::statdata::StatData as rotmguard::read::RPRead&gt;::rp_read (1 samples, 0.01%)</title><rect x="26.3320%" y="1157" width="0.0118%" height="15" fill="rgb(214,202,17)" fg:x="2224" fg:w="1"/><text x="26.5820%" y="1167.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;str&gt; as rotmguard::read::RPRead&gt;::rp_read (1 samples, 0.01%)</title><rect x="26.3320%" y="1141" width="0.0118%" height="15" fill="rgb(229,111,3)" fg:x="2224" fg:w="1"/><text x="26.5820%" y="1151.50"></text></g><g><title>tracing_subscriber::fmt::writer::MakeWriter::make_writer_for (1 samples, 0.01%)</title><rect x="26.3320%" y="1125" width="0.0118%" height="15" fill="rgb(229,172,15)" fg:x="2224" fg:w="1"/><text x="26.5820%" y="1135.50"></text></g><g><title>&lt;&amp;rotmguard::logging::LogBuffer as tracing_subscriber::fmt::writer::MakeWriter&gt;::make_writer (1 samples, 0.01%)</title><rect x="26.3320%" y="1109" width="0.0118%" height="15" fill="rgb(230,224,35)" fg:x="2224" fg:w="1"/><text x="26.5820%" y="1119.50"></text></g><g><title>rotmguard::module::autonexus::passive::Passive::apply_passive::__CALLSITE (1 samples, 0.01%)</title><rect x="26.3320%" y="1093" width="0.0118%" height="15" fill="rgb(251,141,6)" fg:x="2224" fg:w="1"/><text x="26.5820%" y="1103.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.01%)</title><rect x="26.3320%" y="1077" width="0.0118%" height="15" fill="rgb(225,208,6)" fg:x="2224" fg:w="1"/><text x="26.5820%" y="1087.50"></text></g><g><title>[rotmguard] (2 samples, 0.02%)</title><rect x="26.3320%" y="1173" width="0.0237%" height="15" fill="rgb(246,181,16)" fg:x="2224" fg:w="2"/><text x="26.5820%" y="1183.50"></text></g><g><title>[rotmguard] (1 samples, 0.01%)</title><rect x="26.3438%" y="1157" width="0.0118%" height="15" fill="rgb(227,129,36)" fg:x="2225" fg:w="1"/><text x="26.5938%" y="1167.50"></text></g><g><title>tracing_subscriber::fmt::writer::MakeWriter::make_writer_for (1 samples, 0.01%)</title><rect x="26.3438%" y="1141" width="0.0118%" height="15" fill="rgb(248,117,24)" fg:x="2225" fg:w="1"/><text x="26.5938%" y="1151.50"></text></g><g><title>&lt;&amp;rotmguard::logging::LogBuffer as tracing_subscriber::fmt::writer::MakeWriter&gt;::make_writer (1 samples, 0.01%)</title><rect x="26.3438%" y="1125" width="0.0118%" height="15" fill="rgb(214,185,35)" fg:x="2225" fg:w="1"/><text x="26.5938%" y="1135.50"></text></g><g><title>rotmguard::module::autonexus::passive::Passive::apply_passive::__CALLSITE (1 samples, 0.01%)</title><rect x="26.3438%" y="1109" width="0.0118%" height="15" fill="rgb(236,150,34)" fg:x="2225" fg:w="1"/><text x="26.5938%" y="1119.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.01%)</title><rect x="26.3438%" y="1093" width="0.0118%" height="15" fill="rgb(243,228,27)" fg:x="2225" fg:w="1"/><text x="26.5938%" y="1103.50"></text></g><g><title>[rotmguard] (4 samples, 0.05%)</title><rect x="26.3320%" y="1189" width="0.0474%" height="15" fill="rgb(245,77,44)" fg:x="2224" fg:w="4"/><text x="26.5820%" y="1199.50"></text></g><g><title>write (2 samples, 0.02%)</title><rect x="26.3557%" y="1173" width="0.0237%" height="15" fill="rgb(235,214,42)" fg:x="2226" fg:w="2"/><text x="26.6057%" y="1183.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="26.3557%" y="1157" width="0.0237%" height="15" fill="rgb(221,74,3)" fg:x="2226" fg:w="2"/><text x="26.6057%" y="1167.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.02%)</title><rect x="26.3557%" y="1141" width="0.0237%" height="15" fill="rgb(206,121,29)" fg:x="2226" fg:w="2"/><text x="26.6057%" y="1151.50"></text></g><g><title>&lt;std::os::unix::net::stream::UnixStream as std::io::Write&gt;::write (2 samples, 0.02%)</title><rect x="26.3557%" y="1125" width="0.0237%" height="15" fill="rgb(249,131,53)" fg:x="2226" fg:w="2"/><text x="26.6057%" y="1135.50"></text></g><g><title>write (2 samples, 0.02%)</title><rect x="26.3557%" y="1109" width="0.0237%" height="15" fill="rgb(236,170,29)" fg:x="2226" fg:w="2"/><text x="26.6057%" y="1119.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.02%)</title><rect x="26.3557%" y="1093" width="0.0237%" height="15" fill="rgb(247,96,15)" fg:x="2226" fg:w="2"/><text x="26.6057%" y="1103.50"></text></g><g><title>_ZN5tokio7runtime4time5wheel5Wheel15next_expiration17h9e47eb8568393497E.llvm.15467044453606460770 (1 samples, 0.01%)</title><rect x="26.3794%" y="1189" width="0.0118%" height="15" fill="rgb(211,210,7)" fg:x="2228" fg:w="1"/><text x="26.6294%" y="1199.50"></text></g><g><title>__floattidf (1 samples, 0.01%)</title><rect x="26.3912%" y="1189" width="0.0118%" height="15" fill="rgb(240,88,50)" fg:x="2229" fg:w="1"/><text x="26.6412%" y="1199.50"></text></g><g><title>__rust_alloc (2 samples, 0.02%)</title><rect x="26.4030%" y="1189" width="0.0237%" height="15" fill="rgb(209,229,26)" fg:x="2230" fg:w="2"/><text x="26.6530%" y="1199.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.01%)</title><rect x="26.4267%" y="1189" width="0.0118%" height="15" fill="rgb(210,68,23)" fg:x="2232" fg:w="1"/><text x="26.6767%" y="1199.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (1 samples, 0.01%)</title><rect x="26.4386%" y="1189" width="0.0118%" height="15" fill="rgb(229,180,13)" fg:x="2233" fg:w="1"/><text x="26.6886%" y="1199.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.01%)</title><rect x="26.4504%" y="1189" width="0.0118%" height="15" fill="rgb(236,53,44)" fg:x="2234" fg:w="1"/><text x="26.7004%" y="1199.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::do_merge (1 samples, 0.01%)</title><rect x="26.4622%" y="1189" width="0.0118%" height="15" fill="rgb(244,214,29)" fg:x="2235" fg:w="1"/><text x="26.7122%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="26.4622%" y="1173" width="0.0118%" height="15" fill="rgb(220,75,29)" fg:x="2235" fg:w="1"/><text x="26.7122%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="26.4622%" y="1157" width="0.0118%" height="15" fill="rgb(214,183,37)" fg:x="2235" fg:w="1"/><text x="26.7122%" y="1167.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.02%)</title><rect x="26.4741%" y="1189" width="0.0237%" height="15" fill="rgb(239,117,29)" fg:x="2236" fg:w="2"/><text x="26.7241%" y="1199.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (1 samples, 0.01%)</title><rect x="26.4859%" y="1173" width="0.0118%" height="15" fill="rgb(237,171,35)" fg:x="2237" fg:w="1"/><text x="26.7359%" y="1183.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (1 samples, 0.01%)</title><rect x="26.4859%" y="1157" width="0.0118%" height="15" fill="rgb(229,178,53)" fg:x="2237" fg:w="1"/><text x="26.7359%" y="1167.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (1 samples, 0.01%)</title><rect x="26.4978%" y="1189" width="0.0118%" height="15" fill="rgb(210,102,19)" fg:x="2238" fg:w="1"/><text x="26.7478%" y="1199.50"></text></g><g><title>alloc::collections::btree::fix::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::fix_node_and_affected_ancestors (1 samples, 0.01%)</title><rect x="26.4978%" y="1173" width="0.0118%" height="15" fill="rgb(235,127,22)" fg:x="2238" fg:w="1"/><text x="26.7478%" y="1183.50"></text></g><g><title>alloc::collections::btree::fix::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::fix_node_through_parent (1 samples, 0.01%)</title><rect x="26.4978%" y="1157" width="0.0118%" height="15" fill="rgb(244,31,31)" fg:x="2238" fg:w="1"/><text x="26.7478%" y="1167.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (1 samples, 0.01%)</title><rect x="26.5096%" y="1189" width="0.0118%" height="15" fill="rgb(231,43,21)" fg:x="2239" fg:w="1"/><text x="26.7596%" y="1199.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="26.5214%" y="1189" width="0.0118%" height="15" fill="rgb(217,131,35)" fg:x="2240" fg:w="1"/><text x="26.7714%" y="1199.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="26.5214%" y="1173" width="0.0118%" height="15" fill="rgb(221,149,4)" fg:x="2240" fg:w="1"/><text x="26.7714%" y="1183.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="26.5333%" y="1189" width="0.0118%" height="15" fill="rgb(232,170,28)" fg:x="2241" fg:w="1"/><text x="26.7833%" y="1199.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="26.5451%" y="1189" width="0.0237%" height="15" fill="rgb(238,56,10)" fg:x="2242" fg:w="2"/><text x="26.7951%" y="1199.50"></text></g><g><title>clock_gettime (1 samples, 0.01%)</title><rect x="26.5688%" y="1189" width="0.0118%" height="15" fill="rgb(235,196,14)" fg:x="2244" fg:w="1"/><text x="26.8188%" y="1199.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (1 samples, 0.01%)</title><rect x="26.5688%" y="1173" width="0.0118%" height="15" fill="rgb(216,45,48)" fg:x="2244" fg:w="1"/><text x="26.8188%" y="1183.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (1 samples, 0.01%)</title><rect x="26.5688%" y="1157" width="0.0118%" height="15" fill="rgb(238,213,17)" fg:x="2244" fg:w="1"/><text x="26.8188%" y="1167.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (1 samples, 0.01%)</title><rect x="26.5688%" y="1141" width="0.0118%" height="15" fill="rgb(212,13,2)" fg:x="2244" fg:w="1"/><text x="26.8188%" y="1151.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.01%)</title><rect x="26.5806%" y="1189" width="0.0118%" height="15" fill="rgb(240,114,20)" fg:x="2245" fg:w="1"/><text x="26.8306%" y="1199.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.01%)</title><rect x="26.5925%" y="1189" width="0.0118%" height="15" fill="rgb(228,41,40)" fg:x="2246" fg:w="1"/><text x="26.8425%" y="1199.50"></text></g><g><title>core::fmt::builders::DebugStruct::field_with (1 samples, 0.01%)</title><rect x="26.5925%" y="1173" width="0.0118%" height="15" fill="rgb(244,132,35)" fg:x="2246" fg:w="1"/><text x="26.8425%" y="1183.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.01%)</title><rect x="26.5925%" y="1157" width="0.0118%" height="15" fill="rgb(253,189,4)" fg:x="2246" fg:w="1"/><text x="26.8425%" y="1167.50"></text></g><g><title>core::fmt::builders::DebugStruct::field_with::_{{closure}} (1 samples, 0.01%)</title><rect x="26.5925%" y="1141" width="0.0118%" height="15" fill="rgb(224,37,19)" fg:x="2246" fg:w="1"/><text x="26.8425%" y="1151.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::_{{closure}} (1 samples, 0.01%)</title><rect x="26.5925%" y="1125" width="0.0118%" height="15" fill="rgb(235,223,18)" fg:x="2246" fg:w="1"/><text x="26.8425%" y="1135.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (1 samples, 0.01%)</title><rect x="26.6043%" y="1189" width="0.0118%" height="15" fill="rgb(235,163,25)" fg:x="2247" fg:w="1"/><text x="26.8543%" y="1199.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (1 samples, 0.01%)</title><rect x="26.6161%" y="1189" width="0.0118%" height="15" fill="rgb(217,145,28)" fg:x="2248" fg:w="1"/><text x="26.8661%" y="1199.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="26.6280%" y="1189" width="0.0118%" height="15" fill="rgb(223,223,32)" fg:x="2249" fg:w="1"/><text x="26.8780%" y="1199.50"></text></g><g><title>core::fmt::run (1 samples, 0.01%)</title><rect x="26.6280%" y="1173" width="0.0118%" height="15" fill="rgb(227,189,39)" fg:x="2249" fg:w="1"/><text x="26.8780%" y="1183.50"></text></g><g><title>core::num::flt2dec::strategy::dragon::mul_pow10 (2 samples, 0.02%)</title><rect x="26.6398%" y="1189" width="0.0237%" height="15" fill="rgb(248,10,22)" fg:x="2250" fg:w="2"/><text x="26.8898%" y="1199.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_shortest_opt (1 samples, 0.01%)</title><rect x="26.6635%" y="1189" width="0.0118%" height="15" fill="rgb(248,46,39)" fg:x="2252" fg:w="1"/><text x="26.9135%" y="1199.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::max_pow10_no_more_than (1 samples, 0.01%)</title><rect x="26.6635%" y="1173" width="0.0118%" height="15" fill="rgb(248,113,48)" fg:x="2252" fg:w="1"/><text x="26.9135%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;rotmguard::module::autonexus::AutonexusInst as rotmguard::module::ModuleInstance&gt;::client_packet::{{closure}}&gt; (1 samples, 0.01%)</title><rect x="26.6753%" y="1189" width="0.0118%" height="15" fill="rgb(245,16,25)" fg:x="2253" fg:w="1"/><text x="26.9253%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;rotmguard::module::con::ConInst as rotmguard::module::ModuleInstance&gt;::client_packet::{{closure}}&gt; (1 samples, 0.01%)</title><rect x="26.6872%" y="1189" width="0.0118%" height="15" fill="rgb(249,152,16)" fg:x="2254" fg:w="1"/><text x="26.9372%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;rotmguard::packets::ServerPacket&gt; (4 samples, 0.05%)</title><rect x="26.6990%" y="1189" width="0.0474%" height="15" fill="rgb(250,16,1)" fg:x="2255" fg:w="4"/><text x="26.9490%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;rotmguard::packets::_67_notification::NotificationPacket&gt; (2 samples, 0.02%)</title><rect x="26.7227%" y="1173" width="0.0237%" height="15" fill="rgb(249,138,3)" fg:x="2257" fg:w="2"/><text x="26.9727%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;rotmguard::packets::_67_notification::NotificationType&gt; (2 samples, 0.02%)</title><rect x="26.7227%" y="1157" width="0.0237%" height="15" fill="rgb(227,71,41)" fg:x="2257" fg:w="2"/><text x="26.9727%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::borrow::Cow&lt;str&gt;&gt; (1 samples, 0.01%)</title><rect x="26.7345%" y="1141" width="0.0118%" height="15" fill="rgb(209,184,23)" fg:x="2258" fg:w="1"/><text x="26.9845%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.01%)</title><rect x="26.7464%" y="1189" width="0.0118%" height="15" fill="rgb(223,215,31)" fg:x="2259" fg:w="1"/><text x="26.9964%" y="1199.50"></text></g><g><title>core::ptr::read (3 samples, 0.04%)</title><rect x="26.7582%" y="1141" width="0.0355%" height="15" fill="rgb(210,146,28)" fg:x="2260" fg:w="3"/><text x="27.0082%" y="1151.50"></text></g><g><title>core::slice::rotate::ptr_rotate (4 samples, 0.05%)</title><rect x="26.7582%" y="1189" width="0.0474%" height="15" fill="rgb(209,183,41)" fg:x="2260" fg:w="4"/><text x="27.0082%" y="1199.50"></text></g><g><title>core::ptr::swap_nonoverlapping (4 samples, 0.05%)</title><rect x="26.7582%" y="1173" width="0.0474%" height="15" fill="rgb(209,224,45)" fg:x="2260" fg:w="4"/><text x="27.0082%" y="1183.50"></text></g><g><title>core::ptr::swap_nonoverlapping_simple_untyped (4 samples, 0.05%)</title><rect x="26.7582%" y="1157" width="0.0474%" height="15" fill="rgb(224,209,51)" fg:x="2260" fg:w="4"/><text x="27.0082%" y="1167.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="26.7937%" y="1141" width="0.0118%" height="15" fill="rgb(223,17,39)" fg:x="2263" fg:w="1"/><text x="27.0437%" y="1151.50"></text></g><g><title>core::str::converts::from_utf8 (14 samples, 0.17%)</title><rect x="26.8056%" y="1189" width="0.1658%" height="15" fill="rgb(234,204,37)" fg:x="2264" fg:w="14"/><text x="27.0556%" y="1199.50"></text></g><g><title>core::str::validations::run_utf8_validation (9 samples, 0.11%)</title><rect x="26.8648%" y="1173" width="0.1066%" height="15" fill="rgb(236,120,5)" fg:x="2269" fg:w="9"/><text x="27.1148%" y="1183.50"></text></g><g><title>malloc (4 samples, 0.05%)</title><rect x="26.9713%" y="1189" width="0.0474%" height="15" fill="rgb(248,97,27)" fg:x="2278" fg:w="4"/><text x="27.2213%" y="1199.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (8 samples, 0.09%)</title><rect x="27.0187%" y="1189" width="0.0947%" height="15" fill="rgb(240,66,17)" fg:x="2282" fg:w="8"/><text x="27.2687%" y="1199.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (5 samples, 0.06%)</title><rect x="27.0542%" y="1173" width="0.0592%" height="15" fill="rgb(210,79,3)" fg:x="2285" fg:w="5"/><text x="27.3042%" y="1183.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select::_{{closure}} (5 samples, 0.06%)</title><rect x="27.0542%" y="1157" width="0.0592%" height="15" fill="rgb(214,176,27)" fg:x="2285" fg:w="5"/><text x="27.3042%" y="1167.50"></text></g><g><title>pow (1 samples, 0.01%)</title><rect x="27.1134%" y="1189" width="0.0118%" height="15" fill="rgb(235,185,3)" fg:x="2290" fg:w="1"/><text x="27.3634%" y="1199.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.01%)</title><rect x="27.1489%" y="1173" width="0.0118%" height="15" fill="rgb(227,24,12)" fg:x="2293" fg:w="1"/><text x="27.3989%" y="1183.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;u8&gt; for usize&gt;::from (1 samples, 0.01%)</title><rect x="27.1489%" y="1157" width="0.0118%" height="15" fill="rgb(252,169,48)" fg:x="2293" fg:w="1"/><text x="27.3989%" y="1167.50"></text></g><g><title>core::num::&lt;impl u8&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="27.1608%" y="1173" width="0.0118%" height="15" fill="rgb(212,65,1)" fg:x="2294" fg:w="1"/><text x="27.4108%" y="1183.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.01%)</title><rect x="27.1726%" y="1141" width="0.0118%" height="15" fill="rgb(242,39,24)" fg:x="2295" fg:w="1"/><text x="27.4226%" y="1151.50"></text></g><g><title>rc4::Rc4State::prga (6 samples, 0.07%)</title><rect x="27.1253%" y="1189" width="0.0710%" height="15" fill="rgb(249,32,23)" fg:x="2291" fg:w="6"/><text x="27.3753%" y="1199.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (2 samples, 0.02%)</title><rect x="27.1726%" y="1173" width="0.0237%" height="15" fill="rgb(251,195,23)" fg:x="2295" fg:w="2"/><text x="27.4226%" y="1183.50"></text></g><g><title>core::ptr::swap (2 samples, 0.02%)</title><rect x="27.1726%" y="1157" width="0.0237%" height="15" fill="rgb(236,174,8)" fg:x="2295" fg:w="2"/><text x="27.4226%" y="1167.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="27.1845%" y="1141" width="0.0118%" height="15" fill="rgb(220,197,8)" fg:x="2296" fg:w="1"/><text x="27.4345%" y="1151.50"></text></g><g><title>&lt;rotmguard::extra_datatypes::object_status_data::ObjectStatusData as rotmguard::read::RPRead&gt;::rp_read (1 samples, 0.01%)</title><rect x="27.1963%" y="1173" width="0.0118%" height="15" fill="rgb(240,108,37)" fg:x="2297" fg:w="1"/><text x="27.4463%" y="1183.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.01%)</title><rect x="27.1963%" y="1157" width="0.0118%" height="15" fill="rgb(232,176,24)" fg:x="2297" fg:w="1"/><text x="27.4463%" y="1167.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.01%)</title><rect x="27.1963%" y="1141" width="0.0118%" height="15" fill="rgb(243,35,29)" fg:x="2297" fg:w="1"/><text x="27.4463%" y="1151.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::lt (1 samples, 0.01%)</title><rect x="27.1963%" y="1125" width="0.0118%" height="15" fill="rgb(210,37,18)" fg:x="2297" fg:w="1"/><text x="27.4463%" y="1135.50"></text></g><g><title>realloc (2 samples, 0.02%)</title><rect x="27.1963%" y="1189" width="0.0237%" height="15" fill="rgb(224,184,40)" fg:x="2297" fg:w="2"/><text x="27.4463%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="27.2081%" y="1173" width="0.0118%" height="15" fill="rgb(236,39,29)" fg:x="2298" fg:w="1"/><text x="27.4581%" y="1183.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (1 samples, 0.01%)</title><rect x="27.2081%" y="1157" width="0.0118%" height="15" fill="rgb(232,48,39)" fg:x="2298" fg:w="1"/><text x="27.4581%" y="1167.50"></text></g><g><title>rotmguard::module::autonexus::passive::Passive::apply_passive (1 samples, 0.01%)</title><rect x="27.2200%" y="1189" width="0.0118%" height="15" fill="rgb(236,34,42)" fg:x="2299" fg:w="1"/><text x="27.4700%" y="1199.50"></text></g><g><title>rotmguard::module::autonexus::passive::Passive::apply_passive::_{{closure}} (1 samples, 0.01%)</title><rect x="27.2200%" y="1173" width="0.0118%" height="15" fill="rgb(243,106,37)" fg:x="2299" fg:w="1"/><text x="27.4700%" y="1183.50"></text></g><g><title>rotmguard::module::autonexus::projectiles::Projectiles::add_remove_objects (2 samples, 0.02%)</title><rect x="27.2318%" y="1189" width="0.0237%" height="15" fill="rgb(218,96,6)" fg:x="2300" fg:w="2"/><text x="27.4818%" y="1199.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (2 samples, 0.02%)</title><rect x="27.2318%" y="1173" width="0.0237%" height="15" fill="rgb(235,130,12)" fg:x="2300" fg:w="2"/><text x="27.4818%" y="1183.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove_entry (2 samples, 0.02%)</title><rect x="27.2318%" y="1157" width="0.0237%" height="15" fill="rgb(231,95,0)" fg:x="2300" fg:w="2"/><text x="27.4818%" y="1167.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (2 samples, 0.02%)</title><rect x="27.2318%" y="1141" width="0.0237%" height="15" fill="rgb(228,12,23)" fg:x="2300" fg:w="2"/><text x="27.4818%" y="1151.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (2 samples, 0.02%)</title><rect x="27.2318%" y="1125" width="0.0237%" height="15" fill="rgb(216,12,1)" fg:x="2300" fg:w="2"/><text x="27.4818%" y="1135.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (2 samples, 0.02%)</title><rect x="27.2318%" y="1109" width="0.0237%" height="15" fill="rgb(219,59,3)" fg:x="2300" fg:w="2"/><text x="27.4818%" y="1119.50"></text></g><g><title>&lt;rotmguard::extra_datatypes::ObjectId as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="27.2437%" y="1093" width="0.0118%" height="15" fill="rgb(215,208,46)" fg:x="2301" fg:w="1"/><text x="27.4937%" y="1103.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (1 samples, 0.01%)</title><rect x="27.2437%" y="1077" width="0.0118%" height="15" fill="rgb(254,224,29)" fg:x="2301" fg:w="1"/><text x="27.4937%" y="1087.50"></text></g><g><title>&lt;tokio::io::util::read::Read&lt;R&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="27.3029%" y="1173" width="0.0237%" height="15" fill="rgb(232,14,29)" fg:x="2306" fg:w="2"/><text x="27.5529%" y="1183.50"></text></g><g><title>&lt;inout::inout_buf::InOutBufIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.06%)</title><rect x="27.3265%" y="1077" width="0.0592%" height="15" fill="rgb(208,45,52)" fg:x="2308" fg:w="5"/><text x="27.5765%" y="1087.50"></text></g><g><title>&lt;rc4::Backend as cipher::stream_core::StreamBackend&gt;::gen_ks_block (3 samples, 0.04%)</title><rect x="27.3857%" y="1077" width="0.0355%" height="15" fill="rgb(234,191,28)" fg:x="2313" fg:w="3"/><text x="27.6357%" y="1087.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (10 samples, 0.12%)</title><rect x="27.3265%" y="1173" width="0.1184%" height="15" fill="rgb(244,67,43)" fg:x="2308" fg:w="10"/><text x="27.5765%" y="1183.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (10 samples, 0.12%)</title><rect x="27.3265%" y="1157" width="0.1184%" height="15" fill="rgb(236,189,24)" fg:x="2308" fg:w="10"/><text x="27.5765%" y="1167.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (10 samples, 0.12%)</title><rect x="27.3265%" y="1141" width="0.1184%" height="15" fill="rgb(239,214,33)" fg:x="2308" fg:w="10"/><text x="27.5765%" y="1151.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (10 samples, 0.12%)</title><rect x="27.3265%" y="1125" width="0.1184%" height="15" fill="rgb(226,176,41)" fg:x="2308" fg:w="10"/><text x="27.5765%" y="1135.50"></text></g><g><title>&lt;rc4::Rc4Core&lt;KeySize&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (10 samples, 0.12%)</title><rect x="27.3265%" y="1109" width="0.1184%" height="15" fill="rgb(248,47,8)" fg:x="2308" fg:w="10"/><text x="27.5765%" y="1119.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (10 samples, 0.12%)</title><rect x="27.3265%" y="1093" width="0.1184%" height="15" fill="rgb(218,81,44)" fg:x="2308" fg:w="10"/><text x="27.5765%" y="1103.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (2 samples, 0.02%)</title><rect x="27.4213%" y="1077" width="0.0237%" height="15" fill="rgb(213,98,6)" fg:x="2316" fg:w="2"/><text x="27.6713%" y="1087.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="27.4213%" y="1061" width="0.0237%" height="15" fill="rgb(222,85,22)" fg:x="2316" fg:w="2"/><text x="27.6713%" y="1071.50"></text></g><g><title>rotmguard::proxy::PacketReader::wait_for_whole_packet::_{{closure}} (17 samples, 0.20%)</title><rect x="27.2555%" y="1189" width="0.2013%" height="15" fill="rgb(239,46,39)" fg:x="2302" fg:w="17"/><text x="27.5055%" y="1199.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="27.4449%" y="1173" width="0.0118%" height="15" fill="rgb(237,12,29)" fg:x="2318" fg:w="1"/><text x="27.6949%" y="1183.50"></text></g><g><title>&lt;rotmguard::module::antidebuffs::AntidebuffsInst as rotmguard::module::ModuleInstance&gt;::server_packet::_{{closure}} (1 samples, 0.01%)</title><rect x="27.5752%" y="1157" width="0.0118%" height="15" fill="rgb(214,77,8)" fg:x="2329" fg:w="1"/><text x="27.8252%" y="1167.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (1 samples, 0.01%)</title><rect x="27.5752%" y="1141" width="0.0118%" height="15" fill="rgb(217,168,37)" fg:x="2329" fg:w="1"/><text x="27.8252%" y="1151.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="27.5752%" y="1125" width="0.0118%" height="15" fill="rgb(221,217,23)" fg:x="2329" fg:w="1"/><text x="27.8252%" y="1135.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="27.5752%" y="1109" width="0.0118%" height="15" fill="rgb(243,229,36)" fg:x="2329" fg:w="1"/><text x="27.8252%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;bool&gt;&gt; (1 samples, 0.01%)</title><rect x="27.5989%" y="1141" width="0.0118%" height="15" fill="rgb(251,163,40)" fg:x="2331" fg:w="1"/><text x="27.8489%" y="1151.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="27.5989%" y="1125" width="0.0118%" height="15" fill="rgb(237,222,12)" fg:x="2331" fg:w="1"/><text x="27.8489%" y="1135.50"></text></g><g><title>std::sync::poison::Flag::done (1 samples, 0.01%)</title><rect x="27.5989%" y="1109" width="0.0118%" height="15" fill="rgb(248,132,6)" fg:x="2331" fg:w="1"/><text x="27.8489%" y="1119.50"></text></g><g><title>std::thread::panicking (1 samples, 0.01%)</title><rect x="27.5989%" y="1093" width="0.0118%" height="15" fill="rgb(227,167,50)" fg:x="2331" fg:w="1"/><text x="27.8489%" y="1103.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.01%)</title><rect x="27.5989%" y="1077" width="0.0118%" height="15" fill="rgb(242,84,37)" fg:x="2331" fg:w="1"/><text x="27.8489%" y="1087.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.01%)</title><rect x="27.5989%" y="1061" width="0.0118%" height="15" fill="rgb(212,4,50)" fg:x="2331" fg:w="1"/><text x="27.8489%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="27.5989%" y="1045" width="0.0118%" height="15" fill="rgb(230,228,32)" fg:x="2331" fg:w="1"/><text x="27.8489%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="27.5989%" y="1029" width="0.0118%" height="15" fill="rgb(248,217,23)" fg:x="2331" fg:w="1"/><text x="27.8489%" y="1039.50"></text></g><g><title>&lt;rotmguard::module::autonexus::AutonexusInst as rotmguard::module::ModuleInstance&gt;::server_packet::_{{closure}} (3 samples, 0.04%)</title><rect x="27.5870%" y="1157" width="0.0355%" height="15" fill="rgb(238,197,32)" fg:x="2330" fg:w="3"/><text x="27.8370%" y="1167.50"></text></g><g><title>rotmguard::module::autonexus::ground::Ground::add_tiles (1 samples, 0.01%)</title><rect x="27.6107%" y="1141" width="0.0118%" height="15" fill="rgb(236,106,1)" fg:x="2332" fg:w="1"/><text x="27.8607%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1 samples, 0.01%)</title><rect x="27.6107%" y="1125" width="0.0118%" height="15" fill="rgb(219,228,13)" fg:x="2332" fg:w="1"/><text x="27.8607%" y="1135.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.01%)</title><rect x="27.6107%" y="1109" width="0.0118%" height="15" fill="rgb(238,30,35)" fg:x="2332" fg:w="1"/><text x="27.8607%" y="1119.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1 samples, 0.01%)</title><rect x="27.6107%" y="1093" width="0.0118%" height="15" fill="rgb(236,70,23)" fg:x="2332" fg:w="1"/><text x="27.8607%" y="1103.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1 samples, 0.01%)</title><rect x="27.6107%" y="1077" width="0.0118%" height="15" fill="rgb(249,104,48)" fg:x="2332" fg:w="1"/><text x="27.8607%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="27.6107%" y="1061" width="0.0118%" height="15" fill="rgb(254,117,50)" fg:x="2332" fg:w="1"/><text x="27.8607%" y="1071.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="27.6107%" y="1045" width="0.0118%" height="15" fill="rgb(223,152,4)" fg:x="2332" fg:w="1"/><text x="27.8607%" y="1055.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="27.6107%" y="1029" width="0.0118%" height="15" fill="rgb(245,6,2)" fg:x="2332" fg:w="1"/><text x="27.8607%" y="1039.50"></text></g><g><title>&lt;rotmguard::module::RootModuleInstance as rotmguard::module::ModuleInstance&gt;::server_packet::_{{closure}} (5 samples, 0.06%)</title><rect x="27.5752%" y="1173" width="0.0592%" height="15" fill="rgb(249,150,24)" fg:x="2329" fg:w="5"/><text x="27.8252%" y="1183.50"></text></g><g><title>&lt;rotmguard::module::stats::StatsInst as rotmguard::module::ModuleInstance&gt;::server_packet::_{{closure}} (1 samples, 0.01%)</title><rect x="27.6225%" y="1157" width="0.0118%" height="15" fill="rgb(228,185,42)" fg:x="2333" fg:w="1"/><text x="27.8725%" y="1167.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (1 samples, 0.01%)</title><rect x="27.6225%" y="1141" width="0.0118%" height="15" fill="rgb(226,39,33)" fg:x="2333" fg:w="1"/><text x="27.8725%" y="1151.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="27.6225%" y="1125" width="0.0118%" height="15" fill="rgb(221,166,19)" fg:x="2333" fg:w="1"/><text x="27.8725%" y="1135.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="27.6225%" y="1109" width="0.0118%" height="15" fill="rgb(209,109,2)" fg:x="2333" fg:w="1"/><text x="27.8725%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.01%)</title><rect x="27.6344%" y="1157" width="0.0118%" height="15" fill="rgb(252,216,26)" fg:x="2334" fg:w="1"/><text x="27.8844%" y="1167.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.01%)</title><rect x="27.6344%" y="1141" width="0.0118%" height="15" fill="rgb(227,173,36)" fg:x="2334" fg:w="1"/><text x="27.8844%" y="1151.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="27.6344%" y="1125" width="0.0118%" height="15" fill="rgb(209,90,7)" fg:x="2334" fg:w="1"/><text x="27.8844%" y="1135.50"></text></g><g><title>rotmguard::proxy::Proxy::run::_{{closure}}::_{{closure}} (18 samples, 0.21%)</title><rect x="27.4568%" y="1189" width="0.2131%" height="15" fill="rgb(250,194,11)" fg:x="2319" fg:w="18"/><text x="27.7068%" y="1199.50"></text></g><g><title>rotmguard::proxy::PacketReader::pop_packet (3 samples, 0.04%)</title><rect x="27.6344%" y="1173" width="0.0355%" height="15" fill="rgb(220,72,50)" fg:x="2334" fg:w="3"/><text x="27.8844%" y="1183.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::rotate_left (2 samples, 0.02%)</title><rect x="27.6462%" y="1157" width="0.0237%" height="15" fill="rgb(222,106,48)" fg:x="2335" fg:w="2"/><text x="27.8962%" y="1167.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="27.6581%" y="1141" width="0.0118%" height="15" fill="rgb(216,220,45)" fg:x="2336" fg:w="1"/><text x="27.9081%" y="1151.50"></text></g><g><title>rotmguard::proxy::ProxyWriteHalf::send_client::_{{closure}} (2 samples, 0.02%)</title><rect x="27.6699%" y="1189" width="0.0237%" height="15" fill="rgb(234,112,18)" fg:x="2337" fg:w="2"/><text x="27.9199%" y="1199.50"></text></g><g><title>rotmguard::proxy::ProxyWriteHalf::send_server::_{{closure}} (1 samples, 0.01%)</title><rect x="27.6936%" y="1189" width="0.0118%" height="15" fill="rgb(206,179,9)" fg:x="2339" fg:w="1"/><text x="27.9436%" y="1199.50"></text></g><g><title>rotmguard::read::read_compressed_int (4 samples, 0.05%)</title><rect x="27.7054%" y="1189" width="0.0474%" height="15" fill="rgb(215,115,40)" fg:x="2340" fg:w="4"/><text x="27.9554%" y="1199.50"></text></g><g><title>&lt;u8 as rotmguard::read::RPRead&gt;::rp_read (3 samples, 0.04%)</title><rect x="27.7173%" y="1173" width="0.0355%" height="15" fill="rgb(222,69,34)" fg:x="2341" fg:w="3"/><text x="27.9673%" y="1183.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (3 samples, 0.04%)</title><rect x="27.7173%" y="1157" width="0.0355%" height="15" fill="rgb(209,161,10)" fg:x="2341" fg:w="3"/><text x="27.9673%" y="1167.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (1 samples, 0.01%)</title><rect x="27.7409%" y="1141" width="0.0118%" height="15" fill="rgb(217,6,38)" fg:x="2343" fg:w="1"/><text x="27.9909%" y="1151.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_checked (1 samples, 0.01%)</title><rect x="27.7409%" y="1125" width="0.0118%" height="15" fill="rgb(229,229,48)" fg:x="2343" fg:w="1"/><text x="27.9909%" y="1135.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (1 samples, 0.01%)</title><rect x="27.7409%" y="1109" width="0.0118%" height="15" fill="rgb(225,21,28)" fg:x="2343" fg:w="1"/><text x="27.9909%" y="1119.50"></text></g><g><title>rotmguard::write::write_compressed_int (7 samples, 0.08%)</title><rect x="27.7528%" y="1189" width="0.0829%" height="15" fill="rgb(206,33,13)" fg:x="2344" fg:w="7"/><text x="28.0028%" y="1199.50"></text></g><g><title>&lt;u8 as rotmguard::write::RPWrite&gt;::rp_write (2 samples, 0.02%)</title><rect x="27.8120%" y="1173" width="0.0237%" height="15" fill="rgb(242,178,17)" fg:x="2349" fg:w="2"/><text x="28.0620%" y="1183.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (2 samples, 0.02%)</title><rect x="27.8120%" y="1157" width="0.0237%" height="15" fill="rgb(220,162,5)" fg:x="2349" fg:w="2"/><text x="28.0620%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.02%)</title><rect x="27.8120%" y="1141" width="0.0237%" height="15" fill="rgb(210,33,43)" fg:x="2349" fg:w="2"/><text x="28.0620%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="27.8120%" y="1125" width="0.0237%" height="15" fill="rgb(216,116,54)" fg:x="2349" fg:w="2"/><text x="28.0620%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.02%)</title><rect x="27.8120%" y="1109" width="0.0237%" height="15" fill="rgb(249,92,24)" fg:x="2349" fg:w="2"/><text x="28.0620%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="27.8238%" y="1093" width="0.0118%" height="15" fill="rgb(231,189,14)" fg:x="2350" fg:w="1"/><text x="28.0738%" y="1103.50"></text></g><g><title>ryu::pretty::format64 (2 samples, 0.02%)</title><rect x="27.8357%" y="1189" width="0.0237%" height="15" fill="rgb(230,8,41)" fg:x="2351" fg:w="2"/><text x="28.0857%" y="1199.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (1 samples, 0.01%)</title><rect x="27.8593%" y="1189" width="0.0118%" height="15" fill="rgb(249,7,27)" fg:x="2353" fg:w="1"/><text x="28.1093%" y="1199.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (1 samples, 0.01%)</title><rect x="27.9185%" y="1157" width="0.0118%" height="15" fill="rgb(232,86,5)" fg:x="2358" fg:w="1"/><text x="28.1685%" y="1167.50"></text></g><g><title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.01%)</title><rect x="27.9185%" y="1141" width="0.0118%" height="15" fill="rgb(224,175,18)" fg:x="2358" fg:w="1"/><text x="28.1685%" y="1151.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.01%)</title><rect x="27.9185%" y="1125" width="0.0118%" height="15" fill="rgb(220,129,12)" fg:x="2358" fg:w="1"/><text x="28.1685%" y="1135.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.01%)</title><rect x="27.9185%" y="1109" width="0.0118%" height="15" fill="rgb(210,19,36)" fg:x="2358" fg:w="1"/><text x="28.1685%" y="1119.50"></text></g><g><title>serde_json::ser::Formatter::end_string (1 samples, 0.01%)</title><rect x="27.9185%" y="1093" width="0.0118%" height="15" fill="rgb(219,96,14)" fg:x="2358" fg:w="1"/><text x="28.1685%" y="1103.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="27.9185%" y="1077" width="0.0118%" height="15" fill="rgb(249,106,1)" fg:x="2358" fg:w="1"/><text x="28.1685%" y="1087.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (2 samples, 0.02%)</title><rect x="27.9304%" y="1157" width="0.0237%" height="15" fill="rgb(249,155,20)" fg:x="2359" fg:w="2"/><text x="28.1804%" y="1167.50"></text></g><g><title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.02%)</title><rect x="27.9304%" y="1141" width="0.0237%" height="15" fill="rgb(244,168,9)" fg:x="2359" fg:w="2"/><text x="28.1804%" y="1151.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.02%)</title><rect x="27.9304%" y="1125" width="0.0237%" height="15" fill="rgb(216,23,50)" fg:x="2359" fg:w="2"/><text x="28.1804%" y="1135.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.02%)</title><rect x="27.9304%" y="1109" width="0.0237%" height="15" fill="rgb(224,219,20)" fg:x="2359" fg:w="2"/><text x="28.1804%" y="1119.50"></text></g><g><title>serde_json::ser::Formatter::end_string (1 samples, 0.01%)</title><rect x="27.9422%" y="1093" width="0.0118%" height="15" fill="rgb(222,156,15)" fg:x="2360" fg:w="1"/><text x="28.1922%" y="1103.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="27.9422%" y="1077" width="0.0118%" height="15" fill="rgb(231,97,17)" fg:x="2360" fg:w="1"/><text x="28.1922%" y="1087.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (4 samples, 0.05%)</title><rect x="27.9185%" y="1173" width="0.0474%" height="15" fill="rgb(218,70,48)" fg:x="2358" fg:w="4"/><text x="28.1685%" y="1183.50"></text></g><g><title>serde_json::ser::Formatter::begin_object_key (1 samples, 0.01%)</title><rect x="27.9541%" y="1157" width="0.0118%" height="15" fill="rgb(212,196,52)" fg:x="2361" fg:w="1"/><text x="28.2041%" y="1167.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="27.9541%" y="1141" width="0.0118%" height="15" fill="rgb(243,203,18)" fg:x="2361" fg:w="1"/><text x="28.2041%" y="1151.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (9 samples, 0.11%)</title><rect x="27.8712%" y="1189" width="0.1066%" height="15" fill="rgb(252,125,41)" fg:x="2354" fg:w="9"/><text x="28.1212%" y="1199.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.01%)</title><rect x="27.9659%" y="1173" width="0.0118%" height="15" fill="rgb(223,180,33)" fg:x="2362" fg:w="1"/><text x="28.2159%" y="1183.50"></text></g><g><title>serde_json::ser::Formatter::begin_object_value (1 samples, 0.01%)</title><rect x="27.9659%" y="1157" width="0.0118%" height="15" fill="rgb(254,159,46)" fg:x="2362" fg:w="1"/><text x="28.2159%" y="1167.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="27.9659%" y="1141" width="0.0118%" height="15" fill="rgb(254,38,10)" fg:x="2362" fg:w="1"/><text x="28.2159%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="28.0251%" y="1173" width="0.0237%" height="15" fill="rgb(208,217,32)" fg:x="2367" fg:w="2"/><text x="28.2751%" y="1183.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="28.0251%" y="1157" width="0.0237%" height="15" fill="rgb(221,120,13)" fg:x="2367" fg:w="2"/><text x="28.2751%" y="1167.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="28.0251%" y="1141" width="0.0237%" height="15" fill="rgb(246,54,52)" fg:x="2367" fg:w="2"/><text x="28.2751%" y="1151.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (7 samples, 0.08%)</title><rect x="27.9777%" y="1189" width="0.0829%" height="15" fill="rgb(242,34,25)" fg:x="2363" fg:w="7"/><text x="28.2277%" y="1199.50"></text></g><g><title>serde_json::ser::Formatter::write_string_fragment (1 samples, 0.01%)</title><rect x="28.0488%" y="1173" width="0.0118%" height="15" fill="rgb(247,209,9)" fg:x="2369" fg:w="1"/><text x="28.2988%" y="1183.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.02%)</title><rect x="28.0606%" y="1189" width="0.0237%" height="15" fill="rgb(228,71,26)" fg:x="2370" fg:w="2"/><text x="28.3106%" y="1199.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.01%)</title><rect x="28.0725%" y="1173" width="0.0118%" height="15" fill="rgb(222,145,49)" fg:x="2371" fg:w="1"/><text x="28.3225%" y="1183.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::eat_char (1 samples, 0.01%)</title><rect x="28.0725%" y="1157" width="0.0118%" height="15" fill="rgb(218,121,17)" fg:x="2371" fg:w="1"/><text x="28.3225%" y="1167.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::discard (1 samples, 0.01%)</title><rect x="28.0725%" y="1141" width="0.0118%" height="15" fill="rgb(244,50,7)" fg:x="2371" fg:w="1"/><text x="28.3225%" y="1151.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::discard (1 samples, 0.01%)</title><rect x="28.0725%" y="1125" width="0.0118%" height="15" fill="rgb(246,229,37)" fg:x="2371" fg:w="1"/><text x="28.3225%" y="1135.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.01%)</title><rect x="28.0843%" y="1173" width="0.0118%" height="15" fill="rgb(225,18,5)" fg:x="2372" fg:w="1"/><text x="28.3343%" y="1183.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.01%)</title><rect x="28.0843%" y="1157" width="0.0118%" height="15" fill="rgb(213,204,8)" fg:x="2372" fg:w="1"/><text x="28.3343%" y="1167.50"></text></g><g><title>serde_json::ser::Formatter::begin_string (1 samples, 0.01%)</title><rect x="28.0843%" y="1141" width="0.0118%" height="15" fill="rgb(238,103,6)" fg:x="2372" fg:w="1"/><text x="28.3343%" y="1151.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="28.0843%" y="1125" width="0.0118%" height="15" fill="rgb(222,25,35)" fg:x="2372" fg:w="1"/><text x="28.3343%" y="1135.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.04%)</title><rect x="28.0843%" y="1189" width="0.0355%" height="15" fill="rgb(213,203,35)" fg:x="2372" fg:w="3"/><text x="28.3343%" y="1199.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="28.0961%" y="1173" width="0.0237%" height="15" fill="rgb(221,79,53)" fg:x="2373" fg:w="2"/><text x="28.3461%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="28.0961%" y="1157" width="0.0237%" height="15" fill="rgb(243,200,35)" fg:x="2373" fg:w="2"/><text x="28.3461%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="28.1080%" y="1141" width="0.0118%" height="15" fill="rgb(248,60,25)" fg:x="2374" fg:w="1"/><text x="28.3580%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.01%)</title><rect x="28.1080%" y="1125" width="0.0118%" height="15" fill="rgb(227,53,46)" fg:x="2374" fg:w="1"/><text x="28.3580%" y="1135.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (1 samples, 0.01%)</title><rect x="28.1198%" y="1189" width="0.0118%" height="15" fill="rgb(216,120,32)" fg:x="2375" fg:w="1"/><text x="28.3698%" y="1199.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (1 samples, 0.01%)</title><rect x="28.1198%" y="1173" width="0.0118%" height="15" fill="rgb(220,134,1)" fg:x="2375" fg:w="1"/><text x="28.3698%" y="1183.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (1 samples, 0.01%)</title><rect x="28.1198%" y="1157" width="0.0118%" height="15" fill="rgb(237,168,5)" fg:x="2375" fg:w="1"/><text x="28.3698%" y="1167.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="28.1198%" y="1141" width="0.0118%" height="15" fill="rgb(231,100,33)" fg:x="2375" fg:w="1"/><text x="28.3698%" y="1151.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::_{{closure}} (1 samples, 0.01%)</title><rect x="28.1198%" y="1125" width="0.0118%" height="15" fill="rgb(236,177,47)" fg:x="2375" fg:w="1"/><text x="28.3698%" y="1135.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::_{{closure}} (1 samples, 0.01%)</title><rect x="28.1198%" y="1109" width="0.0118%" height="15" fill="rgb(235,7,49)" fg:x="2375" fg:w="1"/><text x="28.3698%" y="1119.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (1 samples, 0.01%)</title><rect x="28.1198%" y="1093" width="0.0118%" height="15" fill="rgb(232,119,22)" fg:x="2375" fg:w="1"/><text x="28.3698%" y="1103.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.07%)</title><rect x="28.1317%" y="1189" width="0.0710%" height="15" fill="rgb(254,73,53)" fg:x="2376" fg:w="6"/><text x="28.3817%" y="1199.50"></text></g><g><title>&lt;rotmguard::logging::LogWriter as std::io::Write&gt;::write (2 samples, 0.02%)</title><rect x="28.1790%" y="1173" width="0.0237%" height="15" fill="rgb(251,35,20)" fg:x="2380" fg:w="2"/><text x="28.4290%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (2 samples, 0.02%)</title><rect x="28.1790%" y="1157" width="0.0237%" height="15" fill="rgb(241,119,20)" fg:x="2380" fg:w="2"/><text x="28.4290%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2 samples, 0.02%)</title><rect x="28.1790%" y="1141" width="0.0237%" height="15" fill="rgb(207,102,14)" fg:x="2380" fg:w="2"/><text x="28.4290%" y="1151.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.02%)</title><rect x="28.1790%" y="1125" width="0.0237%" height="15" fill="rgb(248,201,50)" fg:x="2380" fg:w="2"/><text x="28.4290%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="28.1790%" y="1109" width="0.0237%" height="15" fill="rgb(222,185,44)" fg:x="2380" fg:w="2"/><text x="28.4290%" y="1119.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="28.1790%" y="1093" width="0.0237%" height="15" fill="rgb(218,107,18)" fg:x="2380" fg:w="2"/><text x="28.4290%" y="1103.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.01%)</title><rect x="28.1909%" y="1077" width="0.0118%" height="15" fill="rgb(237,177,39)" fg:x="2381" fg:w="1"/><text x="28.4409%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::_{{closure}} (1 samples, 0.01%)</title><rect x="28.1909%" y="1061" width="0.0118%" height="15" fill="rgb(246,69,6)" fg:x="2381" fg:w="1"/><text x="28.4409%" y="1071.50"></text></g><g><title>std::time::Instant::duration_since (1 samples, 0.01%)</title><rect x="28.2027%" y="1189" width="0.0118%" height="15" fill="rgb(234,208,37)" fg:x="2382" fg:w="1"/><text x="28.4527%" y="1199.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (4 samples, 0.05%)</title><rect x="28.2145%" y="1189" width="0.0474%" height="15" fill="rgb(225,4,6)" fg:x="2383" fg:w="4"/><text x="28.4645%" y="1199.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="28.4040%" y="1173" width="0.0118%" height="15" fill="rgb(233,45,0)" fg:x="2399" fg:w="1"/><text x="28.6540%" y="1183.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (1 samples, 0.01%)</title><rect x="28.4040%" y="1157" width="0.0118%" height="15" fill="rgb(226,136,5)" fg:x="2399" fg:w="1"/><text x="28.6540%" y="1167.50"></text></g><g><title>&lt;tokio::io::ready::Ready as core::ops::bit::BitAnd&gt;::bitand (1 samples, 0.01%)</title><rect x="28.4040%" y="1141" width="0.0118%" height="15" fill="rgb(211,91,47)" fg:x="2399" fg:w="1"/><text x="28.6540%" y="1151.50"></text></g><g><title>&lt;rotmguard::packets::ClientPacket as rotmguard::read::RPRead&gt;::rp_read (1 samples, 0.01%)</title><rect x="28.4158%" y="1173" width="0.0118%" height="15" fill="rgb(242,88,51)" fg:x="2400" fg:w="1"/><text x="28.6658%" y="1183.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="28.4277%" y="1157" width="0.0118%" height="15" fill="rgb(230,91,28)" fg:x="2401" fg:w="1"/><text x="28.6777%" y="1167.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (2 samples, 0.02%)</title><rect x="28.4277%" y="1173" width="0.0237%" height="15" fill="rgb(254,186,29)" fg:x="2401" fg:w="2"/><text x="28.6777%" y="1183.50"></text></g><g><title>entry_SYSRETQ_unsafe_stack (1 samples, 0.01%)</title><rect x="28.4395%" y="1157" width="0.0118%" height="15" fill="rgb(238,6,4)" fg:x="2402" fg:w="1"/><text x="28.6895%" y="1167.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (17 samples, 0.20%)</title><rect x="28.2619%" y="1189" width="0.2013%" height="15" fill="rgb(221,151,16)" fg:x="2387" fg:w="17"/><text x="28.5119%" y="1199.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (1 samples, 0.01%)</title><rect x="28.4513%" y="1173" width="0.0118%" height="15" fill="rgb(251,143,52)" fg:x="2403" fg:w="1"/><text x="28.7013%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;alloc::vec::Vec&lt;std::process::Child&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="28.4987%" y="1173" width="0.0118%" height="15" fill="rgb(206,90,15)" fg:x="2407" fg:w="1"/><text x="28.7487%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;std::process::Child&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="28.4987%" y="1157" width="0.0118%" height="15" fill="rgb(218,35,8)" fg:x="2407" fg:w="1"/><text x="28.7487%" y="1167.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="28.4987%" y="1141" width="0.0118%" height="15" fill="rgb(239,215,6)" fg:x="2407" fg:w="1"/><text x="28.7487%" y="1151.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.01%)</title><rect x="28.4987%" y="1125" width="0.0118%" height="15" fill="rgb(245,116,39)" fg:x="2407" fg:w="1"/><text x="28.7487%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.01%)</title><rect x="28.4987%" y="1109" width="0.0118%" height="15" fill="rgb(242,65,28)" fg:x="2407" fg:w="1"/><text x="28.7487%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="28.4987%" y="1093" width="0.0118%" height="15" fill="rgb(252,132,53)" fg:x="2407" fg:w="1"/><text x="28.7487%" y="1103.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (6 samples, 0.07%)</title><rect x="28.4632%" y="1189" width="0.0710%" height="15" fill="rgb(224,159,50)" fg:x="2404" fg:w="6"/><text x="28.7132%" y="1199.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (2 samples, 0.02%)</title><rect x="28.5105%" y="1173" width="0.0237%" height="15" fill="rgb(224,93,4)" fg:x="2408" fg:w="2"/><text x="28.7605%" y="1183.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.02%)</title><rect x="28.5105%" y="1157" width="0.0237%" height="15" fill="rgb(208,81,34)" fg:x="2408" fg:w="2"/><text x="28.7605%" y="1167.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.02%)</title><rect x="28.5105%" y="1141" width="0.0237%" height="15" fill="rgb(233,92,54)" fg:x="2408" fg:w="2"/><text x="28.7605%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (2 samples, 0.02%)</title><rect x="28.5105%" y="1125" width="0.0237%" height="15" fill="rgb(237,21,14)" fg:x="2408" fg:w="2"/><text x="28.7605%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.02%)</title><rect x="28.5105%" y="1109" width="0.0237%" height="15" fill="rgb(249,128,51)" fg:x="2408" fg:w="2"/><text x="28.7605%" y="1119.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="28.5579%" y="1109" width="0.0118%" height="15" fill="rgb(223,129,24)" fg:x="2412" fg:w="1"/><text x="28.8079%" y="1119.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (2 samples, 0.02%)</title><rect x="28.5579%" y="1141" width="0.0237%" height="15" fill="rgb(231,168,25)" fg:x="2412" fg:w="2"/><text x="28.8079%" y="1151.50"></text></g><g><title>core::mem::replace (2 samples, 0.02%)</title><rect x="28.5579%" y="1125" width="0.0237%" height="15" fill="rgb(224,39,20)" fg:x="2412" fg:w="2"/><text x="28.8079%" y="1135.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="28.5697%" y="1109" width="0.0118%" height="15" fill="rgb(225,152,53)" fg:x="2413" fg:w="1"/><text x="28.8197%" y="1119.50"></text></g><g><title>tokio::runtime::context::with_scheduler (6 samples, 0.07%)</title><rect x="28.5342%" y="1189" width="0.0710%" height="15" fill="rgb(252,17,24)" fg:x="2410" fg:w="6"/><text x="28.7842%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.05%)</title><rect x="28.5579%" y="1173" width="0.0474%" height="15" fill="rgb(250,114,30)" fg:x="2412" fg:w="4"/><text x="28.8079%" y="1183.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (4 samples, 0.05%)</title><rect x="28.5579%" y="1157" width="0.0474%" height="15" fill="rgb(229,5,4)" fg:x="2412" fg:w="4"/><text x="28.8079%" y="1167.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="28.5816%" y="1141" width="0.0237%" height="15" fill="rgb(225,176,49)" fg:x="2414" fg:w="2"/><text x="28.8316%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (2 samples, 0.02%)</title><rect x="28.5816%" y="1125" width="0.0237%" height="15" fill="rgb(224,221,49)" fg:x="2414" fg:w="2"/><text x="28.8316%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (2 samples, 0.02%)</title><rect x="28.5816%" y="1109" width="0.0237%" height="15" fill="rgb(253,169,27)" fg:x="2414" fg:w="2"/><text x="28.8316%" y="1119.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (2 samples, 0.02%)</title><rect x="28.5816%" y="1093" width="0.0237%" height="15" fill="rgb(211,206,16)" fg:x="2414" fg:w="2"/><text x="28.8316%" y="1103.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (2 samples, 0.02%)</title><rect x="28.5816%" y="1077" width="0.0237%" height="15" fill="rgb(244,87,35)" fg:x="2414" fg:w="2"/><text x="28.8316%" y="1087.50"></text></g><g><title>core::cell::BorrowRefMut::new (2 samples, 0.02%)</title><rect x="28.5816%" y="1061" width="0.0237%" height="15" fill="rgb(246,28,10)" fg:x="2414" fg:w="2"/><text x="28.8316%" y="1071.50"></text></g><g><title>tokio::runtime::driver::Driver::park (2 samples, 0.02%)</title><rect x="28.6053%" y="1189" width="0.0237%" height="15" fill="rgb(229,12,44)" fg:x="2416" fg:w="2"/><text x="28.8553%" y="1199.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (3 samples, 0.04%)</title><rect x="28.6289%" y="1189" width="0.0355%" height="15" fill="rgb(210,145,37)" fg:x="2418" fg:w="3"/><text x="28.8789%" y="1199.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (6 samples, 0.07%)</title><rect x="28.6645%" y="1189" width="0.0710%" height="15" fill="rgb(227,112,52)" fg:x="2421" fg:w="6"/><text x="28.9145%" y="1199.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (3 samples, 0.04%)</title><rect x="28.7355%" y="1189" width="0.0355%" height="15" fill="rgb(238,155,34)" fg:x="2427" fg:w="3"/><text x="28.9855%" y="1199.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="28.7592%" y="1173" width="0.0118%" height="15" fill="rgb(239,226,36)" fg:x="2429" fg:w="1"/><text x="29.0092%" y="1183.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (2 samples, 0.02%)</title><rect x="28.7710%" y="1189" width="0.0237%" height="15" fill="rgb(230,16,23)" fg:x="2430" fg:w="2"/><text x="29.0210%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (1 samples, 0.01%)</title><rect x="28.7947%" y="1189" width="0.0118%" height="15" fill="rgb(236,171,36)" fg:x="2432" fg:w="1"/><text x="29.0447%" y="1199.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="28.7947%" y="1173" width="0.0118%" height="15" fill="rgb(221,22,14)" fg:x="2432" fg:w="1"/><text x="29.0447%" y="1183.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.01%)</title><rect x="28.7947%" y="1157" width="0.0118%" height="15" fill="rgb(242,43,11)" fg:x="2432" fg:w="1"/><text x="29.0447%" y="1167.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="28.7947%" y="1141" width="0.0118%" height="15" fill="rgb(232,69,23)" fg:x="2432" fg:w="1"/><text x="29.0447%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (4 samples, 0.05%)</title><rect x="28.8065%" y="1189" width="0.0474%" height="15" fill="rgb(216,180,54)" fg:x="2433" fg:w="4"/><text x="29.0565%" y="1199.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="28.8302%" y="1173" width="0.0237%" height="15" fill="rgb(216,5,24)" fg:x="2435" fg:w="2"/><text x="29.0802%" y="1183.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (2 samples, 0.02%)</title><rect x="28.8302%" y="1157" width="0.0237%" height="15" fill="rgb(225,89,9)" fg:x="2435" fg:w="2"/><text x="29.0802%" y="1167.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="28.8302%" y="1141" width="0.0237%" height="15" fill="rgb(243,75,33)" fg:x="2435" fg:w="2"/><text x="29.0802%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (5 samples, 0.06%)</title><rect x="28.8539%" y="1189" width="0.0592%" height="15" fill="rgb(247,141,45)" fg:x="2437" fg:w="5"/><text x="29.1039%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (1 samples, 0.01%)</title><rect x="28.9249%" y="1173" width="0.0118%" height="15" fill="rgb(232,177,36)" fg:x="2443" fg:w="1"/><text x="29.1749%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (1 samples, 0.01%)</title><rect x="28.9368%" y="1173" width="0.0118%" height="15" fill="rgb(219,125,36)" fg:x="2444" fg:w="1"/><text x="29.1868%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_parked (1 samples, 0.01%)</title><rect x="28.9368%" y="1157" width="0.0118%" height="15" fill="rgb(227,94,9)" fg:x="2444" fg:w="1"/><text x="29.1868%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (4 samples, 0.05%)</title><rect x="28.9131%" y="1189" width="0.0474%" height="15" fill="rgb(240,34,52)" fg:x="2442" fg:w="4"/><text x="29.1631%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (1 samples, 0.01%)</title><rect x="28.9486%" y="1173" width="0.0118%" height="15" fill="rgb(216,45,12)" fg:x="2445" fg:w="1"/><text x="29.1986%" y="1183.50"></text></g><g><title>tokio::runtime::signal::Driver::process (3 samples, 0.04%)</title><rect x="28.9605%" y="1189" width="0.0355%" height="15" fill="rgb(246,21,19)" fg:x="2446" fg:w="3"/><text x="29.2105%" y="1199.50"></text></g><g><title>tokio::runtime::io::driver::signal::&lt;impl tokio::runtime::io::driver::Driver&gt;::consume_signal_ready (2 samples, 0.02%)</title><rect x="28.9723%" y="1173" width="0.0237%" height="15" fill="rgb(213,98,42)" fg:x="2447" fg:w="2"/><text x="29.2223%" y="1183.50"></text></g><g><title>tokio::runtime::task::raw::schedule (9 samples, 0.11%)</title><rect x="28.9960%" y="1189" width="0.1066%" height="15" fill="rgb(250,136,47)" fg:x="2449" fg:w="9"/><text x="29.2460%" y="1199.50"></text></g><g><title>tokio::runtime::task::core::Header::get_scheduler (4 samples, 0.05%)</title><rect x="29.0552%" y="1173" width="0.0474%" height="15" fill="rgb(251,124,27)" fg:x="2454" fg:w="4"/><text x="29.3052%" y="1183.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="29.0907%" y="1157" width="0.0118%" height="15" fill="rgb(229,180,14)" fg:x="2457" fg:w="1"/><text x="29.3407%" y="1167.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (1 samples, 0.01%)</title><rect x="29.1025%" y="1189" width="0.0118%" height="15" fill="rgb(245,216,25)" fg:x="2458" fg:w="1"/><text x="29.3525%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::util::wake_list::WakeList&gt; (1 samples, 0.01%)</title><rect x="29.1262%" y="1173" width="0.0118%" height="15" fill="rgb(251,43,5)" fg:x="2460" fg:w="1"/><text x="29.3762%" y="1183.50"></text></g><g><title>&lt;tokio::util::wake_list::WakeList as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="29.1262%" y="1157" width="0.0118%" height="15" fill="rgb(250,128,24)" fg:x="2460" fg:w="1"/><text x="29.3762%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::task::wake::Waker]&gt; (1 samples, 0.01%)</title><rect x="29.1262%" y="1141" width="0.0118%" height="15" fill="rgb(217,117,27)" fg:x="2460" fg:w="1"/><text x="29.3762%" y="1151.50"></text></g><g><title>tokio::runtime::time::Inner::lock_sharded_wheel (1 samples, 0.01%)</title><rect x="29.1381%" y="1173" width="0.0118%" height="15" fill="rgb(245,147,4)" fg:x="2461" fg:w="1"/><text x="29.3881%" y="1183.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="29.1381%" y="1157" width="0.0118%" height="15" fill="rgb(242,201,35)" fg:x="2461" fg:w="1"/><text x="29.3881%" y="1167.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.01%)</title><rect x="29.1381%" y="1141" width="0.0118%" height="15" fill="rgb(218,181,1)" fg:x="2461" fg:w="1"/><text x="29.3881%" y="1151.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.01%)</title><rect x="29.1381%" y="1125" width="0.0118%" height="15" fill="rgb(222,6,29)" fg:x="2461" fg:w="1"/><text x="29.3881%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.01%)</title><rect x="29.1381%" y="1109" width="0.0118%" height="15" fill="rgb(208,186,3)" fg:x="2461" fg:w="1"/><text x="29.3881%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="29.1381%" y="1093" width="0.0118%" height="15" fill="rgb(216,36,26)" fg:x="2461" fg:w="1"/><text x="29.3881%" y="1103.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (6 samples, 0.07%)</title><rect x="29.1144%" y="1189" width="0.0710%" height="15" fill="rgb(248,201,23)" fg:x="2459" fg:w="6"/><text x="29.3644%" y="1199.50"></text></g><g><title>tokio::util::wake_list::WakeList::new (3 samples, 0.04%)</title><rect x="29.1499%" y="1173" width="0.0355%" height="15" fill="rgb(251,170,31)" fg:x="2462" fg:w="3"/><text x="29.3999%" y="1183.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.01%)</title><rect x="29.1854%" y="1077" width="0.0118%" height="15" fill="rgb(207,110,25)" fg:x="2465" fg:w="1"/><text x="29.4354%" y="1087.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.01%)</title><rect x="29.1854%" y="1061" width="0.0118%" height="15" fill="rgb(250,54,15)" fg:x="2465" fg:w="1"/><text x="29.4354%" y="1071.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u32&gt;::lt (1 samples, 0.01%)</title><rect x="29.1854%" y="1045" width="0.0118%" height="15" fill="rgb(227,68,33)" fg:x="2465" fg:w="1"/><text x="29.4354%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::wheel::Wheel&gt;&gt; (2 samples, 0.02%)</title><rect x="29.1973%" y="1029" width="0.0237%" height="15" fill="rgb(238,34,41)" fg:x="2466" fg:w="2"/><text x="29.4473%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::time::wheel::Wheel&gt;&gt; (2 samples, 0.02%)</title><rect x="29.1973%" y="1013" width="0.0237%" height="15" fill="rgb(220,11,15)" fg:x="2466" fg:w="2"/><text x="29.4473%" y="1023.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="29.1973%" y="997" width="0.0237%" height="15" fill="rgb(246,111,35)" fg:x="2466" fg:w="2"/><text x="29.4473%" y="1007.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2 samples, 0.02%)</title><rect x="29.1973%" y="981" width="0.0237%" height="15" fill="rgb(209,88,53)" fg:x="2466" fg:w="2"/><text x="29.4473%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (2 samples, 0.02%)</title><rect x="29.1973%" y="965" width="0.0237%" height="15" fill="rgb(231,185,47)" fg:x="2466" fg:w="2"/><text x="29.4473%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.02%)</title><rect x="29.1973%" y="949" width="0.0237%" height="15" fill="rgb(233,154,1)" fg:x="2466" fg:w="2"/><text x="29.4473%" y="959.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="29.2209%" y="1013" width="0.0118%" height="15" fill="rgb(225,15,46)" fg:x="2468" fg:w="1"/><text x="29.4709%" y="1023.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="29.2209%" y="997" width="0.0118%" height="15" fill="rgb(211,135,41)" fg:x="2468" fg:w="1"/><text x="29.4709%" y="1007.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="29.2209%" y="981" width="0.0118%" height="15" fill="rgb(208,54,0)" fg:x="2468" fg:w="1"/><text x="29.4709%" y="991.50"></text></g><g><title>tokio::runtime::time::Inner::lock_sharded_wheel (2 samples, 0.02%)</title><rect x="29.2209%" y="1029" width="0.0237%" height="15" fill="rgb(244,136,14)" fg:x="2468" fg:w="2"/><text x="29.4709%" y="1039.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="29.2328%" y="1013" width="0.0118%" height="15" fill="rgb(241,56,14)" fg:x="2469" fg:w="1"/><text x="29.4828%" y="1023.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.01%)</title><rect x="29.2328%" y="997" width="0.0118%" height="15" fill="rgb(205,80,24)" fg:x="2469" fg:w="1"/><text x="29.4828%" y="1007.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.01%)</title><rect x="29.2328%" y="981" width="0.0118%" height="15" fill="rgb(220,57,4)" fg:x="2469" fg:w="1"/><text x="29.4828%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.01%)</title><rect x="29.2328%" y="965" width="0.0118%" height="15" fill="rgb(226,193,50)" fg:x="2469" fg:w="1"/><text x="29.4828%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="29.2328%" y="949" width="0.0118%" height="15" fill="rgb(231,168,22)" fg:x="2469" fg:w="1"/><text x="29.4828%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (6 samples, 0.07%)</title><rect x="29.1854%" y="1173" width="0.0710%" height="15" fill="rgb(254,215,14)" fg:x="2465" fg:w="6"/><text x="29.4354%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (6 samples, 0.07%)</title><rect x="29.1854%" y="1157" width="0.0710%" height="15" fill="rgb(211,115,16)" fg:x="2465" fg:w="6"/><text x="29.4354%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (6 samples, 0.07%)</title><rect x="29.1854%" y="1141" width="0.0710%" height="15" fill="rgb(236,210,16)" fg:x="2465" fg:w="6"/><text x="29.4354%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.07%)</title><rect x="29.1854%" y="1125" width="0.0710%" height="15" fill="rgb(221,94,12)" fg:x="2465" fg:w="6"/><text x="29.4354%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (6 samples, 0.07%)</title><rect x="29.1854%" y="1109" width="0.0710%" height="15" fill="rgb(235,218,49)" fg:x="2465" fg:w="6"/><text x="29.4354%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.07%)</title><rect x="29.1854%" y="1093" width="0.0710%" height="15" fill="rgb(217,114,14)" fg:x="2465" fg:w="6"/><text x="29.4354%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (5 samples, 0.06%)</title><rect x="29.1973%" y="1077" width="0.0592%" height="15" fill="rgb(216,145,22)" fg:x="2466" fg:w="5"/><text x="29.4473%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.06%)</title><rect x="29.1973%" y="1061" width="0.0592%" height="15" fill="rgb(217,112,39)" fg:x="2466" fg:w="5"/><text x="29.4473%" y="1071.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (5 samples, 0.06%)</title><rect x="29.1973%" y="1045" width="0.0592%" height="15" fill="rgb(225,85,32)" fg:x="2466" fg:w="5"/><text x="29.4473%" y="1055.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (1 samples, 0.01%)</title><rect x="29.2446%" y="1029" width="0.0118%" height="15" fill="rgb(245,209,47)" fg:x="2470" fg:w="1"/><text x="29.4946%" y="1039.50"></text></g><g><title>tokio::runtime::driver::Handle::time (2 samples, 0.02%)</title><rect x="29.2565%" y="1173" width="0.0237%" height="15" fill="rgb(218,220,15)" fg:x="2471" fg:w="2"/><text x="29.5065%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="29.2565%" y="1157" width="0.0237%" height="15" fill="rgb(222,202,31)" fg:x="2471" fg:w="2"/><text x="29.5065%" y="1167.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (9 samples, 0.11%)</title><rect x="29.1854%" y="1189" width="0.1066%" height="15" fill="rgb(243,203,4)" fg:x="2465" fg:w="9"/><text x="29.4354%" y="1199.50"></text></g><g><title>tokio::runtime::time::Inner::get_shard_size (1 samples, 0.01%)</title><rect x="29.2801%" y="1173" width="0.0118%" height="15" fill="rgb(237,92,17)" fg:x="2473" fg:w="1"/><text x="29.5301%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="29.3749%" y="1173" width="0.0118%" height="15" fill="rgb(231,119,7)" fg:x="2481" fg:w="1"/><text x="29.6249%" y="1183.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="29.3749%" y="1157" width="0.0118%" height="15" fill="rgb(237,82,41)" fg:x="2481" fg:w="1"/><text x="29.6249%" y="1167.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="29.3749%" y="1141" width="0.0118%" height="15" fill="rgb(226,81,48)" fg:x="2481" fg:w="1"/><text x="29.6249%" y="1151.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (12 samples, 0.14%)</title><rect x="29.2920%" y="1189" width="0.1421%" height="15" fill="rgb(234,70,51)" fg:x="2474" fg:w="12"/><text x="29.5420%" y="1199.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (4 samples, 0.05%)</title><rect x="29.3867%" y="1173" width="0.0474%" height="15" fill="rgb(251,86,4)" fg:x="2482" fg:w="4"/><text x="29.6367%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (4 samples, 0.05%)</title><rect x="29.3867%" y="1157" width="0.0474%" height="15" fill="rgb(244,144,28)" fg:x="2482" fg:w="4"/><text x="29.6367%" y="1167.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (3 samples, 0.04%)</title><rect x="29.4341%" y="1189" width="0.0355%" height="15" fill="rgb(232,161,39)" fg:x="2486" fg:w="3"/><text x="29.6841%" y="1199.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::set_elapsed (1 samples, 0.01%)</title><rect x="29.4577%" y="1173" width="0.0118%" height="15" fill="rgb(247,34,51)" fg:x="2488" fg:w="1"/><text x="29.7077%" y="1183.50"></text></g><g><title>tracing::__macro_support::__is_enabled (1 samples, 0.01%)</title><rect x="29.4696%" y="1189" width="0.0118%" height="15" fill="rgb(225,132,2)" fg:x="2489" fg:w="1"/><text x="29.7196%" y="1199.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.01%)</title><rect x="29.4696%" y="1173" width="0.0118%" height="15" fill="rgb(209,159,44)" fg:x="2489" fg:w="1"/><text x="29.7196%" y="1183.50"></text></g><g><title>tracing_core::dispatcher::get_global (1 samples, 0.01%)</title><rect x="29.4696%" y="1157" width="0.0118%" height="15" fill="rgb(251,214,1)" fg:x="2489" fg:w="1"/><text x="29.7196%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="29.4696%" y="1141" width="0.0118%" height="15" fill="rgb(247,84,47)" fg:x="2489" fg:w="1"/><text x="29.7196%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="29.4696%" y="1125" width="0.0118%" height="15" fill="rgb(240,111,43)" fg:x="2489" fg:w="1"/><text x="29.7196%" y="1135.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::enter (1 samples, 0.01%)</title><rect x="29.4814%" y="1189" width="0.0118%" height="15" fill="rgb(215,214,35)" fg:x="2490" fg:w="1"/><text x="29.7314%" y="1199.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::subscriber (1 samples, 0.01%)</title><rect x="29.4814%" y="1173" width="0.0118%" height="15" fill="rgb(248,207,23)" fg:x="2490" fg:w="1"/><text x="29.7314%" y="1183.50"></text></g><g><title>tracing_core::dispatcher::get_default (5 samples, 0.06%)</title><rect x="29.4933%" y="1189" width="0.0592%" height="15" fill="rgb(214,186,4)" fg:x="2491" fg:w="5"/><text x="29.7433%" y="1199.50"></text></g><g><title>tracing_core::dispatcher::get_global (2 samples, 0.02%)</title><rect x="29.5288%" y="1173" width="0.0237%" height="15" fill="rgb(220,133,22)" fg:x="2494" fg:w="2"/><text x="29.7788%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="29.5406%" y="1157" width="0.0118%" height="15" fill="rgb(239,134,19)" fg:x="2495" fg:w="1"/><text x="29.7906%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="29.5406%" y="1141" width="0.0118%" height="15" fill="rgb(250,140,9)" fg:x="2495" fg:w="1"/><text x="29.7906%" y="1151.50"></text></g><g><title>tracing_core::span::Id::from_u64 (1 samples, 0.01%)</title><rect x="29.5525%" y="1189" width="0.0118%" height="15" fill="rgb(225,59,14)" fg:x="2496" fg:w="1"/><text x="29.8025%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (1 samples, 0.01%)</title><rect x="29.5525%" y="1173" width="0.0118%" height="15" fill="rgb(214,152,51)" fg:x="2496" fg:w="1"/><text x="29.8025%" y="1183.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::cares_about_span (1 samples, 0.01%)</title><rect x="29.5643%" y="1189" width="0.0118%" height="15" fill="rgb(251,227,43)" fg:x="2497" fg:w="1"/><text x="29.8143%" y="1199.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.01%)</title><rect x="29.5880%" y="1141" width="0.0118%" height="15" fill="rgb(241,96,17)" fg:x="2499" fg:w="1"/><text x="29.8380%" y="1151.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.01%)</title><rect x="29.5880%" y="1125" width="0.0118%" height="15" fill="rgb(234,198,43)" fg:x="2499" fg:w="1"/><text x="29.8380%" y="1135.50"></text></g><g><title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.01%)</title><rect x="29.5880%" y="1109" width="0.0118%" height="15" fill="rgb(220,108,29)" fg:x="2499" fg:w="1"/><text x="29.8380%" y="1119.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.01%)</title><rect x="29.5880%" y="1093" width="0.0118%" height="15" fill="rgb(226,163,33)" fg:x="2499" fg:w="1"/><text x="29.8380%" y="1103.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.01%)</title><rect x="29.5880%" y="1077" width="0.0118%" height="15" fill="rgb(205,194,45)" fg:x="2499" fg:w="1"/><text x="29.8380%" y="1087.50"></text></g><g><title>serde_json::ser::Formatter::begin_string (1 samples, 0.01%)</title><rect x="29.5880%" y="1061" width="0.0118%" height="15" fill="rgb(206,143,44)" fg:x="2499" fg:w="1"/><text x="29.8380%" y="1071.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="29.5880%" y="1045" width="0.0118%" height="15" fill="rgb(236,136,36)" fg:x="2499" fg:w="1"/><text x="29.8380%" y="1055.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.01%)</title><rect x="29.5880%" y="1029" width="0.0118%" height="15" fill="rgb(249,172,42)" fg:x="2499" fg:w="1"/><text x="29.8380%" y="1039.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="29.5880%" y="1013" width="0.0118%" height="15" fill="rgb(216,139,23)" fg:x="2499" fg:w="1"/><text x="29.8380%" y="1023.50"></text></g><g><title>tracing_subscriber::fmt::format::json::&lt;impl tracing_subscriber::fmt::format::FormatEvent&lt;S,N&gt; for tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::json::Json,T&gt;&gt;::format_event (3 samples, 0.04%)</title><rect x="29.5761%" y="1189" width="0.0355%" height="15" fill="rgb(207,166,20)" fg:x="2498" fg:w="3"/><text x="29.8261%" y="1199.50"></text></g><g><title>tracing_subscriber::fmt::format::json::_&lt;impl tracing_subscriber::fmt::format::FormatEvent&lt;S,N&gt; for tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::json::Json,T&gt;&gt;::format_event::_{{closure}} (2 samples, 0.02%)</title><rect x="29.5880%" y="1173" width="0.0237%" height="15" fill="rgb(210,209,22)" fg:x="2499" fg:w="2"/><text x="29.8380%" y="1183.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.02%)</title><rect x="29.5880%" y="1157" width="0.0237%" height="15" fill="rgb(232,118,20)" fg:x="2499" fg:w="2"/><text x="29.8380%" y="1167.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.01%)</title><rect x="29.5998%" y="1141" width="0.0118%" height="15" fill="rgb(238,113,42)" fg:x="2500" fg:w="1"/><text x="29.8498%" y="1151.50"></text></g><g><title>serde_json::ser::Formatter::begin_object_value (1 samples, 0.01%)</title><rect x="29.5998%" y="1125" width="0.0118%" height="15" fill="rgb(231,42,5)" fg:x="2500" fg:w="1"/><text x="29.8498%" y="1135.50"></text></g><g><title>tracing_subscriber::fmt::writer::MakeWriter::make_writer_for (7 samples, 0.08%)</title><rect x="29.6117%" y="1189" width="0.0829%" height="15" fill="rgb(243,166,24)" fg:x="2501" fg:w="7"/><text x="29.8617%" y="1199.50"></text></g><g><title>&lt;&amp;rotmguard::logging::LogBuffer as tracing_subscriber::fmt::writer::MakeWriter&gt;::make_writer (7 samples, 0.08%)</title><rect x="29.6117%" y="1173" width="0.0829%" height="15" fill="rgb(237,226,12)" fg:x="2501" fg:w="7"/><text x="29.8617%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (7 samples, 0.08%)</title><rect x="29.6117%" y="1157" width="0.0829%" height="15" fill="rgb(229,133,24)" fg:x="2501" fg:w="7"/><text x="29.8617%" y="1167.50"></text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.08%)</title><rect x="29.6117%" y="1141" width="0.0829%" height="15" fill="rgb(238,33,43)" fg:x="2501" fg:w="7"/><text x="29.8617%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.08%)</title><rect x="29.6117%" y="1125" width="0.0829%" height="15" fill="rgb(227,59,38)" fg:x="2501" fg:w="7"/><text x="29.8617%" y="1135.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7 samples, 0.08%)</title><rect x="29.6117%" y="1109" width="0.0829%" height="15" fill="rgb(230,97,0)" fg:x="2501" fg:w="7"/><text x="29.8617%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position::check::_{{closure}} (7 samples, 0.08%)</title><rect x="29.6117%" y="1093" width="0.0829%" height="15" fill="rgb(250,173,50)" fg:x="2501" fg:w="7"/><text x="29.8617%" y="1103.50"></text></g><g><title>&lt;&amp;rotmguard::logging::LogBuffer as tracing_subscriber::fmt::writer::MakeWriter&gt;::make_writer::_{{closure}} (4 samples, 0.05%)</title><rect x="29.6472%" y="1077" width="0.0474%" height="15" fill="rgb(240,15,50)" fg:x="2504" fg:w="4"/><text x="29.8972%" y="1087.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::start_close (2 samples, 0.02%)</title><rect x="29.6945%" y="1189" width="0.0237%" height="15" fill="rgb(221,93,22)" fg:x="2508" fg:w="2"/><text x="29.9445%" y="1199.50"></text></g><g><title>[unknown] (443 samples, 5.25%)</title><rect x="24.4850%" y="1205" width="5.2451%" height="15" fill="rgb(245,180,53)" fg:x="2068" fg:w="443"/><text x="24.7350%" y="1215.50">[unkno..</text></g><g><title>write (1 samples, 0.01%)</title><rect x="29.7182%" y="1189" width="0.0118%" height="15" fill="rgb(231,88,51)" fg:x="2510" fg:w="1"/><text x="29.9682%" y="1199.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="29.7182%" y="1173" width="0.0118%" height="15" fill="rgb(240,58,21)" fg:x="2510" fg:w="1"/><text x="29.9682%" y="1183.50"></text></g><g><title>_ZN5tokio7runtime4time5wheel5Wheel15next_expiration17h9e47eb8568393497E.llvm.15467044453606460770 (1 samples, 0.01%)</title><rect x="29.7300%" y="1205" width="0.0118%" height="15" fill="rgb(237,21,10)" fg:x="2511" fg:w="1"/><text x="29.9800%" y="1215.50"></text></g><g><title>__floattidf (2 samples, 0.02%)</title><rect x="29.7419%" y="1205" width="0.0237%" height="15" fill="rgb(218,43,11)" fg:x="2512" fg:w="2"/><text x="29.9919%" y="1215.50"></text></g><g><title>compiler_builtins::float::conv::__floattidf (2 samples, 0.02%)</title><rect x="29.7419%" y="1189" width="0.0237%" height="15" fill="rgb(218,221,29)" fg:x="2512" fg:w="2"/><text x="29.9919%" y="1199.50"></text></g><g><title>core::num::&lt;impl i128&gt;::unsigned_abs (2 samples, 0.02%)</title><rect x="29.7419%" y="1173" width="0.0237%" height="15" fill="rgb(214,118,42)" fg:x="2512" fg:w="2"/><text x="29.9919%" y="1183.50"></text></g><g><title>core::num::&lt;impl i128&gt;::wrapping_abs (2 samples, 0.02%)</title><rect x="29.7419%" y="1157" width="0.0237%" height="15" fill="rgb(251,200,26)" fg:x="2512" fg:w="2"/><text x="29.9919%" y="1167.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="29.7656%" y="1205" width="0.0118%" height="15" fill="rgb(237,101,39)" fg:x="2514" fg:w="1"/><text x="30.0156%" y="1215.50"></text></g><g><title>__send (5 samples, 0.06%)</title><rect x="29.7774%" y="1205" width="0.0592%" height="15" fill="rgb(251,117,11)" fg:x="2515" fg:w="5"/><text x="30.0274%" y="1215.50"></text></g><g><title>__vdso_clock_gettime (46 samples, 0.54%)</title><rect x="29.8366%" y="1205" width="0.5446%" height="15" fill="rgb(216,223,23)" fg:x="2520" fg:w="46"/><text x="30.0866%" y="1215.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::descend (1 samples, 0.01%)</title><rect x="30.3931%" y="1157" width="0.0118%" height="15" fill="rgb(251,54,12)" fg:x="2567" fg:w="1"/><text x="30.6431%" y="1167.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (1 samples, 0.01%)</title><rect x="30.3931%" y="1141" width="0.0118%" height="15" fill="rgb(254,176,54)" fg:x="2567" fg:w="1"/><text x="30.6431%" y="1151.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (1 samples, 0.01%)</title><rect x="30.3931%" y="1125" width="0.0118%" height="15" fill="rgb(210,32,8)" fg:x="2567" fg:w="1"/><text x="30.6431%" y="1135.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="30.3931%" y="1109" width="0.0118%" height="15" fill="rgb(235,52,38)" fg:x="2567" fg:w="1"/><text x="30.6431%" y="1119.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.04%)</title><rect x="30.3812%" y="1205" width="0.0355%" height="15" fill="rgb(231,4,44)" fg:x="2566" fg:w="3"/><text x="30.6312%" y="1215.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (2 samples, 0.02%)</title><rect x="30.3931%" y="1189" width="0.0237%" height="15" fill="rgb(249,2,32)" fg:x="2567" fg:w="2"/><text x="30.6431%" y="1199.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (2 samples, 0.02%)</title><rect x="30.3931%" y="1173" width="0.0237%" height="15" fill="rgb(224,65,26)" fg:x="2567" fg:w="2"/><text x="30.6431%" y="1183.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1 samples, 0.01%)</title><rect x="30.4049%" y="1157" width="0.0118%" height="15" fill="rgb(250,73,40)" fg:x="2568" fg:w="1"/><text x="30.6549%" y="1167.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1 samples, 0.01%)</title><rect x="30.4049%" y="1141" width="0.0118%" height="15" fill="rgb(253,177,16)" fg:x="2568" fg:w="1"/><text x="30.6549%" y="1151.50"></text></g><g><title>&lt;rotmguard::extra_datatypes::ObjectId as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="30.4049%" y="1125" width="0.0118%" height="15" fill="rgb(217,32,34)" fg:x="2568" fg:w="1"/><text x="30.6549%" y="1135.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (1 samples, 0.01%)</title><rect x="30.4049%" y="1109" width="0.0118%" height="15" fill="rgb(212,7,10)" fg:x="2568" fg:w="1"/><text x="30.6549%" y="1119.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::bulk_steal_left (1 samples, 0.01%)</title><rect x="30.4168%" y="1205" width="0.0118%" height="15" fill="rgb(245,89,8)" fg:x="2569" fg:w="1"/><text x="30.6668%" y="1215.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (1 samples, 0.01%)</title><rect x="30.4168%" y="1189" width="0.0118%" height="15" fill="rgb(237,16,53)" fg:x="2569" fg:w="1"/><text x="30.6668%" y="1199.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::as_leaf_ptr (1 samples, 0.01%)</title><rect x="30.4168%" y="1173" width="0.0118%" height="15" fill="rgb(250,204,30)" fg:x="2569" fg:w="1"/><text x="30.6668%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="30.4286%" y="1205" width="0.0118%" height="15" fill="rgb(208,77,27)" fg:x="2570" fg:w="1"/><text x="30.6786%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="30.4286%" y="1189" width="0.0118%" height="15" fill="rgb(250,204,28)" fg:x="2570" fg:w="1"/><text x="30.6786%" y="1199.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.01%)</title><rect x="30.4286%" y="1173" width="0.0118%" height="15" fill="rgb(244,63,21)" fg:x="2570" fg:w="1"/><text x="30.6786%" y="1183.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.01%)</title><rect x="30.4286%" y="1157" width="0.0118%" height="15" fill="rgb(236,85,44)" fg:x="2570" fg:w="1"/><text x="30.6786%" y="1167.50"></text></g><g><title>anon.5b316c212f6c9ebce620ef82921466bf.8.llvm.13464701813477222064 (1 samples, 0.01%)</title><rect x="30.4404%" y="1205" width="0.0118%" height="15" fill="rgb(215,98,4)" fg:x="2571" fg:w="1"/><text x="30.6904%" y="1215.50"></text></g><g><title>tokio::runtime::task::raw::poll (1 samples, 0.01%)</title><rect x="30.4404%" y="1189" width="0.0118%" height="15" fill="rgb(235,38,11)" fg:x="2571" fg:w="1"/><text x="30.6904%" y="1199.50"></text></g><g><title>anon.a1b2cbc90f1e2b33215e7e7ba6a2d18e.5.llvm.3011322180504554095 (1 samples, 0.01%)</title><rect x="30.4523%" y="1205" width="0.0118%" height="15" fill="rgb(254,186,25)" fg:x="2572" fg:w="1"/><text x="30.7023%" y="1215.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="30.4523%" y="1189" width="0.0118%" height="15" fill="rgb(225,55,31)" fg:x="2572" fg:w="1"/><text x="30.7023%" y="1199.50"></text></g><g><title>anon.f078b08eaf82b2714bf10dbe77d23b1b.6.llvm.12954972829371710386 (1 samples, 0.01%)</title><rect x="30.4641%" y="1205" width="0.0118%" height="15" fill="rgb(211,15,21)" fg:x="2573" fg:w="1"/><text x="30.7141%" y="1215.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="30.4641%" y="1189" width="0.0118%" height="15" fill="rgb(215,187,41)" fg:x="2573" fg:w="1"/><text x="30.7141%" y="1199.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="30.4641%" y="1173" width="0.0118%" height="15" fill="rgb(248,69,32)" fg:x="2573" fg:w="1"/><text x="30.7141%" y="1183.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="30.4641%" y="1157" width="0.0118%" height="15" fill="rgb(252,102,52)" fg:x="2573" fg:w="1"/><text x="30.7141%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="30.4641%" y="1141" width="0.0118%" height="15" fill="rgb(253,140,32)" fg:x="2573" fg:w="1"/><text x="30.7141%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="30.4641%" y="1125" width="0.0118%" height="15" fill="rgb(216,56,42)" fg:x="2573" fg:w="1"/><text x="30.7141%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="30.4641%" y="1109" width="0.0118%" height="15" fill="rgb(216,184,14)" fg:x="2573" fg:w="1"/><text x="30.7141%" y="1119.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="30.4641%" y="1093" width="0.0118%" height="15" fill="rgb(237,187,27)" fg:x="2573" fg:w="1"/><text x="30.7141%" y="1103.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="30.4760%" y="1205" width="0.0237%" height="15" fill="rgb(219,65,3)" fg:x="2574" fg:w="2"/><text x="30.7260%" y="1215.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="30.4996%" y="1205" width="0.0118%" height="15" fill="rgb(245,83,25)" fg:x="2576" fg:w="1"/><text x="30.7496%" y="1215.50"></text></g><g><title>clock_gettime (2 samples, 0.02%)</title><rect x="30.5115%" y="1205" width="0.0237%" height="15" fill="rgb(214,205,45)" fg:x="2577" fg:w="2"/><text x="30.7615%" y="1215.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.01%)</title><rect x="30.5352%" y="1205" width="0.0118%" height="15" fill="rgb(241,20,18)" fg:x="2579" fg:w="1"/><text x="30.7852%" y="1215.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (1 samples, 0.01%)</title><rect x="30.5352%" y="1189" width="0.0118%" height="15" fill="rgb(232,163,23)" fg:x="2579" fg:w="1"/><text x="30.7852%" y="1199.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (3 samples, 0.04%)</title><rect x="30.5470%" y="1205" width="0.0355%" height="15" fill="rgb(214,5,46)" fg:x="2580" fg:w="3"/><text x="30.7970%" y="1215.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (1 samples, 0.01%)</title><rect x="30.5825%" y="1205" width="0.0118%" height="15" fill="rgb(229,78,17)" fg:x="2583" fg:w="1"/><text x="30.8325%" y="1215.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.01%)</title><rect x="30.5944%" y="1205" width="0.0118%" height="15" fill="rgb(248,89,10)" fg:x="2584" fg:w="1"/><text x="30.8444%" y="1215.50"></text></g><g><title>[rotmguard] (1 samples, 0.01%)</title><rect x="30.6062%" y="1189" width="0.0118%" height="15" fill="rgb(248,54,15)" fg:x="2585" fg:w="1"/><text x="30.8562%" y="1199.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="30.6062%" y="1173" width="0.0118%" height="15" fill="rgb(223,116,6)" fg:x="2585" fg:w="1"/><text x="30.8562%" y="1183.50"></text></g><g><title>&lt;rotmguard::asset_extract::ProjectileInfo as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="30.6062%" y="1157" width="0.0118%" height="15" fill="rgb(205,125,38)" fg:x="2585" fg:w="1"/><text x="30.8562%" y="1167.50"></text></g><g><title>core::fmt::Formatter::debug_struct_fields_finish (1 samples, 0.01%)</title><rect x="30.6062%" y="1141" width="0.0118%" height="15" fill="rgb(251,78,38)" fg:x="2585" fg:w="1"/><text x="30.8562%" y="1151.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish (1 samples, 0.01%)</title><rect x="30.6062%" y="1125" width="0.0118%" height="15" fill="rgb(253,78,28)" fg:x="2585" fg:w="1"/><text x="30.8562%" y="1135.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.01%)</title><rect x="30.6062%" y="1109" width="0.0118%" height="15" fill="rgb(209,120,3)" fg:x="2585" fg:w="1"/><text x="30.8562%" y="1119.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish::_{{closure}} (1 samples, 0.01%)</title><rect x="30.6062%" y="1093" width="0.0118%" height="15" fill="rgb(238,229,9)" fg:x="2585" fg:w="1"/><text x="30.8562%" y="1103.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.01%)</title><rect x="30.6062%" y="1077" width="0.0118%" height="15" fill="rgb(253,159,18)" fg:x="2585" fg:w="1"/><text x="30.8562%" y="1087.50"></text></g><g><title>&lt;&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::collect_str::Adapter&lt;W,F&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="30.6062%" y="1061" width="0.0118%" height="15" fill="rgb(244,42,34)" fg:x="2585" fg:w="1"/><text x="30.8562%" y="1071.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (1 samples, 0.01%)</title><rect x="30.6062%" y="1045" width="0.0118%" height="15" fill="rgb(224,8,7)" fg:x="2585" fg:w="1"/><text x="30.8562%" y="1055.50"></text></g><g><title>core::fmt::write (3 samples, 0.04%)</title><rect x="30.6062%" y="1205" width="0.0355%" height="15" fill="rgb(210,201,45)" fg:x="2585" fg:w="3"/><text x="30.8562%" y="1215.50"></text></g><g><title>core::fmt::run (2 samples, 0.02%)</title><rect x="30.6180%" y="1189" width="0.0237%" height="15" fill="rgb(252,185,21)" fg:x="2586" fg:w="2"/><text x="30.8680%" y="1199.50"></text></g><g><title>core::fmt::getcount (1 samples, 0.01%)</title><rect x="30.6299%" y="1173" width="0.0118%" height="15" fill="rgb(223,131,1)" fg:x="2587" fg:w="1"/><text x="30.8799%" y="1183.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="30.6654%" y="1189" width="0.0118%" height="15" fill="rgb(245,141,16)" fg:x="2590" fg:w="1"/><text x="30.9154%" y="1199.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="30.6654%" y="1173" width="0.0118%" height="15" fill="rgb(229,55,45)" fg:x="2590" fg:w="1"/><text x="30.9154%" y="1183.50"></text></g><g><title>core::slice::rotate::ptr_rotate (4 samples, 0.05%)</title><rect x="30.6417%" y="1205" width="0.0474%" height="15" fill="rgb(208,92,15)" fg:x="2588" fg:w="4"/><text x="30.8917%" y="1215.50"></text></g><g><title>core::ptr::swap_nonoverlapping (1 samples, 0.01%)</title><rect x="30.6772%" y="1189" width="0.0118%" height="15" fill="rgb(234,185,47)" fg:x="2591" fg:w="1"/><text x="30.9272%" y="1199.50"></text></g><g><title>core::ptr::swap_nonoverlapping_simple_untyped (1 samples, 0.01%)</title><rect x="30.6772%" y="1173" width="0.0118%" height="15" fill="rgb(253,104,50)" fg:x="2591" fg:w="1"/><text x="30.9272%" y="1183.50"></text></g><g><title>core::str::converts::from_utf8 (12 samples, 0.14%)</title><rect x="30.6891%" y="1205" width="0.1421%" height="15" fill="rgb(205,70,7)" fg:x="2592" fg:w="12"/><text x="30.9391%" y="1215.50"></text></g><g><title>core::str::validations::run_utf8_validation (6 samples, 0.07%)</title><rect x="30.7601%" y="1189" width="0.0710%" height="15" fill="rgb(240,178,43)" fg:x="2598" fg:w="6"/><text x="31.0101%" y="1199.50"></text></g><g><title>__fdget (1 samples, 0.01%)</title><rect x="31.4232%" y="1141" width="0.0118%" height="15" fill="rgb(214,112,2)" fg:x="2654" fg:w="1"/><text x="31.6732%" y="1151.50"></text></g><g><title>_raw_write_lock_irq (1 samples, 0.01%)</title><rect x="31.4350%" y="1141" width="0.0118%" height="15" fill="rgb(206,46,17)" fg:x="2655" fg:w="1"/><text x="31.6850%" y="1151.50"></text></g><g><title>dequeue_task_fair (1 samples, 0.01%)</title><rect x="31.5060%" y="1093" width="0.0118%" height="15" fill="rgb(225,220,16)" fg:x="2661" fg:w="1"/><text x="31.7560%" y="1103.50"></text></g><g><title>dequeue_entity (1 samples, 0.01%)</title><rect x="31.5060%" y="1077" width="0.0118%" height="15" fill="rgb(238,65,40)" fg:x="2661" fg:w="1"/><text x="31.7560%" y="1087.50"></text></g><g><title>update_curr (1 samples, 0.01%)</title><rect x="31.5060%" y="1061" width="0.0118%" height="15" fill="rgb(230,151,21)" fg:x="2661" fg:w="1"/><text x="31.7560%" y="1071.50"></text></g><g><title>cpuacct_charge (1 samples, 0.01%)</title><rect x="31.5060%" y="1045" width="0.0118%" height="15" fill="rgb(218,58,49)" fg:x="2661" fg:w="1"/><text x="31.7560%" y="1055.50"></text></g><g><title>psi_account_irqtime (2 samples, 0.02%)</title><rect x="31.5179%" y="1077" width="0.0237%" height="15" fill="rgb(219,179,14)" fg:x="2662" fg:w="2"/><text x="31.7679%" y="1087.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.01%)</title><rect x="31.5297%" y="1061" width="0.0118%" height="15" fill="rgb(223,72,1)" fg:x="2663" fg:w="1"/><text x="31.7797%" y="1071.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.01%)</title><rect x="31.5416%" y="1077" width="0.0118%" height="15" fill="rgb(238,126,10)" fg:x="2664" fg:w="1"/><text x="31.7916%" y="1087.50"></text></g><g><title>__x64_sys_epoll_wait (24 samples, 0.28%)</title><rect x="31.2811%" y="1173" width="0.2842%" height="15" fill="rgb(224,206,38)" fg:x="2642" fg:w="24"/><text x="31.5311%" y="1183.50"></text></g><g><title>do_epoll_wait (23 samples, 0.27%)</title><rect x="31.2929%" y="1157" width="0.2723%" height="15" fill="rgb(212,201,54)" fg:x="2643" fg:w="23"/><text x="31.5429%" y="1167.50"></text></g><g><title>schedule_hrtimeout_range_clock (10 samples, 0.12%)</title><rect x="31.4468%" y="1141" width="0.1184%" height="15" fill="rgb(218,154,48)" fg:x="2656" fg:w="10"/><text x="31.6968%" y="1151.50"></text></g><g><title>schedule (10 samples, 0.12%)</title><rect x="31.4468%" y="1125" width="0.1184%" height="15" fill="rgb(232,93,24)" fg:x="2656" fg:w="10"/><text x="31.6968%" y="1135.50"></text></g><g><title>__schedule (8 samples, 0.09%)</title><rect x="31.4705%" y="1109" width="0.0947%" height="15" fill="rgb(245,30,21)" fg:x="2658" fg:w="8"/><text x="31.7205%" y="1119.50"></text></g><g><title>update_rq_clock (4 samples, 0.05%)</title><rect x="31.5179%" y="1093" width="0.0474%" height="15" fill="rgb(242,148,29)" fg:x="2662" fg:w="4"/><text x="31.7679%" y="1103.50"></text></g><g><title>update_irq_load_avg (1 samples, 0.01%)</title><rect x="31.5534%" y="1077" width="0.0118%" height="15" fill="rgb(244,153,54)" fg:x="2665" fg:w="1"/><text x="31.8034%" y="1087.50"></text></g><g><title>futex_wait (3 samples, 0.04%)</title><rect x="31.5652%" y="1141" width="0.0355%" height="15" fill="rgb(252,87,22)" fg:x="2666" fg:w="3"/><text x="31.8152%" y="1151.50"></text></g><g><title>__futex_wait (3 samples, 0.04%)</title><rect x="31.5652%" y="1125" width="0.0355%" height="15" fill="rgb(210,51,29)" fg:x="2666" fg:w="3"/><text x="31.8152%" y="1135.50"></text></g><g><title>futex_wait_setup (2 samples, 0.02%)</title><rect x="31.5771%" y="1109" width="0.0237%" height="15" fill="rgb(242,136,47)" fg:x="2667" fg:w="2"/><text x="31.8271%" y="1119.50"></text></g><g><title>futex_q_lock (1 samples, 0.01%)</title><rect x="31.5889%" y="1093" width="0.0118%" height="15" fill="rgb(238,68,4)" fg:x="2668" fg:w="1"/><text x="31.8389%" y="1103.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="31.5889%" y="1077" width="0.0118%" height="15" fill="rgb(242,161,30)" fg:x="2668" fg:w="1"/><text x="31.8389%" y="1087.50"></text></g><g><title>__x64_sys_futex (7 samples, 0.08%)</title><rect x="31.5652%" y="1173" width="0.0829%" height="15" fill="rgb(218,58,44)" fg:x="2666" fg:w="7"/><text x="31.8152%" y="1183.50"></text></g><g><title>do_futex (7 samples, 0.08%)</title><rect x="31.5652%" y="1157" width="0.0829%" height="15" fill="rgb(252,125,32)" fg:x="2666" fg:w="7"/><text x="31.8152%" y="1167.50"></text></g><g><title>futex_wake (4 samples, 0.05%)</title><rect x="31.6008%" y="1141" width="0.0474%" height="15" fill="rgb(219,178,0)" fg:x="2669" fg:w="4"/><text x="31.8508%" y="1151.50"></text></g><g><title>wake_up_q (2 samples, 0.02%)</title><rect x="31.6244%" y="1125" width="0.0237%" height="15" fill="rgb(213,152,7)" fg:x="2671" fg:w="2"/><text x="31.8744%" y="1135.50"></text></g><g><title>try_to_wake_up (2 samples, 0.02%)</title><rect x="31.6244%" y="1109" width="0.0237%" height="15" fill="rgb(249,109,34)" fg:x="2671" fg:w="2"/><text x="31.8744%" y="1119.50"></text></g><g><title>select_task_rq_fair (2 samples, 0.02%)</title><rect x="31.6244%" y="1093" width="0.0237%" height="15" fill="rgb(232,96,21)" fg:x="2671" fg:w="2"/><text x="31.8744%" y="1103.50"></text></g><g><title>__x64_sys_ioctl (1 samples, 0.01%)</title><rect x="31.6481%" y="1173" width="0.0118%" height="15" fill="rgb(228,27,39)" fg:x="2673" fg:w="1"/><text x="31.8981%" y="1183.50"></text></g><g><title>do_vfs_ioctl (1 samples, 0.01%)</title><rect x="31.6481%" y="1157" width="0.0118%" height="15" fill="rgb(211,182,52)" fg:x="2673" fg:w="1"/><text x="31.8981%" y="1167.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.01%)</title><rect x="32.4888%" y="1125" width="0.0118%" height="15" fill="rgb(234,178,38)" fg:x="2744" fg:w="1"/><text x="32.7388%" y="1135.50"></text></g><g><title>__fdget (38 samples, 0.45%)</title><rect x="32.0625%" y="1141" width="0.4499%" height="15" fill="rgb(221,111,3)" fg:x="2708" fg:w="38"/><text x="32.3125%" y="1151.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.01%)</title><rect x="32.5006%" y="1125" width="0.0118%" height="15" fill="rgb(228,175,21)" fg:x="2745" fg:w="1"/><text x="32.7506%" y="1135.50"></text></g><g><title>inet_recvmsg (4 samples, 0.05%)</title><rect x="32.6072%" y="1125" width="0.0474%" height="15" fill="rgb(228,174,43)" fg:x="2754" fg:w="4"/><text x="32.8572%" y="1135.50"></text></g><g><title>tcp_recvmsg (3 samples, 0.04%)</title><rect x="32.6190%" y="1109" width="0.0355%" height="15" fill="rgb(211,191,0)" fg:x="2755" fg:w="3"/><text x="32.8690%" y="1119.50"></text></g><g><title>tcp_recvmsg_locked (2 samples, 0.02%)</title><rect x="32.6308%" y="1093" width="0.0237%" height="15" fill="rgb(253,117,3)" fg:x="2756" fg:w="2"/><text x="32.8808%" y="1103.50"></text></g><g><title>bpf_lsm_socket_recvmsg (6 samples, 0.07%)</title><rect x="32.7137%" y="1109" width="0.0710%" height="15" fill="rgb(241,127,19)" fg:x="2763" fg:w="6"/><text x="32.9637%" y="1119.50"></text></g><g><title>srso_alias_safe_ret (2 samples, 0.02%)</title><rect x="32.7611%" y="1093" width="0.0237%" height="15" fill="rgb(218,103,12)" fg:x="2767" fg:w="2"/><text x="33.0111%" y="1103.50"></text></g><g><title>sock_recvmsg (24 samples, 0.28%)</title><rect x="32.5124%" y="1141" width="0.2842%" height="15" fill="rgb(236,214,43)" fg:x="2746" fg:w="24"/><text x="32.7624%" y="1151.50"></text></g><g><title>security_socket_recvmsg (12 samples, 0.14%)</title><rect x="32.6545%" y="1125" width="0.1421%" height="15" fill="rgb(244,144,19)" fg:x="2758" fg:w="12"/><text x="32.9045%" y="1135.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="32.7848%" y="1109" width="0.0118%" height="15" fill="rgb(246,188,10)" fg:x="2769" fg:w="1"/><text x="33.0348%" y="1119.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="32.7848%" y="1093" width="0.0118%" height="15" fill="rgb(212,193,33)" fg:x="2769" fg:w="1"/><text x="33.0348%" y="1103.50"></text></g><g><title>__x64_sys_recvfrom (97 samples, 1.15%)</title><rect x="31.6600%" y="1173" width="1.1485%" height="15" fill="rgb(241,51,29)" fg:x="2674" fg:w="97"/><text x="31.9100%" y="1183.50"></text></g><g><title>__sys_recvfrom (97 samples, 1.15%)</title><rect x="31.6600%" y="1157" width="1.1485%" height="15" fill="rgb(211,58,19)" fg:x="2674" fg:w="97"/><text x="31.9100%" y="1167.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="32.7966%" y="1141" width="0.0118%" height="15" fill="rgb(229,111,26)" fg:x="2770" fg:w="1"/><text x="33.0466%" y="1151.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="32.7966%" y="1125" width="0.0118%" height="15" fill="rgb(213,115,40)" fg:x="2770" fg:w="1"/><text x="33.0466%" y="1135.50"></text></g><g><title>__fdget (23 samples, 0.27%)</title><rect x="33.2465%" y="1141" width="0.2723%" height="15" fill="rgb(209,56,44)" fg:x="2808" fg:w="23"/><text x="33.4965%" y="1151.50"></text></g><g><title>srso_alias_return_thunk (2 samples, 0.02%)</title><rect x="33.4951%" y="1125" width="0.0237%" height="15" fill="rgb(230,108,32)" fg:x="2829" fg:w="2"/><text x="33.7451%" y="1135.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="33.5070%" y="1109" width="0.0118%" height="15" fill="rgb(216,165,31)" fg:x="2830" fg:w="1"/><text x="33.7570%" y="1119.50"></text></g><g><title>import_ubuf (2 samples, 0.02%)</title><rect x="33.5188%" y="1141" width="0.0237%" height="15" fill="rgb(218,122,21)" fg:x="2831" fg:w="2"/><text x="33.7688%" y="1151.50"></text></g><g><title>inet_sendmsg (10 samples, 0.12%)</title><rect x="33.5425%" y="1141" width="0.1184%" height="15" fill="rgb(223,224,47)" fg:x="2833" fg:w="10"/><text x="33.7925%" y="1151.50"></text></g><g><title>inet_send_prepare (4 samples, 0.05%)</title><rect x="33.6135%" y="1125" width="0.0474%" height="15" fill="rgb(238,102,44)" fg:x="2839" fg:w="4"/><text x="33.8635%" y="1135.50"></text></g><g><title>bpf_lsm_socket_sendmsg (6 samples, 0.07%)</title><rect x="33.7319%" y="1125" width="0.0710%" height="15" fill="rgb(236,46,40)" fg:x="2849" fg:w="6"/><text x="33.9819%" y="1135.50"></text></g><g><title>security_socket_sendmsg (13 samples, 0.15%)</title><rect x="33.6609%" y="1141" width="0.1539%" height="15" fill="rgb(247,202,50)" fg:x="2843" fg:w="13"/><text x="33.9109%" y="1151.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="33.8030%" y="1125" width="0.0118%" height="15" fill="rgb(209,99,20)" fg:x="2855" fg:w="1"/><text x="34.0530%" y="1135.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="33.8030%" y="1109" width="0.0118%" height="15" fill="rgb(252,27,34)" fg:x="2855" fg:w="1"/><text x="34.0530%" y="1119.50"></text></g><g><title>srso_alias_return_thunk (2 samples, 0.02%)</title><rect x="33.8148%" y="1141" width="0.0237%" height="15" fill="rgb(215,206,23)" fg:x="2856" fg:w="2"/><text x="34.0648%" y="1151.50"></text></g><g><title>srso_alias_safe_ret (2 samples, 0.02%)</title><rect x="33.8148%" y="1125" width="0.0237%" height="15" fill="rgb(212,135,36)" fg:x="2856" fg:w="2"/><text x="34.0648%" y="1135.50"></text></g><g><title>__local_bh_enable_ip (9 samples, 0.11%)</title><rect x="33.8503%" y="1125" width="0.1066%" height="15" fill="rgb(240,189,1)" fg:x="2859" fg:w="9"/><text x="34.1003%" y="1135.50"></text></g><g><title>_raw_spin_unlock_bh (2 samples, 0.02%)</title><rect x="33.9569%" y="1125" width="0.0237%" height="15" fill="rgb(242,56,20)" fg:x="2868" fg:w="2"/><text x="34.2069%" y="1135.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.01%)</title><rect x="34.0753%" y="1109" width="0.0118%" height="15" fill="rgb(247,132,33)" fg:x="2878" fg:w="1"/><text x="34.3253%" y="1119.50"></text></g><g><title>lock_sock_nested (10 samples, 0.12%)</title><rect x="33.9806%" y="1125" width="0.1184%" height="15" fill="rgb(208,149,11)" fg:x="2870" fg:w="10"/><text x="34.2306%" y="1135.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="34.0871%" y="1109" width="0.0118%" height="15" fill="rgb(211,33,11)" fg:x="2879" fg:w="1"/><text x="34.3371%" y="1119.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="34.0871%" y="1093" width="0.0118%" height="15" fill="rgb(221,29,38)" fg:x="2879" fg:w="1"/><text x="34.3371%" y="1103.50"></text></g><g><title>__check_object_size (18 samples, 0.21%)</title><rect x="34.5015%" y="1109" width="0.2131%" height="15" fill="rgb(206,182,49)" fg:x="2914" fg:w="18"/><text x="34.7515%" y="1119.50"></text></g><g><title>__virt_addr_valid (11 samples, 0.13%)</title><rect x="34.5844%" y="1093" width="0.1302%" height="15" fill="rgb(216,140,1)" fg:x="2921" fg:w="11"/><text x="34.8344%" y="1103.50"></text></g><g><title>ktime_get (6 samples, 0.07%)</title><rect x="34.8449%" y="1077" width="0.0710%" height="15" fill="rgb(232,57,40)" fg:x="2943" fg:w="6"/><text x="35.0949%" y="1087.50"></text></g><g><title>read_tsc (5 samples, 0.06%)</title><rect x="34.8567%" y="1061" width="0.0592%" height="15" fill="rgb(224,186,18)" fg:x="2944" fg:w="5"/><text x="35.1067%" y="1071.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="34.9159%" y="1077" width="0.0118%" height="15" fill="rgb(215,121,11)" fg:x="2949" fg:w="1"/><text x="35.1659%" y="1087.50"></text></g><g><title>__tcp_push_pending_frames (20 samples, 0.24%)</title><rect x="34.7147%" y="1109" width="0.2368%" height="15" fill="rgb(245,147,10)" fg:x="2932" fg:w="20"/><text x="34.9647%" y="1119.50"></text></g><g><title>tcp_write_xmit (17 samples, 0.20%)</title><rect x="34.7502%" y="1093" width="0.2013%" height="15" fill="rgb(238,153,13)" fg:x="2935" fg:w="17"/><text x="35.0002%" y="1103.50"></text></g><g><title>tcp_tso_segs (2 samples, 0.02%)</title><rect x="34.9278%" y="1077" width="0.0237%" height="15" fill="rgb(233,108,0)" fg:x="2950" fg:w="2"/><text x="35.1778%" y="1087.50"></text></g><g><title>_copy_from_iter (6 samples, 0.07%)</title><rect x="34.9515%" y="1109" width="0.0710%" height="15" fill="rgb(212,157,17)" fg:x="2952" fg:w="6"/><text x="35.2015%" y="1119.50"></text></g><g><title>sk_page_frag_refill (5 samples, 0.06%)</title><rect x="35.0225%" y="1109" width="0.0592%" height="15" fill="rgb(225,213,38)" fg:x="2958" fg:w="5"/><text x="35.2725%" y="1119.50"></text></g><g><title>skb_page_frag_refill (5 samples, 0.06%)</title><rect x="35.0225%" y="1093" width="0.0592%" height="15" fill="rgb(248,16,11)" fg:x="2958" fg:w="5"/><text x="35.2725%" y="1103.50"></text></g><g><title>tcp_push (1 samples, 0.01%)</title><rect x="35.0817%" y="1109" width="0.0118%" height="15" fill="rgb(241,33,4)" fg:x="2963" fg:w="1"/><text x="35.3317%" y="1119.50"></text></g><g><title>ipv4_mtu (4 samples, 0.05%)</title><rect x="35.3185%" y="1077" width="0.0474%" height="15" fill="rgb(222,26,43)" fg:x="2983" fg:w="4"/><text x="35.5685%" y="1087.50"></text></g><g><title>tcp_send_mss (28 samples, 0.33%)</title><rect x="35.0935%" y="1109" width="0.3315%" height="15" fill="rgb(243,29,36)" fg:x="2964" fg:w="28"/><text x="35.3435%" y="1119.50"></text></g><g><title>tcp_current_mss (26 samples, 0.31%)</title><rect x="35.1172%" y="1093" width="0.3078%" height="15" fill="rgb(241,9,27)" fg:x="2966" fg:w="26"/><text x="35.3672%" y="1103.50"></text></g><g><title>tcp_established_options (5 samples, 0.06%)</title><rect x="35.3659%" y="1077" width="0.0592%" height="15" fill="rgb(205,117,26)" fg:x="2987" fg:w="5"/><text x="35.6159%" y="1087.50"></text></g><g><title>__x64_sys_sendto (222 samples, 2.63%)</title><rect x="32.8084%" y="1173" width="2.6285%" height="15" fill="rgb(209,80,39)" fg:x="2771" fg:w="222"/><text x="33.0584%" y="1183.50">__..</text></g><g><title>__sys_sendto (220 samples, 2.60%)</title><rect x="32.8321%" y="1157" width="2.6048%" height="15" fill="rgb(239,155,6)" fg:x="2773" fg:w="220"/><text x="33.0821%" y="1167.50">__..</text></g><g><title>tcp_sendmsg (135 samples, 1.60%)</title><rect x="33.8385%" y="1141" width="1.5984%" height="15" fill="rgb(212,104,12)" fg:x="2858" fg:w="135"/><text x="34.0885%" y="1151.50"></text></g><g><title>tcp_sendmsg_locked (113 samples, 1.34%)</title><rect x="34.0990%" y="1125" width="1.3379%" height="15" fill="rgb(234,204,3)" fg:x="2880" fg:w="113"/><text x="34.3490%" y="1135.50"></text></g><g><title>tcp_wmem_schedule (1 samples, 0.01%)</title><rect x="35.4251%" y="1109" width="0.0118%" height="15" fill="rgb(251,218,7)" fg:x="2992" fg:w="1"/><text x="35.6751%" y="1119.50"></text></g><g><title>__fdget_pos (3 samples, 0.04%)</title><rect x="35.4369%" y="1157" width="0.0355%" height="15" fill="rgb(221,81,32)" fg:x="2993" fg:w="3"/><text x="35.6869%" y="1167.50"></text></g><g><title>down_write (2 samples, 0.02%)</title><rect x="35.4961%" y="1125" width="0.0237%" height="15" fill="rgb(214,152,26)" fg:x="2998" fg:w="2"/><text x="35.7461%" y="1135.50"></text></g><g><title>file_remove_privs_flags (2 samples, 0.02%)</title><rect x="35.5316%" y="1109" width="0.0237%" height="15" fill="rgb(223,22,3)" fg:x="3001" fg:w="2"/><text x="35.7816%" y="1119.50"></text></g><g><title>file_modified (6 samples, 0.07%)</title><rect x="35.5198%" y="1125" width="0.0710%" height="15" fill="rgb(207,174,7)" fg:x="3000" fg:w="6"/><text x="35.7698%" y="1135.50"></text></g><g><title>inode_needs_update_time (3 samples, 0.04%)</title><rect x="35.5553%" y="1109" width="0.0355%" height="15" fill="rgb(224,19,52)" fg:x="3003" fg:w="3"/><text x="35.8053%" y="1119.50"></text></g><g><title>timestamp_truncate (1 samples, 0.01%)</title><rect x="35.5790%" y="1093" width="0.0118%" height="15" fill="rgb(228,24,14)" fg:x="3005" fg:w="1"/><text x="35.8290%" y="1103.50"></text></g><g><title>[[ext4]] (3 samples, 0.04%)</title><rect x="35.6263%" y="1093" width="0.0355%" height="15" fill="rgb(230,153,43)" fg:x="3009" fg:w="3"/><text x="35.8763%" y="1103.50"></text></g><g><title>xas_descend (3 samples, 0.04%)</title><rect x="35.7092%" y="1045" width="0.0355%" height="15" fill="rgb(231,106,12)" fg:x="3016" fg:w="3"/><text x="35.9592%" y="1055.50"></text></g><g><title>[[ext4]] (13 samples, 0.15%)</title><rect x="35.6027%" y="1109" width="0.1539%" height="15" fill="rgb(215,92,2)" fg:x="3007" fg:w="13"/><text x="35.8527%" y="1119.50"></text></g><g><title>__filemap_get_folio (8 samples, 0.09%)</title><rect x="35.6619%" y="1093" width="0.0947%" height="15" fill="rgb(249,143,25)" fg:x="3012" fg:w="8"/><text x="35.9119%" y="1103.50"></text></g><g><title>filemap_get_entry (6 samples, 0.07%)</title><rect x="35.6855%" y="1077" width="0.0710%" height="15" fill="rgb(252,7,35)" fg:x="3014" fg:w="6"/><text x="35.9355%" y="1087.50"></text></g><g><title>xas_load (4 samples, 0.05%)</title><rect x="35.7092%" y="1061" width="0.0474%" height="15" fill="rgb(216,69,40)" fg:x="3016" fg:w="4"/><text x="35.9592%" y="1071.50"></text></g><g><title>xas_start (1 samples, 0.01%)</title><rect x="35.7447%" y="1045" width="0.0118%" height="15" fill="rgb(240,36,33)" fg:x="3019" fg:w="1"/><text x="35.9947%" y="1055.50"></text></g><g><title>fault_in_readable (6 samples, 0.07%)</title><rect x="35.7566%" y="1093" width="0.0710%" height="15" fill="rgb(231,128,14)" fg:x="3020" fg:w="6"/><text x="36.0066%" y="1103.50"></text></g><g><title>[[ext4]] (29 samples, 0.34%)</title><rect x="35.4961%" y="1141" width="0.3434%" height="15" fill="rgb(245,143,14)" fg:x="2998" fg:w="29"/><text x="35.7461%" y="1151.50"></text></g><g><title>generic_perform_write (21 samples, 0.25%)</title><rect x="35.5908%" y="1125" width="0.2486%" height="15" fill="rgb(222,130,28)" fg:x="3006" fg:w="21"/><text x="35.8408%" y="1135.50"></text></g><g><title>fault_in_iov_iter_readable (7 samples, 0.08%)</title><rect x="35.7566%" y="1109" width="0.0829%" height="15" fill="rgb(212,10,48)" fg:x="3020" fg:w="7"/><text x="36.0066%" y="1119.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="35.8276%" y="1093" width="0.0118%" height="15" fill="rgb(254,118,45)" fg:x="3026" fg:w="1"/><text x="36.0776%" y="1103.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="35.8276%" y="1077" width="0.0118%" height="15" fill="rgb(228,6,45)" fg:x="3026" fg:w="1"/><text x="36.0776%" y="1087.50"></text></g><g><title>eventfd_write (1 samples, 0.01%)</title><rect x="35.8395%" y="1141" width="0.0118%" height="15" fill="rgb(241,18,35)" fg:x="3027" fg:w="1"/><text x="36.0895%" y="1151.50"></text></g><g><title>__wake_up_common (1 samples, 0.01%)</title><rect x="35.8395%" y="1125" width="0.0118%" height="15" fill="rgb(227,214,53)" fg:x="3027" fg:w="1"/><text x="36.0895%" y="1135.50"></text></g><g><title>ep_poll_callback (1 samples, 0.01%)</title><rect x="35.8395%" y="1109" width="0.0118%" height="15" fill="rgb(224,107,51)" fg:x="3027" fg:w="1"/><text x="36.0895%" y="1119.50"></text></g><g><title>__wake_up (1 samples, 0.01%)</title><rect x="35.8395%" y="1093" width="0.0118%" height="15" fill="rgb(248,60,28)" fg:x="3027" fg:w="1"/><text x="36.0895%" y="1103.50"></text></g><g><title>__wake_up_common (1 samples, 0.01%)</title><rect x="35.8395%" y="1077" width="0.0118%" height="15" fill="rgb(249,101,23)" fg:x="3027" fg:w="1"/><text x="36.0895%" y="1087.50"></text></g><g><title>ep_autoremove_wake_function (1 samples, 0.01%)</title><rect x="35.8395%" y="1061" width="0.0118%" height="15" fill="rgb(228,51,19)" fg:x="3027" fg:w="1"/><text x="36.0895%" y="1071.50"></text></g><g><title>try_to_wake_up (1 samples, 0.01%)</title><rect x="35.8395%" y="1045" width="0.0118%" height="15" fill="rgb(213,20,6)" fg:x="3027" fg:w="1"/><text x="36.0895%" y="1055.50"></text></g><g><title>ttwu_queue_wakelist (1 samples, 0.01%)</title><rect x="35.8395%" y="1029" width="0.0118%" height="15" fill="rgb(212,124,10)" fg:x="3027" fg:w="1"/><text x="36.0895%" y="1039.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.01%)</title><rect x="35.8395%" y="1013" width="0.0118%" height="15" fill="rgb(248,3,40)" fg:x="3027" fg:w="1"/><text x="36.0895%" y="1023.50"></text></g><g><title>sched_clock (1 samples, 0.01%)</title><rect x="35.8395%" y="997" width="0.0118%" height="15" fill="rgb(223,178,23)" fg:x="3027" fg:w="1"/><text x="36.0895%" y="1007.50"></text></g><g><title>native_sched_clock (1 samples, 0.01%)</title><rect x="35.8395%" y="981" width="0.0118%" height="15" fill="rgb(240,132,45)" fg:x="3027" fg:w="1"/><text x="36.0895%" y="991.50"></text></g><g><title>ksys_write (36 samples, 0.43%)</title><rect x="35.4369%" y="1173" width="0.4262%" height="15" fill="rgb(245,164,36)" fg:x="2993" fg:w="36"/><text x="35.6869%" y="1183.50"></text></g><g><title>vfs_write (33 samples, 0.39%)</title><rect x="35.4724%" y="1157" width="0.3907%" height="15" fill="rgb(231,188,53)" fg:x="2996" fg:w="33"/><text x="35.7224%" y="1167.50"></text></g><g><title>rw_verify_area (1 samples, 0.01%)</title><rect x="35.8513%" y="1141" width="0.0118%" height="15" fill="rgb(237,198,39)" fg:x="3028" fg:w="1"/><text x="36.1013%" y="1151.50"></text></g><g><title>syscall_exit_to_user_mode (2 samples, 0.02%)</title><rect x="35.8631%" y="1173" width="0.0237%" height="15" fill="rgb(223,120,35)" fg:x="3029" fg:w="2"/><text x="36.1131%" y="1183.50"></text></g><g><title>do_syscall_64 (405 samples, 4.80%)</title><rect x="31.1272%" y="1189" width="4.7952%" height="15" fill="rgb(253,107,49)" fg:x="2629" fg:w="405"/><text x="31.3772%" y="1199.50">do_sys..</text></g><g><title>x64_sys_call (3 samples, 0.04%)</title><rect x="35.8868%" y="1173" width="0.0355%" height="15" fill="rgb(216,44,31)" fg:x="3031" fg:w="3"/><text x="36.1368%" y="1183.50"></text></g><g><title>srso_alias_return_thunk (8 samples, 0.09%)</title><rect x="35.9223%" y="1189" width="0.0947%" height="15" fill="rgb(253,87,21)" fg:x="3034" fg:w="8"/><text x="36.1723%" y="1199.50"></text></g><g><title>srso_alias_safe_ret (8 samples, 0.09%)</title><rect x="35.9223%" y="1173" width="0.0947%" height="15" fill="rgb(226,18,2)" fg:x="3034" fg:w="8"/><text x="36.1723%" y="1183.50"></text></g><g><title>entry_SYSCALL_64 (445 samples, 5.27%)</title><rect x="30.8312%" y="1205" width="5.2688%" height="15" fill="rgb(216,8,46)" fg:x="2604" fg:w="445"/><text x="31.0812%" y="1215.50">entry_..</text></g><g><title>srso_alias_untrain_ret (7 samples, 0.08%)</title><rect x="36.0170%" y="1189" width="0.0829%" height="15" fill="rgb(226,140,39)" fg:x="3042" fg:w="7"/><text x="36.2670%" y="1199.50"></text></g><g><title>epoll_wait (8 samples, 0.09%)</title><rect x="36.0999%" y="1205" width="0.0947%" height="15" fill="rgb(221,194,54)" fg:x="3049" fg:w="8"/><text x="36.3499%" y="1215.50"></text></g><g><title>irq_entries_start (1 samples, 0.01%)</title><rect x="36.1946%" y="1205" width="0.0118%" height="15" fill="rgb(213,92,11)" fg:x="3057" fg:w="1"/><text x="36.4446%" y="1215.50"></text></g><g><title>malloc (11 samples, 0.13%)</title><rect x="36.2065%" y="1205" width="0.1302%" height="15" fill="rgb(229,162,46)" fg:x="3058" fg:w="11"/><text x="36.4565%" y="1215.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::rule (1 samples, 0.01%)</title><rect x="36.3367%" y="1205" width="0.0118%" height="15" fill="rgb(214,111,36)" fg:x="3069" fg:w="1"/><text x="36.5867%" y="1215.50"></text></g><g><title>pest::parser_state::state (1 samples, 0.01%)</title><rect x="36.3486%" y="1205" width="0.0118%" height="15" fill="rgb(207,6,21)" fg:x="3070" fg:w="1"/><text x="36.5986%" y="1215.50"></text></g><g><title>&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::_{{closure}} (1 samples, 0.01%)</title><rect x="36.3486%" y="1189" width="0.0118%" height="15" fill="rgb(213,127,38)" fg:x="3070" fg:w="1"/><text x="36.5986%" y="1199.50"></text></g><g><title>&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::text (1 samples, 0.01%)</title><rect x="36.3486%" y="1173" width="0.0118%" height="15" fill="rgb(238,118,32)" fg:x="3070" fg:w="1"/><text x="36.5986%" y="1183.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (1 samples, 0.01%)</title><rect x="36.3486%" y="1157" width="0.0118%" height="15" fill="rgb(240,139,39)" fg:x="3070" fg:w="1"/><text x="36.5986%" y="1167.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::inc_call_check_limit (1 samples, 0.01%)</title><rect x="36.3486%" y="1141" width="0.0118%" height="15" fill="rgb(235,10,37)" fg:x="3070" fg:w="1"/><text x="36.5986%" y="1151.50"></text></g><g><title>core::num::&lt;impl u8&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="36.3604%" y="1189" width="0.0237%" height="15" fill="rgb(249,171,38)" fg:x="3071" fg:w="2"/><text x="36.6104%" y="1199.50"></text></g><g><title>rc4::Rc4State::prga (3 samples, 0.04%)</title><rect x="36.3604%" y="1205" width="0.0355%" height="15" fill="rgb(242,144,32)" fg:x="3071" fg:w="3"/><text x="36.6104%" y="1215.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.01%)</title><rect x="36.3841%" y="1189" width="0.0118%" height="15" fill="rgb(217,117,21)" fg:x="3073" fg:w="1"/><text x="36.6341%" y="1199.50"></text></g><g><title>core::ptr::swap (1 samples, 0.01%)</title><rect x="36.3841%" y="1173" width="0.0118%" height="15" fill="rgb(249,87,1)" fg:x="3073" fg:w="1"/><text x="36.6341%" y="1183.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.01%)</title><rect x="36.3841%" y="1157" width="0.0118%" height="15" fill="rgb(248,196,48)" fg:x="3073" fg:w="1"/><text x="36.6341%" y="1167.50"></text></g><g><title>realloc (1 samples, 0.01%)</title><rect x="36.3959%" y="1205" width="0.0118%" height="15" fill="rgb(251,206,33)" fg:x="3074" fg:w="1"/><text x="36.6459%" y="1215.50"></text></g><g><title>recv (4 samples, 0.05%)</title><rect x="36.4078%" y="1205" width="0.0474%" height="15" fill="rgb(232,141,28)" fg:x="3075" fg:w="4"/><text x="36.6578%" y="1215.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="36.4433%" y="1189" width="0.0118%" height="15" fill="rgb(209,167,14)" fg:x="3078" fg:w="1"/><text x="36.6933%" y="1199.50"></text></g><g><title>sync_regs (1 samples, 0.01%)</title><rect x="36.4433%" y="1173" width="0.0118%" height="15" fill="rgb(225,11,50)" fg:x="3078" fg:w="1"/><text x="36.6933%" y="1183.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (8 samples, 0.09%)</title><rect x="36.7985%" y="1093" width="0.0947%" height="15" fill="rgb(209,50,20)" fg:x="3108" fg:w="8"/><text x="37.0485%" y="1103.50"></text></g><g><title>rotmguard::proxy::Proxy::run::_{{closure}}::_{{closure}}::_{{closure}} (2 samples, 0.02%)</title><rect x="36.8695%" y="1077" width="0.0237%" height="15" fill="rgb(212,17,46)" fg:x="3114" fg:w="2"/><text x="37.1195%" y="1087.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (11 samples, 0.13%)</title><rect x="36.7748%" y="1157" width="0.1302%" height="15" fill="rgb(216,101,39)" fg:x="3106" fg:w="11"/><text x="37.0248%" y="1167.50"></text></g><g><title>&lt;tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (11 samples, 0.13%)</title><rect x="36.7748%" y="1141" width="0.1302%" height="15" fill="rgb(212,228,48)" fg:x="3106" fg:w="11"/><text x="37.0248%" y="1151.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::on_exit (11 samples, 0.13%)</title><rect x="36.7748%" y="1125" width="0.1302%" height="15" fill="rgb(250,6,50)" fg:x="3106" fg:w="11"/><text x="37.0248%" y="1135.50"></text></g><g><title>rotmguard::proxy::Proxy::run::_{{closure}}::_{{closure}} (11 samples, 0.13%)</title><rect x="36.7748%" y="1109" width="0.1302%" height="15" fill="rgb(250,160,48)" fg:x="3106" fg:w="11"/><text x="37.0248%" y="1119.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.01%)</title><rect x="36.8932%" y="1093" width="0.0118%" height="15" fill="rgb(244,216,33)" fg:x="3116" fg:w="1"/><text x="37.1432%" y="1103.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::cares_about_span (1 samples, 0.01%)</title><rect x="36.9050%" y="1077" width="0.0118%" height="15" fill="rgb(207,157,5)" fg:x="3117" fg:w="1"/><text x="37.1550%" y="1087.50"></text></g><g><title>&lt;tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_exit (2 samples, 0.02%)</title><rect x="36.9050%" y="1093" width="0.0237%" height="15" fill="rgb(228,199,8)" fg:x="3117" fg:w="2"/><text x="37.1550%" y="1103.50"></text></g><g><title>tracing_subscriber::layer::context::Context&lt;S&gt;::if_enabled_for (1 samples, 0.01%)</title><rect x="36.9169%" y="1077" width="0.0118%" height="15" fill="rgb(227,80,20)" fg:x="3118" fg:w="1"/><text x="37.1669%" y="1087.50"></text></g><g><title>tracing_subscriber::layer::context::Context&lt;S&gt;::is_enabled_inner (1 samples, 0.01%)</title><rect x="36.9169%" y="1061" width="0.0118%" height="15" fill="rgb(222,9,33)" fg:x="3118" fg:w="1"/><text x="37.1669%" y="1071.50"></text></g><g><title>tracing_subscriber::layer::context::Context&lt;S&gt;::span (1 samples, 0.01%)</title><rect x="36.9169%" y="1045" width="0.0118%" height="15" fill="rgb(239,44,28)" fg:x="3118" fg:w="1"/><text x="37.1669%" y="1055.50"></text></g><g><title>tracing_subscriber::registry::LookupSpan::span (1 samples, 0.01%)</title><rect x="36.9169%" y="1029" width="0.0118%" height="15" fill="rgb(249,187,43)" fg:x="3118" fg:w="1"/><text x="37.1669%" y="1039.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_subscriber::registry::LookupSpan&gt;::span_data (1 samples, 0.01%)</title><rect x="36.9169%" y="1013" width="0.0118%" height="15" fill="rgb(216,141,28)" fg:x="3118" fg:w="1"/><text x="37.1669%" y="1023.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (1 samples, 0.01%)</title><rect x="36.9169%" y="997" width="0.0118%" height="15" fill="rgb(230,154,53)" fg:x="3118" fg:w="1"/><text x="37.1669%" y="1007.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="36.9169%" y="981" width="0.0118%" height="15" fill="rgb(227,82,4)" fg:x="3118" fg:w="1"/><text x="37.1669%" y="991.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="36.9287%" y="1045" width="0.0118%" height="15" fill="rgb(220,107,16)" fg:x="3119" fg:w="1"/><text x="37.1787%" y="1055.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="36.9406%" y="1045" width="0.0118%" height="15" fill="rgb(207,187,2)" fg:x="3120" fg:w="1"/><text x="37.1906%" y="1055.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="36.9524%" y="1029" width="0.0118%" height="15" fill="rgb(210,162,52)" fg:x="3121" fg:w="1"/><text x="37.2024%" y="1039.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Filter&lt;S&gt;&gt;::on_exit (4 samples, 0.05%)</title><rect x="36.9287%" y="1061" width="0.0474%" height="15" fill="rgb(217,216,49)" fg:x="3119" fg:w="4"/><text x="37.1787%" y="1071.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::on_exit (2 samples, 0.02%)</title><rect x="36.9524%" y="1045" width="0.0237%" height="15" fill="rgb(218,146,49)" fg:x="3121" fg:w="2"/><text x="37.2024%" y="1055.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="36.9642%" y="1029" width="0.0118%" height="15" fill="rgb(216,55,40)" fg:x="3122" fg:w="1"/><text x="37.2142%" y="1039.50"></text></g><g><title>&lt;tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_exit (5 samples, 0.06%)</title><rect x="36.9287%" y="1077" width="0.0592%" height="15" fill="rgb(208,196,21)" fg:x="3119" fg:w="5"/><text x="37.1787%" y="1087.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::on_exit (1 samples, 0.01%)</title><rect x="36.9761%" y="1061" width="0.0118%" height="15" fill="rgb(242,117,42)" fg:x="3123" fg:w="1"/><text x="37.2261%" y="1071.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="36.9879%" y="1029" width="0.0118%" height="15" fill="rgb(210,11,23)" fg:x="3124" fg:w="1"/><text x="37.2379%" y="1039.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (1 samples, 0.01%)</title><rect x="36.9879%" y="1013" width="0.0118%" height="15" fill="rgb(217,110,2)" fg:x="3124" fg:w="1"/><text x="37.2379%" y="1023.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (1 samples, 0.01%)</title><rect x="36.9879%" y="997" width="0.0118%" height="15" fill="rgb(229,77,54)" fg:x="3124" fg:w="1"/><text x="37.2379%" y="1007.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (1 samples, 0.01%)</title><rect x="36.9879%" y="981" width="0.0118%" height="15" fill="rgb(218,53,16)" fg:x="3124" fg:w="1"/><text x="37.2379%" y="991.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (2 samples, 0.02%)</title><rect x="36.9879%" y="1045" width="0.0237%" height="15" fill="rgb(215,38,13)" fg:x="3124" fg:w="2"/><text x="37.2379%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="36.9998%" y="1029" width="0.0118%" height="15" fill="rgb(235,42,18)" fg:x="3125" fg:w="1"/><text x="37.2498%" y="1039.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close::_{{closure}} (1 samples, 0.01%)</title><rect x="36.9998%" y="1013" width="0.0118%" height="15" fill="rgb(219,66,54)" fg:x="3125" fg:w="1"/><text x="37.2498%" y="1023.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.01%)</title><rect x="36.9998%" y="997" width="0.0118%" height="15" fill="rgb(222,205,4)" fg:x="3125" fg:w="1"/><text x="37.2498%" y="1007.50"></text></g><g><title>tracing_core::dispatcher::get_global (1 samples, 0.01%)</title><rect x="36.9998%" y="981" width="0.0118%" height="15" fill="rgb(227,213,46)" fg:x="3125" fg:w="1"/><text x="37.2498%" y="991.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (3 samples, 0.04%)</title><rect x="36.9879%" y="1061" width="0.0355%" height="15" fill="rgb(250,145,42)" fg:x="3124" fg:w="3"/><text x="37.2379%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="37.0116%" y="1045" width="0.0118%" height="15" fill="rgb(219,15,2)" fg:x="3126" fg:w="1"/><text x="37.2616%" y="1055.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close::_{{closure}} (1 samples, 0.01%)</title><rect x="37.0116%" y="1029" width="0.0118%" height="15" fill="rgb(231,181,52)" fg:x="3126" fg:w="1"/><text x="37.2616%" y="1039.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.01%)</title><rect x="37.0116%" y="1013" width="0.0118%" height="15" fill="rgb(235,1,42)" fg:x="3126" fg:w="1"/><text x="37.2616%" y="1023.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit (4 samples, 0.05%)</title><rect x="36.9879%" y="1077" width="0.0474%" height="15" fill="rgb(249,88,27)" fg:x="3124" fg:w="4"/><text x="37.2379%" y="1087.50"></text></g><g><title>tracing_subscriber::registry::stack::SpanStack::pop (1 samples, 0.01%)</title><rect x="37.0234%" y="1061" width="0.0118%" height="15" fill="rgb(235,145,16)" fg:x="3127" fg:w="1"/><text x="37.2734%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (1 samples, 0.01%)</title><rect x="37.0234%" y="1045" width="0.0118%" height="15" fill="rgb(237,114,19)" fg:x="3127" fg:w="1"/><text x="37.2734%" y="1055.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="37.0234%" y="1029" width="0.0118%" height="15" fill="rgb(238,51,50)" fg:x="3127" fg:w="1"/><text x="37.2734%" y="1039.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="37.0234%" y="1013" width="0.0118%" height="15" fill="rgb(205,194,25)" fg:x="3127" fg:w="1"/><text x="37.2734%" y="1023.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="37.0234%" y="997" width="0.0118%" height="15" fill="rgb(215,203,17)" fg:x="3127" fg:w="1"/><text x="37.2734%" y="1007.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="37.0234%" y="981" width="0.0118%" height="15" fill="rgb(233,112,49)" fg:x="3127" fg:w="1"/><text x="37.2734%" y="991.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="37.0234%" y="965" width="0.0118%" height="15" fill="rgb(241,130,26)" fg:x="3127" fg:w="1"/><text x="37.2734%" y="975.50"></text></g><g><title>tick_nohz_handler (1 samples, 0.01%)</title><rect x="37.0234%" y="949" width="0.0118%" height="15" fill="rgb(252,223,19)" fg:x="3127" fg:w="1"/><text x="37.2734%" y="959.50"></text></g><g><title>hrtimer_forward (1 samples, 0.01%)</title><rect x="37.0234%" y="933" width="0.0118%" height="15" fill="rgb(211,95,25)" fg:x="3127" fg:w="1"/><text x="37.2734%" y="943.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (12 samples, 0.14%)</title><rect x="36.9050%" y="1109" width="0.1421%" height="15" fill="rgb(251,182,27)" fg:x="3117" fg:w="12"/><text x="37.1550%" y="1119.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (10 samples, 0.12%)</title><rect x="36.9287%" y="1093" width="0.1184%" height="15" fill="rgb(238,24,4)" fg:x="3119" fg:w="10"/><text x="37.1787%" y="1103.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="37.0353%" y="1077" width="0.0118%" height="15" fill="rgb(224,220,25)" fg:x="3128" fg:w="1"/><text x="37.2853%" y="1087.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="37.0471%" y="1109" width="0.0118%" height="15" fill="rgb(239,133,26)" fg:x="3129" fg:w="1"/><text x="37.2971%" y="1119.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (1 samples, 0.01%)</title><rect x="37.0590%" y="1109" width="0.0118%" height="15" fill="rgb(211,94,48)" fg:x="3130" fg:w="1"/><text x="37.3090%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (15 samples, 0.18%)</title><rect x="36.9050%" y="1157" width="0.1776%" height="15" fill="rgb(239,87,6)" fg:x="3117" fg:w="15"/><text x="37.1550%" y="1167.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (15 samples, 0.18%)</title><rect x="36.9050%" y="1141" width="0.1776%" height="15" fill="rgb(227,62,0)" fg:x="3117" fg:w="15"/><text x="37.1550%" y="1151.50"></text></g><g><title>tracing::span::Span::do_exit (15 samples, 0.18%)</title><rect x="36.9050%" y="1125" width="0.1776%" height="15" fill="rgb(211,226,4)" fg:x="3117" fg:w="15"/><text x="37.1550%" y="1135.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (1 samples, 0.01%)</title><rect x="37.0708%" y="1109" width="0.0118%" height="15" fill="rgb(253,38,52)" fg:x="3131" fg:w="1"/><text x="37.3208%" y="1119.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="37.3076%" y="997" width="0.0118%" height="15" fill="rgb(229,126,40)" fg:x="3151" fg:w="1"/><text x="37.5576%" y="1007.50"></text></g><g><title>&lt;rotmguard::logging::LogWriter as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="37.3076%" y="981" width="0.0118%" height="15" fill="rgb(229,165,44)" fg:x="3151" fg:w="1"/><text x="37.5576%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.01%)</title><rect x="37.3076%" y="965" width="0.0118%" height="15" fill="rgb(247,95,47)" fg:x="3151" fg:w="1"/><text x="37.5576%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.01%)</title><rect x="37.3076%" y="949" width="0.0118%" height="15" fill="rgb(216,140,30)" fg:x="3151" fg:w="1"/><text x="37.5576%" y="959.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.01%)</title><rect x="37.3076%" y="933" width="0.0118%" height="15" fill="rgb(246,214,8)" fg:x="3151" fg:w="1"/><text x="37.5576%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="37.3076%" y="917" width="0.0118%" height="15" fill="rgb(227,224,15)" fg:x="3151" fg:w="1"/><text x="37.5576%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="37.3076%" y="901" width="0.0118%" height="15" fill="rgb(233,175,4)" fg:x="3151" fg:w="1"/><text x="37.5576%" y="911.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.01%)</title><rect x="37.3076%" y="885" width="0.0118%" height="15" fill="rgb(221,66,45)" fg:x="3151" fg:w="1"/><text x="37.5576%" y="895.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::_{{closure}} (1 samples, 0.01%)</title><rect x="37.3076%" y="869" width="0.0118%" height="15" fill="rgb(221,178,18)" fg:x="3151" fg:w="1"/><text x="37.5576%" y="879.50"></text></g><g><title>[rotmguard] (1 samples, 0.01%)</title><rect x="37.3194%" y="885" width="0.0118%" height="15" fill="rgb(213,81,29)" fg:x="3152" fg:w="1"/><text x="37.5694%" y="895.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="37.3194%" y="869" width="0.0118%" height="15" fill="rgb(220,89,49)" fg:x="3152" fg:w="1"/><text x="37.5694%" y="879.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.01%)</title><rect x="37.3313%" y="885" width="0.0118%" height="15" fill="rgb(227,60,33)" fg:x="3153" fg:w="1"/><text x="37.5813%" y="895.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::SystemTime as tracing_subscriber::fmt::time::FormatTime&gt;::format_time (3 samples, 0.04%)</title><rect x="37.3194%" y="981" width="0.0355%" height="15" fill="rgb(205,113,12)" fg:x="3152" fg:w="3"/><text x="37.5694%" y="991.50"></text></g><g><title>tracing_subscriber::fmt::format::Writer::write_fmt (3 samples, 0.04%)</title><rect x="37.3194%" y="965" width="0.0355%" height="15" fill="rgb(211,32,1)" fg:x="3152" fg:w="3"/><text x="37.5694%" y="975.50"></text></g><g><title>core::fmt::write (3 samples, 0.04%)</title><rect x="37.3194%" y="949" width="0.0355%" height="15" fill="rgb(246,2,12)" fg:x="3152" fg:w="3"/><text x="37.5694%" y="959.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.04%)</title><rect x="37.3194%" y="933" width="0.0355%" height="15" fill="rgb(243,37,27)" fg:x="3152" fg:w="3"/><text x="37.5694%" y="943.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::fmt::Display&gt;::fmt (3 samples, 0.04%)</title><rect x="37.3194%" y="917" width="0.0355%" height="15" fill="rgb(248,211,31)" fg:x="3152" fg:w="3"/><text x="37.5694%" y="927.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.04%)</title><rect x="37.3194%" y="901" width="0.0355%" height="15" fill="rgb(242,146,47)" fg:x="3152" fg:w="3"/><text x="37.5694%" y="911.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="37.3431%" y="885" width="0.0118%" height="15" fill="rgb(206,70,20)" fg:x="3154" fg:w="1"/><text x="37.5931%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="37.3431%" y="869" width="0.0118%" height="15" fill="rgb(215,10,51)" fg:x="3154" fg:w="1"/><text x="37.5931%" y="879.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="37.3431%" y="853" width="0.0118%" height="15" fill="rgb(243,178,53)" fg:x="3154" fg:w="1"/><text x="37.5931%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="37.3431%" y="837" width="0.0118%" height="15" fill="rgb(233,221,20)" fg:x="3154" fg:w="1"/><text x="37.5931%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="37.3431%" y="821" width="0.0118%" height="15" fill="rgb(218,95,35)" fg:x="3154" fg:w="1"/><text x="37.5931%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="37.3431%" y="805" width="0.0118%" height="15" fill="rgb(229,13,5)" fg:x="3154" fg:w="1"/><text x="37.5931%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="37.3431%" y="789" width="0.0118%" height="15" fill="rgb(252,164,30)" fg:x="3154" fg:w="1"/><text x="37.5931%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="37.3431%" y="773" width="0.0118%" height="15" fill="rgb(232,68,36)" fg:x="3154" fg:w="1"/><text x="37.5931%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="37.3431%" y="757" width="0.0118%" height="15" fill="rgb(219,59,54)" fg:x="3154" fg:w="1"/><text x="37.5931%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="37.3431%" y="741" width="0.0118%" height="15" fill="rgb(250,92,33)" fg:x="3154" fg:w="1"/><text x="37.5931%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="37.3431%" y="725" width="0.0118%" height="15" fill="rgb(229,162,54)" fg:x="3154" fg:w="1"/><text x="37.5931%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="37.3431%" y="709" width="0.0118%" height="15" fill="rgb(244,114,52)" fg:x="3154" fg:w="1"/><text x="37.5931%" y="719.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="37.3431%" y="693" width="0.0118%" height="15" fill="rgb(212,211,43)" fg:x="3154" fg:w="1"/><text x="37.5931%" y="703.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="37.3431%" y="677" width="0.0118%" height="15" fill="rgb(226,147,8)" fg:x="3154" fg:w="1"/><text x="37.5931%" y="687.50"></text></g><g><title>realloc (1 samples, 0.01%)</title><rect x="37.3431%" y="661" width="0.0118%" height="15" fill="rgb(226,23,13)" fg:x="3154" fg:w="1"/><text x="37.5931%" y="671.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="37.3431%" y="645" width="0.0118%" height="15" fill="rgb(240,63,4)" fg:x="3154" fg:w="1"/><text x="37.5931%" y="655.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.01%)</title><rect x="37.3550%" y="965" width="0.0118%" height="15" fill="rgb(221,1,32)" fg:x="3155" fg:w="1"/><text x="37.6050%" y="975.50"></text></g><g><title>serde_json::ser::Formatter::begin_object (1 samples, 0.01%)</title><rect x="37.3550%" y="949" width="0.0118%" height="15" fill="rgb(242,117,10)" fg:x="3155" fg:w="1"/><text x="37.6050%" y="959.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="37.3550%" y="933" width="0.0118%" height="15" fill="rgb(249,172,44)" fg:x="3155" fg:w="1"/><text x="37.6050%" y="943.50"></text></g><g><title>&lt;tracing_subscriber::fmt::writer::WriteAdaptor as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="37.3550%" y="917" width="0.0118%" height="15" fill="rgb(244,46,45)" fg:x="3155" fg:w="1"/><text x="37.6050%" y="927.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="37.3550%" y="901" width="0.0118%" height="15" fill="rgb(206,43,17)" fg:x="3155" fg:w="1"/><text x="37.6050%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="37.3550%" y="885" width="0.0118%" height="15" fill="rgb(239,218,39)" fg:x="3155" fg:w="1"/><text x="37.6050%" y="895.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="37.3550%" y="869" width="0.0118%" height="15" fill="rgb(208,169,54)" fg:x="3155" fg:w="1"/><text x="37.6050%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="37.3550%" y="853" width="0.0118%" height="15" fill="rgb(247,25,42)" fg:x="3155" fg:w="1"/><text x="37.6050%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="37.3550%" y="837" width="0.0118%" height="15" fill="rgb(226,23,31)" fg:x="3155" fg:w="1"/><text x="37.6050%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="37.3550%" y="821" width="0.0118%" height="15" fill="rgb(247,16,28)" fg:x="3155" fg:w="1"/><text x="37.6050%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="37.3550%" y="805" width="0.0118%" height="15" fill="rgb(231,147,38)" fg:x="3155" fg:w="1"/><text x="37.6050%" y="815.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::Writer as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="37.3550%" y="789" width="0.0118%" height="15" fill="rgb(253,81,48)" fg:x="3155" fg:w="1"/><text x="37.6050%" y="799.50"></text></g><g><title>tracing_subscriber::fmt::format::Writer::write_str (1 samples, 0.01%)</title><rect x="37.3550%" y="773" width="0.0118%" height="15" fill="rgb(249,222,43)" fg:x="3155" fg:w="1"/><text x="37.6050%" y="783.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="37.3668%" y="309" width="0.0118%" height="15" fill="rgb(221,3,27)" fg:x="3156" fg:w="1"/><text x="37.6168%" y="319.50"></text></g><g><title>asm_sysvec_call_function_single (1 samples, 0.01%)</title><rect x="37.3668%" y="293" width="0.0118%" height="15" fill="rgb(228,180,5)" fg:x="3156" fg:w="1"/><text x="37.6168%" y="303.50"></text></g><g><title>sysvec_call_function_single (1 samples, 0.01%)</title><rect x="37.3668%" y="277" width="0.0118%" height="15" fill="rgb(227,131,42)" fg:x="3156" fg:w="1"/><text x="37.6168%" y="287.50"></text></g><g><title>__sysvec_call_function_single (1 samples, 0.01%)</title><rect x="37.3668%" y="261" width="0.0118%" height="15" fill="rgb(212,3,39)" fg:x="3156" fg:w="1"/><text x="37.6168%" y="271.50"></text></g><g><title>__flush_smp_call_function_queue (1 samples, 0.01%)</title><rect x="37.3668%" y="245" width="0.0118%" height="15" fill="rgb(226,45,5)" fg:x="3156" fg:w="1"/><text x="37.6168%" y="255.50"></text></g><g><title>sched_ttwu_pending (1 samples, 0.01%)</title><rect x="37.3668%" y="229" width="0.0118%" height="15" fill="rgb(215,167,45)" fg:x="3156" fg:w="1"/><text x="37.6168%" y="239.50"></text></g><g><title>ttwu_do_activate (1 samples, 0.01%)</title><rect x="37.3668%" y="213" width="0.0118%" height="15" fill="rgb(250,218,53)" fg:x="3156" fg:w="1"/><text x="37.6168%" y="223.50"></text></g><g><title>enqueue_task (1 samples, 0.01%)</title><rect x="37.3668%" y="197" width="0.0118%" height="15" fill="rgb(207,140,0)" fg:x="3156" fg:w="1"/><text x="37.6168%" y="207.50"></text></g><g><title>psi_task_change (1 samples, 0.01%)</title><rect x="37.3668%" y="181" width="0.0118%" height="15" fill="rgb(238,133,51)" fg:x="3156" fg:w="1"/><text x="37.6168%" y="191.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.01%)</title><rect x="37.3786%" y="213" width="0.0118%" height="15" fill="rgb(218,203,53)" fg:x="3157" fg:w="1"/><text x="37.6286%" y="223.50"></text></g><g><title>&lt;&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::collect_str::Adapter&lt;W,F&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="37.3786%" y="197" width="0.0118%" height="15" fill="rgb(226,184,25)" fg:x="3157" fg:w="1"/><text x="37.6286%" y="207.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (1 samples, 0.01%)</title><rect x="37.3786%" y="181" width="0.0118%" height="15" fill="rgb(231,121,21)" fg:x="3157" fg:w="1"/><text x="37.6286%" y="191.50"></text></g><g><title>serde_json::ser::Formatter::write_string_fragment (1 samples, 0.01%)</title><rect x="37.3786%" y="165" width="0.0118%" height="15" fill="rgb(251,14,34)" fg:x="3157" fg:w="1"/><text x="37.6286%" y="175.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="37.3786%" y="149" width="0.0118%" height="15" fill="rgb(249,193,11)" fg:x="3157" fg:w="1"/><text x="37.6286%" y="159.50"></text></g><g><title>&lt;tracing_subscriber::fmt::writer::WriteAdaptor as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="37.3786%" y="133" width="0.0118%" height="15" fill="rgb(220,172,37)" fg:x="3157" fg:w="1"/><text x="37.6286%" y="143.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="37.3786%" y="117" width="0.0118%" height="15" fill="rgb(231,229,43)" fg:x="3157" fg:w="1"/><text x="37.6286%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="37.3786%" y="101" width="0.0118%" height="15" fill="rgb(250,161,5)" fg:x="3157" fg:w="1"/><text x="37.6286%" y="111.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="37.3786%" y="85" width="0.0118%" height="15" fill="rgb(218,225,18)" fg:x="3157" fg:w="1"/><text x="37.6286%" y="95.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="37.3786%" y="69" width="0.0118%" height="15" fill="rgb(245,45,42)" fg:x="3157" fg:w="1"/><text x="37.6286%" y="79.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="37.3786%" y="53" width="0.0118%" height="15" fill="rgb(211,115,1)" fg:x="3157" fg:w="1"/><text x="37.6286%" y="63.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="37.3786%" y="37" width="0.0118%" height="15" fill="rgb(248,133,52)" fg:x="3157" fg:w="1"/><text x="37.6286%" y="47.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (2 samples, 0.02%)</title><rect x="37.3786%" y="277" width="0.0237%" height="15" fill="rgb(238,100,21)" fg:x="3157" fg:w="2"/><text x="37.6286%" y="287.50"></text></g><g><title>core::fmt::builders::DebugStruct::field_with (2 samples, 0.02%)</title><rect x="37.3786%" y="261" width="0.0237%" height="15" fill="rgb(247,144,11)" fg:x="3157" fg:w="2"/><text x="37.6286%" y="271.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.02%)</title><rect x="37.3786%" y="245" width="0.0237%" height="15" fill="rgb(206,164,16)" fg:x="3157" fg:w="2"/><text x="37.6286%" y="255.50"></text></g><g><title>core::fmt::builders::DebugStruct::field_with::_{{closure}} (2 samples, 0.02%)</title><rect x="37.3786%" y="229" width="0.0237%" height="15" fill="rgb(222,34,3)" fg:x="3157" fg:w="2"/><text x="37.6286%" y="239.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::_{{closure}} (1 samples, 0.01%)</title><rect x="37.3905%" y="213" width="0.0118%" height="15" fill="rgb(248,82,4)" fg:x="3158" fg:w="1"/><text x="37.6405%" y="223.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_shortest (1 samples, 0.01%)</title><rect x="37.3905%" y="197" width="0.0118%" height="15" fill="rgb(228,81,46)" fg:x="3158" fg:w="1"/><text x="37.6405%" y="207.50"></text></g><g><title>core::num::flt2dec::to_shortest_str (1 samples, 0.01%)</title><rect x="37.3905%" y="181" width="0.0118%" height="15" fill="rgb(227,67,47)" fg:x="3158" fg:w="1"/><text x="37.6405%" y="191.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.01%)</title><rect x="37.3905%" y="165" width="0.0118%" height="15" fill="rgb(215,93,53)" fg:x="3158" fg:w="1"/><text x="37.6405%" y="175.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_shortest (1 samples, 0.01%)</title><rect x="37.3905%" y="149" width="0.0118%" height="15" fill="rgb(248,194,39)" fg:x="3158" fg:w="1"/><text x="37.6405%" y="159.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_shortest_opt (1 samples, 0.01%)</title><rect x="37.3905%" y="133" width="0.0118%" height="15" fill="rgb(215,5,19)" fg:x="3158" fg:w="1"/><text x="37.6405%" y="143.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_shortest_opt (1 samples, 0.01%)</title><rect x="37.4023%" y="277" width="0.0118%" height="15" fill="rgb(226,215,51)" fg:x="3159" fg:w="1"/><text x="37.6523%" y="287.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_shortest_opt::round_and_weed (1 samples, 0.01%)</title><rect x="37.4023%" y="261" width="0.0118%" height="15" fill="rgb(225,56,26)" fg:x="3159" fg:w="1"/><text x="37.6523%" y="271.50"></text></g><g><title>&lt;rotmguard::extra_datatypes::worldpos::WorldPos as core::fmt::Debug&gt;::fmt (4 samples, 0.05%)</title><rect x="37.3786%" y="309" width="0.0474%" height="15" fill="rgb(222,75,29)" fg:x="3157" fg:w="4"/><text x="37.6286%" y="319.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field2_finish (4 samples, 0.05%)</title><rect x="37.3786%" y="293" width="0.0474%" height="15" fill="rgb(236,139,6)" fg:x="3157" fg:w="4"/><text x="37.6286%" y="303.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.01%)</title><rect x="37.4142%" y="277" width="0.0118%" height="15" fill="rgb(223,137,36)" fg:x="3160" fg:w="1"/><text x="37.6642%" y="287.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.01%)</title><rect x="37.4142%" y="261" width="0.0118%" height="15" fill="rgb(226,99,2)" fg:x="3160" fg:w="1"/><text x="37.6642%" y="271.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (6 samples, 0.07%)</title><rect x="37.3668%" y="389" width="0.0710%" height="15" fill="rgb(206,133,23)" fg:x="3156" fg:w="6"/><text x="37.6168%" y="399.50"></text></g><g><title>core::fmt::builders::DebugStruct::field_with (6 samples, 0.07%)</title><rect x="37.3668%" y="373" width="0.0710%" height="15" fill="rgb(243,173,15)" fg:x="3156" fg:w="6"/><text x="37.6168%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (6 samples, 0.07%)</title><rect x="37.3668%" y="357" width="0.0710%" height="15" fill="rgb(228,69,28)" fg:x="3156" fg:w="6"/><text x="37.6168%" y="367.50"></text></g><g><title>core::fmt::builders::DebugStruct::field_with::_{{closure}} (6 samples, 0.07%)</title><rect x="37.3668%" y="341" width="0.0710%" height="15" fill="rgb(212,51,22)" fg:x="3156" fg:w="6"/><text x="37.6168%" y="351.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::_{{closure}} (6 samples, 0.07%)</title><rect x="37.3668%" y="325" width="0.0710%" height="15" fill="rgb(227,113,0)" fg:x="3156" fg:w="6"/><text x="37.6168%" y="335.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.01%)</title><rect x="37.4260%" y="309" width="0.0118%" height="15" fill="rgb(252,84,27)" fg:x="3161" fg:w="1"/><text x="37.6760%" y="319.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.01%)</title><rect x="37.4260%" y="293" width="0.0118%" height="15" fill="rgb(223,145,39)" fg:x="3161" fg:w="1"/><text x="37.6760%" y="303.50"></text></g><g><title>&lt;tracing_serde::fields::SerializeFieldMap&lt;tracing_core::event::Event&gt; as serde::ser::Serialize&gt;::serialize (7 samples, 0.08%)</title><rect x="37.3668%" y="933" width="0.0829%" height="15" fill="rgb(239,219,30)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="943.50"></text></g><g><title>tracing_core::event::Event::record (7 samples, 0.08%)</title><rect x="37.3668%" y="917" width="0.0829%" height="15" fill="rgb(224,196,39)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="927.50"></text></g><g><title>tracing_core::field::ValueSet::record (7 samples, 0.08%)</title><rect x="37.3668%" y="901" width="0.0829%" height="15" fill="rgb(205,35,43)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="911.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (7 samples, 0.08%)</title><rect x="37.3668%" y="885" width="0.0829%" height="15" fill="rgb(228,201,21)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="895.50"></text></g><g><title>&lt;tracing_serde::SerdeMapVisitor&lt;S&gt; as tracing_core::field::Visit&gt;::record_debug (7 samples, 0.08%)</title><rect x="37.3668%" y="869" width="0.0829%" height="15" fill="rgb(237,118,16)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="879.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.08%)</title><rect x="37.3668%" y="853" width="0.0829%" height="15" fill="rgb(241,17,19)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="863.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.08%)</title><rect x="37.3668%" y="837" width="0.0829%" height="15" fill="rgb(214,10,25)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="847.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for core::fmt::Arguments&gt;::serialize (7 samples, 0.08%)</title><rect x="37.3668%" y="821" width="0.0829%" height="15" fill="rgb(238,37,29)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="831.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::collect_str (7 samples, 0.08%)</title><rect x="37.3668%" y="805" width="0.0829%" height="15" fill="rgb(253,83,25)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (7 samples, 0.08%)</title><rect x="37.3668%" y="789" width="0.0829%" height="15" fill="rgb(234,192,12)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="799.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (7 samples, 0.08%)</title><rect x="37.3668%" y="773" width="0.0829%" height="15" fill="rgb(241,216,45)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="783.50"></text></g><g><title>core::fmt::write (7 samples, 0.08%)</title><rect x="37.3668%" y="757" width="0.0829%" height="15" fill="rgb(242,22,33)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="767.50"></text></g><g><title>core::fmt::rt::Argument::fmt (7 samples, 0.08%)</title><rect x="37.3668%" y="741" width="0.0829%" height="15" fill="rgb(231,105,49)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="751.50"></text></g><g><title>core::fmt::write (7 samples, 0.08%)</title><rect x="37.3668%" y="725" width="0.0829%" height="15" fill="rgb(218,204,15)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (7 samples, 0.08%)</title><rect x="37.3668%" y="709" width="0.0829%" height="15" fill="rgb(235,138,41)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="719.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (7 samples, 0.08%)</title><rect x="37.3668%" y="693" width="0.0829%" height="15" fill="rgb(246,0,9)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::fmt::Debug&gt;::fmt (7 samples, 0.08%)</title><rect x="37.3668%" y="677" width="0.0829%" height="15" fill="rgb(210,74,4)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="687.50"></text></g><g><title>&lt;[T] as core::fmt::Debug&gt;::fmt (7 samples, 0.08%)</title><rect x="37.3668%" y="661" width="0.0829%" height="15" fill="rgb(250,60,41)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="671.50"></text></g><g><title>core::fmt::builders::DebugList::entries (7 samples, 0.08%)</title><rect x="37.3668%" y="645" width="0.0829%" height="15" fill="rgb(220,115,12)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="655.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (7 samples, 0.08%)</title><rect x="37.3668%" y="629" width="0.0829%" height="15" fill="rgb(237,100,13)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="639.50"></text></g><g><title>core::fmt::builders::DebugInner::entry_with (7 samples, 0.08%)</title><rect x="37.3668%" y="613" width="0.0829%" height="15" fill="rgb(213,55,26)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="623.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (7 samples, 0.08%)</title><rect x="37.3668%" y="597" width="0.0829%" height="15" fill="rgb(216,17,4)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="607.50"></text></g><g><title>core::fmt::builders::DebugInner::entry_with::_{{closure}} (7 samples, 0.08%)</title><rect x="37.3668%" y="581" width="0.0829%" height="15" fill="rgb(220,153,47)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="591.50"></text></g><g><title>core::fmt::builders::DebugSet::entry::_{{closure}} (7 samples, 0.08%)</title><rect x="37.3668%" y="565" width="0.0829%" height="15" fill="rgb(215,131,9)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="575.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (7 samples, 0.08%)</title><rect x="37.3668%" y="549" width="0.0829%" height="15" fill="rgb(233,46,42)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="559.50"></text></g><g><title>&lt;(U,T) as core::fmt::Debug&gt;::fmt (7 samples, 0.08%)</title><rect x="37.3668%" y="533" width="0.0829%" height="15" fill="rgb(226,86,7)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="543.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (7 samples, 0.08%)</title><rect x="37.3668%" y="517" width="0.0829%" height="15" fill="rgb(239,226,21)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="527.50"></text></g><g><title>core::fmt::builders::DebugTuple::field_with (7 samples, 0.08%)</title><rect x="37.3668%" y="501" width="0.0829%" height="15" fill="rgb(244,137,22)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (7 samples, 0.08%)</title><rect x="37.3668%" y="485" width="0.0829%" height="15" fill="rgb(211,139,35)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="495.50"></text></g><g><title>core::fmt::builders::DebugTuple::field_with::_{{closure}} (7 samples, 0.08%)</title><rect x="37.3668%" y="469" width="0.0829%" height="15" fill="rgb(214,62,50)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="479.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::_{{closure}} (7 samples, 0.08%)</title><rect x="37.3668%" y="453" width="0.0829%" height="15" fill="rgb(212,113,44)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="463.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (7 samples, 0.08%)</title><rect x="37.3668%" y="437" width="0.0829%" height="15" fill="rgb(226,150,43)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="447.50"></text></g><g><title>&lt;rotmguard::packets::_64_aoe::AoePacket as core::fmt::Debug&gt;::fmt (7 samples, 0.08%)</title><rect x="37.3668%" y="421" width="0.0829%" height="15" fill="rgb(250,71,37)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="431.50"></text></g><g><title>core::fmt::Formatter::debug_struct_fields_finish (7 samples, 0.08%)</title><rect x="37.3668%" y="405" width="0.0829%" height="15" fill="rgb(219,76,19)" fg:x="3156" fg:w="7"/><text x="37.6168%" y="415.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.01%)</title><rect x="37.4378%" y="389" width="0.0118%" height="15" fill="rgb(250,39,11)" fg:x="3162" fg:w="1"/><text x="37.6878%" y="399.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (13 samples, 0.15%)</title><rect x="37.3076%" y="1061" width="0.1539%" height="15" fill="rgb(230,64,31)" fg:x="3151" fg:w="13"/><text x="37.5576%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13 samples, 0.15%)</title><rect x="37.3076%" y="1045" width="0.1539%" height="15" fill="rgb(208,222,23)" fg:x="3151" fg:w="13"/><text x="37.5576%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13 samples, 0.15%)</title><rect x="37.3076%" y="1029" width="0.1539%" height="15" fill="rgb(227,125,18)" fg:x="3151" fg:w="13"/><text x="37.5576%" y="1039.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event::_{{closure}} (13 samples, 0.15%)</title><rect x="37.3076%" y="1013" width="0.1539%" height="15" fill="rgb(234,210,9)" fg:x="3151" fg:w="13"/><text x="37.5576%" y="1023.50"></text></g><g><title>tracing_subscriber::fmt::format::json::&lt;impl tracing_subscriber::fmt::format::FormatEvent&lt;S,N&gt; for tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::json::Json,T&gt;&gt;::format_event (12 samples, 0.14%)</title><rect x="37.3194%" y="997" width="0.1421%" height="15" fill="rgb(217,127,24)" fg:x="3152" fg:w="12"/><text x="37.5694%" y="1007.50"></text></g><g><title>tracing_subscriber::fmt::format::json::_&lt;impl tracing_subscriber::fmt::format::FormatEvent&lt;S,N&gt; for tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::json::Json,T&gt;&gt;::format_event::_{{closure}} (9 samples, 0.11%)</title><rect x="37.3550%" y="981" width="0.1066%" height="15" fill="rgb(239,141,48)" fg:x="3155" fg:w="9"/><text x="37.6050%" y="991.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (8 samples, 0.09%)</title><rect x="37.3668%" y="965" width="0.0947%" height="15" fill="rgb(227,109,8)" fg:x="3156" fg:w="8"/><text x="37.6168%" y="975.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.09%)</title><rect x="37.3668%" y="949" width="0.0947%" height="15" fill="rgb(235,184,23)" fg:x="3156" fg:w="8"/><text x="37.6168%" y="959.50"></text></g><g><title>serde_json::ser::Formatter::begin_object_value (1 samples, 0.01%)</title><rect x="37.4497%" y="933" width="0.0118%" height="15" fill="rgb(227,226,48)" fg:x="3163" fg:w="1"/><text x="37.6997%" y="943.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="37.4497%" y="917" width="0.0118%" height="15" fill="rgb(206,150,11)" fg:x="3163" fg:w="1"/><text x="37.6997%" y="927.50"></text></g><g><title>&lt;tracing_subscriber::fmt::writer::WriteAdaptor as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="37.4497%" y="901" width="0.0118%" height="15" fill="rgb(254,2,33)" fg:x="3163" fg:w="1"/><text x="37.6997%" y="911.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="37.4497%" y="885" width="0.0118%" height="15" fill="rgb(243,160,20)" fg:x="3163" fg:w="1"/><text x="37.6997%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="37.4497%" y="869" width="0.0118%" height="15" fill="rgb(218,208,30)" fg:x="3163" fg:w="1"/><text x="37.6997%" y="879.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="37.4497%" y="853" width="0.0118%" height="15" fill="rgb(224,120,49)" fg:x="3163" fg:w="1"/><text x="37.6997%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="37.4497%" y="837" width="0.0118%" height="15" fill="rgb(246,12,2)" fg:x="3163" fg:w="1"/><text x="37.6997%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="37.4497%" y="821" width="0.0118%" height="15" fill="rgb(236,117,3)" fg:x="3163" fg:w="1"/><text x="37.6997%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="37.4497%" y="805" width="0.0118%" height="15" fill="rgb(216,128,52)" fg:x="3163" fg:w="1"/><text x="37.6997%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="37.4497%" y="789" width="0.0118%" height="15" fill="rgb(246,145,19)" fg:x="3163" fg:w="1"/><text x="37.6997%" y="799.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="37.4497%" y="773" width="0.0118%" height="15" fill="rgb(222,11,46)" fg:x="3163" fg:w="1"/><text x="37.6997%" y="783.50"></text></g><g><title>&lt;tracing_subscriber::fmt::writer::WriteAdaptor as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="37.4497%" y="757" width="0.0118%" height="15" fill="rgb(245,82,36)" fg:x="3163" fg:w="1"/><text x="37.6997%" y="767.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.01%)</title><rect x="37.4497%" y="741" width="0.0118%" height="15" fill="rgb(250,73,51)" fg:x="3163" fg:w="1"/><text x="37.6997%" y="751.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.01%)</title><rect x="37.4497%" y="725" width="0.0118%" height="15" fill="rgb(221,189,23)" fg:x="3163" fg:w="1"/><text x="37.6997%" y="735.50"></text></g><g><title>rotmguard::module::autonexus::aoes::AOEs::check_aoes::_{{closure}}::_{{closure}} (14 samples, 0.17%)</title><rect x="37.3076%" y="1093" width="0.1658%" height="15" fill="rgb(210,33,7)" fg:x="3151" fg:w="14"/><text x="37.5576%" y="1103.50"></text></g><g><title>tracing_core::event::Event::dispatch (14 samples, 0.17%)</title><rect x="37.3076%" y="1077" width="0.1658%" height="15" fill="rgb(210,107,22)" fg:x="3151" fg:w="14"/><text x="37.5576%" y="1087.50"></text></g><g><title>tracing_core::event::Event::dispatch (1 samples, 0.01%)</title><rect x="37.4615%" y="1061" width="0.0118%" height="15" fill="rgb(222,116,37)" fg:x="3164" fg:w="1"/><text x="37.7115%" y="1071.50"></text></g><g><title>tracing_core::event::Event::new (1 samples, 0.01%)</title><rect x="37.4615%" y="1045" width="0.0118%" height="15" fill="rgb(254,17,48)" fg:x="3164" fg:w="1"/><text x="37.7115%" y="1055.50"></text></g><g><title>rotmguard::module::autonexus::aoes::AOEs::check_aoes::_{{closure}} (15 samples, 0.18%)</title><rect x="37.3076%" y="1109" width="0.1776%" height="15" fill="rgb(224,36,32)" fg:x="3151" fg:w="15"/><text x="37.5576%" y="1119.50"></text></g><g><title>rotmguard::module::autonexus::take_damage::_{{closure}} (1 samples, 0.01%)</title><rect x="37.4734%" y="1093" width="0.0118%" height="15" fill="rgb(232,90,46)" fg:x="3165" fg:w="1"/><text x="37.7234%" y="1103.50"></text></g><g><title>rotmguard::util::Notification::send::_{{closure}} (1 samples, 0.01%)</title><rect x="37.4734%" y="1077" width="0.0118%" height="15" fill="rgb(241,66,40)" fg:x="3165" fg:w="1"/><text x="37.7234%" y="1087.50"></text></g><g><title>rotmguard::proxy::ProxyWriteHalf::send_client::_{{closure}} (1 samples, 0.01%)</title><rect x="37.4734%" y="1061" width="0.0118%" height="15" fill="rgb(249,184,29)" fg:x="3165" fg:w="1"/><text x="37.7234%" y="1071.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="37.4734%" y="1045" width="0.0118%" height="15" fill="rgb(231,181,1)" fg:x="3165" fg:w="1"/><text x="37.7234%" y="1055.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (1 samples, 0.01%)</title><rect x="37.4734%" y="1029" width="0.0118%" height="15" fill="rgb(224,94,2)" fg:x="3165" fg:w="1"/><text x="37.7234%" y="1039.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (1 samples, 0.01%)</title><rect x="37.4734%" y="1013" width="0.0118%" height="15" fill="rgb(229,170,15)" fg:x="3165" fg:w="1"/><text x="37.7234%" y="1023.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="37.4734%" y="997" width="0.0118%" height="15" fill="rgb(240,127,35)" fg:x="3165" fg:w="1"/><text x="37.7234%" y="1007.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="37.4734%" y="981" width="0.0118%" height="15" fill="rgb(248,196,34)" fg:x="3165" fg:w="1"/><text x="37.7234%" y="991.50"></text></g><g><title>__send (1 samples, 0.01%)</title><rect x="37.4734%" y="965" width="0.0118%" height="15" fill="rgb(236,137,7)" fg:x="3165" fg:w="1"/><text x="37.7234%" y="975.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="37.4734%" y="949" width="0.0118%" height="15" fill="rgb(235,127,16)" fg:x="3165" fg:w="1"/><text x="37.7234%" y="959.50"></text></g><g><title>do_syscall_64 (1 samples, 0.01%)</title><rect x="37.4734%" y="933" width="0.0118%" height="15" fill="rgb(250,192,54)" fg:x="3165" fg:w="1"/><text x="37.7234%" y="943.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.01%)</title><rect x="37.4734%" y="917" width="0.0118%" height="15" fill="rgb(218,98,20)" fg:x="3165" fg:w="1"/><text x="37.7234%" y="927.50"></text></g><g><title>__sys_sendto (1 samples, 0.01%)</title><rect x="37.4734%" y="901" width="0.0118%" height="15" fill="rgb(230,176,47)" fg:x="3165" fg:w="1"/><text x="37.7234%" y="911.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.01%)</title><rect x="37.4734%" y="885" width="0.0118%" height="15" fill="rgb(244,2,33)" fg:x="3165" fg:w="1"/><text x="37.7234%" y="895.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.01%)</title><rect x="37.4734%" y="869" width="0.0118%" height="15" fill="rgb(231,100,17)" fg:x="3165" fg:w="1"/><text x="37.7234%" y="879.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.01%)</title><rect x="37.4734%" y="853" width="0.0118%" height="15" fill="rgb(245,23,12)" fg:x="3165" fg:w="1"/><text x="37.7234%" y="863.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.01%)</title><rect x="37.4734%" y="837" width="0.0118%" height="15" fill="rgb(249,55,22)" fg:x="3165" fg:w="1"/><text x="37.7234%" y="847.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.01%)</title><rect x="37.4734%" y="821" width="0.0118%" height="15" fill="rgb(207,134,9)" fg:x="3165" fg:w="1"/><text x="37.7234%" y="831.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="37.4852%" y="885" width="0.0118%" height="15" fill="rgb(218,134,0)" fg:x="3166" fg:w="1"/><text x="37.7352%" y="895.50"></text></g><g><title>rotmguard::module::autonexus::projectiles::Projectiles::player_hit::_{{closure}}::_{{closure}} (2 samples, 0.02%)</title><rect x="37.4852%" y="1093" width="0.0237%" height="15" fill="rgb(213,212,33)" fg:x="3166" fg:w="2"/><text x="37.7352%" y="1103.50"></text></g><g><title>tracing_core::event::Event::dispatch (2 samples, 0.02%)</title><rect x="37.4852%" y="1077" width="0.0237%" height="15" fill="rgb(252,106,18)" fg:x="3166" fg:w="2"/><text x="37.7352%" y="1087.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (2 samples, 0.02%)</title><rect x="37.4852%" y="1061" width="0.0237%" height="15" fill="rgb(208,126,42)" fg:x="3166" fg:w="2"/><text x="37.7352%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="37.4852%" y="1045" width="0.0237%" height="15" fill="rgb(246,175,29)" fg:x="3166" fg:w="2"/><text x="37.7352%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="37.4852%" y="1029" width="0.0237%" height="15" fill="rgb(215,13,50)" fg:x="3166" fg:w="2"/><text x="37.7352%" y="1039.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event::_{{closure}} (2 samples, 0.02%)</title><rect x="37.4852%" y="1013" width="0.0237%" height="15" fill="rgb(216,172,15)" fg:x="3166" fg:w="2"/><text x="37.7352%" y="1023.50"></text></g><g><title>tracing_subscriber::fmt::format::json::&lt;impl tracing_subscriber::fmt::format::FormatEvent&lt;S,N&gt; for tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::json::Json,T&gt;&gt;::format_event (2 samples, 0.02%)</title><rect x="37.4852%" y="997" width="0.0237%" height="15" fill="rgb(212,103,13)" fg:x="3166" fg:w="2"/><text x="37.7352%" y="1007.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::SystemTime as tracing_subscriber::fmt::time::FormatTime&gt;::format_time (2 samples, 0.02%)</title><rect x="37.4852%" y="981" width="0.0237%" height="15" fill="rgb(231,171,36)" fg:x="3166" fg:w="2"/><text x="37.7352%" y="991.50"></text></g><g><title>tracing_subscriber::fmt::format::Writer::write_fmt (2 samples, 0.02%)</title><rect x="37.4852%" y="965" width="0.0237%" height="15" fill="rgb(250,123,20)" fg:x="3166" fg:w="2"/><text x="37.7352%" y="975.50"></text></g><g><title>core::fmt::write (2 samples, 0.02%)</title><rect x="37.4852%" y="949" width="0.0237%" height="15" fill="rgb(212,53,50)" fg:x="3166" fg:w="2"/><text x="37.7352%" y="959.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.02%)</title><rect x="37.4852%" y="933" width="0.0237%" height="15" fill="rgb(243,54,12)" fg:x="3166" fg:w="2"/><text x="37.7352%" y="943.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::fmt::Display&gt;::fmt (2 samples, 0.02%)</title><rect x="37.4852%" y="917" width="0.0237%" height="15" fill="rgb(234,101,34)" fg:x="3166" fg:w="2"/><text x="37.7352%" y="927.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.02%)</title><rect x="37.4852%" y="901" width="0.0237%" height="15" fill="rgb(254,67,22)" fg:x="3166" fg:w="2"/><text x="37.7352%" y="911.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="37.4970%" y="885" width="0.0118%" height="15" fill="rgb(250,35,47)" fg:x="3167" fg:w="1"/><text x="37.7470%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="37.4970%" y="869" width="0.0118%" height="15" fill="rgb(226,126,38)" fg:x="3167" fg:w="1"/><text x="37.7470%" y="879.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="37.4970%" y="853" width="0.0118%" height="15" fill="rgb(216,138,53)" fg:x="3167" fg:w="1"/><text x="37.7470%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="37.4970%" y="837" width="0.0118%" height="15" fill="rgb(246,199,43)" fg:x="3167" fg:w="1"/><text x="37.7470%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="37.4970%" y="821" width="0.0118%" height="15" fill="rgb(232,125,11)" fg:x="3167" fg:w="1"/><text x="37.7470%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="37.4970%" y="805" width="0.0118%" height="15" fill="rgb(218,219,45)" fg:x="3167" fg:w="1"/><text x="37.7470%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="37.4970%" y="789" width="0.0118%" height="15" fill="rgb(216,102,54)" fg:x="3167" fg:w="1"/><text x="37.7470%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="37.4970%" y="773" width="0.0118%" height="15" fill="rgb(250,228,7)" fg:x="3167" fg:w="1"/><text x="37.7470%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="37.4970%" y="757" width="0.0118%" height="15" fill="rgb(226,125,25)" fg:x="3167" fg:w="1"/><text x="37.7470%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="37.4970%" y="741" width="0.0118%" height="15" fill="rgb(224,165,27)" fg:x="3167" fg:w="1"/><text x="37.7470%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="37.4970%" y="725" width="0.0118%" height="15" fill="rgb(233,86,3)" fg:x="3167" fg:w="1"/><text x="37.7470%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="37.4970%" y="709" width="0.0118%" height="15" fill="rgb(228,116,20)" fg:x="3167" fg:w="1"/><text x="37.7470%" y="719.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="37.4970%" y="693" width="0.0118%" height="15" fill="rgb(209,192,17)" fg:x="3167" fg:w="1"/><text x="37.7470%" y="703.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="37.4970%" y="677" width="0.0118%" height="15" fill="rgb(224,88,34)" fg:x="3167" fg:w="1"/><text x="37.7470%" y="687.50"></text></g><g><title>realloc (1 samples, 0.01%)</title><rect x="37.4970%" y="661" width="0.0118%" height="15" fill="rgb(233,38,6)" fg:x="3167" fg:w="1"/><text x="37.7470%" y="671.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="37.4970%" y="645" width="0.0118%" height="15" fill="rgb(212,59,30)" fg:x="3167" fg:w="1"/><text x="37.7470%" y="655.50"></text></g><g><title>&lt;rotmguard::module::autonexus::AutonexusInst as rotmguard::module::ModuleInstance&gt;::client_packet::_{{closure}} (18 samples, 0.21%)</title><rect x="37.3076%" y="1125" width="0.2131%" height="15" fill="rgb(213,80,3)" fg:x="3151" fg:w="18"/><text x="37.5576%" y="1135.50"></text></g><g><title>rotmguard::module::autonexus::projectiles::Projectiles::player_hit::_{{closure}} (3 samples, 0.04%)</title><rect x="37.4852%" y="1109" width="0.0355%" height="15" fill="rgb(251,178,7)" fg:x="3166" fg:w="3"/><text x="37.7352%" y="1119.50"></text></g><g><title>rotmguard::module::autonexus::take_damage::_{{closure}} (1 samples, 0.01%)</title><rect x="37.5089%" y="1093" width="0.0118%" height="15" fill="rgb(213,154,26)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="1103.50"></text></g><g><title>rotmguard::util::Notification::send::_{{closure}} (1 samples, 0.01%)</title><rect x="37.5089%" y="1077" width="0.0118%" height="15" fill="rgb(238,165,49)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="1087.50"></text></g><g><title>rotmguard::proxy::ProxyWriteHalf::send_client::_{{closure}} (1 samples, 0.01%)</title><rect x="37.5089%" y="1061" width="0.0118%" height="15" fill="rgb(248,91,46)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="1071.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="37.5089%" y="1045" width="0.0118%" height="15" fill="rgb(244,21,52)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="1055.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (1 samples, 0.01%)</title><rect x="37.5089%" y="1029" width="0.0118%" height="15" fill="rgb(247,122,20)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="1039.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (1 samples, 0.01%)</title><rect x="37.5089%" y="1013" width="0.0118%" height="15" fill="rgb(218,27,9)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="1023.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="37.5089%" y="997" width="0.0118%" height="15" fill="rgb(246,7,6)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="1007.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="37.5089%" y="981" width="0.0118%" height="15" fill="rgb(227,135,54)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="991.50"></text></g><g><title>__send (1 samples, 0.01%)</title><rect x="37.5089%" y="965" width="0.0118%" height="15" fill="rgb(247,14,11)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="975.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="37.5089%" y="949" width="0.0118%" height="15" fill="rgb(206,149,34)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="959.50"></text></g><g><title>do_syscall_64 (1 samples, 0.01%)</title><rect x="37.5089%" y="933" width="0.0118%" height="15" fill="rgb(227,228,4)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="943.50"></text></g><g><title>__x64_sys_sendto (1 samples, 0.01%)</title><rect x="37.5089%" y="917" width="0.0118%" height="15" fill="rgb(238,218,28)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="927.50"></text></g><g><title>__sys_sendto (1 samples, 0.01%)</title><rect x="37.5089%" y="901" width="0.0118%" height="15" fill="rgb(252,86,40)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="911.50"></text></g><g><title>tcp_sendmsg (1 samples, 0.01%)</title><rect x="37.5089%" y="885" width="0.0118%" height="15" fill="rgb(251,225,11)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="895.50"></text></g><g><title>tcp_sendmsg_locked (1 samples, 0.01%)</title><rect x="37.5089%" y="869" width="0.0118%" height="15" fill="rgb(206,46,49)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="879.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.01%)</title><rect x="37.5089%" y="853" width="0.0118%" height="15" fill="rgb(245,128,24)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="863.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.01%)</title><rect x="37.5089%" y="837" width="0.0118%" height="15" fill="rgb(219,177,34)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="847.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.01%)</title><rect x="37.5089%" y="821" width="0.0118%" height="15" fill="rgb(218,60,48)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="831.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.01%)</title><rect x="37.5089%" y="805" width="0.0118%" height="15" fill="rgb(221,11,5)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="815.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.01%)</title><rect x="37.5089%" y="789" width="0.0118%" height="15" fill="rgb(220,148,13)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="799.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.01%)</title><rect x="37.5089%" y="773" width="0.0118%" height="15" fill="rgb(210,16,3)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="783.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.01%)</title><rect x="37.5089%" y="757" width="0.0118%" height="15" fill="rgb(236,80,2)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="767.50"></text></g><g><title>do_softirq.part.0 (1 samples, 0.01%)</title><rect x="37.5089%" y="741" width="0.0118%" height="15" fill="rgb(239,129,19)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="751.50"></text></g><g><title>handle_softirqs (1 samples, 0.01%)</title><rect x="37.5089%" y="725" width="0.0118%" height="15" fill="rgb(220,106,35)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="735.50"></text></g><g><title>net_rx_action (1 samples, 0.01%)</title><rect x="37.5089%" y="709" width="0.0118%" height="15" fill="rgb(252,139,45)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="719.50"></text></g><g><title>__napi_poll (1 samples, 0.01%)</title><rect x="37.5089%" y="693" width="0.0118%" height="15" fill="rgb(229,8,36)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="703.50"></text></g><g><title>process_backlog (1 samples, 0.01%)</title><rect x="37.5089%" y="677" width="0.0118%" height="15" fill="rgb(230,126,33)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="687.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.01%)</title><rect x="37.5089%" y="661" width="0.0118%" height="15" fill="rgb(239,140,21)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="671.50"></text></g><g><title>ip_local_deliver (1 samples, 0.01%)</title><rect x="37.5089%" y="645" width="0.0118%" height="15" fill="rgb(254,104,9)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="655.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.01%)</title><rect x="37.5089%" y="629" width="0.0118%" height="15" fill="rgb(239,52,14)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="639.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.01%)</title><rect x="37.5089%" y="613" width="0.0118%" height="15" fill="rgb(208,227,44)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="623.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.01%)</title><rect x="37.5089%" y="597" width="0.0118%" height="15" fill="rgb(246,18,19)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="607.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.01%)</title><rect x="37.5089%" y="581" width="0.0118%" height="15" fill="rgb(235,228,25)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="591.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.01%)</title><rect x="37.5089%" y="565" width="0.0118%" height="15" fill="rgb(240,156,20)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="575.50"></text></g><g><title>sock_def_readable (1 samples, 0.01%)</title><rect x="37.5089%" y="549" width="0.0118%" height="15" fill="rgb(224,8,20)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="559.50"></text></g><g><title>__x86_indirect_thunk_array (1 samples, 0.01%)</title><rect x="37.5089%" y="533" width="0.0118%" height="15" fill="rgb(214,12,52)" fg:x="3168" fg:w="1"/><text x="37.7589%" y="543.50"></text></g><g><title>&lt;rotmguard::module::general::GeneralInst as rotmguard::module::ModuleInstance&gt;::client_packet::_{{closure}} (2 samples, 0.02%)</title><rect x="37.5207%" y="1125" width="0.0237%" height="15" fill="rgb(211,220,47)" fg:x="3169" fg:w="2"/><text x="37.7707%" y="1135.50"></text></g><g><title>&lt;rotmguard::module::RootModuleInstance as rotmguard::module::ModuleInstance&gt;::client_packet::_{{closure}} (26 samples, 0.31%)</title><rect x="37.2484%" y="1141" width="0.3078%" height="15" fill="rgb(250,173,5)" fg:x="3146" fg:w="26"/><text x="37.4984%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;rotmguard::module::con::ConInst as rotmguard::module::ModuleInstance&gt;::client_packet::{{closure}}&gt; (1 samples, 0.01%)</title><rect x="37.5444%" y="1125" width="0.0118%" height="15" fill="rgb(250,125,52)" fg:x="3171" fg:w="1"/><text x="37.7944%" y="1135.50"></text></g><g><title>asm_sysvec_call_function_single (1 samples, 0.01%)</title><rect x="37.5444%" y="1109" width="0.0118%" height="15" fill="rgb(209,133,18)" fg:x="3171" fg:w="1"/><text x="37.7944%" y="1119.50"></text></g><g><title>sysvec_call_function_single (1 samples, 0.01%)</title><rect x="37.5444%" y="1093" width="0.0118%" height="15" fill="rgb(216,173,22)" fg:x="3171" fg:w="1"/><text x="37.7944%" y="1103.50"></text></g><g><title>__sysvec_call_function_single (1 samples, 0.01%)</title><rect x="37.5444%" y="1077" width="0.0118%" height="15" fill="rgb(205,3,22)" fg:x="3171" fg:w="1"/><text x="37.7944%" y="1087.50"></text></g><g><title>__flush_smp_call_function_queue (1 samples, 0.01%)</title><rect x="37.5444%" y="1061" width="0.0118%" height="15" fill="rgb(248,22,20)" fg:x="3171" fg:w="1"/><text x="37.7944%" y="1071.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (1 samples, 0.01%)</title><rect x="37.6154%" y="1109" width="0.0118%" height="15" fill="rgb(233,6,29)" fg:x="3177" fg:w="1"/><text x="37.8654%" y="1119.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="37.6154%" y="1093" width="0.0118%" height="15" fill="rgb(240,22,54)" fg:x="3177" fg:w="1"/><text x="37.8654%" y="1103.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="37.6154%" y="1077" width="0.0118%" height="15" fill="rgb(231,133,32)" fg:x="3177" fg:w="1"/><text x="37.8654%" y="1087.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="37.6154%" y="1061" width="0.0118%" height="15" fill="rgb(248,193,4)" fg:x="3177" fg:w="1"/><text x="37.8654%" y="1071.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="37.6154%" y="1045" width="0.0118%" height="15" fill="rgb(211,178,46)" fg:x="3177" fg:w="1"/><text x="37.8654%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.02%)</title><rect x="37.6273%" y="1109" width="0.0237%" height="15" fill="rgb(224,5,42)" fg:x="3178" fg:w="2"/><text x="37.8773%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2 samples, 0.02%)</title><rect x="37.6273%" y="1093" width="0.0237%" height="15" fill="rgb(239,176,25)" fg:x="3178" fg:w="2"/><text x="37.8773%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.02%)</title><rect x="37.6273%" y="1077" width="0.0237%" height="15" fill="rgb(245,187,50)" fg:x="3178" fg:w="2"/><text x="37.8773%" y="1087.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="37.6273%" y="1061" width="0.0237%" height="15" fill="rgb(248,24,15)" fg:x="3178" fg:w="2"/><text x="37.8773%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.02%)</title><rect x="37.6273%" y="1045" width="0.0237%" height="15" fill="rgb(205,166,13)" fg:x="3178" fg:w="2"/><text x="37.8773%" y="1055.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.02%)</title><rect x="37.6273%" y="1029" width="0.0237%" height="15" fill="rgb(208,114,23)" fg:x="3178" fg:w="2"/><text x="37.8773%" y="1039.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.02%)</title><rect x="37.6273%" y="1013" width="0.0237%" height="15" fill="rgb(239,127,18)" fg:x="3178" fg:w="2"/><text x="37.8773%" y="1023.50"></text></g><g><title>realloc (2 samples, 0.02%)</title><rect x="37.6273%" y="997" width="0.0237%" height="15" fill="rgb(219,154,28)" fg:x="3178" fg:w="2"/><text x="37.8773%" y="1007.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="37.6273%" y="981" width="0.0237%" height="15" fill="rgb(225,157,23)" fg:x="3178" fg:w="2"/><text x="37.8773%" y="991.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="37.6273%" y="965" width="0.0237%" height="15" fill="rgb(219,8,6)" fg:x="3178" fg:w="2"/><text x="37.8773%" y="975.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="37.6391%" y="949" width="0.0118%" height="15" fill="rgb(212,47,6)" fg:x="3179" fg:w="1"/><text x="37.8891%" y="959.50"></text></g><g><title>__mprotect (1 samples, 0.01%)</title><rect x="37.6391%" y="933" width="0.0118%" height="15" fill="rgb(224,190,4)" fg:x="3179" fg:w="1"/><text x="37.8891%" y="943.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="37.6391%" y="917" width="0.0118%" height="15" fill="rgb(239,183,29)" fg:x="3179" fg:w="1"/><text x="37.8891%" y="927.50"></text></g><g><title>do_syscall_64 (1 samples, 0.01%)</title><rect x="37.6391%" y="901" width="0.0118%" height="15" fill="rgb(213,57,7)" fg:x="3179" fg:w="1"/><text x="37.8891%" y="911.50"></text></g><g><title>__x64_sys_mprotect (1 samples, 0.01%)</title><rect x="37.6391%" y="885" width="0.0118%" height="15" fill="rgb(216,148,1)" fg:x="3179" fg:w="1"/><text x="37.8891%" y="895.50"></text></g><g><title>do_mprotect_pkey (1 samples, 0.01%)</title><rect x="37.6391%" y="869" width="0.0118%" height="15" fill="rgb(236,182,29)" fg:x="3179" fg:w="1"/><text x="37.8891%" y="879.50"></text></g><g><title>mprotect_fixup (1 samples, 0.01%)</title><rect x="37.6391%" y="853" width="0.0118%" height="15" fill="rgb(244,120,48)" fg:x="3179" fg:w="1"/><text x="37.8891%" y="863.50"></text></g><g><title>perf_event_mmap (1 samples, 0.01%)</title><rect x="37.6391%" y="837" width="0.0118%" height="15" fill="rgb(206,71,34)" fg:x="3179" fg:w="1"/><text x="37.8891%" y="847.50"></text></g><g><title>perf_iterate_sb.constprop.0 (1 samples, 0.01%)</title><rect x="37.6391%" y="821" width="0.0118%" height="15" fill="rgb(242,32,6)" fg:x="3179" fg:w="1"/><text x="37.8891%" y="831.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.01%)</title><rect x="37.6391%" y="805" width="0.0118%" height="15" fill="rgb(241,35,3)" fg:x="3179" fg:w="1"/><text x="37.8891%" y="815.50"></text></g><g><title>rotmguard::module::autonexus::ground::Ground::add_tiles (2 samples, 0.02%)</title><rect x="37.6510%" y="1109" width="0.0237%" height="15" fill="rgb(222,62,19)" fg:x="3180" fg:w="2"/><text x="37.9010%" y="1119.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (2 samples, 0.02%)</title><rect x="37.6510%" y="1093" width="0.0237%" height="15" fill="rgb(223,110,41)" fg:x="3180" fg:w="2"/><text x="37.9010%" y="1103.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (2 samples, 0.02%)</title><rect x="37.6510%" y="1077" width="0.0237%" height="15" fill="rgb(208,224,4)" fg:x="3180" fg:w="2"/><text x="37.9010%" y="1087.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (2 samples, 0.02%)</title><rect x="37.6510%" y="1061" width="0.0237%" height="15" fill="rgb(241,137,19)" fg:x="3180" fg:w="2"/><text x="37.9010%" y="1071.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (2 samples, 0.02%)</title><rect x="37.6510%" y="1045" width="0.0237%" height="15" fill="rgb(244,24,17)" fg:x="3180" fg:w="2"/><text x="37.9010%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="37.6628%" y="1029" width="0.0118%" height="15" fill="rgb(245,178,49)" fg:x="3181" fg:w="1"/><text x="37.9128%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="37.6628%" y="1013" width="0.0118%" height="15" fill="rgb(219,160,38)" fg:x="3181" fg:w="1"/><text x="37.9128%" y="1023.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="37.6628%" y="997" width="0.0118%" height="15" fill="rgb(228,137,14)" fg:x="3181" fg:w="1"/><text x="37.9128%" y="1007.50"></text></g><g><title>json5::de::from_str (1 samples, 0.01%)</title><rect x="37.6746%" y="1093" width="0.0118%" height="15" fill="rgb(237,134,11)" fg:x="3182" fg:w="1"/><text x="37.9246%" y="1103.50"></text></g><g><title>json5::de::Deserializer::from_str (1 samples, 0.01%)</title><rect x="37.6746%" y="1077" width="0.0118%" height="15" fill="rgb(211,126,44)" fg:x="3182" fg:w="1"/><text x="37.9246%" y="1087.50"></text></g><g><title>&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse (1 samples, 0.01%)</title><rect x="37.6746%" y="1061" width="0.0118%" height="15" fill="rgb(226,171,33)" fg:x="3182" fg:w="1"/><text x="37.9246%" y="1071.50"></text></g><g><title>pest::parser_state::state (1 samples, 0.01%)</title><rect x="37.6746%" y="1045" width="0.0118%" height="15" fill="rgb(253,99,13)" fg:x="3182" fg:w="1"/><text x="37.9246%" y="1055.50"></text></g><g><title>&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::_{{closure}} (1 samples, 0.01%)</title><rect x="37.6746%" y="1029" width="0.0118%" height="15" fill="rgb(244,48,7)" fg:x="3182" fg:w="1"/><text x="37.9246%" y="1039.50"></text></g><g><title>&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::text (1 samples, 0.01%)</title><rect x="37.6746%" y="1013" width="0.0118%" height="15" fill="rgb(244,217,54)" fg:x="3182" fg:w="1"/><text x="37.9246%" y="1023.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (1 samples, 0.01%)</title><rect x="37.6746%" y="997" width="0.0118%" height="15" fill="rgb(224,15,18)" fg:x="3182" fg:w="1"/><text x="37.9246%" y="1007.50"></text></g><g><title>&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::text::_{{closure}} (1 samples, 0.01%)</title><rect x="37.6746%" y="981" width="0.0118%" height="15" fill="rgb(244,99,12)" fg:x="3182" fg:w="1"/><text x="37.9246%" y="991.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.01%)</title><rect x="37.6746%" y="965" width="0.0118%" height="15" fill="rgb(233,226,8)" fg:x="3182" fg:w="1"/><text x="37.9246%" y="975.50"></text></g><g><title>&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::text::_{{closure}}::_{{closure}} (1 samples, 0.01%)</title><rect x="37.6746%" y="949" width="0.0118%" height="15" fill="rgb(229,211,3)" fg:x="3182" fg:w="1"/><text x="37.9246%" y="959.50"></text></g><g><title>&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::value (1 samples, 0.01%)</title><rect x="37.6746%" y="933" width="0.0118%" height="15" fill="rgb(216,140,21)" fg:x="3182" fg:w="1"/><text x="37.9246%" y="943.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (1 samples, 0.01%)</title><rect x="37.6746%" y="917" width="0.0118%" height="15" fill="rgb(234,122,30)" fg:x="3182" fg:w="1"/><text x="37.9246%" y="927.50"></text></g><g><title>&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::value::_{{closure}} (1 samples, 0.01%)</title><rect x="37.6746%" y="901" width="0.0118%" height="15" fill="rgb(236,25,46)" fg:x="3182" fg:w="1"/><text x="37.9246%" y="911.50"></text></g><g><title>&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::number (1 samples, 0.01%)</title><rect x="37.6746%" y="885" width="0.0118%" height="15" fill="rgb(217,52,54)" fg:x="3182" fg:w="1"/><text x="37.9246%" y="895.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::rule (1 samples, 0.01%)</title><rect x="37.6746%" y="869" width="0.0118%" height="15" fill="rgb(222,29,26)" fg:x="3182" fg:w="1"/><text x="37.9246%" y="879.50"></text></g><g><title>&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::number::_{{closure}} (1 samples, 0.01%)</title><rect x="37.6746%" y="853" width="0.0118%" height="15" fill="rgb(216,177,29)" fg:x="3182" fg:w="1"/><text x="37.9246%" y="863.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::atomic (1 samples, 0.01%)</title><rect x="37.6746%" y="837" width="0.0118%" height="15" fill="rgb(247,136,51)" fg:x="3182" fg:w="1"/><text x="37.9246%" y="847.50"></text></g><g><title>&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::number::_{{closure}}::_{{closure}} (1 samples, 0.01%)</title><rect x="37.6746%" y="821" width="0.0118%" height="15" fill="rgb(231,47,47)" fg:x="3182" fg:w="1"/><text x="37.9246%" y="831.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (1 samples, 0.01%)</title><rect x="37.6746%" y="805" width="0.0118%" height="15" fill="rgb(211,192,36)" fg:x="3182" fg:w="1"/><text x="37.9246%" y="815.50"></text></g><g><title>&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::number::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.01%)</title><rect x="37.6746%" y="789" width="0.0118%" height="15" fill="rgb(229,156,32)" fg:x="3182" fg:w="1"/><text x="37.9246%" y="799.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.01%)</title><rect x="37.6746%" y="773" width="0.0118%" height="15" fill="rgb(248,213,20)" fg:x="3182" fg:w="1"/><text x="37.9246%" y="783.50"></text></g><g><title>&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::number::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.01%)</title><rect x="37.6746%" y="757" width="0.0118%" height="15" fill="rgb(217,64,7)" fg:x="3182" fg:w="1"/><text x="37.9246%" y="767.50"></text></g><g><title>&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::numeric_literal (1 samples, 0.01%)</title><rect x="37.6746%" y="741" width="0.0118%" height="15" fill="rgb(232,142,8)" fg:x="3182" fg:w="1"/><text x="37.9246%" y="751.50"></text></g><g><title>&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::hex_integer_literal (1 samples, 0.01%)</title><rect x="37.6746%" y="725" width="0.0118%" height="15" fill="rgb(224,92,44)" fg:x="3182" fg:w="1"/><text x="37.9246%" y="735.50"></text></g><g><title>&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::number::_{{closure}}::_{{closure}} (1 samples, 0.01%)</title><rect x="37.6746%" y="709" width="0.0118%" height="15" fill="rgb(214,169,17)" fg:x="3182" fg:w="1"/><text x="37.9246%" y="719.50"></text></g><g><title>pest::parser_state::ParserState&lt;R&gt;::sequence (1 samples, 0.01%)</title><rect x="37.6746%" y="693" width="0.0118%" height="15" fill="rgb(210,59,37)" fg:x="3182" fg:w="1"/><text x="37.9246%" y="703.50"></text></g><g><title>&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::number::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.01%)</title><rect x="37.6746%" y="677" width="0.0118%" height="15" fill="rgb(214,116,48)" fg:x="3182" fg:w="1"/><text x="37.9246%" y="687.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.01%)</title><rect x="37.6746%" y="661" width="0.0118%" height="15" fill="rgb(244,191,6)" fg:x="3182" fg:w="1"/><text x="37.9246%" y="671.50"></text></g><g><title>&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::number::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.01%)</title><rect x="37.6746%" y="645" width="0.0118%" height="15" fill="rgb(241,50,52)" fg:x="3182" fg:w="1"/><text x="37.9246%" y="655.50"></text></g><g><title>&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::numeric_literal (1 samples, 0.01%)</title><rect x="37.6746%" y="629" width="0.0118%" height="15" fill="rgb(236,75,39)" fg:x="3182" fg:w="1"/><text x="37.9246%" y="639.50"></text></g><g><title>&lt;json5::de::Parser as pest::parser::Parser&lt;json5::de::Rule&gt;&gt;::parse::rules::visible::hex_integer_literal (1 samples, 0.01%)</title><rect x="37.6746%" y="613" width="0.0118%" height="15" fill="rgb(236,99,0)" fg:x="3182" fg:w="1"/><text x="37.9246%" y="623.50"></text></g><g><title>rotmguard::module::autonexus::heals::Heals::heal (2 samples, 0.02%)</title><rect x="37.6746%" y="1109" width="0.0237%" height="15" fill="rgb(207,202,15)" fg:x="3182" fg:w="2"/><text x="37.9246%" y="1119.50"></text></g><g><title>rotmguard::module::autonexus::heals::Heals::heal::_{{closure}} (1 samples, 0.01%)</title><rect x="37.6865%" y="1093" width="0.0118%" height="15" fill="rgb(233,207,14)" fg:x="3183" fg:w="1"/><text x="37.9365%" y="1103.50"></text></g><g><title>tracing_core::event::Event::dispatch (1 samples, 0.01%)</title><rect x="37.6865%" y="1077" width="0.0118%" height="15" fill="rgb(226,27,51)" fg:x="3183" fg:w="1"/><text x="37.9365%" y="1087.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (1 samples, 0.01%)</title><rect x="37.6865%" y="1061" width="0.0118%" height="15" fill="rgb(206,104,42)" fg:x="3183" fg:w="1"/><text x="37.9365%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="37.6865%" y="1045" width="0.0118%" height="15" fill="rgb(212,225,4)" fg:x="3183" fg:w="1"/><text x="37.9365%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="37.6865%" y="1029" width="0.0118%" height="15" fill="rgb(233,96,42)" fg:x="3183" fg:w="1"/><text x="37.9365%" y="1039.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event::_{{closure}} (1 samples, 0.01%)</title><rect x="37.6865%" y="1013" width="0.0118%" height="15" fill="rgb(229,21,32)" fg:x="3183" fg:w="1"/><text x="37.9365%" y="1023.50"></text></g><g><title>tracing_subscriber::fmt::format::json::&lt;impl tracing_subscriber::fmt::format::FormatEvent&lt;S,N&gt; for tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::json::Json,T&gt;&gt;::format_event (1 samples, 0.01%)</title><rect x="37.6865%" y="997" width="0.0118%" height="15" fill="rgb(226,216,24)" fg:x="3183" fg:w="1"/><text x="37.9365%" y="1007.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::SystemTime as tracing_subscriber::fmt::time::FormatTime&gt;::format_time (1 samples, 0.01%)</title><rect x="37.6865%" y="981" width="0.0118%" height="15" fill="rgb(221,163,17)" fg:x="3183" fg:w="1"/><text x="37.9365%" y="991.50"></text></g><g><title>tracing_subscriber::fmt::format::Writer::write_fmt (1 samples, 0.01%)</title><rect x="37.6865%" y="965" width="0.0118%" height="15" fill="rgb(216,216,42)" fg:x="3183" fg:w="1"/><text x="37.9365%" y="975.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="37.6865%" y="949" width="0.0118%" height="15" fill="rgb(240,118,7)" fg:x="3183" fg:w="1"/><text x="37.9365%" y="959.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.01%)</title><rect x="37.6865%" y="933" width="0.0118%" height="15" fill="rgb(221,67,37)" fg:x="3183" fg:w="1"/><text x="37.9365%" y="943.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::fmt::Display&gt;::fmt (1 samples, 0.01%)</title><rect x="37.6865%" y="917" width="0.0118%" height="15" fill="rgb(241,32,44)" fg:x="3183" fg:w="1"/><text x="37.9365%" y="927.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.01%)</title><rect x="37.6865%" y="901" width="0.0118%" height="15" fill="rgb(235,204,43)" fg:x="3183" fg:w="1"/><text x="37.9365%" y="911.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="37.6865%" y="885" width="0.0118%" height="15" fill="rgb(213,116,10)" fg:x="3183" fg:w="1"/><text x="37.9365%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="37.6865%" y="869" width="0.0118%" height="15" fill="rgb(239,15,48)" fg:x="3183" fg:w="1"/><text x="37.9365%" y="879.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="37.6865%" y="853" width="0.0118%" height="15" fill="rgb(207,123,36)" fg:x="3183" fg:w="1"/><text x="37.9365%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="37.6865%" y="837" width="0.0118%" height="15" fill="rgb(209,103,30)" fg:x="3183" fg:w="1"/><text x="37.9365%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="37.6865%" y="821" width="0.0118%" height="15" fill="rgb(238,100,19)" fg:x="3183" fg:w="1"/><text x="37.9365%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="37.6865%" y="805" width="0.0118%" height="15" fill="rgb(244,30,14)" fg:x="3183" fg:w="1"/><text x="37.9365%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="37.6865%" y="789" width="0.0118%" height="15" fill="rgb(249,174,6)" fg:x="3183" fg:w="1"/><text x="37.9365%" y="799.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="37.6865%" y="773" width="0.0118%" height="15" fill="rgb(235,213,41)" fg:x="3183" fg:w="1"/><text x="37.9365%" y="783.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="37.6983%" y="997" width="0.0118%" height="15" fill="rgb(213,118,6)" fg:x="3184" fg:w="1"/><text x="37.9483%" y="1007.50"></text></g><g><title>&lt;rotmguard::logging::LogWriter as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="37.6983%" y="981" width="0.0118%" height="15" fill="rgb(235,44,51)" fg:x="3184" fg:w="1"/><text x="37.9483%" y="991.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::collections::vec_deque::VecDeque&lt;u8,A&gt;&gt;::write (1 samples, 0.01%)</title><rect x="37.6983%" y="965" width="0.0118%" height="15" fill="rgb(217,9,53)" fg:x="3184" fg:w="1"/><text x="37.9483%" y="975.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="37.6983%" y="949" width="0.0118%" height="15" fill="rgb(237,172,34)" fg:x="3184" fg:w="1"/><text x="37.9483%" y="959.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as alloc::collections::vec_deque::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="37.6983%" y="933" width="0.0118%" height="15" fill="rgb(206,206,11)" fg:x="3184" fg:w="1"/><text x="37.9483%" y="943.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::copy_slice (1 samples, 0.01%)</title><rect x="37.6983%" y="917" width="0.0118%" height="15" fill="rgb(214,149,29)" fg:x="3184" fg:w="1"/><text x="37.9483%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="37.6983%" y="901" width="0.0118%" height="15" fill="rgb(208,123,3)" fg:x="3184" fg:w="1"/><text x="37.9483%" y="911.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="37.6983%" y="885" width="0.0118%" height="15" fill="rgb(229,126,4)" fg:x="3184" fg:w="1"/><text x="37.9483%" y="895.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="37.6983%" y="869" width="0.0118%" height="15" fill="rgb(222,92,36)" fg:x="3184" fg:w="1"/><text x="37.9483%" y="879.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="37.6983%" y="853" width="0.0118%" height="15" fill="rgb(216,39,41)" fg:x="3184" fg:w="1"/><text x="37.9483%" y="863.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.01%)</title><rect x="37.6983%" y="837" width="0.0118%" height="15" fill="rgb(253,127,28)" fg:x="3184" fg:w="1"/><text x="37.9483%" y="847.50"></text></g><g><title>handle_softirqs (1 samples, 0.01%)</title><rect x="37.6983%" y="821" width="0.0118%" height="15" fill="rgb(249,152,51)" fg:x="3184" fg:w="1"/><text x="37.9483%" y="831.50"></text></g><g><title>net_rx_action (1 samples, 0.01%)</title><rect x="37.6983%" y="805" width="0.0118%" height="15" fill="rgb(209,123,42)" fg:x="3184" fg:w="1"/><text x="37.9483%" y="815.50"></text></g><g><title>__napi_poll (1 samples, 0.01%)</title><rect x="37.6983%" y="789" width="0.0118%" height="15" fill="rgb(241,118,22)" fg:x="3184" fg:w="1"/><text x="37.9483%" y="799.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="37.6983%" y="773" width="0.0118%" height="15" fill="rgb(208,25,7)" fg:x="3184" fg:w="1"/><text x="37.9483%" y="783.50"></text></g><g><title>napi_complete_done (1 samples, 0.01%)</title><rect x="37.6983%" y="757" width="0.0118%" height="15" fill="rgb(243,144,39)" fg:x="3184" fg:w="1"/><text x="37.9483%" y="767.50"></text></g><g><title>netif_receive_skb_list_internal (1 samples, 0.01%)</title><rect x="37.6983%" y="741" width="0.0118%" height="15" fill="rgb(250,50,5)" fg:x="3184" fg:w="1"/><text x="37.9483%" y="751.50"></text></g><g><title>__netif_receive_skb_list_core (1 samples, 0.01%)</title><rect x="37.6983%" y="725" width="0.0118%" height="15" fill="rgb(207,67,11)" fg:x="3184" fg:w="1"/><text x="37.9483%" y="735.50"></text></g><g><title>ip_list_rcv (1 samples, 0.01%)</title><rect x="37.6983%" y="709" width="0.0118%" height="15" fill="rgb(245,204,40)" fg:x="3184" fg:w="1"/><text x="37.9483%" y="719.50"></text></g><g><title>ip_sublist_rcv (1 samples, 0.01%)</title><rect x="37.6983%" y="693" width="0.0118%" height="15" fill="rgb(238,228,24)" fg:x="3184" fg:w="1"/><text x="37.9483%" y="703.50"></text></g><g><title>nf_hook_slow_list (1 samples, 0.01%)</title><rect x="37.6983%" y="677" width="0.0118%" height="15" fill="rgb(217,116,22)" fg:x="3184" fg:w="1"/><text x="37.9483%" y="687.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::end (1 samples, 0.01%)</title><rect x="37.7102%" y="981" width="0.0118%" height="15" fill="rgb(234,98,12)" fg:x="3185" fg:w="1"/><text x="37.9602%" y="991.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::SystemTime as tracing_subscriber::fmt::time::FormatTime&gt;::format_time (3 samples, 0.04%)</title><rect x="37.7220%" y="965" width="0.0355%" height="15" fill="rgb(242,170,50)" fg:x="3186" fg:w="3"/><text x="37.9720%" y="975.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::SystemTime as tracing_subscriber::fmt::time::FormatTime&gt;::format_time (4 samples, 0.05%)</title><rect x="37.7220%" y="981" width="0.0474%" height="15" fill="rgb(235,7,5)" fg:x="3186" fg:w="4"/><text x="37.9720%" y="991.50"></text></g><g><title>tracing_subscriber::fmt::format::Writer::write_fmt (1 samples, 0.01%)</title><rect x="37.7575%" y="965" width="0.0118%" height="15" fill="rgb(241,114,28)" fg:x="3189" fg:w="1"/><text x="38.0075%" y="975.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="37.7575%" y="949" width="0.0118%" height="15" fill="rgb(246,112,42)" fg:x="3189" fg:w="1"/><text x="38.0075%" y="959.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.01%)</title><rect x="37.7575%" y="933" width="0.0118%" height="15" fill="rgb(248,228,14)" fg:x="3189" fg:w="1"/><text x="38.0075%" y="943.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::fmt::Display&gt;::fmt (1 samples, 0.01%)</title><rect x="37.7575%" y="917" width="0.0118%" height="15" fill="rgb(208,133,18)" fg:x="3189" fg:w="1"/><text x="38.0075%" y="927.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.01%)</title><rect x="37.7575%" y="901" width="0.0118%" height="15" fill="rgb(207,35,49)" fg:x="3189" fg:w="1"/><text x="38.0075%" y="911.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="37.7575%" y="885" width="0.0118%" height="15" fill="rgb(205,68,36)" fg:x="3189" fg:w="1"/><text x="38.0075%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="37.7575%" y="869" width="0.0118%" height="15" fill="rgb(245,62,40)" fg:x="3189" fg:w="1"/><text x="38.0075%" y="879.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="37.7575%" y="853" width="0.0118%" height="15" fill="rgb(228,27,24)" fg:x="3189" fg:w="1"/><text x="38.0075%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="37.7575%" y="837" width="0.0118%" height="15" fill="rgb(253,19,12)" fg:x="3189" fg:w="1"/><text x="38.0075%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="37.7575%" y="821" width="0.0118%" height="15" fill="rgb(232,28,20)" fg:x="3189" fg:w="1"/><text x="38.0075%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="37.7575%" y="805" width="0.0118%" height="15" fill="rgb(218,35,51)" fg:x="3189" fg:w="1"/><text x="38.0075%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="37.7575%" y="789" width="0.0118%" height="15" fill="rgb(212,90,40)" fg:x="3189" fg:w="1"/><text x="38.0075%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="37.7575%" y="773" width="0.0118%" height="15" fill="rgb(220,172,12)" fg:x="3189" fg:w="1"/><text x="38.0075%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="37.7575%" y="757" width="0.0118%" height="15" fill="rgb(226,159,20)" fg:x="3189" fg:w="1"/><text x="38.0075%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="37.7575%" y="741" width="0.0118%" height="15" fill="rgb(234,205,16)" fg:x="3189" fg:w="1"/><text x="38.0075%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="37.7575%" y="725" width="0.0118%" height="15" fill="rgb(207,9,39)" fg:x="3189" fg:w="1"/><text x="38.0075%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="37.7575%" y="709" width="0.0118%" height="15" fill="rgb(249,143,15)" fg:x="3189" fg:w="1"/><text x="38.0075%" y="719.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="37.7575%" y="693" width="0.0118%" height="15" fill="rgb(253,133,29)" fg:x="3189" fg:w="1"/><text x="38.0075%" y="703.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="37.7575%" y="677" width="0.0118%" height="15" fill="rgb(221,187,0)" fg:x="3189" fg:w="1"/><text x="38.0075%" y="687.50"></text></g><g><title>realloc (1 samples, 0.01%)</title><rect x="37.7575%" y="661" width="0.0118%" height="15" fill="rgb(205,204,26)" fg:x="3189" fg:w="1"/><text x="38.0075%" y="671.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (1 samples, 0.01%)</title><rect x="37.7575%" y="645" width="0.0118%" height="15" fill="rgb(224,68,54)" fg:x="3189" fg:w="1"/><text x="38.0075%" y="655.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.01%)</title><rect x="37.7812%" y="965" width="0.0118%" height="15" fill="rgb(209,67,4)" fg:x="3191" fg:w="1"/><text x="38.0312%" y="975.50"></text></g><g><title>serde_json::ser::Formatter::begin_object (1 samples, 0.01%)</title><rect x="37.7812%" y="949" width="0.0118%" height="15" fill="rgb(228,229,18)" fg:x="3191" fg:w="1"/><text x="38.0312%" y="959.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="37.7812%" y="933" width="0.0118%" height="15" fill="rgb(231,89,13)" fg:x="3191" fg:w="1"/><text x="38.0312%" y="943.50"></text></g><g><title>&lt;tracing_subscriber::fmt::writer::WriteAdaptor as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="37.7812%" y="917" width="0.0118%" height="15" fill="rgb(210,182,18)" fg:x="3191" fg:w="1"/><text x="38.0312%" y="927.50"></text></g><g><title>&lt;tracing_subscriber::fmt::writer::WriteAdaptor as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="37.7812%" y="901" width="0.0118%" height="15" fill="rgb(240,105,2)" fg:x="3191" fg:w="1"/><text x="38.0312%" y="911.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::json::SerializableContext&lt;Span,N&gt; as serde::ser::Serialize&gt;::serialize (1 samples, 0.01%)</title><rect x="37.7930%" y="965" width="0.0118%" height="15" fill="rgb(207,170,50)" fg:x="3192" fg:w="1"/><text x="38.0430%" y="975.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (1 samples, 0.01%)</title><rect x="37.7930%" y="949" width="0.0118%" height="15" fill="rgb(232,133,24)" fg:x="3192" fg:w="1"/><text x="38.0430%" y="959.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::json::SerializableSpan&lt;Span,N&gt; as serde::ser::Serialize&gt;::serialize (1 samples, 0.01%)</title><rect x="37.7930%" y="933" width="0.0118%" height="15" fill="rgb(235,166,27)" fg:x="3192" fg:w="1"/><text x="38.0430%" y="943.50"></text></g><g><title>serde_json::de::from_str (1 samples, 0.01%)</title><rect x="37.7930%" y="917" width="0.0118%" height="15" fill="rgb(209,19,13)" fg:x="3192" fg:w="1"/><text x="38.0430%" y="927.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.01%)</title><rect x="37.7930%" y="901" width="0.0118%" height="15" fill="rgb(226,79,39)" fg:x="3192" fg:w="1"/><text x="38.0430%" y="911.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.01%)</title><rect x="37.7930%" y="885" width="0.0118%" height="15" fill="rgb(222,163,10)" fg:x="3192" fg:w="1"/><text x="38.0430%" y="895.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.01%)</title><rect x="37.7930%" y="869" width="0.0118%" height="15" fill="rgb(214,44,19)" fg:x="3192" fg:w="1"/><text x="38.0430%" y="879.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.01%)</title><rect x="37.7930%" y="853" width="0.0118%" height="15" fill="rgb(210,217,13)" fg:x="3192" fg:w="1"/><text x="38.0430%" y="863.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.01%)</title><rect x="37.7930%" y="837" width="0.0118%" height="15" fill="rgb(237,61,54)" fg:x="3192" fg:w="1"/><text x="38.0430%" y="847.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.01%)</title><rect x="37.8049%" y="949" width="0.0118%" height="15" fill="rgb(226,184,24)" fg:x="3193" fg:w="1"/><text x="38.0549%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,serde_json::value::Value)&gt; (1 samples, 0.01%)</title><rect x="37.8167%" y="949" width="0.0118%" height="15" fill="rgb(223,226,4)" fg:x="3194" fg:w="1"/><text x="38.0667%" y="959.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.01%)</title><rect x="37.8167%" y="933" width="0.0118%" height="15" fill="rgb(210,26,41)" fg:x="3194" fg:w="1"/><text x="38.0667%" y="943.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.01%)</title><rect x="37.8167%" y="917" width="0.0118%" height="15" fill="rgb(220,221,6)" fg:x="3194" fg:w="1"/><text x="38.0667%" y="927.50"></text></g><g><title>serde_json::ser::Formatter::begin_object_value (1 samples, 0.01%)</title><rect x="37.8167%" y="901" width="0.0118%" height="15" fill="rgb(225,89,49)" fg:x="3194" fg:w="1"/><text x="38.0667%" y="911.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="37.8167%" y="885" width="0.0118%" height="15" fill="rgb(218,70,45)" fg:x="3194" fg:w="1"/><text x="38.0667%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::IntoIter&gt; (1 samples, 0.01%)</title><rect x="37.8286%" y="949" width="0.0118%" height="15" fill="rgb(238,166,21)" fg:x="3195" fg:w="1"/><text x="38.0786%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.01%)</title><rect x="37.8286%" y="933" width="0.0118%" height="15" fill="rgb(224,141,44)" fg:x="3195" fg:w="1"/><text x="38.0786%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.01%)</title><rect x="37.8286%" y="917" width="0.0118%" height="15" fill="rgb(230,12,49)" fg:x="3195" fg:w="1"/><text x="38.0786%" y="927.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.01%)</title><rect x="37.8404%" y="869" width="0.0118%" height="15" fill="rgb(212,174,12)" fg:x="3196" fg:w="1"/><text x="38.0904%" y="879.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.01%)</title><rect x="37.8404%" y="853" width="0.0118%" height="15" fill="rgb(246,67,9)" fg:x="3196" fg:w="1"/><text x="38.0904%" y="863.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.01%)</title><rect x="37.8404%" y="837" width="0.0118%" height="15" fill="rgb(239,35,23)" fg:x="3196" fg:w="1"/><text x="38.0904%" y="847.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.01%)</title><rect x="37.8404%" y="821" width="0.0118%" height="15" fill="rgb(211,167,0)" fg:x="3196" fg:w="1"/><text x="38.0904%" y="831.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.01%)</title><rect x="37.8404%" y="805" width="0.0118%" height="15" fill="rgb(225,119,45)" fg:x="3196" fg:w="1"/><text x="38.0904%" y="815.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1 samples, 0.01%)</title><rect x="37.8404%" y="789" width="0.0118%" height="15" fill="rgb(210,162,6)" fg:x="3196" fg:w="1"/><text x="38.0904%" y="799.50"></text></g><g><title>asm_sysvec_call_function_single (1 samples, 0.01%)</title><rect x="37.8404%" y="773" width="0.0118%" height="15" fill="rgb(208,118,35)" fg:x="3196" fg:w="1"/><text x="38.0904%" y="783.50"></text></g><g><title>sysvec_call_function_single (1 samples, 0.01%)</title><rect x="37.8404%" y="757" width="0.0118%" height="15" fill="rgb(239,4,53)" fg:x="3196" fg:w="1"/><text x="38.0904%" y="767.50"></text></g><g><title>__sysvec_call_function_single (1 samples, 0.01%)</title><rect x="37.8404%" y="741" width="0.0118%" height="15" fill="rgb(213,130,21)" fg:x="3196" fg:w="1"/><text x="38.0904%" y="751.50"></text></g><g><title>__flush_smp_call_function_queue (1 samples, 0.01%)</title><rect x="37.8404%" y="725" width="0.0118%" height="15" fill="rgb(235,148,0)" fg:x="3196" fg:w="1"/><text x="38.0904%" y="735.50"></text></g><g><title>sched_ttwu_pending (1 samples, 0.01%)</title><rect x="37.8404%" y="709" width="0.0118%" height="15" fill="rgb(244,224,18)" fg:x="3196" fg:w="1"/><text x="38.0904%" y="719.50"></text></g><g><title>ttwu_do_activate (1 samples, 0.01%)</title><rect x="37.8404%" y="693" width="0.0118%" height="15" fill="rgb(211,214,4)" fg:x="3196" fg:w="1"/><text x="38.0904%" y="703.50"></text></g><g><title>enqueue_task (1 samples, 0.01%)</title><rect x="37.8404%" y="677" width="0.0118%" height="15" fill="rgb(206,119,25)" fg:x="3196" fg:w="1"/><text x="38.0904%" y="687.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.01%)</title><rect x="37.8404%" y="661" width="0.0118%" height="15" fill="rgb(243,93,47)" fg:x="3196" fg:w="1"/><text x="38.0904%" y="671.50"></text></g><g><title>update_load_avg (1 samples, 0.01%)</title><rect x="37.8404%" y="645" width="0.0118%" height="15" fill="rgb(224,194,6)" fg:x="3196" fg:w="1"/><text x="38.0904%" y="655.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.01%)</title><rect x="37.8404%" y="629" width="0.0118%" height="15" fill="rgb(243,229,6)" fg:x="3196" fg:w="1"/><text x="38.0904%" y="639.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::json::SerializableSpan&lt;Span,N&gt; as serde::ser::Serialize&gt;::serialize (5 samples, 0.06%)</title><rect x="37.8049%" y="965" width="0.0592%" height="15" fill="rgb(207,23,50)" fg:x="3193" fg:w="5"/><text x="38.0549%" y="975.50"></text></g><g><title>serde_json::de::from_str (2 samples, 0.02%)</title><rect x="37.8404%" y="949" width="0.0237%" height="15" fill="rgb(253,192,32)" fg:x="3196" fg:w="2"/><text x="38.0904%" y="959.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.02%)</title><rect x="37.8404%" y="933" width="0.0237%" height="15" fill="rgb(213,21,6)" fg:x="3196" fg:w="2"/><text x="38.0904%" y="943.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.02%)</title><rect x="37.8404%" y="917" width="0.0237%" height="15" fill="rgb(243,151,13)" fg:x="3196" fg:w="2"/><text x="38.0904%" y="927.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.02%)</title><rect x="37.8404%" y="901" width="0.0237%" height="15" fill="rgb(233,165,41)" fg:x="3196" fg:w="2"/><text x="38.0904%" y="911.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.02%)</title><rect x="37.8404%" y="885" width="0.0237%" height="15" fill="rgb(246,176,45)" fg:x="3196" fg:w="2"/><text x="38.0904%" y="895.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1 samples, 0.01%)</title><rect x="37.8522%" y="869" width="0.0118%" height="15" fill="rgb(217,170,52)" fg:x="3197" fg:w="1"/><text x="38.1022%" y="879.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.01%)</title><rect x="37.8522%" y="853" width="0.0118%" height="15" fill="rgb(214,203,54)" fg:x="3197" fg:w="1"/><text x="38.1022%" y="863.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.01%)</title><rect x="37.8522%" y="837" width="0.0118%" height="15" fill="rgb(248,215,49)" fg:x="3197" fg:w="1"/><text x="38.1022%" y="847.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (1 samples, 0.01%)</title><rect x="37.8522%" y="821" width="0.0118%" height="15" fill="rgb(208,46,10)" fg:x="3197" fg:w="1"/><text x="38.1022%" y="831.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.01%)</title><rect x="37.8641%" y="933" width="0.0118%" height="15" fill="rgb(254,5,31)" fg:x="3198" fg:w="1"/><text x="38.1141%" y="943.50"></text></g><g><title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.01%)</title><rect x="37.8641%" y="917" width="0.0118%" height="15" fill="rgb(222,104,33)" fg:x="3198" fg:w="1"/><text x="38.1141%" y="927.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.01%)</title><rect x="37.8641%" y="901" width="0.0118%" height="15" fill="rgb(248,49,16)" fg:x="3198" fg:w="1"/><text x="38.1141%" y="911.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.01%)</title><rect x="37.8641%" y="885" width="0.0118%" height="15" fill="rgb(232,198,41)" fg:x="3198" fg:w="1"/><text x="38.1141%" y="895.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (1 samples, 0.01%)</title><rect x="37.8641%" y="869" width="0.0118%" height="15" fill="rgb(214,125,3)" fg:x="3198" fg:w="1"/><text x="38.1141%" y="879.50"></text></g><g><title>serde_json::ser::Formatter::write_string_fragment (1 samples, 0.01%)</title><rect x="37.8641%" y="853" width="0.0118%" height="15" fill="rgb(229,220,28)" fg:x="3198" fg:w="1"/><text x="38.1141%" y="863.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="37.8641%" y="837" width="0.0118%" height="15" fill="rgb(222,64,37)" fg:x="3198" fg:w="1"/><text x="38.1141%" y="847.50"></text></g><g><title>&lt;tracing_subscriber::fmt::writer::WriteAdaptor as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="37.8641%" y="821" width="0.0118%" height="15" fill="rgb(249,184,13)" fg:x="3198" fg:w="1"/><text x="38.1141%" y="831.50"></text></g><g><title>[rotmguard] (1 samples, 0.01%)</title><rect x="37.8641%" y="805" width="0.0118%" height="15" fill="rgb(252,176,6)" fg:x="3198" fg:w="1"/><text x="38.1141%" y="815.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="37.8641%" y="789" width="0.0118%" height="15" fill="rgb(228,153,7)" fg:x="3198" fg:w="1"/><text x="38.1141%" y="799.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (2 samples, 0.02%)</title><rect x="37.8641%" y="949" width="0.0237%" height="15" fill="rgb(242,193,5)" fg:x="3198" fg:w="2"/><text x="38.1141%" y="959.50"></text></g><g><title>serde_json::ser::Formatter::begin_object_key (1 samples, 0.01%)</title><rect x="37.8759%" y="933" width="0.0118%" height="15" fill="rgb(232,140,9)" fg:x="3199" fg:w="1"/><text x="38.1259%" y="943.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="37.8759%" y="917" width="0.0118%" height="15" fill="rgb(213,222,16)" fg:x="3199" fg:w="1"/><text x="38.1259%" y="927.50"></text></g><g><title>&lt;tracing_serde::SerdeMapVisitor&lt;S&gt; as tracing_core::field::Visit&gt;::record_debug (1 samples, 0.01%)</title><rect x="37.8878%" y="869" width="0.0118%" height="15" fill="rgb(222,75,50)" fg:x="3200" fg:w="1"/><text x="38.1378%" y="879.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.01%)</title><rect x="37.8878%" y="853" width="0.0118%" height="15" fill="rgb(205,180,2)" fg:x="3200" fg:w="1"/><text x="38.1378%" y="863.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.01%)</title><rect x="37.8878%" y="837" width="0.0118%" height="15" fill="rgb(216,34,7)" fg:x="3200" fg:w="1"/><text x="38.1378%" y="847.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for core::fmt::Arguments&gt;::serialize (1 samples, 0.01%)</title><rect x="37.8878%" y="821" width="0.0118%" height="15" fill="rgb(253,16,32)" fg:x="3200" fg:w="1"/><text x="38.1378%" y="831.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::collect_str (1 samples, 0.01%)</title><rect x="37.8878%" y="805" width="0.0118%" height="15" fill="rgb(208,97,28)" fg:x="3200" fg:w="1"/><text x="38.1378%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.01%)</title><rect x="37.8878%" y="789" width="0.0118%" height="15" fill="rgb(225,92,11)" fg:x="3200" fg:w="1"/><text x="38.1378%" y="799.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (1 samples, 0.01%)</title><rect x="37.8878%" y="773" width="0.0118%" height="15" fill="rgb(243,38,12)" fg:x="3200" fg:w="1"/><text x="38.1378%" y="783.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="37.8878%" y="757" width="0.0118%" height="15" fill="rgb(208,139,16)" fg:x="3200" fg:w="1"/><text x="38.1378%" y="767.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.01%)</title><rect x="37.8878%" y="741" width="0.0118%" height="15" fill="rgb(227,24,9)" fg:x="3200" fg:w="1"/><text x="38.1378%" y="751.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="37.8878%" y="725" width="0.0118%" height="15" fill="rgb(206,62,11)" fg:x="3200" fg:w="1"/><text x="38.1378%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.01%)</title><rect x="37.8878%" y="709" width="0.0118%" height="15" fill="rgb(228,134,27)" fg:x="3200" fg:w="1"/><text x="38.1378%" y="719.50"></text></g><g><title>tracing_core::field::Field::name (1 samples, 0.01%)</title><rect x="37.8878%" y="693" width="0.0118%" height="15" fill="rgb(205,55,33)" fg:x="3200" fg:w="1"/><text x="38.1378%" y="703.50"></text></g><g><title>&lt;tracing_serde::SerdeMapVisitor&lt;S&gt; as tracing_core::field::Visit&gt;::record_f64 (1 samples, 0.01%)</title><rect x="37.8996%" y="869" width="0.0118%" height="15" fill="rgb(243,75,43)" fg:x="3201" fg:w="1"/><text x="38.1496%" y="879.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.01%)</title><rect x="37.8996%" y="853" width="0.0118%" height="15" fill="rgb(223,27,42)" fg:x="3201" fg:w="1"/><text x="38.1496%" y="863.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.01%)</title><rect x="37.8996%" y="837" width="0.0118%" height="15" fill="rgb(232,189,33)" fg:x="3201" fg:w="1"/><text x="38.1496%" y="847.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for f64&gt;::serialize (1 samples, 0.01%)</title><rect x="37.8996%" y="821" width="0.0118%" height="15" fill="rgb(210,9,39)" fg:x="3201" fg:w="1"/><text x="38.1496%" y="831.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_f64 (1 samples, 0.01%)</title><rect x="37.8996%" y="805" width="0.0118%" height="15" fill="rgb(242,85,26)" fg:x="3201" fg:w="1"/><text x="38.1496%" y="815.50"></text></g><g><title>serde_json::ser::Formatter::write_f64 (1 samples, 0.01%)</title><rect x="37.8996%" y="789" width="0.0118%" height="15" fill="rgb(248,44,4)" fg:x="3201" fg:w="1"/><text x="38.1496%" y="799.50"></text></g><g><title>ryu::buffer::Buffer::format_finite (1 samples, 0.01%)</title><rect x="37.8996%" y="773" width="0.0118%" height="15" fill="rgb(250,96,46)" fg:x="3201" fg:w="1"/><text x="38.1496%" y="783.50"></text></g><g><title>&lt;f64 as ryu::buffer::Sealed&gt;::write_to_ryu_buffer (1 samples, 0.01%)</title><rect x="37.8996%" y="757" width="0.0118%" height="15" fill="rgb(229,116,26)" fg:x="3201" fg:w="1"/><text x="38.1496%" y="767.50"></text></g><g><title>ryu::pretty::format64 (1 samples, 0.01%)</title><rect x="37.8996%" y="741" width="0.0118%" height="15" fill="rgb(246,94,34)" fg:x="3201" fg:w="1"/><text x="38.1496%" y="751.50"></text></g><g><title>ryu::d2s::d2d (1 samples, 0.01%)</title><rect x="37.8996%" y="725" width="0.0118%" height="15" fill="rgb(251,73,21)" fg:x="3201" fg:w="1"/><text x="38.1496%" y="735.50"></text></g><g><title>&lt;tracing_serde::fields::SerializeFieldMap&lt;tracing_core::event::Event&gt; as serde::ser::Serialize&gt;::serialize (3 samples, 0.04%)</title><rect x="37.8878%" y="933" width="0.0355%" height="15" fill="rgb(254,121,25)" fg:x="3200" fg:w="3"/><text x="38.1378%" y="943.50"></text></g><g><title>tracing_core::event::Event::record (3 samples, 0.04%)</title><rect x="37.8878%" y="917" width="0.0355%" height="15" fill="rgb(215,161,49)" fg:x="3200" fg:w="3"/><text x="38.1378%" y="927.50"></text></g><g><title>tracing_core::field::ValueSet::record (3 samples, 0.04%)</title><rect x="37.8878%" y="901" width="0.0355%" height="15" fill="rgb(221,43,13)" fg:x="3200" fg:w="3"/><text x="38.1378%" y="911.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (3 samples, 0.04%)</title><rect x="37.8878%" y="885" width="0.0355%" height="15" fill="rgb(249,5,37)" fg:x="3200" fg:w="3"/><text x="38.1378%" y="895.50"></text></g><g><title>tracing_core::field::ValueSet::record (1 samples, 0.01%)</title><rect x="37.9114%" y="869" width="0.0118%" height="15" fill="rgb(226,25,44)" fg:x="3202" fg:w="1"/><text x="38.1614%" y="879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="37.9114%" y="853" width="0.0118%" height="15" fill="rgb(238,189,16)" fg:x="3202" fg:w="1"/><text x="38.1614%" y="863.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="37.9114%" y="837" width="0.0118%" height="15" fill="rgb(251,186,8)" fg:x="3202" fg:w="1"/><text x="38.1614%" y="847.50"></text></g><g><title>tracing_subscriber::fmt::format::json::&lt;impl tracing_subscriber::fmt::format::FormatEvent&lt;S,N&gt; for tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::json::Json,T&gt;&gt;::format_event (19 samples, 0.22%)</title><rect x="37.7102%" y="997" width="0.2250%" height="15" fill="rgb(254,34,31)" fg:x="3185" fg:w="19"/><text x="37.9602%" y="1007.50"></text></g><g><title>tracing_subscriber::fmt::format::json::_&lt;impl tracing_subscriber::fmt::format::FormatEvent&lt;S,N&gt; for tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::json::Json,T&gt;&gt;::format_event::_{{closure}} (14 samples, 0.17%)</title><rect x="37.7694%" y="981" width="0.1658%" height="15" fill="rgb(225,215,27)" fg:x="3190" fg:w="14"/><text x="38.0194%" y="991.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.07%)</title><rect x="37.8641%" y="965" width="0.0710%" height="15" fill="rgb(221,192,48)" fg:x="3198" fg:w="6"/><text x="38.1141%" y="975.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.05%)</title><rect x="37.8878%" y="949" width="0.0474%" height="15" fill="rgb(219,137,20)" fg:x="3200" fg:w="4"/><text x="38.1378%" y="959.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (1 samples, 0.01%)</title><rect x="37.9233%" y="933" width="0.0118%" height="15" fill="rgb(219,84,11)" fg:x="3203" fg:w="1"/><text x="38.1733%" y="943.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.01%)</title><rect x="37.9233%" y="917" width="0.0118%" height="15" fill="rgb(224,10,23)" fg:x="3203" fg:w="1"/><text x="38.1733%" y="927.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.01%)</title><rect x="37.9233%" y="901" width="0.0118%" height="15" fill="rgb(248,22,39)" fg:x="3203" fg:w="1"/><text x="38.1733%" y="911.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (1 samples, 0.01%)</title><rect x="37.9233%" y="885" width="0.0118%" height="15" fill="rgb(212,154,20)" fg:x="3203" fg:w="1"/><text x="38.1733%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="37.9233%" y="869" width="0.0118%" height="15" fill="rgb(236,199,50)" fg:x="3203" fg:w="1"/><text x="38.1733%" y="879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="37.9233%" y="853" width="0.0118%" height="15" fill="rgb(211,9,17)" fg:x="3203" fg:w="1"/><text x="38.1733%" y="863.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="37.9233%" y="837" width="0.0118%" height="15" fill="rgb(243,216,36)" fg:x="3203" fg:w="1"/><text x="38.1733%" y="847.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="37.9351%" y="917" width="0.0118%" height="15" fill="rgb(250,2,10)" fg:x="3204" fg:w="1"/><text x="38.1851%" y="927.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="37.9351%" y="901" width="0.0118%" height="15" fill="rgb(226,50,48)" fg:x="3204" fg:w="1"/><text x="38.1851%" y="911.50"></text></g><g><title>rotmguard::module::autonexus::passive::Passive::apply_passive::_{{closure}} (22 samples, 0.26%)</title><rect x="37.6983%" y="1093" width="0.2605%" height="15" fill="rgb(243,81,16)" fg:x="3184" fg:w="22"/><text x="37.9483%" y="1103.50"></text></g><g><title>tracing_core::event::Event::dispatch (22 samples, 0.26%)</title><rect x="37.6983%" y="1077" width="0.2605%" height="15" fill="rgb(250,14,2)" fg:x="3184" fg:w="22"/><text x="37.9483%" y="1087.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (22 samples, 0.26%)</title><rect x="37.6983%" y="1061" width="0.2605%" height="15" fill="rgb(233,135,29)" fg:x="3184" fg:w="22"/><text x="37.9483%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (22 samples, 0.26%)</title><rect x="37.6983%" y="1045" width="0.2605%" height="15" fill="rgb(224,64,43)" fg:x="3184" fg:w="22"/><text x="37.9483%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (22 samples, 0.26%)</title><rect x="37.6983%" y="1029" width="0.2605%" height="15" fill="rgb(238,84,13)" fg:x="3184" fg:w="22"/><text x="37.9483%" y="1039.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event::_{{closure}} (22 samples, 0.26%)</title><rect x="37.6983%" y="1013" width="0.2605%" height="15" fill="rgb(253,48,26)" fg:x="3184" fg:w="22"/><text x="37.9483%" y="1023.50"></text></g><g><title>tracing_subscriber::fmt::writer::MakeWriter::make_writer_for (2 samples, 0.02%)</title><rect x="37.9351%" y="997" width="0.0237%" height="15" fill="rgb(205,223,31)" fg:x="3204" fg:w="2"/><text x="38.1851%" y="1007.50"></text></g><g><title>&lt;&amp;rotmguard::logging::LogBuffer as tracing_subscriber::fmt::writer::MakeWriter&gt;::make_writer (2 samples, 0.02%)</title><rect x="37.9351%" y="981" width="0.0237%" height="15" fill="rgb(221,41,32)" fg:x="3204" fg:w="2"/><text x="38.1851%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (2 samples, 0.02%)</title><rect x="37.9351%" y="965" width="0.0237%" height="15" fill="rgb(213,158,31)" fg:x="3204" fg:w="2"/><text x="38.1851%" y="975.50"></text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.02%)</title><rect x="37.9351%" y="949" width="0.0237%" height="15" fill="rgb(245,126,43)" fg:x="3204" fg:w="2"/><text x="38.1851%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.02%)</title><rect x="37.9351%" y="933" width="0.0237%" height="15" fill="rgb(227,7,22)" fg:x="3204" fg:w="2"/><text x="38.1851%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.01%)</title><rect x="37.9470%" y="917" width="0.0118%" height="15" fill="rgb(252,90,44)" fg:x="3205" fg:w="1"/><text x="38.1970%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position::check::_{{closure}} (1 samples, 0.01%)</title><rect x="37.9470%" y="901" width="0.0118%" height="15" fill="rgb(253,91,0)" fg:x="3205" fg:w="1"/><text x="38.1970%" y="911.50"></text></g><g><title>&lt;tracing_core::event::Event as tracing_log::NormalizeEvent&gt;::normalized_metadata (1 samples, 0.01%)</title><rect x="37.9588%" y="997" width="0.0118%" height="15" fill="rgb(252,175,49)" fg:x="3206" fg:w="1"/><text x="38.2088%" y="1007.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="37.9588%" y="981" width="0.0118%" height="15" fill="rgb(246,150,1)" fg:x="3206" fg:w="1"/><text x="38.2088%" y="991.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.01%)</title><rect x="37.9588%" y="965" width="0.0118%" height="15" fill="rgb(241,192,25)" fg:x="3206" fg:w="1"/><text x="38.2088%" y="975.50"></text></g><g><title>task_work_run (1 samples, 0.01%)</title><rect x="37.9588%" y="949" width="0.0118%" height="15" fill="rgb(239,187,11)" fg:x="3206" fg:w="1"/><text x="38.2088%" y="959.50"></text></g><g><title>task_mm_cid_work (1 samples, 0.01%)</title><rect x="37.9588%" y="933" width="0.0118%" height="15" fill="rgb(218,202,51)" fg:x="3206" fg:w="1"/><text x="38.2088%" y="943.50"></text></g><g><title>_find_next_bit (1 samples, 0.01%)</title><rect x="37.9588%" y="917" width="0.0118%" height="15" fill="rgb(225,176,8)" fg:x="3206" fg:w="1"/><text x="38.2088%" y="927.50"></text></g><g><title>[rotmguard] (1 samples, 0.01%)</title><rect x="37.9825%" y="677" width="0.0118%" height="15" fill="rgb(219,122,41)" fg:x="3208" fg:w="1"/><text x="38.2325%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (1 samples, 0.01%)</title><rect x="37.9825%" y="661" width="0.0118%" height="15" fill="rgb(248,140,20)" fg:x="3208" fg:w="1"/><text x="38.2325%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="37.9825%" y="885" width="0.0237%" height="15" fill="rgb(245,41,37)" fg:x="3208" fg:w="2"/><text x="38.2325%" y="895.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.02%)</title><rect x="37.9825%" y="869" width="0.0237%" height="15" fill="rgb(235,82,39)" fg:x="3208" fg:w="2"/><text x="38.2325%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.02%)</title><rect x="37.9825%" y="853" width="0.0237%" height="15" fill="rgb(230,108,42)" fg:x="3208" fg:w="2"/><text x="38.2325%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="37.9825%" y="837" width="0.0237%" height="15" fill="rgb(215,150,50)" fg:x="3208" fg:w="2"/><text x="38.2325%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.02%)</title><rect x="37.9825%" y="821" width="0.0237%" height="15" fill="rgb(233,212,5)" fg:x="3208" fg:w="2"/><text x="38.2325%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="37.9825%" y="805" width="0.0237%" height="15" fill="rgb(245,80,22)" fg:x="3208" fg:w="2"/><text x="38.2325%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="37.9825%" y="789" width="0.0237%" height="15" fill="rgb(238,129,16)" fg:x="3208" fg:w="2"/><text x="38.2325%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="37.9825%" y="773" width="0.0237%" height="15" fill="rgb(240,19,0)" fg:x="3208" fg:w="2"/><text x="38.2325%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.02%)</title><rect x="37.9825%" y="757" width="0.0237%" height="15" fill="rgb(232,42,35)" fg:x="3208" fg:w="2"/><text x="38.2325%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="37.9825%" y="741" width="0.0237%" height="15" fill="rgb(223,130,24)" fg:x="3208" fg:w="2"/><text x="38.2325%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.02%)</title><rect x="37.9825%" y="725" width="0.0237%" height="15" fill="rgb(237,16,22)" fg:x="3208" fg:w="2"/><text x="38.2325%" y="735.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.02%)</title><rect x="37.9825%" y="709" width="0.0237%" height="15" fill="rgb(248,192,20)" fg:x="3208" fg:w="2"/><text x="38.2325%" y="719.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.02%)</title><rect x="37.9825%" y="693" width="0.0237%" height="15" fill="rgb(233,167,2)" fg:x="3208" fg:w="2"/><text x="38.2325%" y="703.50"></text></g><g><title>realloc (1 samples, 0.01%)</title><rect x="37.9943%" y="677" width="0.0118%" height="15" fill="rgb(252,71,44)" fg:x="3209" fg:w="1"/><text x="38.2443%" y="687.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="37.9943%" y="661" width="0.0118%" height="15" fill="rgb(238,37,47)" fg:x="3209" fg:w="1"/><text x="38.2443%" y="671.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::convert::From&lt;std::time::SystemTime&gt;&gt;::from (1 samples, 0.01%)</title><rect x="37.9943%" y="645" width="0.0118%" height="15" fill="rgb(214,202,54)" fg:x="3209" fg:w="1"/><text x="38.2443%" y="655.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::SystemTime as tracing_subscriber::fmt::time::FormatTime&gt;::format_time (4 samples, 0.05%)</title><rect x="37.9706%" y="997" width="0.0474%" height="15" fill="rgb(254,165,40)" fg:x="3207" fg:w="4"/><text x="38.2206%" y="1007.50"></text></g><g><title>tracing_subscriber::fmt::format::Writer::write_fmt (4 samples, 0.05%)</title><rect x="37.9706%" y="981" width="0.0474%" height="15" fill="rgb(246,173,38)" fg:x="3207" fg:w="4"/><text x="38.2206%" y="991.50"></text></g><g><title>core::fmt::write (4 samples, 0.05%)</title><rect x="37.9706%" y="965" width="0.0474%" height="15" fill="rgb(215,3,27)" fg:x="3207" fg:w="4"/><text x="38.2206%" y="975.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.04%)</title><rect x="37.9825%" y="949" width="0.0355%" height="15" fill="rgb(239,169,51)" fg:x="3208" fg:w="3"/><text x="38.2325%" y="959.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::fmt::Display&gt;::fmt (3 samples, 0.04%)</title><rect x="37.9825%" y="933" width="0.0355%" height="15" fill="rgb(212,5,25)" fg:x="3208" fg:w="3"/><text x="38.2325%" y="943.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.04%)</title><rect x="37.9825%" y="917" width="0.0355%" height="15" fill="rgb(243,45,17)" fg:x="3208" fg:w="3"/><text x="38.2325%" y="927.50"></text></g><g><title>core::fmt::write (3 samples, 0.04%)</title><rect x="37.9825%" y="901" width="0.0355%" height="15" fill="rgb(242,97,9)" fg:x="3208" fg:w="3"/><text x="38.2325%" y="911.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="38.0062%" y="885" width="0.0118%" height="15" fill="rgb(228,71,31)" fg:x="3210" fg:w="1"/><text x="38.2562%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="38.0062%" y="869" width="0.0118%" height="15" fill="rgb(252,184,16)" fg:x="3210" fg:w="1"/><text x="38.2562%" y="879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="38.0062%" y="853" width="0.0118%" height="15" fill="rgb(236,169,46)" fg:x="3210" fg:w="1"/><text x="38.2562%" y="863.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="38.0062%" y="837" width="0.0118%" height="15" fill="rgb(207,17,47)" fg:x="3210" fg:w="1"/><text x="38.2562%" y="847.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="38.0180%" y="917" width="0.0118%" height="15" fill="rgb(206,201,28)" fg:x="3211" fg:w="1"/><text x="38.2680%" y="927.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_map (2 samples, 0.02%)</title><rect x="38.0180%" y="981" width="0.0237%" height="15" fill="rgb(224,184,23)" fg:x="3211" fg:w="2"/><text x="38.2680%" y="991.50"></text></g><g><title>serde_json::ser::Formatter::begin_object (2 samples, 0.02%)</title><rect x="38.0180%" y="965" width="0.0237%" height="15" fill="rgb(208,139,48)" fg:x="3211" fg:w="2"/><text x="38.2680%" y="975.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.02%)</title><rect x="38.0180%" y="949" width="0.0237%" height="15" fill="rgb(208,130,10)" fg:x="3211" fg:w="2"/><text x="38.2680%" y="959.50"></text></g><g><title>&lt;tracing_subscriber::fmt::writer::WriteAdaptor as std::io::Write&gt;::write (2 samples, 0.02%)</title><rect x="38.0180%" y="933" width="0.0237%" height="15" fill="rgb(211,213,45)" fg:x="3211" fg:w="2"/><text x="38.2680%" y="943.50"></text></g><g><title>[rotmguard] (1 samples, 0.01%)</title><rect x="38.0298%" y="917" width="0.0118%" height="15" fill="rgb(235,100,30)" fg:x="3212" fg:w="1"/><text x="38.2798%" y="927.50"></text></g><g><title>&lt;tracing_core::event::Event as tracing_log::NormalizeEvent&gt;::normalized_metadata (1 samples, 0.01%)</title><rect x="38.0298%" y="901" width="0.0118%" height="15" fill="rgb(206,144,31)" fg:x="3212" fg:w="1"/><text x="38.2798%" y="911.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::json::SerializableContext&lt;Span,N&gt; as serde::ser::Serialize&gt;::serialize (1 samples, 0.01%)</title><rect x="38.0417%" y="981" width="0.0118%" height="15" fill="rgb(224,200,26)" fg:x="3213" fg:w="1"/><text x="38.2917%" y="991.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (1 samples, 0.01%)</title><rect x="38.0417%" y="965" width="0.0118%" height="15" fill="rgb(247,104,53)" fg:x="3213" fg:w="1"/><text x="38.2917%" y="975.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::json::SerializableSpan&lt;Span,N&gt; as serde::ser::Serialize&gt;::serialize (1 samples, 0.01%)</title><rect x="38.0417%" y="949" width="0.0118%" height="15" fill="rgb(220,14,17)" fg:x="3213" fg:w="1"/><text x="38.2917%" y="959.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.01%)</title><rect x="38.0417%" y="933" width="0.0118%" height="15" fill="rgb(230,140,40)" fg:x="3213" fg:w="1"/><text x="38.2917%" y="943.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.01%)</title><rect x="38.0417%" y="917" width="0.0118%" height="15" fill="rgb(229,2,41)" fg:x="3213" fg:w="1"/><text x="38.2917%" y="927.50"></text></g><g><title>serde_json::ser::Formatter::begin_object_value (1 samples, 0.01%)</title><rect x="38.0417%" y="901" width="0.0118%" height="15" fill="rgb(232,89,16)" fg:x="3213" fg:w="1"/><text x="38.2917%" y="911.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="38.0417%" y="885" width="0.0118%" height="15" fill="rgb(247,59,52)" fg:x="3213" fg:w="1"/><text x="38.2917%" y="895.50"></text></g><g><title>&lt;tracing_subscriber::fmt::writer::WriteAdaptor as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="38.0417%" y="869" width="0.0118%" height="15" fill="rgb(226,110,21)" fg:x="3213" fg:w="1"/><text x="38.2917%" y="879.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (1 samples, 0.01%)</title><rect x="38.0417%" y="853" width="0.0118%" height="15" fill="rgb(224,176,43)" fg:x="3213" fg:w="1"/><text x="38.2917%" y="863.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.01%)</title><rect x="38.0535%" y="949" width="0.0118%" height="15" fill="rgb(221,73,6)" fg:x="3214" fg:w="1"/><text x="38.3035%" y="959.50"></text></g><g><title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.01%)</title><rect x="38.0535%" y="933" width="0.0118%" height="15" fill="rgb(232,78,19)" fg:x="3214" fg:w="1"/><text x="38.3035%" y="943.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.01%)</title><rect x="38.0535%" y="917" width="0.0118%" height="15" fill="rgb(233,112,48)" fg:x="3214" fg:w="1"/><text x="38.3035%" y="927.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.01%)</title><rect x="38.0535%" y="901" width="0.0118%" height="15" fill="rgb(243,131,47)" fg:x="3214" fg:w="1"/><text x="38.3035%" y="911.50"></text></g><g><title>serde_json::ser::Formatter::begin_string (1 samples, 0.01%)</title><rect x="38.0535%" y="885" width="0.0118%" height="15" fill="rgb(226,51,1)" fg:x="3214" fg:w="1"/><text x="38.3035%" y="895.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="38.0535%" y="869" width="0.0118%" height="15" fill="rgb(247,58,7)" fg:x="3214" fg:w="1"/><text x="38.3035%" y="879.50"></text></g><g><title>&lt;tracing_subscriber::fmt::writer::WriteAdaptor as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="38.0535%" y="853" width="0.0118%" height="15" fill="rgb(209,7,32)" fg:x="3214" fg:w="1"/><text x="38.3035%" y="863.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.01%)</title><rect x="38.0535%" y="837" width="0.0118%" height="15" fill="rgb(209,39,41)" fg:x="3214" fg:w="1"/><text x="38.3035%" y="847.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.01%)</title><rect x="38.0535%" y="821" width="0.0118%" height="15" fill="rgb(226,182,46)" fg:x="3214" fg:w="1"/><text x="38.3035%" y="831.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (2 samples, 0.02%)</title><rect x="38.0535%" y="965" width="0.0237%" height="15" fill="rgb(230,219,10)" fg:x="3214" fg:w="2"/><text x="38.3035%" y="975.50"></text></g><g><title>serde_json::ser::Formatter::begin_object_key (1 samples, 0.01%)</title><rect x="38.0654%" y="949" width="0.0118%" height="15" fill="rgb(227,175,30)" fg:x="3215" fg:w="1"/><text x="38.3154%" y="959.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="38.0654%" y="933" width="0.0118%" height="15" fill="rgb(217,2,50)" fg:x="3215" fg:w="1"/><text x="38.3154%" y="943.50"></text></g><g><title>&lt;tracing_subscriber::fmt::writer::WriteAdaptor as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="38.0654%" y="917" width="0.0118%" height="15" fill="rgb(229,160,0)" fg:x="3215" fg:w="1"/><text x="38.3154%" y="927.50"></text></g><g><title>&lt;tracing_subscriber::fmt::writer::WriteAdaptor as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="38.0654%" y="901" width="0.0118%" height="15" fill="rgb(207,78,37)" fg:x="3215" fg:w="1"/><text x="38.3154%" y="911.50"></text></g><g><title>tracing_core::event::Event::dispatch (11 samples, 0.13%)</title><rect x="37.9588%" y="1093" width="0.1302%" height="15" fill="rgb(225,57,0)" fg:x="3206" fg:w="11"/><text x="38.2088%" y="1103.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (11 samples, 0.13%)</title><rect x="37.9588%" y="1077" width="0.1302%" height="15" fill="rgb(232,154,2)" fg:x="3206" fg:w="11"/><text x="38.2088%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11 samples, 0.13%)</title><rect x="37.9588%" y="1061" width="0.1302%" height="15" fill="rgb(241,212,25)" fg:x="3206" fg:w="11"/><text x="38.2088%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11 samples, 0.13%)</title><rect x="37.9588%" y="1045" width="0.1302%" height="15" fill="rgb(226,69,20)" fg:x="3206" fg:w="11"/><text x="38.2088%" y="1055.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event::_{{closure}} (11 samples, 0.13%)</title><rect x="37.9588%" y="1029" width="0.1302%" height="15" fill="rgb(247,184,54)" fg:x="3206" fg:w="11"/><text x="38.2088%" y="1039.50"></text></g><g><title>tracing_subscriber::fmt::format::json::&lt;impl tracing_subscriber::fmt::format::FormatEvent&lt;S,N&gt; for tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::json::Json,T&gt;&gt;::format_event (11 samples, 0.13%)</title><rect x="37.9588%" y="1013" width="0.1302%" height="15" fill="rgb(210,145,0)" fg:x="3206" fg:w="11"/><text x="38.2088%" y="1023.50"></text></g><g><title>tracing_subscriber::fmt::format::json::_&lt;impl tracing_subscriber::fmt::format::FormatEvent&lt;S,N&gt; for tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::json::Json,T&gt;&gt;::format_event::_{{closure}} (6 samples, 0.07%)</title><rect x="38.0180%" y="997" width="0.0710%" height="15" fill="rgb(253,82,12)" fg:x="3211" fg:w="6"/><text x="38.2680%" y="1007.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.04%)</title><rect x="38.0535%" y="981" width="0.0355%" height="15" fill="rgb(245,42,11)" fg:x="3214" fg:w="3"/><text x="38.3035%" y="991.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.01%)</title><rect x="38.0772%" y="965" width="0.0118%" height="15" fill="rgb(219,147,32)" fg:x="3216" fg:w="1"/><text x="38.3272%" y="975.50"></text></g><g><title>&lt;tracing_serde::fields::SerializeFieldMap&lt;tracing_core::event::Event&gt; as serde::ser::Serialize&gt;::serialize (1 samples, 0.01%)</title><rect x="38.0772%" y="949" width="0.0118%" height="15" fill="rgb(246,12,7)" fg:x="3216" fg:w="1"/><text x="38.3272%" y="959.50"></text></g><g><title>tracing_core::event::Event::record (1 samples, 0.01%)</title><rect x="38.0772%" y="933" width="0.0118%" height="15" fill="rgb(243,50,9)" fg:x="3216" fg:w="1"/><text x="38.3272%" y="943.50"></text></g><g><title>tracing_core::field::ValueSet::record (1 samples, 0.01%)</title><rect x="38.0772%" y="917" width="0.0118%" height="15" fill="rgb(219,149,6)" fg:x="3216" fg:w="1"/><text x="38.3272%" y="927.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (1 samples, 0.01%)</title><rect x="38.0772%" y="901" width="0.0118%" height="15" fill="rgb(241,51,42)" fg:x="3216" fg:w="1"/><text x="38.3272%" y="911.50"></text></g><g><title>&lt;tracing_serde::fields::SerializeFieldMap&lt;tracing_core::event::Event&gt; as serde::ser::Serialize&gt;::serialize (1 samples, 0.01%)</title><rect x="38.0772%" y="885" width="0.0118%" height="15" fill="rgb(226,128,27)" fg:x="3216" fg:w="1"/><text x="38.3272%" y="895.50"></text></g><g><title>rotmguard::module::autonexus::passive::Passive::apply_passive (34 samples, 0.40%)</title><rect x="37.6983%" y="1109" width="0.4026%" height="15" fill="rgb(244,144,4)" fg:x="3184" fg:w="34"/><text x="37.9483%" y="1119.50"></text></g><g><title>tracing_subscriber::fmt::writer::MakeWriter::make_writer_for (1 samples, 0.01%)</title><rect x="38.0890%" y="1093" width="0.0118%" height="15" fill="rgb(221,4,13)" fg:x="3217" fg:w="1"/><text x="38.3390%" y="1103.50"></text></g><g><title>&lt;&amp;rotmguard::logging::LogBuffer as tracing_subscriber::fmt::writer::MakeWriter&gt;::make_writer (1 samples, 0.01%)</title><rect x="38.0890%" y="1077" width="0.0118%" height="15" fill="rgb(208,170,28)" fg:x="3217" fg:w="1"/><text x="38.3390%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (1 samples, 0.01%)</title><rect x="38.0890%" y="1061" width="0.0118%" height="15" fill="rgb(226,131,13)" fg:x="3217" fg:w="1"/><text x="38.3390%" y="1071.50"></text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.01%)</title><rect x="38.0890%" y="1045" width="0.0118%" height="15" fill="rgb(215,72,41)" fg:x="3217" fg:w="1"/><text x="38.3390%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="38.0890%" y="1029" width="0.0118%" height="15" fill="rgb(243,108,20)" fg:x="3217" fg:w="1"/><text x="38.3390%" y="1039.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.01%)</title><rect x="38.0890%" y="1013" width="0.0118%" height="15" fill="rgb(230,189,17)" fg:x="3217" fg:w="1"/><text x="38.3390%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position::check::_{{closure}} (1 samples, 0.01%)</title><rect x="38.0890%" y="997" width="0.0118%" height="15" fill="rgb(220,50,17)" fg:x="3217" fg:w="1"/><text x="38.3390%" y="1007.50"></text></g><g><title>&lt;&amp;rotmguard::logging::LogBuffer as tracing_subscriber::fmt::writer::MakeWriter&gt;::make_writer::_{{closure}} (1 samples, 0.01%)</title><rect x="38.0890%" y="981" width="0.0118%" height="15" fill="rgb(248,152,48)" fg:x="3217" fg:w="1"/><text x="38.3390%" y="991.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (1 samples, 0.01%)</title><rect x="38.1009%" y="1061" width="0.0118%" height="15" fill="rgb(244,91,11)" fg:x="3218" fg:w="1"/><text x="38.3509%" y="1071.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (1 samples, 0.01%)</title><rect x="38.1009%" y="1045" width="0.0118%" height="15" fill="rgb(220,157,5)" fg:x="3218" fg:w="1"/><text x="38.3509%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (2 samples, 0.02%)</title><rect x="38.1009%" y="1093" width="0.0237%" height="15" fill="rgb(253,137,8)" fg:x="3218" fg:w="2"/><text x="38.3509%" y="1103.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (2 samples, 0.02%)</title><rect x="38.1009%" y="1077" width="0.0237%" height="15" fill="rgb(217,137,51)" fg:x="3218" fg:w="2"/><text x="38.3509%" y="1087.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1 samples, 0.01%)</title><rect x="38.1127%" y="1061" width="0.0118%" height="15" fill="rgb(218,209,53)" fg:x="3219" fg:w="1"/><text x="38.3627%" y="1071.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1 samples, 0.01%)</title><rect x="38.1127%" y="1045" width="0.0118%" height="15" fill="rgb(249,137,25)" fg:x="3219" fg:w="1"/><text x="38.3627%" y="1055.50"></text></g><g><title>&lt;rotmguard::extra_datatypes::ObjectId as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="38.1127%" y="1029" width="0.0118%" height="15" fill="rgb(239,155,26)" fg:x="3219" fg:w="1"/><text x="38.3627%" y="1039.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (1 samples, 0.01%)</title><rect x="38.1127%" y="1013" width="0.0118%" height="15" fill="rgb(227,85,46)" fg:x="3219" fg:w="1"/><text x="38.3627%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (1 samples, 0.01%)</title><rect x="38.1246%" y="1061" width="0.0118%" height="15" fill="rgb(251,107,43)" fg:x="3220" fg:w="1"/><text x="38.3746%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (1 samples, 0.01%)</title><rect x="38.1246%" y="1045" width="0.0118%" height="15" fill="rgb(234,170,33)" fg:x="3220" fg:w="1"/><text x="38.3746%" y="1055.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::is_empty (1 samples, 0.01%)</title><rect x="38.1246%" y="1029" width="0.0118%" height="15" fill="rgb(206,29,35)" fg:x="3220" fg:w="1"/><text x="38.3746%" y="1039.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::len (1 samples, 0.01%)</title><rect x="38.1246%" y="1013" width="0.0118%" height="15" fill="rgb(227,138,25)" fg:x="3220" fg:w="1"/><text x="38.3746%" y="1023.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::put (2 samples, 0.02%)</title><rect x="38.1246%" y="1093" width="0.0237%" height="15" fill="rgb(249,131,35)" fg:x="3220" fg:w="2"/><text x="38.3746%" y="1103.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::capturing_put (2 samples, 0.02%)</title><rect x="38.1246%" y="1077" width="0.0237%" height="15" fill="rgb(239,6,40)" fg:x="3220" fg:w="2"/><text x="38.3746%" y="1087.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::replace_or_create_node (1 samples, 0.01%)</title><rect x="38.1364%" y="1061" width="0.0118%" height="15" fill="rgb(246,136,47)" fg:x="3221" fg:w="1"/><text x="38.3864%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (1 samples, 0.01%)</title><rect x="38.1364%" y="1045" width="0.0118%" height="15" fill="rgb(253,58,26)" fg:x="3221" fg:w="1"/><text x="38.3864%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (1 samples, 0.01%)</title><rect x="38.1364%" y="1029" width="0.0118%" height="15" fill="rgb(237,141,10)" fg:x="3221" fg:w="1"/><text x="38.3864%" y="1039.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.01%)</title><rect x="38.1364%" y="1013" width="0.0118%" height="15" fill="rgb(234,156,12)" fg:x="3221" fg:w="1"/><text x="38.3864%" y="1023.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::remove (1 samples, 0.01%)</title><rect x="38.1364%" y="997" width="0.0118%" height="15" fill="rgb(243,224,36)" fg:x="3221" fg:w="1"/><text x="38.3864%" y="1007.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::erase_no_drop (1 samples, 0.01%)</title><rect x="38.1364%" y="981" width="0.0118%" height="15" fill="rgb(205,229,51)" fg:x="3221" fg:w="1"/><text x="38.3864%" y="991.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner::erase (1 samples, 0.01%)</title><rect x="38.1364%" y="965" width="0.0118%" height="15" fill="rgb(223,189,4)" fg:x="3221" fg:w="1"/><text x="38.3864%" y="975.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::end (1 samples, 0.01%)</title><rect x="38.1482%" y="997" width="0.0118%" height="15" fill="rgb(249,167,54)" fg:x="3222" fg:w="1"/><text x="38.3982%" y="1007.50"></text></g><g><title>serde_json::ser::Formatter::end_object (1 samples, 0.01%)</title><rect x="38.1482%" y="981" width="0.0118%" height="15" fill="rgb(218,34,28)" fg:x="3222" fg:w="1"/><text x="38.3982%" y="991.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="38.1482%" y="965" width="0.0118%" height="15" fill="rgb(232,109,42)" fg:x="3222" fg:w="1"/><text x="38.3982%" y="975.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.01%)</title><rect x="38.1482%" y="949" width="0.0118%" height="15" fill="rgb(248,214,46)" fg:x="3222" fg:w="1"/><text x="38.3982%" y="959.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="38.1482%" y="933" width="0.0118%" height="15" fill="rgb(244,216,40)" fg:x="3222" fg:w="1"/><text x="38.3982%" y="943.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="38.1601%" y="981" width="0.0118%" height="15" fill="rgb(231,226,31)" fg:x="3223" fg:w="1"/><text x="38.4101%" y="991.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (1 samples, 0.01%)</title><rect x="38.1601%" y="965" width="0.0118%" height="15" fill="rgb(238,38,43)" fg:x="3223" fg:w="1"/><text x="38.4101%" y="975.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (1 samples, 0.01%)</title><rect x="38.1601%" y="949" width="0.0118%" height="15" fill="rgb(208,88,43)" fg:x="3223" fg:w="1"/><text x="38.4101%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="38.1601%" y="933" width="0.0118%" height="15" fill="rgb(205,136,37)" fg:x="3223" fg:w="1"/><text x="38.4101%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="38.1601%" y="917" width="0.0118%" height="15" fill="rgb(237,34,14)" fg:x="3223" fg:w="1"/><text x="38.4101%" y="927.50"></text></g><g><title>rotmguard::proxy::PacketReader::wait_for_whole_packet::_{{closure}} (1 samples, 0.01%)</title><rect x="38.1719%" y="965" width="0.0118%" height="15" fill="rgb(236,193,44)" fg:x="3224" fg:w="1"/><text x="38.4219%" y="975.50"></text></g><g><title>&lt;tracing_core::event::Event as tracing_log::NormalizeEvent&gt;::normalized_metadata (1 samples, 0.01%)</title><rect x="38.1838%" y="949" width="0.0118%" height="15" fill="rgb(231,48,10)" fg:x="3225" fg:w="1"/><text x="38.4338%" y="959.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="38.1956%" y="949" width="0.0118%" height="15" fill="rgb(213,141,34)" fg:x="3226" fg:w="1"/><text x="38.4456%" y="959.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="38.2074%" y="645" width="0.0237%" height="15" fill="rgb(249,130,34)" fg:x="3227" fg:w="2"/><text x="38.4574%" y="655.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="38.2193%" y="629" width="0.0118%" height="15" fill="rgb(219,42,41)" fg:x="3228" fg:w="1"/><text x="38.4693%" y="639.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.01%)</title><rect x="38.2193%" y="613" width="0.0118%" height="15" fill="rgb(224,100,54)" fg:x="3228" fg:w="1"/><text x="38.4693%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.04%)</title><rect x="38.2074%" y="869" width="0.0355%" height="15" fill="rgb(229,200,27)" fg:x="3227" fg:w="3"/><text x="38.4574%" y="879.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.04%)</title><rect x="38.2074%" y="853" width="0.0355%" height="15" fill="rgb(217,118,10)" fg:x="3227" fg:w="3"/><text x="38.4574%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.04%)</title><rect x="38.2074%" y="837" width="0.0355%" height="15" fill="rgb(206,22,3)" fg:x="3227" fg:w="3"/><text x="38.4574%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.04%)</title><rect x="38.2074%" y="821" width="0.0355%" height="15" fill="rgb(232,163,46)" fg:x="3227" fg:w="3"/><text x="38.4574%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.04%)</title><rect x="38.2074%" y="805" width="0.0355%" height="15" fill="rgb(206,95,13)" fg:x="3227" fg:w="3"/><text x="38.4574%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.04%)</title><rect x="38.2074%" y="789" width="0.0355%" height="15" fill="rgb(253,154,18)" fg:x="3227" fg:w="3"/><text x="38.4574%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.04%)</title><rect x="38.2074%" y="773" width="0.0355%" height="15" fill="rgb(219,32,23)" fg:x="3227" fg:w="3"/><text x="38.4574%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.04%)</title><rect x="38.2074%" y="757" width="0.0355%" height="15" fill="rgb(230,191,45)" fg:x="3227" fg:w="3"/><text x="38.4574%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.04%)</title><rect x="38.2074%" y="741" width="0.0355%" height="15" fill="rgb(229,64,36)" fg:x="3227" fg:w="3"/><text x="38.4574%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="38.2074%" y="725" width="0.0355%" height="15" fill="rgb(205,129,25)" fg:x="3227" fg:w="3"/><text x="38.4574%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.04%)</title><rect x="38.2074%" y="709" width="0.0355%" height="15" fill="rgb(254,112,7)" fg:x="3227" fg:w="3"/><text x="38.4574%" y="719.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.04%)</title><rect x="38.2074%" y="693" width="0.0355%" height="15" fill="rgb(226,53,48)" fg:x="3227" fg:w="3"/><text x="38.4574%" y="703.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.04%)</title><rect x="38.2074%" y="677" width="0.0355%" height="15" fill="rgb(214,153,38)" fg:x="3227" fg:w="3"/><text x="38.4574%" y="687.50"></text></g><g><title>realloc (3 samples, 0.04%)</title><rect x="38.2074%" y="661" width="0.0355%" height="15" fill="rgb(243,101,7)" fg:x="3227" fg:w="3"/><text x="38.4574%" y="671.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (1 samples, 0.01%)</title><rect x="38.2311%" y="645" width="0.0118%" height="15" fill="rgb(240,140,22)" fg:x="3229" fg:w="1"/><text x="38.4811%" y="655.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.01%)</title><rect x="38.2311%" y="629" width="0.0118%" height="15" fill="rgb(235,114,2)" fg:x="3229" fg:w="1"/><text x="38.4811%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="38.2311%" y="613" width="0.0118%" height="15" fill="rgb(242,59,12)" fg:x="3229" fg:w="1"/><text x="38.4811%" y="623.50"></text></g><g><title>[rotmguard] (1 samples, 0.01%)</title><rect x="38.2430%" y="869" width="0.0118%" height="15" fill="rgb(252,134,9)" fg:x="3230" fg:w="1"/><text x="38.4930%" y="879.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="38.2430%" y="853" width="0.0118%" height="15" fill="rgb(236,4,44)" fg:x="3230" fg:w="1"/><text x="38.4930%" y="863.50"></text></g><g><title>core::fmt::write (5 samples, 0.06%)</title><rect x="38.2074%" y="885" width="0.0592%" height="15" fill="rgb(254,172,41)" fg:x="3227" fg:w="5"/><text x="38.4574%" y="895.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (1 samples, 0.01%)</title><rect x="38.2548%" y="869" width="0.0118%" height="15" fill="rgb(244,63,20)" fg:x="3231" fg:w="1"/><text x="38.5048%" y="879.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.01%)</title><rect x="38.2548%" y="853" width="0.0118%" height="15" fill="rgb(250,73,31)" fg:x="3231" fg:w="1"/><text x="38.5048%" y="863.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="38.2548%" y="837" width="0.0118%" height="15" fill="rgb(241,38,36)" fg:x="3231" fg:w="1"/><text x="38.5048%" y="847.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::SystemTime as tracing_subscriber::fmt::time::FormatTime&gt;::format_time (9 samples, 0.11%)</title><rect x="38.1719%" y="981" width="0.1066%" height="15" fill="rgb(245,211,2)" fg:x="3224" fg:w="9"/><text x="38.4219%" y="991.50"></text></g><g><title>tracing_subscriber::fmt::format::Writer::write_fmt (8 samples, 0.09%)</title><rect x="38.1838%" y="965" width="0.0947%" height="15" fill="rgb(206,120,28)" fg:x="3225" fg:w="8"/><text x="38.4338%" y="975.50"></text></g><g><title>core::fmt::write (6 samples, 0.07%)</title><rect x="38.2074%" y="949" width="0.0710%" height="15" fill="rgb(211,59,34)" fg:x="3227" fg:w="6"/><text x="38.4574%" y="959.50"></text></g><g><title>core::fmt::rt::Argument::fmt (6 samples, 0.07%)</title><rect x="38.2074%" y="933" width="0.0710%" height="15" fill="rgb(233,168,5)" fg:x="3227" fg:w="6"/><text x="38.4574%" y="943.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::datetime::DateTime as core::fmt::Display&gt;::fmt (6 samples, 0.07%)</title><rect x="38.2074%" y="917" width="0.0710%" height="15" fill="rgb(234,33,13)" fg:x="3227" fg:w="6"/><text x="38.4574%" y="927.50"></text></g><g><title>core::fmt::Formatter::write_fmt (6 samples, 0.07%)</title><rect x="38.2074%" y="901" width="0.0710%" height="15" fill="rgb(231,150,26)" fg:x="3227" fg:w="6"/><text x="38.4574%" y="911.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (1 samples, 0.01%)</title><rect x="38.2666%" y="885" width="0.0118%" height="15" fill="rgb(217,191,4)" fg:x="3232" fg:w="1"/><text x="38.5166%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="38.2785%" y="965" width="0.0118%" height="15" fill="rgb(246,198,38)" fg:x="3233" fg:w="1"/><text x="38.5285%" y="975.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="38.2785%" y="949" width="0.0118%" height="15" fill="rgb(245,64,37)" fg:x="3233" fg:w="1"/><text x="38.5285%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="38.2785%" y="933" width="0.0118%" height="15" fill="rgb(250,30,36)" fg:x="3233" fg:w="1"/><text x="38.5285%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="38.2785%" y="917" width="0.0118%" height="15" fill="rgb(217,86,53)" fg:x="3233" fg:w="1"/><text x="38.5285%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="38.2785%" y="901" width="0.0118%" height="15" fill="rgb(228,157,16)" fg:x="3233" fg:w="1"/><text x="38.5285%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="38.2785%" y="885" width="0.0118%" height="15" fill="rgb(217,59,31)" fg:x="3233" fg:w="1"/><text x="38.5285%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="38.2785%" y="869" width="0.0118%" height="15" fill="rgb(237,138,41)" fg:x="3233" fg:w="1"/><text x="38.5285%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.01%)</title><rect x="38.2785%" y="853" width="0.0118%" height="15" fill="rgb(227,91,49)" fg:x="3233" fg:w="1"/><text x="38.5285%" y="863.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="38.2903%" y="917" width="0.0118%" height="15" fill="rgb(247,21,44)" fg:x="3234" fg:w="1"/><text x="38.5403%" y="927.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::json::SerializableContext&lt;Span,N&gt; as serde::ser::Serialize&gt;::serialize (2 samples, 0.02%)</title><rect x="38.2903%" y="965" width="0.0237%" height="15" fill="rgb(219,210,51)" fg:x="3234" fg:w="2"/><text x="38.5403%" y="975.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (2 samples, 0.02%)</title><rect x="38.2903%" y="949" width="0.0237%" height="15" fill="rgb(209,140,6)" fg:x="3234" fg:w="2"/><text x="38.5403%" y="959.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::json::SerializableSpan&lt;Span,N&gt; as serde::ser::Serialize&gt;::serialize (2 samples, 0.02%)</title><rect x="38.2903%" y="933" width="0.0237%" height="15" fill="rgb(221,188,24)" fg:x="3234" fg:w="2"/><text x="38.5403%" y="943.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.01%)</title><rect x="38.3022%" y="917" width="0.0118%" height="15" fill="rgb(232,154,20)" fg:x="3235" fg:w="1"/><text x="38.5522%" y="927.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.01%)</title><rect x="38.3022%" y="901" width="0.0118%" height="15" fill="rgb(244,137,50)" fg:x="3235" fg:w="1"/><text x="38.5522%" y="911.50"></text></g><g><title>serde_json::ser::Formatter::begin_object_value (1 samples, 0.01%)</title><rect x="38.3022%" y="885" width="0.0118%" height="15" fill="rgb(225,185,43)" fg:x="3235" fg:w="1"/><text x="38.5522%" y="895.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="38.3022%" y="869" width="0.0118%" height="15" fill="rgb(213,205,38)" fg:x="3235" fg:w="1"/><text x="38.5522%" y="879.50"></text></g><g><title>&lt;tracing_subscriber::fmt::writer::WriteAdaptor as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="38.3022%" y="853" width="0.0118%" height="15" fill="rgb(236,73,12)" fg:x="3235" fg:w="1"/><text x="38.5522%" y="863.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="38.3022%" y="837" width="0.0118%" height="15" fill="rgb(235,219,13)" fg:x="3235" fg:w="1"/><text x="38.5522%" y="847.50"></text></g><g><title>&lt;serde_json::map::IntoIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="38.3140%" y="949" width="0.0118%" height="15" fill="rgb(218,59,36)" fg:x="3236" fg:w="1"/><text x="38.5640%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="38.3140%" y="933" width="0.0118%" height="15" fill="rgb(205,110,39)" fg:x="3236" fg:w="1"/><text x="38.5640%" y="943.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.01%)</title><rect x="38.3140%" y="917" width="0.0118%" height="15" fill="rgb(218,206,42)" fg:x="3236" fg:w="1"/><text x="38.5640%" y="927.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (1 samples, 0.01%)</title><rect x="38.3140%" y="901" width="0.0118%" height="15" fill="rgb(248,125,24)" fg:x="3236" fg:w="1"/><text x="38.5640%" y="911.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (1 samples, 0.01%)</title><rect x="38.3140%" y="885" width="0.0118%" height="15" fill="rgb(242,28,27)" fg:x="3236" fg:w="1"/><text x="38.5640%" y="895.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (1 samples, 0.01%)</title><rect x="38.3140%" y="869" width="0.0118%" height="15" fill="rgb(216,228,15)" fg:x="3236" fg:w="1"/><text x="38.5640%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="38.3140%" y="853" width="0.0118%" height="15" fill="rgb(235,116,46)" fg:x="3236" fg:w="1"/><text x="38.5640%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="38.3140%" y="837" width="0.0118%" height="15" fill="rgb(224,18,32)" fg:x="3236" fg:w="1"/><text x="38.5640%" y="847.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="38.3140%" y="821" width="0.0118%" height="15" fill="rgb(252,5,12)" fg:x="3236" fg:w="1"/><text x="38.5640%" y="831.50"></text></g><g><title>asm_sysvec_call_function_single (1 samples, 0.01%)</title><rect x="38.3258%" y="949" width="0.0118%" height="15" fill="rgb(251,36,5)" fg:x="3237" fg:w="1"/><text x="38.5758%" y="959.50"></text></g><g><title>sysvec_call_function_single (1 samples, 0.01%)</title><rect x="38.3258%" y="933" width="0.0118%" height="15" fill="rgb(217,53,14)" fg:x="3237" fg:w="1"/><text x="38.5758%" y="943.50"></text></g><g><title>__sysvec_call_function_single (1 samples, 0.01%)</title><rect x="38.3258%" y="917" width="0.0118%" height="15" fill="rgb(215,86,45)" fg:x="3237" fg:w="1"/><text x="38.5758%" y="927.50"></text></g><g><title>__flush_smp_call_function_queue (1 samples, 0.01%)</title><rect x="38.3258%" y="901" width="0.0118%" height="15" fill="rgb(242,169,11)" fg:x="3237" fg:w="1"/><text x="38.5758%" y="911.50"></text></g><g><title>sched_ttwu_pending (1 samples, 0.01%)</title><rect x="38.3258%" y="885" width="0.0118%" height="15" fill="rgb(211,213,45)" fg:x="3237" fg:w="1"/><text x="38.5758%" y="895.50"></text></g><g><title>ttwu_do_activate (1 samples, 0.01%)</title><rect x="38.3258%" y="869" width="0.0118%" height="15" fill="rgb(205,88,11)" fg:x="3237" fg:w="1"/><text x="38.5758%" y="879.50"></text></g><g><title>enqueue_task (1 samples, 0.01%)</title><rect x="38.3258%" y="853" width="0.0118%" height="15" fill="rgb(252,69,26)" fg:x="3237" fg:w="1"/><text x="38.5758%" y="863.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.01%)</title><rect x="38.3258%" y="837" width="0.0118%" height="15" fill="rgb(246,123,37)" fg:x="3237" fg:w="1"/><text x="38.5758%" y="847.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.01%)</title><rect x="38.3377%" y="949" width="0.0118%" height="15" fill="rgb(212,205,5)" fg:x="3238" fg:w="1"/><text x="38.5877%" y="959.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.01%)</title><rect x="38.3377%" y="933" width="0.0118%" height="15" fill="rgb(253,148,0)" fg:x="3238" fg:w="1"/><text x="38.5877%" y="943.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.01%)</title><rect x="38.3377%" y="917" width="0.0118%" height="15" fill="rgb(239,22,4)" fg:x="3238" fg:w="1"/><text x="38.5877%" y="927.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.01%)</title><rect x="38.3377%" y="901" width="0.0118%" height="15" fill="rgb(226,26,53)" fg:x="3238" fg:w="1"/><text x="38.5877%" y="911.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.01%)</title><rect x="38.3377%" y="885" width="0.0118%" height="15" fill="rgb(225,229,45)" fg:x="3238" fg:w="1"/><text x="38.5877%" y="895.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (1 samples, 0.01%)</title><rect x="38.3377%" y="869" width="0.0118%" height="15" fill="rgb(220,60,37)" fg:x="3238" fg:w="1"/><text x="38.5877%" y="879.50"></text></g><g><title>serde_json::ser::Formatter::write_string_fragment (1 samples, 0.01%)</title><rect x="38.3377%" y="853" width="0.0118%" height="15" fill="rgb(217,180,35)" fg:x="3238" fg:w="1"/><text x="38.5877%" y="863.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="38.3377%" y="837" width="0.0118%" height="15" fill="rgb(229,7,53)" fg:x="3238" fg:w="1"/><text x="38.5877%" y="847.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::json::SerializableSpan&lt;Span,N&gt; as serde::ser::Serialize&gt;::serialize (4 samples, 0.05%)</title><rect x="38.3140%" y="965" width="0.0474%" height="15" fill="rgb(254,137,3)" fg:x="3236" fg:w="4"/><text x="38.5640%" y="975.50"></text></g><g><title>serde_json::de::from_str (1 samples, 0.01%)</title><rect x="38.3495%" y="949" width="0.0118%" height="15" fill="rgb(215,140,41)" fg:x="3239" fg:w="1"/><text x="38.5995%" y="959.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.01%)</title><rect x="38.3495%" y="933" width="0.0118%" height="15" fill="rgb(250,80,15)" fg:x="3239" fg:w="1"/><text x="38.5995%" y="943.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.01%)</title><rect x="38.3495%" y="917" width="0.0118%" height="15" fill="rgb(252,191,6)" fg:x="3239" fg:w="1"/><text x="38.5995%" y="927.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.01%)</title><rect x="38.3495%" y="901" width="0.0118%" height="15" fill="rgb(246,217,18)" fg:x="3239" fg:w="1"/><text x="38.5995%" y="911.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.01%)</title><rect x="38.3495%" y="885" width="0.0118%" height="15" fill="rgb(223,93,7)" fg:x="3239" fg:w="1"/><text x="38.5995%" y="895.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1 samples, 0.01%)</title><rect x="38.3495%" y="869" width="0.0118%" height="15" fill="rgb(225,55,52)" fg:x="3239" fg:w="1"/><text x="38.5995%" y="879.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.01%)</title><rect x="38.3495%" y="853" width="0.0118%" height="15" fill="rgb(240,31,24)" fg:x="3239" fg:w="1"/><text x="38.5995%" y="863.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.01%)</title><rect x="38.3495%" y="837" width="0.0118%" height="15" fill="rgb(205,56,52)" fg:x="3239" fg:w="1"/><text x="38.5995%" y="847.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (1 samples, 0.01%)</title><rect x="38.3495%" y="821" width="0.0118%" height="15" fill="rgb(246,146,12)" fg:x="3239" fg:w="1"/><text x="38.5995%" y="831.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (1 samples, 0.01%)</title><rect x="38.3495%" y="805" width="0.0118%" height="15" fill="rgb(239,84,36)" fg:x="3239" fg:w="1"/><text x="38.5995%" y="815.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1 samples, 0.01%)</title><rect x="38.3495%" y="789" width="0.0118%" height="15" fill="rgb(207,41,40)" fg:x="3239" fg:w="1"/><text x="38.5995%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1 samples, 0.01%)</title><rect x="38.3495%" y="773" width="0.0118%" height="15" fill="rgb(241,179,25)" fg:x="3239" fg:w="1"/><text x="38.5995%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="38.3495%" y="757" width="0.0118%" height="15" fill="rgb(210,0,34)" fg:x="3239" fg:w="1"/><text x="38.5995%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="38.3495%" y="741" width="0.0118%" height="15" fill="rgb(225,217,29)" fg:x="3239" fg:w="1"/><text x="38.5995%" y="751.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="38.3495%" y="725" width="0.0118%" height="15" fill="rgb(216,191,38)" fg:x="3239" fg:w="1"/><text x="38.5995%" y="735.50"></text></g><g><title>&lt;tracing_subscriber::fmt::writer::WriteAdaptor as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="38.3495%" y="709" width="0.0118%" height="15" fill="rgb(232,140,52)" fg:x="3239" fg:w="1"/><text x="38.5995%" y="719.50"></text></g><g><title>&lt;tracing_subscriber::fmt::writer::WriteAdaptor as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="38.3614%" y="965" width="0.0118%" height="15" fill="rgb(223,158,51)" fg:x="3240" fg:w="1"/><text x="38.6114%" y="975.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="38.3614%" y="949" width="0.0118%" height="15" fill="rgb(235,29,51)" fg:x="3240" fg:w="1"/><text x="38.6114%" y="959.50"></text></g><g><title>serde_json::ser::Formatter::begin_string (1 samples, 0.01%)</title><rect x="38.3732%" y="869" width="0.0118%" height="15" fill="rgb(215,181,18)" fg:x="3241" fg:w="1"/><text x="38.6232%" y="879.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="38.3732%" y="853" width="0.0118%" height="15" fill="rgb(227,125,34)" fg:x="3241" fg:w="1"/><text x="38.6232%" y="863.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="38.3732%" y="837" width="0.0118%" height="15" fill="rgb(230,197,49)" fg:x="3241" fg:w="1"/><text x="38.6232%" y="847.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (2 samples, 0.02%)</title><rect x="38.3732%" y="933" width="0.0237%" height="15" fill="rgb(239,141,16)" fg:x="3241" fg:w="2"/><text x="38.6232%" y="943.50"></text></g><g><title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.02%)</title><rect x="38.3732%" y="917" width="0.0237%" height="15" fill="rgb(225,105,43)" fg:x="3241" fg:w="2"/><text x="38.6232%" y="927.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (2 samples, 0.02%)</title><rect x="38.3732%" y="901" width="0.0237%" height="15" fill="rgb(214,131,14)" fg:x="3241" fg:w="2"/><text x="38.6232%" y="911.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.02%)</title><rect x="38.3732%" y="885" width="0.0237%" height="15" fill="rgb(229,177,11)" fg:x="3241" fg:w="2"/><text x="38.6232%" y="895.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (1 samples, 0.01%)</title><rect x="38.3850%" y="869" width="0.0118%" height="15" fill="rgb(231,180,14)" fg:x="3242" fg:w="1"/><text x="38.6350%" y="879.50"></text></g><g><title>serde_json::ser::Formatter::write_string_fragment (1 samples, 0.01%)</title><rect x="38.3850%" y="853" width="0.0118%" height="15" fill="rgb(232,88,2)" fg:x="3242" fg:w="1"/><text x="38.6350%" y="863.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="38.3850%" y="837" width="0.0118%" height="15" fill="rgb(205,220,8)" fg:x="3242" fg:w="1"/><text x="38.6350%" y="847.50"></text></g><g><title>&lt;tracing_subscriber::fmt::writer::WriteAdaptor as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="38.3850%" y="821" width="0.0118%" height="15" fill="rgb(225,23,53)" fg:x="3242" fg:w="1"/><text x="38.6350%" y="831.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="38.3850%" y="805" width="0.0118%" height="15" fill="rgb(213,62,29)" fg:x="3242" fg:w="1"/><text x="38.6350%" y="815.50"></text></g><g><title>core::fmt::run (1 samples, 0.01%)</title><rect x="38.3850%" y="789" width="0.0118%" height="15" fill="rgb(227,75,7)" fg:x="3242" fg:w="1"/><text x="38.6350%" y="799.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (3 samples, 0.04%)</title><rect x="38.3732%" y="949" width="0.0355%" height="15" fill="rgb(207,105,14)" fg:x="3241" fg:w="3"/><text x="38.6232%" y="959.50"></text></g><g><title>serde_json::ser::Formatter::begin_object_key (1 samples, 0.01%)</title><rect x="38.3969%" y="933" width="0.0118%" height="15" fill="rgb(245,62,29)" fg:x="3243" fg:w="1"/><text x="38.6469%" y="943.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="38.3969%" y="917" width="0.0118%" height="15" fill="rgb(236,202,4)" fg:x="3243" fg:w="1"/><text x="38.6469%" y="927.50"></text></g><g><title>&lt;tracing_serde::SerializeLevel as serde::ser::Serialize&gt;::serialize (1 samples, 0.01%)</title><rect x="38.4087%" y="933" width="0.0118%" height="15" fill="rgb(250,67,1)" fg:x="3244" fg:w="1"/><text x="38.6587%" y="943.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.01%)</title><rect x="38.4087%" y="917" width="0.0118%" height="15" fill="rgb(253,115,44)" fg:x="3244" fg:w="1"/><text x="38.6587%" y="927.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.01%)</title><rect x="38.4087%" y="901" width="0.0118%" height="15" fill="rgb(251,139,18)" fg:x="3244" fg:w="1"/><text x="38.6587%" y="911.50"></text></g><g><title>serde_json::ser::Formatter::end_string (1 samples, 0.01%)</title><rect x="38.4087%" y="885" width="0.0118%" height="15" fill="rgb(218,22,32)" fg:x="3244" fg:w="1"/><text x="38.6587%" y="895.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="38.4087%" y="869" width="0.0118%" height="15" fill="rgb(243,53,5)" fg:x="3244" fg:w="1"/><text x="38.6587%" y="879.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.01%)</title><rect x="38.4087%" y="853" width="0.0118%" height="15" fill="rgb(227,56,16)" fg:x="3244" fg:w="1"/><text x="38.6587%" y="863.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.01%)</title><rect x="38.4087%" y="837" width="0.0118%" height="15" fill="rgb(245,53,0)" fg:x="3244" fg:w="1"/><text x="38.6587%" y="847.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.01%)</title><rect x="38.4087%" y="821" width="0.0118%" height="15" fill="rgb(216,170,35)" fg:x="3244" fg:w="1"/><text x="38.6587%" y="831.50"></text></g><g><title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.01%)</title><rect x="38.4087%" y="805" width="0.0118%" height="15" fill="rgb(211,200,8)" fg:x="3244" fg:w="1"/><text x="38.6587%" y="815.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.01%)</title><rect x="38.4087%" y="789" width="0.0118%" height="15" fill="rgb(228,204,44)" fg:x="3244" fg:w="1"/><text x="38.6587%" y="799.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.01%)</title><rect x="38.4087%" y="773" width="0.0118%" height="15" fill="rgb(214,121,17)" fg:x="3244" fg:w="1"/><text x="38.6587%" y="783.50"></text></g><g><title>serde_json::ser::Formatter::begin_string (1 samples, 0.01%)</title><rect x="38.4087%" y="757" width="0.0118%" height="15" fill="rgb(233,64,38)" fg:x="3244" fg:w="1"/><text x="38.6587%" y="767.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="38.4087%" y="741" width="0.0118%" height="15" fill="rgb(253,54,19)" fg:x="3244" fg:w="1"/><text x="38.6587%" y="751.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.01%)</title><rect x="38.4087%" y="725" width="0.0118%" height="15" fill="rgb(253,94,18)" fg:x="3244" fg:w="1"/><text x="38.6587%" y="735.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="38.4087%" y="709" width="0.0118%" height="15" fill="rgb(227,57,52)" fg:x="3244" fg:w="1"/><text x="38.6587%" y="719.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="38.4087%" y="693" width="0.0118%" height="15" fill="rgb(230,228,50)" fg:x="3244" fg:w="1"/><text x="38.6587%" y="703.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="38.4087%" y="677" width="0.0118%" height="15" fill="rgb(217,205,27)" fg:x="3244" fg:w="1"/><text x="38.6587%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="38.4087%" y="661" width="0.0118%" height="15" fill="rgb(252,71,50)" fg:x="3244" fg:w="1"/><text x="38.6587%" y="671.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (1 samples, 0.01%)</title><rect x="38.4206%" y="837" width="0.0118%" height="15" fill="rgb(209,86,4)" fg:x="3245" fg:w="1"/><text x="38.6706%" y="847.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.01%)</title><rect x="38.4206%" y="821" width="0.0118%" height="15" fill="rgb(229,94,0)" fg:x="3245" fg:w="1"/><text x="38.6706%" y="831.50"></text></g><g><title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.01%)</title><rect x="38.4206%" y="805" width="0.0118%" height="15" fill="rgb(252,223,21)" fg:x="3245" fg:w="1"/><text x="38.6706%" y="815.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.01%)</title><rect x="38.4206%" y="789" width="0.0118%" height="15" fill="rgb(230,210,4)" fg:x="3245" fg:w="1"/><text x="38.6706%" y="799.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.01%)</title><rect x="38.4206%" y="773" width="0.0118%" height="15" fill="rgb(240,149,38)" fg:x="3245" fg:w="1"/><text x="38.6706%" y="783.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (1 samples, 0.01%)</title><rect x="38.4206%" y="757" width="0.0118%" height="15" fill="rgb(254,105,20)" fg:x="3245" fg:w="1"/><text x="38.6706%" y="767.50"></text></g><g><title>[rotmguard] (1 samples, 0.01%)</title><rect x="38.4324%" y="725" width="0.0118%" height="15" fill="rgb(253,87,46)" fg:x="3246" fg:w="1"/><text x="38.6824%" y="735.50"></text></g><g><title>&lt;tracing_subscriber::fmt::writer::WriteAdaptor as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="38.4324%" y="709" width="0.0118%" height="15" fill="rgb(253,116,33)" fg:x="3246" fg:w="1"/><text x="38.6824%" y="719.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="38.4324%" y="693" width="0.0118%" height="15" fill="rgb(229,198,5)" fg:x="3246" fg:w="1"/><text x="38.6824%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="38.4324%" y="677" width="0.0118%" height="15" fill="rgb(242,38,37)" fg:x="3246" fg:w="1"/><text x="38.6824%" y="687.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="38.4324%" y="661" width="0.0118%" height="15" fill="rgb(242,69,53)" fg:x="3246" fg:w="1"/><text x="38.6824%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="38.4324%" y="645" width="0.0118%" height="15" fill="rgb(249,80,16)" fg:x="3246" fg:w="1"/><text x="38.6824%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="38.4324%" y="629" width="0.0118%" height="15" fill="rgb(206,128,11)" fg:x="3246" fg:w="1"/><text x="38.6824%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="38.4324%" y="613" width="0.0118%" height="15" fill="rgb(212,35,20)" fg:x="3246" fg:w="1"/><text x="38.6824%" y="623.50"></text></g><g><title>&lt;tracing_subscriber::fmt::writer::WriteAdaptor as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="38.4442%" y="661" width="0.0118%" height="15" fill="rgb(236,79,13)" fg:x="3247" fg:w="1"/><text x="38.6942%" y="671.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.01%)</title><rect x="38.4561%" y="645" width="0.0118%" height="15" fill="rgb(233,123,3)" fg:x="3248" fg:w="1"/><text x="38.7061%" y="655.50"></text></g><g><title>core::fmt::builders::DebugStruct::field_with (1 samples, 0.01%)</title><rect x="38.4561%" y="629" width="0.0118%" height="15" fill="rgb(214,93,52)" fg:x="3248" fg:w="1"/><text x="38.7061%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.01%)</title><rect x="38.4561%" y="613" width="0.0118%" height="15" fill="rgb(251,37,40)" fg:x="3248" fg:w="1"/><text x="38.7061%" y="623.50"></text></g><g><title>core::fmt::builders::DebugStruct::field_with::_{{closure}} (1 samples, 0.01%)</title><rect x="38.4561%" y="597" width="0.0118%" height="15" fill="rgb(227,80,54)" fg:x="3248" fg:w="1"/><text x="38.7061%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.01%)</title><rect x="38.4561%" y="581" width="0.0118%" height="15" fill="rgb(254,48,11)" fg:x="3248" fg:w="1"/><text x="38.7061%" y="591.50"></text></g><g><title>&lt;&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::collect_str::Adapter&lt;W,F&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="38.4561%" y="565" width="0.0118%" height="15" fill="rgb(235,193,26)" fg:x="3248" fg:w="1"/><text x="38.7061%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (1 samples, 0.01%)</title><rect x="38.4561%" y="549" width="0.0118%" height="15" fill="rgb(229,99,21)" fg:x="3248" fg:w="1"/><text x="38.7061%" y="559.50"></text></g><g><title>serde_json::ser::Formatter::write_string_fragment (1 samples, 0.01%)</title><rect x="38.4561%" y="533" width="0.0118%" height="15" fill="rgb(211,140,41)" fg:x="3248" fg:w="1"/><text x="38.7061%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="38.4561%" y="517" width="0.0118%" height="15" fill="rgb(240,227,30)" fg:x="3248" fg:w="1"/><text x="38.7061%" y="527.50"></text></g><g><title>&lt;tracing_subscriber::fmt::writer::WriteAdaptor as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="38.4561%" y="501" width="0.0118%" height="15" fill="rgb(215,224,45)" fg:x="3248" fg:w="1"/><text x="38.7061%" y="511.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.01%)</title><rect x="38.4561%" y="485" width="0.0118%" height="15" fill="rgb(206,123,31)" fg:x="3248" fg:w="1"/><text x="38.7061%" y="495.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.01%)</title><rect x="38.4561%" y="469" width="0.0118%" height="15" fill="rgb(210,138,16)" fg:x="3248" fg:w="1"/><text x="38.7061%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.01%)</title><rect x="38.4561%" y="453" width="0.0118%" height="15" fill="rgb(228,57,28)" fg:x="3248" fg:w="1"/><text x="38.7061%" y="463.50"></text></g><g><title>core::fmt::Formatter::debug_struct_fields_finish (2 samples, 0.02%)</title><rect x="38.4561%" y="661" width="0.0237%" height="15" fill="rgb(242,170,10)" fg:x="3248" fg:w="2"/><text x="38.7061%" y="671.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.01%)</title><rect x="38.4679%" y="645" width="0.0118%" height="15" fill="rgb(228,214,39)" fg:x="3249" fg:w="1"/><text x="38.7179%" y="655.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.01%)</title><rect x="38.4679%" y="629" width="0.0118%" height="15" fill="rgb(218,179,33)" fg:x="3249" fg:w="1"/><text x="38.7179%" y="639.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.01%)</title><rect x="38.4798%" y="661" width="0.0118%" height="15" fill="rgb(235,193,39)" fg:x="3250" fg:w="1"/><text x="38.7298%" y="671.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.01%)</title><rect x="38.4798%" y="645" width="0.0118%" height="15" fill="rgb(219,221,36)" fg:x="3250" fg:w="1"/><text x="38.7298%" y="655.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (5 samples, 0.06%)</title><rect x="38.4442%" y="693" width="0.0592%" height="15" fill="rgb(248,218,19)" fg:x="3247" fg:w="5"/><text x="38.6942%" y="703.50"></text></g><g><title>&lt;rotmguard::asset_extract::ProjectileInfo as core::fmt::Debug&gt;::fmt (5 samples, 0.06%)</title><rect x="38.4442%" y="677" width="0.0592%" height="15" fill="rgb(205,50,9)" fg:x="3247" fg:w="5"/><text x="38.6942%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (1 samples, 0.01%)</title><rect x="38.4916%" y="661" width="0.0118%" height="15" fill="rgb(238,81,28)" fg:x="3251" fg:w="1"/><text x="38.7416%" y="671.50"></text></g><g><title>&lt;core::fmt::Arguments as core::fmt::Display&gt;::fmt (1 samples, 0.01%)</title><rect x="38.5034%" y="693" width="0.0118%" height="15" fill="rgb(235,110,19)" fg:x="3252" fg:w="1"/><text x="38.7534%" y="703.50"></text></g><g><title>core::fmt::write (7 samples, 0.08%)</title><rect x="38.4442%" y="725" width="0.0829%" height="15" fill="rgb(214,7,14)" fg:x="3247" fg:w="7"/><text x="38.6942%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (7 samples, 0.08%)</title><rect x="38.4442%" y="709" width="0.0829%" height="15" fill="rgb(211,77,3)" fg:x="3247" fg:w="7"/><text x="38.6942%" y="719.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.01%)</title><rect x="38.5153%" y="693" width="0.0118%" height="15" fill="rgb(229,5,9)" fg:x="3253" fg:w="1"/><text x="38.7653%" y="703.50"></text></g><g><title>&lt;tracing_serde::fields::SerializeFieldMap&lt;tracing_core::event::Event&gt; as serde::ser::Serialize&gt;::serialize (10 samples, 0.12%)</title><rect x="38.4206%" y="933" width="0.1184%" height="15" fill="rgb(225,90,11)" fg:x="3245" fg:w="10"/><text x="38.6706%" y="943.50"></text></g><g><title>tracing_core::event::Event::record (10 samples, 0.12%)</title><rect x="38.4206%" y="917" width="0.1184%" height="15" fill="rgb(242,56,8)" fg:x="3245" fg:w="10"/><text x="38.6706%" y="927.50"></text></g><g><title>tracing_core::field::ValueSet::record (10 samples, 0.12%)</title><rect x="38.4206%" y="901" width="0.1184%" height="15" fill="rgb(249,212,39)" fg:x="3245" fg:w="10"/><text x="38.6706%" y="911.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (10 samples, 0.12%)</title><rect x="38.4206%" y="885" width="0.1184%" height="15" fill="rgb(236,90,9)" fg:x="3245" fg:w="10"/><text x="38.6706%" y="895.50"></text></g><g><title>&lt;tracing_serde::SerdeMapVisitor&lt;S&gt; as tracing_core::field::Visit&gt;::record_debug (10 samples, 0.12%)</title><rect x="38.4206%" y="869" width="0.1184%" height="15" fill="rgb(206,88,35)" fg:x="3245" fg:w="10"/><text x="38.6706%" y="879.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (10 samples, 0.12%)</title><rect x="38.4206%" y="853" width="0.1184%" height="15" fill="rgb(205,126,30)" fg:x="3245" fg:w="10"/><text x="38.6706%" y="863.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.11%)</title><rect x="38.4324%" y="837" width="0.1066%" height="15" fill="rgb(230,176,12)" fg:x="3246" fg:w="9"/><text x="38.6824%" y="847.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for core::fmt::Arguments&gt;::serialize (9 samples, 0.11%)</title><rect x="38.4324%" y="821" width="0.1066%" height="15" fill="rgb(243,19,9)" fg:x="3246" fg:w="9"/><text x="38.6824%" y="831.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::collect_str (9 samples, 0.11%)</title><rect x="38.4324%" y="805" width="0.1066%" height="15" fill="rgb(245,171,17)" fg:x="3246" fg:w="9"/><text x="38.6824%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (9 samples, 0.11%)</title><rect x="38.4324%" y="789" width="0.1066%" height="15" fill="rgb(227,52,21)" fg:x="3246" fg:w="9"/><text x="38.6824%" y="799.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (9 samples, 0.11%)</title><rect x="38.4324%" y="773" width="0.1066%" height="15" fill="rgb(238,69,14)" fg:x="3246" fg:w="9"/><text x="38.6824%" y="783.50"></text></g><g><title>core::fmt::write (9 samples, 0.11%)</title><rect x="38.4324%" y="757" width="0.1066%" height="15" fill="rgb(241,156,39)" fg:x="3246" fg:w="9"/><text x="38.6824%" y="767.50"></text></g><g><title>core::fmt::rt::Argument::fmt (9 samples, 0.11%)</title><rect x="38.4324%" y="741" width="0.1066%" height="15" fill="rgb(212,227,28)" fg:x="3246" fg:w="9"/><text x="38.6824%" y="751.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.01%)</title><rect x="38.5271%" y="725" width="0.0118%" height="15" fill="rgb(209,118,27)" fg:x="3254" fg:w="1"/><text x="38.7771%" y="735.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.01%)</title><rect x="38.5271%" y="709" width="0.0118%" height="15" fill="rgb(226,102,5)" fg:x="3254" fg:w="1"/><text x="38.7771%" y="719.50"></text></g><g><title>tracing_subscriber::fmt::format::json::&lt;impl tracing_subscriber::fmt::format::FormatEvent&lt;S,N&gt; for tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::json::Json,T&gt;&gt;::format_event (33 samples, 0.39%)</title><rect x="38.1601%" y="997" width="0.3907%" height="15" fill="rgb(223,34,3)" fg:x="3223" fg:w="33"/><text x="38.4101%" y="1007.50"></text></g><g><title>tracing_subscriber::fmt::format::json::_&lt;impl tracing_subscriber::fmt::format::FormatEvent&lt;S,N&gt; for tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::json::Json,T&gt;&gt;::format_event::_{{closure}} (23 samples, 0.27%)</title><rect x="38.2785%" y="981" width="0.2723%" height="15" fill="rgb(221,81,38)" fg:x="3233" fg:w="23"/><text x="38.5285%" y="991.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (15 samples, 0.18%)</title><rect x="38.3732%" y="965" width="0.1776%" height="15" fill="rgb(236,219,28)" fg:x="3241" fg:w="15"/><text x="38.6232%" y="975.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.14%)</title><rect x="38.4087%" y="949" width="0.1421%" height="15" fill="rgb(213,200,14)" fg:x="3244" fg:w="12"/><text x="38.6587%" y="959.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (1 samples, 0.01%)</title><rect x="38.5390%" y="933" width="0.0118%" height="15" fill="rgb(240,33,19)" fg:x="3255" fg:w="1"/><text x="38.7890%" y="943.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (1 samples, 0.01%)</title><rect x="38.5390%" y="917" width="0.0118%" height="15" fill="rgb(233,113,27)" fg:x="3255" fg:w="1"/><text x="38.7890%" y="927.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.01%)</title><rect x="38.5390%" y="901" width="0.0118%" height="15" fill="rgb(220,221,18)" fg:x="3255" fg:w="1"/><text x="38.7890%" y="911.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (1 samples, 0.01%)</title><rect x="38.5390%" y="885" width="0.0118%" height="15" fill="rgb(238,92,8)" fg:x="3255" fg:w="1"/><text x="38.7890%" y="895.50"></text></g><g><title>serde_json::ser::Formatter::write_string_fragment (1 samples, 0.01%)</title><rect x="38.5390%" y="869" width="0.0118%" height="15" fill="rgb(222,164,16)" fg:x="3255" fg:w="1"/><text x="38.7890%" y="879.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="38.5390%" y="853" width="0.0118%" height="15" fill="rgb(241,119,3)" fg:x="3255" fg:w="1"/><text x="38.7890%" y="863.50"></text></g><g><title>&lt;tracing_subscriber::fmt::writer::WriteAdaptor as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="38.5390%" y="837" width="0.0118%" height="15" fill="rgb(241,44,8)" fg:x="3255" fg:w="1"/><text x="38.7890%" y="847.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.01%)</title><rect x="38.5390%" y="821" width="0.0118%" height="15" fill="rgb(230,36,40)" fg:x="3255" fg:w="1"/><text x="38.7890%" y="831.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.01%)</title><rect x="38.5390%" y="805" width="0.0118%" height="15" fill="rgb(243,16,36)" fg:x="3255" fg:w="1"/><text x="38.7890%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="38.5508%" y="917" width="0.0118%" height="15" fill="rgb(231,4,26)" fg:x="3256" fg:w="1"/><text x="38.8008%" y="927.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="38.5508%" y="901" width="0.0118%" height="15" fill="rgb(240,9,31)" fg:x="3256" fg:w="1"/><text x="38.8008%" y="911.50"></text></g><g><title>rotmguard::module::autonexus::projectiles::Projectiles::add_bullet::_{{closure}} (36 samples, 0.43%)</title><rect x="38.1482%" y="1093" width="0.4262%" height="15" fill="rgb(207,173,15)" fg:x="3222" fg:w="36"/><text x="38.3982%" y="1103.50"></text></g><g><title>tracing_core::event::Event::dispatch (36 samples, 0.43%)</title><rect x="38.1482%" y="1077" width="0.4262%" height="15" fill="rgb(224,192,53)" fg:x="3222" fg:w="36"/><text x="38.3982%" y="1087.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (36 samples, 0.43%)</title><rect x="38.1482%" y="1061" width="0.4262%" height="15" fill="rgb(223,67,28)" fg:x="3222" fg:w="36"/><text x="38.3982%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (36 samples, 0.43%)</title><rect x="38.1482%" y="1045" width="0.4262%" height="15" fill="rgb(211,20,47)" fg:x="3222" fg:w="36"/><text x="38.3982%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (36 samples, 0.43%)</title><rect x="38.1482%" y="1029" width="0.4262%" height="15" fill="rgb(240,228,2)" fg:x="3222" fg:w="36"/><text x="38.3982%" y="1039.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event::_{{closure}} (36 samples, 0.43%)</title><rect x="38.1482%" y="1013" width="0.4262%" height="15" fill="rgb(248,151,12)" fg:x="3222" fg:w="36"/><text x="38.3982%" y="1023.50"></text></g><g><title>tracing_subscriber::fmt::writer::MakeWriter::make_writer_for (2 samples, 0.02%)</title><rect x="38.5508%" y="997" width="0.0237%" height="15" fill="rgb(244,8,39)" fg:x="3256" fg:w="2"/><text x="38.8008%" y="1007.50"></text></g><g><title>&lt;&amp;rotmguard::logging::LogBuffer as tracing_subscriber::fmt::writer::MakeWriter&gt;::make_writer (2 samples, 0.02%)</title><rect x="38.5508%" y="981" width="0.0237%" height="15" fill="rgb(222,26,8)" fg:x="3256" fg:w="2"/><text x="38.8008%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (2 samples, 0.02%)</title><rect x="38.5508%" y="965" width="0.0237%" height="15" fill="rgb(213,106,44)" fg:x="3256" fg:w="2"/><text x="38.8008%" y="975.50"></text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.02%)</title><rect x="38.5508%" y="949" width="0.0237%" height="15" fill="rgb(214,129,20)" fg:x="3256" fg:w="2"/><text x="38.8008%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.02%)</title><rect x="38.5508%" y="933" width="0.0237%" height="15" fill="rgb(212,32,13)" fg:x="3256" fg:w="2"/><text x="38.8008%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.01%)</title><rect x="38.5626%" y="917" width="0.0118%" height="15" fill="rgb(208,168,33)" fg:x="3257" fg:w="1"/><text x="38.8126%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position::check::_{{closure}} (1 samples, 0.01%)</title><rect x="38.5626%" y="901" width="0.0118%" height="15" fill="rgb(231,207,8)" fg:x="3257" fg:w="1"/><text x="38.8126%" y="911.50"></text></g><g><title>rotmguard::module::autonexus::projectiles::Projectiles::add_bullet (41 samples, 0.49%)</title><rect x="38.1009%" y="1109" width="0.4854%" height="15" fill="rgb(235,219,23)" fg:x="3218" fg:w="41"/><text x="38.3509%" y="1119.50"></text></g><g><title>tracing_subscriber::fmt::writer::MakeWriter::make_writer_for (1 samples, 0.01%)</title><rect x="38.5745%" y="1093" width="0.0118%" height="15" fill="rgb(226,216,26)" fg:x="3258" fg:w="1"/><text x="38.8245%" y="1103.50"></text></g><g><title>&lt;&amp;rotmguard::logging::LogBuffer as tracing_subscriber::fmt::writer::MakeWriter&gt;::make_writer (1 samples, 0.01%)</title><rect x="38.5745%" y="1077" width="0.0118%" height="15" fill="rgb(239,137,16)" fg:x="3258" fg:w="1"/><text x="38.8245%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (1 samples, 0.01%)</title><rect x="38.5745%" y="1061" width="0.0118%" height="15" fill="rgb(207,12,36)" fg:x="3258" fg:w="1"/><text x="38.8245%" y="1071.50"></text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.01%)</title><rect x="38.5745%" y="1045" width="0.0118%" height="15" fill="rgb(210,214,24)" fg:x="3258" fg:w="1"/><text x="38.8245%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="38.5745%" y="1029" width="0.0118%" height="15" fill="rgb(206,56,30)" fg:x="3258" fg:w="1"/><text x="38.8245%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="38.5745%" y="1013" width="0.0118%" height="15" fill="rgb(228,143,26)" fg:x="3258" fg:w="1"/><text x="38.8245%" y="1023.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="38.5745%" y="997" width="0.0118%" height="15" fill="rgb(216,218,46)" fg:x="3258" fg:w="1"/><text x="38.8245%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.01%)</title><rect x="38.5863%" y="1093" width="0.0118%" height="15" fill="rgb(206,6,19)" fg:x="3259" fg:w="1"/><text x="38.8363%" y="1103.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (1 samples, 0.01%)</title><rect x="38.5863%" y="1077" width="0.0118%" height="15" fill="rgb(239,177,51)" fg:x="3259" fg:w="1"/><text x="38.8363%" y="1087.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.01%)</title><rect x="38.5863%" y="1061" width="0.0118%" height="15" fill="rgb(216,55,25)" fg:x="3259" fg:w="1"/><text x="38.8363%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (1 samples, 0.01%)</title><rect x="38.5982%" y="1045" width="0.0118%" height="15" fill="rgb(231,163,29)" fg:x="3260" fg:w="1"/><text x="38.8482%" y="1055.50"></text></g><g><title>rotmguard::module::autonexus::projectiles::Projectiles::add_remove_objects (1 samples, 0.01%)</title><rect x="38.5982%" y="1029" width="0.0118%" height="15" fill="rgb(232,149,50)" fg:x="3260" fg:w="1"/><text x="38.8482%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (1 samples, 0.01%)</title><rect x="38.5982%" y="1013" width="0.0118%" height="15" fill="rgb(223,142,48)" fg:x="3260" fg:w="1"/><text x="38.8482%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove_entry (1 samples, 0.01%)</title><rect x="38.5982%" y="997" width="0.0118%" height="15" fill="rgb(245,83,23)" fg:x="3260" fg:w="1"/><text x="38.8482%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.01%)</title><rect x="38.5982%" y="981" width="0.0118%" height="15" fill="rgb(224,63,2)" fg:x="3260" fg:w="1"/><text x="38.8482%" y="991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1 samples, 0.01%)</title><rect x="38.5982%" y="965" width="0.0118%" height="15" fill="rgb(218,65,53)" fg:x="3260" fg:w="1"/><text x="38.8482%" y="975.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1 samples, 0.01%)</title><rect x="38.5982%" y="949" width="0.0118%" height="15" fill="rgb(221,84,29)" fg:x="3260" fg:w="1"/><text x="38.8482%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="38.5982%" y="933" width="0.0118%" height="15" fill="rgb(234,0,32)" fg:x="3260" fg:w="1"/><text x="38.8482%" y="943.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="38.5982%" y="917" width="0.0118%" height="15" fill="rgb(206,20,16)" fg:x="3260" fg:w="1"/><text x="38.8482%" y="927.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="38.5982%" y="901" width="0.0118%" height="15" fill="rgb(244,172,18)" fg:x="3260" fg:w="1"/><text x="38.8482%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="38.6100%" y="949" width="0.0118%" height="15" fill="rgb(254,133,1)" fg:x="3261" fg:w="1"/><text x="38.8600%" y="959.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="38.6100%" y="933" width="0.0118%" height="15" fill="rgb(222,206,41)" fg:x="3261" fg:w="1"/><text x="38.8600%" y="943.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="38.6100%" y="917" width="0.0118%" height="15" fill="rgb(212,3,42)" fg:x="3261" fg:w="1"/><text x="38.8600%" y="927.50"></text></g><g><title>rotmguard::module::autonexus::projectiles::Projectiles::add_remove_objects (4 samples, 0.05%)</title><rect x="38.5863%" y="1109" width="0.0474%" height="15" fill="rgb(241,11,4)" fg:x="3259" fg:w="4"/><text x="38.8363%" y="1119.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (3 samples, 0.04%)</title><rect x="38.5982%" y="1093" width="0.0355%" height="15" fill="rgb(205,19,26)" fg:x="3260" fg:w="3"/><text x="38.8482%" y="1103.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove_entry (3 samples, 0.04%)</title><rect x="38.5982%" y="1077" width="0.0355%" height="15" fill="rgb(210,179,32)" fg:x="3260" fg:w="3"/><text x="38.8482%" y="1087.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_entry (3 samples, 0.04%)</title><rect x="38.5982%" y="1061" width="0.0355%" height="15" fill="rgb(227,116,49)" fg:x="3260" fg:w="3"/><text x="38.8482%" y="1071.50"></text></g><g><title>rotmguard::module::autonexus::projectiles::Projectiles::add_remove_objects (2 samples, 0.02%)</title><rect x="38.6100%" y="1045" width="0.0237%" height="15" fill="rgb(211,146,6)" fg:x="3261" fg:w="2"/><text x="38.8600%" y="1055.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (2 samples, 0.02%)</title><rect x="38.6100%" y="1029" width="0.0237%" height="15" fill="rgb(219,44,39)" fg:x="3261" fg:w="2"/><text x="38.8600%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove_entry (2 samples, 0.02%)</title><rect x="38.6100%" y="1013" width="0.0237%" height="15" fill="rgb(234,128,11)" fg:x="3261" fg:w="2"/><text x="38.8600%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (2 samples, 0.02%)</title><rect x="38.6100%" y="997" width="0.0237%" height="15" fill="rgb(220,183,53)" fg:x="3261" fg:w="2"/><text x="38.8600%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (2 samples, 0.02%)</title><rect x="38.6100%" y="981" width="0.0237%" height="15" fill="rgb(213,219,32)" fg:x="3261" fg:w="2"/><text x="38.8600%" y="991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (2 samples, 0.02%)</title><rect x="38.6100%" y="965" width="0.0237%" height="15" fill="rgb(232,156,16)" fg:x="3261" fg:w="2"/><text x="38.8600%" y="975.50"></text></g><g><title>&lt;rotmguard::extra_datatypes::ObjectId as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="38.6218%" y="949" width="0.0118%" height="15" fill="rgb(246,135,34)" fg:x="3262" fg:w="1"/><text x="38.8718%" y="959.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (1 samples, 0.01%)</title><rect x="38.6218%" y="933" width="0.0118%" height="15" fill="rgb(241,99,0)" fg:x="3262" fg:w="1"/><text x="38.8718%" y="943.50"></text></g><g><title>&lt;rotmguard::module::autonexus::AutonexusInst as rotmguard::module::ModuleInstance&gt;::server_packet::_{{closure}} (91 samples, 1.08%)</title><rect x="37.5681%" y="1125" width="1.0774%" height="15" fill="rgb(222,103,45)" fg:x="3173" fg:w="91"/><text x="37.8181%" y="1135.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="38.6337%" y="1109" width="0.0118%" height="15" fill="rgb(212,57,4)" fg:x="3263" fg:w="1"/><text x="38.8837%" y="1119.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="38.6337%" y="1093" width="0.0118%" height="15" fill="rgb(215,68,47)" fg:x="3263" fg:w="1"/><text x="38.8837%" y="1103.50"></text></g><g><title>std::sync::poison::Flag::guard (1 samples, 0.01%)</title><rect x="38.6337%" y="1077" width="0.0118%" height="15" fill="rgb(230,84,2)" fg:x="3263" fg:w="1"/><text x="38.8837%" y="1087.50"></text></g><g><title>std::thread::panicking (1 samples, 0.01%)</title><rect x="38.6337%" y="1061" width="0.0118%" height="15" fill="rgb(220,102,14)" fg:x="3263" fg:w="1"/><text x="38.8837%" y="1071.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.01%)</title><rect x="38.6337%" y="1045" width="0.0118%" height="15" fill="rgb(240,10,32)" fg:x="3263" fg:w="1"/><text x="38.8837%" y="1055.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.01%)</title><rect x="38.6337%" y="1029" width="0.0118%" height="15" fill="rgb(215,47,27)" fg:x="3263" fg:w="1"/><text x="38.8837%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="38.6337%" y="1013" width="0.0118%" height="15" fill="rgb(233,188,43)" fg:x="3263" fg:w="1"/><text x="38.8837%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="38.6337%" y="997" width="0.0118%" height="15" fill="rgb(253,190,1)" fg:x="3263" fg:w="1"/><text x="38.8837%" y="1007.50"></text></g><g><title>&lt;rotmguard::module::general::GeneralInst as rotmguard::module::ModuleInstance&gt;::server_packet::_{{closure}} (1 samples, 0.01%)</title><rect x="38.6455%" y="1125" width="0.0118%" height="15" fill="rgb(206,114,52)" fg:x="3264" fg:w="1"/><text x="38.8955%" y="1135.50"></text></g><g><title>apic_ack_irq (1 samples, 0.01%)</title><rect x="38.6574%" y="1061" width="0.0118%" height="15" fill="rgb(233,120,37)" fg:x="3265" fg:w="1"/><text x="38.9074%" y="1071.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="38.6574%" y="1125" width="0.0237%" height="15" fill="rgb(214,52,39)" fg:x="3265" fg:w="2"/><text x="38.9074%" y="1135.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="38.6574%" y="1109" width="0.0237%" height="15" fill="rgb(223,80,29)" fg:x="3265" fg:w="2"/><text x="38.9074%" y="1119.50"></text></g><g><title>__common_interrupt (2 samples, 0.02%)</title><rect x="38.6574%" y="1093" width="0.0237%" height="15" fill="rgb(230,101,40)" fg:x="3265" fg:w="2"/><text x="38.9074%" y="1103.50"></text></g><g><title>handle_edge_irq (2 samples, 0.02%)</title><rect x="38.6574%" y="1077" width="0.0237%" height="15" fill="rgb(219,211,8)" fg:x="3265" fg:w="2"/><text x="38.9074%" y="1087.50"></text></g><g><title>handle_irq_event (1 samples, 0.01%)</title><rect x="38.6692%" y="1061" width="0.0118%" height="15" fill="rgb(252,126,28)" fg:x="3266" fg:w="1"/><text x="38.9192%" y="1071.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="38.6692%" y="1045" width="0.0118%" height="15" fill="rgb(215,56,38)" fg:x="3266" fg:w="1"/><text x="38.9192%" y="1055.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="38.6692%" y="1029" width="0.0118%" height="15" fill="rgb(249,55,44)" fg:x="3266" fg:w="1"/><text x="38.9192%" y="1039.50"></text></g><g><title>&lt;rotmguard::module::RootModuleInstance as rotmguard::module::ModuleInstance&gt;::server_packet::_{{closure}} (96 samples, 1.14%)</title><rect x="37.5562%" y="1141" width="1.1366%" height="15" fill="rgb(220,221,32)" fg:x="3172" fg:w="96"/><text x="37.8062%" y="1151.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="38.6810%" y="1125" width="0.0118%" height="15" fill="rgb(212,216,41)" fg:x="3267" fg:w="1"/><text x="38.9310%" y="1135.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="38.6810%" y="1109" width="0.0118%" height="15" fill="rgb(228,213,43)" fg:x="3267" fg:w="1"/><text x="38.9310%" y="1119.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.01%)</title><rect x="38.6810%" y="1093" width="0.0118%" height="15" fill="rgb(211,31,26)" fg:x="3267" fg:w="1"/><text x="38.9310%" y="1103.50"></text></g><g><title>handle_softirqs (1 samples, 0.01%)</title><rect x="38.6810%" y="1077" width="0.0118%" height="15" fill="rgb(229,202,19)" fg:x="3267" fg:w="1"/><text x="38.9310%" y="1087.50"></text></g><g><title>rcu_core (1 samples, 0.01%)</title><rect x="38.6810%" y="1061" width="0.0118%" height="15" fill="rgb(229,105,46)" fg:x="3267" fg:w="1"/><text x="38.9310%" y="1071.50"></text></g><g><title>rcu_do_batch (1 samples, 0.01%)</title><rect x="38.6810%" y="1045" width="0.0118%" height="15" fill="rgb(235,108,1)" fg:x="3267" fg:w="1"/><text x="38.9310%" y="1055.50"></text></g><g><title>rcu_cblist_dequeue (1 samples, 0.01%)</title><rect x="38.6810%" y="1029" width="0.0118%" height="15" fill="rgb(245,111,35)" fg:x="3267" fg:w="1"/><text x="38.9310%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="38.6929%" y="1045" width="0.0118%" height="15" fill="rgb(219,185,31)" fg:x="3268" fg:w="1"/><text x="38.9429%" y="1055.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="38.6929%" y="1029" width="0.0118%" height="15" fill="rgb(214,4,43)" fg:x="3268" fg:w="1"/><text x="38.9429%" y="1039.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="38.6929%" y="1013" width="0.0118%" height="15" fill="rgb(235,227,40)" fg:x="3268" fg:w="1"/><text x="38.9429%" y="1023.50"></text></g><g><title>realloc (1 samples, 0.01%)</title><rect x="38.6929%" y="997" width="0.0118%" height="15" fill="rgb(230,88,30)" fg:x="3268" fg:w="1"/><text x="38.9429%" y="1007.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="38.6929%" y="981" width="0.0118%" height="15" fill="rgb(216,217,1)" fg:x="3268" fg:w="1"/><text x="38.9429%" y="991.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="38.6929%" y="965" width="0.0118%" height="15" fill="rgb(248,139,50)" fg:x="3268" fg:w="1"/><text x="38.9429%" y="975.50"></text></g><g><title>&lt;rotmguard::packets::_62_move::Move as rotmguard::read::RPRead&gt;::rp_read (2 samples, 0.02%)</title><rect x="38.7047%" y="1045" width="0.0237%" height="15" fill="rgb(233,1,21)" fg:x="3269" fg:w="2"/><text x="38.9547%" y="1055.50"></text></g><g><title>__rust_alloc (2 samples, 0.02%)</title><rect x="38.7284%" y="1045" width="0.0237%" height="15" fill="rgb(215,183,12)" fg:x="3271" fg:w="2"/><text x="38.9784%" y="1055.50"></text></g><g><title>&lt;rotmguard::packets::ClientPacket as rotmguard::read::RPRead&gt;::rp_read (6 samples, 0.07%)</title><rect x="38.6929%" y="1141" width="0.0710%" height="15" fill="rgb(229,104,42)" fg:x="3268" fg:w="6"/><text x="38.9429%" y="1151.50"></text></g><g><title>&lt;rotmguard::packets::_62_move::Move as rotmguard::read::RPRead&gt;::rp_read (6 samples, 0.07%)</title><rect x="38.6929%" y="1125" width="0.0710%" height="15" fill="rgb(243,34,48)" fg:x="3268" fg:w="6"/><text x="38.9429%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.07%)</title><rect x="38.6929%" y="1109" width="0.0710%" height="15" fill="rgb(239,11,44)" fg:x="3268" fg:w="6"/><text x="38.9429%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (6 samples, 0.07%)</title><rect x="38.6929%" y="1093" width="0.0710%" height="15" fill="rgb(231,98,35)" fg:x="3268" fg:w="6"/><text x="38.9429%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.07%)</title><rect x="38.6929%" y="1077" width="0.0710%" height="15" fill="rgb(233,28,25)" fg:x="3268" fg:w="6"/><text x="38.9429%" y="1087.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.07%)</title><rect x="38.6929%" y="1061" width="0.0710%" height="15" fill="rgb(234,123,11)" fg:x="3268" fg:w="6"/><text x="38.9429%" y="1071.50"></text></g><g><title>rc4::Rc4State::prga (1 samples, 0.01%)</title><rect x="38.7521%" y="1045" width="0.0118%" height="15" fill="rgb(220,69,3)" fg:x="3273" fg:w="1"/><text x="39.0021%" y="1055.50"></text></g><g><title>core::num::&lt;impl u8&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="38.7521%" y="1029" width="0.0118%" height="15" fill="rgb(214,64,36)" fg:x="3273" fg:w="1"/><text x="39.0021%" y="1039.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="38.7639%" y="1077" width="0.0118%" height="15" fill="rgb(211,138,32)" fg:x="3274" fg:w="1"/><text x="39.0139%" y="1087.50"></text></g><g><title>&lt;rotmguard::extra_datatypes::statdata::StatData as rotmguard::read::RPRead&gt;::rp_read (2 samples, 0.02%)</title><rect x="38.7639%" y="1093" width="0.0237%" height="15" fill="rgb(213,118,47)" fg:x="3274" fg:w="2"/><text x="39.0139%" y="1103.50"></text></g><g><title>rotmguard::read::read_compressed_int (1 samples, 0.01%)</title><rect x="38.7758%" y="1077" width="0.0118%" height="15" fill="rgb(243,124,49)" fg:x="3275" fg:w="1"/><text x="39.0258%" y="1087.50"></text></g><g><title>&lt;u8 as rotmguard::read::RPRead&gt;::rp_read (1 samples, 0.01%)</title><rect x="38.7758%" y="1061" width="0.0118%" height="15" fill="rgb(221,30,28)" fg:x="3275" fg:w="1"/><text x="39.0258%" y="1071.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (1 samples, 0.01%)</title><rect x="38.7758%" y="1045" width="0.0118%" height="15" fill="rgb(246,37,13)" fg:x="3275" fg:w="1"/><text x="39.0258%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="38.7876%" y="1093" width="0.0118%" height="15" fill="rgb(249,66,14)" fg:x="3276" fg:w="1"/><text x="39.0376%" y="1103.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="38.7876%" y="1077" width="0.0118%" height="15" fill="rgb(213,166,5)" fg:x="3276" fg:w="1"/><text x="39.0376%" y="1087.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="38.7994%" y="981" width="0.0118%" height="15" fill="rgb(221,66,24)" fg:x="3277" fg:w="1"/><text x="39.0494%" y="991.50"></text></g><g><title>&lt;rotmguard::extra_datatypes::statdata::StatData as rotmguard::read::RPRead&gt;::rp_read (1 samples, 0.01%)</title><rect x="38.8231%" y="965" width="0.0118%" height="15" fill="rgb(210,132,17)" fg:x="3279" fg:w="1"/><text x="39.0731%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (1 samples, 0.01%)</title><rect x="38.8231%" y="949" width="0.0118%" height="15" fill="rgb(243,202,5)" fg:x="3279" fg:w="1"/><text x="39.0731%" y="959.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceContains&gt;::slice_contains (1 samples, 0.01%)</title><rect x="38.8231%" y="933" width="0.0118%" height="15" fill="rgb(233,70,48)" fg:x="3279" fg:w="1"/><text x="39.0731%" y="943.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.01%)</title><rect x="38.8231%" y="917" width="0.0118%" height="15" fill="rgb(238,41,26)" fg:x="3279" fg:w="1"/><text x="39.0731%" y="927.50"></text></g><g><title>core::slice::memchr::memchr_naive (1 samples, 0.01%)</title><rect x="38.8231%" y="901" width="0.0118%" height="15" fill="rgb(241,19,31)" fg:x="3279" fg:w="1"/><text x="39.0731%" y="911.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="38.8350%" y="965" width="0.0355%" height="15" fill="rgb(214,76,10)" fg:x="3280" fg:w="3"/><text x="39.0850%" y="975.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="38.8586%" y="949" width="0.0118%" height="15" fill="rgb(254,202,22)" fg:x="3282" fg:w="1"/><text x="39.1086%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.09%)</title><rect x="38.7994%" y="1093" width="0.0947%" height="15" fill="rgb(214,72,24)" fg:x="3277" fg:w="8"/><text x="39.0494%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.09%)</title><rect x="38.7994%" y="1077" width="0.0947%" height="15" fill="rgb(221,92,46)" fg:x="3277" fg:w="8"/><text x="39.0494%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.09%)</title><rect x="38.7994%" y="1061" width="0.0947%" height="15" fill="rgb(246,13,50)" fg:x="3277" fg:w="8"/><text x="39.0494%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (8 samples, 0.09%)</title><rect x="38.7994%" y="1045" width="0.0947%" height="15" fill="rgb(240,165,38)" fg:x="3277" fg:w="8"/><text x="39.0494%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.09%)</title><rect x="38.7994%" y="1029" width="0.0947%" height="15" fill="rgb(241,24,51)" fg:x="3277" fg:w="8"/><text x="39.0494%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.09%)</title><rect x="38.7994%" y="1013" width="0.0947%" height="15" fill="rgb(227,51,44)" fg:x="3277" fg:w="8"/><text x="39.0494%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.09%)</title><rect x="38.7994%" y="997" width="0.0947%" height="15" fill="rgb(231,121,3)" fg:x="3277" fg:w="8"/><text x="39.0494%" y="1007.50"></text></g><g><title>malloc (7 samples, 0.08%)</title><rect x="38.8113%" y="981" width="0.0829%" height="15" fill="rgb(245,3,41)" fg:x="3278" fg:w="7"/><text x="39.0613%" y="991.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="38.8705%" y="965" width="0.0237%" height="15" fill="rgb(214,13,26)" fg:x="3283" fg:w="2"/><text x="39.1205%" y="975.50"></text></g><g><title>&lt;rotmguard::extra_datatypes::object_status_data::ObjectStatusData as rotmguard::read::RPRead&gt;::rp_read (12 samples, 0.14%)</title><rect x="38.7639%" y="1109" width="0.1421%" height="15" fill="rgb(252,75,11)" fg:x="3274" fg:w="12"/><text x="39.0139%" y="1119.50"></text></g><g><title>rotmguard::read::read_compressed_int (1 samples, 0.01%)</title><rect x="38.8942%" y="1093" width="0.0118%" height="15" fill="rgb(218,226,17)" fg:x="3285" fg:w="1"/><text x="39.1442%" y="1103.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="38.9060%" y="997" width="0.0118%" height="15" fill="rgb(248,89,38)" fg:x="3286" fg:w="1"/><text x="39.1560%" y="1007.50"></text></g><g><title>malloc (7 samples, 0.08%)</title><rect x="38.9178%" y="997" width="0.0829%" height="15" fill="rgb(237,73,46)" fg:x="3287" fg:w="7"/><text x="39.1678%" y="1007.50"></text></g><g><title>[libc.so.6] (6 samples, 0.07%)</title><rect x="38.9297%" y="981" width="0.0710%" height="15" fill="rgb(242,78,33)" fg:x="3288" fg:w="6"/><text x="39.1797%" y="991.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="38.9534%" y="965" width="0.0474%" height="15" fill="rgb(235,60,3)" fg:x="3290" fg:w="4"/><text x="39.2034%" y="975.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="38.9889%" y="949" width="0.0118%" height="15" fill="rgb(216,172,19)" fg:x="3293" fg:w="1"/><text x="39.2389%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (9 samples, 0.11%)</title><rect x="38.9060%" y="1109" width="0.1066%" height="15" fill="rgb(227,6,42)" fg:x="3286" fg:w="9"/><text x="39.1560%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.11%)</title><rect x="38.9060%" y="1093" width="0.1066%" height="15" fill="rgb(223,207,42)" fg:x="3286" fg:w="9"/><text x="39.1560%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.11%)</title><rect x="38.9060%" y="1077" width="0.1066%" height="15" fill="rgb(246,138,30)" fg:x="3286" fg:w="9"/><text x="39.1560%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (9 samples, 0.11%)</title><rect x="38.9060%" y="1061" width="0.1066%" height="15" fill="rgb(251,199,47)" fg:x="3286" fg:w="9"/><text x="39.1560%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.11%)</title><rect x="38.9060%" y="1045" width="0.1066%" height="15" fill="rgb(228,218,44)" fg:x="3286" fg:w="9"/><text x="39.1560%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.11%)</title><rect x="38.9060%" y="1029" width="0.1066%" height="15" fill="rgb(220,68,6)" fg:x="3286" fg:w="9"/><text x="39.1560%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.11%)</title><rect x="38.9060%" y="1013" width="0.1066%" height="15" fill="rgb(240,60,26)" fg:x="3286" fg:w="9"/><text x="39.1560%" y="1023.50"></text></g><g><title>rc4::Rc4State::prga (1 samples, 0.01%)</title><rect x="39.0007%" y="997" width="0.0118%" height="15" fill="rgb(211,200,19)" fg:x="3294" fg:w="1"/><text x="39.2507%" y="1007.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.02%)</title><rect x="39.0481%" y="1077" width="0.0237%" height="15" fill="rgb(242,145,30)" fg:x="3298" fg:w="2"/><text x="39.2981%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="39.0717%" y="1077" width="0.0118%" height="15" fill="rgb(225,64,13)" fg:x="3300" fg:w="1"/><text x="39.3217%" y="1087.50"></text></g><g><title>&lt;rotmguard::packets::_10_new_tick::NewTick as rotmguard::read::RPRead&gt;::rp_read (28 samples, 0.33%)</title><rect x="38.7639%" y="1125" width="0.3315%" height="15" fill="rgb(218,103,35)" fg:x="3274" fg:w="28"/><text x="39.0139%" y="1135.50"></text></g><g><title>malloc (7 samples, 0.08%)</title><rect x="39.0126%" y="1109" width="0.0829%" height="15" fill="rgb(216,93,46)" fg:x="3295" fg:w="7"/><text x="39.2626%" y="1119.50"></text></g><g><title>&lt;rotmguard::extra_datatypes::object_status_data::ObjectStatusData as rotmguard::read::RPRead&gt;::rp_read (7 samples, 0.08%)</title><rect x="39.0126%" y="1093" width="0.0829%" height="15" fill="rgb(225,159,27)" fg:x="3295" fg:w="7"/><text x="39.2626%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.01%)</title><rect x="39.0836%" y="1077" width="0.0118%" height="15" fill="rgb(225,204,11)" fg:x="3301" fg:w="1"/><text x="39.3336%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="39.0836%" y="1061" width="0.0118%" height="15" fill="rgb(205,56,4)" fg:x="3301" fg:w="1"/><text x="39.3336%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="39.0836%" y="1045" width="0.0118%" height="15" fill="rgb(206,6,35)" fg:x="3301" fg:w="1"/><text x="39.3336%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.01%)</title><rect x="39.0836%" y="1029" width="0.0118%" height="15" fill="rgb(247,73,52)" fg:x="3301" fg:w="1"/><text x="39.3336%" y="1039.50"></text></g><g><title>&lt;rotmguard::packets::_11_show_effect::ShowEffect as rotmguard::read::RPRead&gt;::rp_read (1 samples, 0.01%)</title><rect x="39.0954%" y="1125" width="0.0118%" height="15" fill="rgb(246,97,4)" fg:x="3302" fg:w="1"/><text x="39.3454%" y="1135.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="39.0954%" y="1109" width="0.0118%" height="15" fill="rgb(212,37,15)" fg:x="3302" fg:w="1"/><text x="39.3454%" y="1119.50"></text></g><g><title>&lt;rotmguard::extra_datatypes::statdata::StatData as rotmguard::read::RPRead&gt;::rp_read (5 samples, 0.06%)</title><rect x="39.1073%" y="1093" width="0.0592%" height="15" fill="rgb(208,130,40)" fg:x="3303" fg:w="5"/><text x="39.3573%" y="1103.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (3 samples, 0.04%)</title><rect x="39.1309%" y="1077" width="0.0355%" height="15" fill="rgb(236,55,29)" fg:x="3305" fg:w="3"/><text x="39.3809%" y="1087.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceContains&gt;::slice_contains (3 samples, 0.04%)</title><rect x="39.1309%" y="1061" width="0.0355%" height="15" fill="rgb(209,156,45)" fg:x="3305" fg:w="3"/><text x="39.3809%" y="1071.50"></text></g><g><title>core::slice::memchr::memchr (3 samples, 0.04%)</title><rect x="39.1309%" y="1045" width="0.0355%" height="15" fill="rgb(249,107,4)" fg:x="3305" fg:w="3"/><text x="39.3809%" y="1055.50"></text></g><g><title>core::slice::memchr::memchr_naive (3 samples, 0.04%)</title><rect x="39.1309%" y="1029" width="0.0355%" height="15" fill="rgb(227,7,13)" fg:x="3305" fg:w="3"/><text x="39.3809%" y="1039.50"></text></g><g><title>&lt;rotmguard::extra_datatypes::object_status_data::ObjectStatusData as rotmguard::read::RPRead&gt;::rp_read (6 samples, 0.07%)</title><rect x="39.1073%" y="1109" width="0.0710%" height="15" fill="rgb(250,129,14)" fg:x="3303" fg:w="6"/><text x="39.3573%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.01%)</title><rect x="39.1665%" y="1093" width="0.0118%" height="15" fill="rgb(229,92,13)" fg:x="3308" fg:w="1"/><text x="39.4165%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="39.1665%" y="1077" width="0.0118%" height="15" fill="rgb(245,98,39)" fg:x="3308" fg:w="1"/><text x="39.4165%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="39.1665%" y="1061" width="0.0118%" height="15" fill="rgb(234,135,48)" fg:x="3308" fg:w="1"/><text x="39.4165%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1 samples, 0.01%)</title><rect x="39.1665%" y="1045" width="0.0118%" height="15" fill="rgb(230,98,28)" fg:x="3308" fg:w="1"/><text x="39.4165%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="39.1665%" y="1029" width="0.0118%" height="15" fill="rgb(223,121,0)" fg:x="3308" fg:w="1"/><text x="39.4165%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="39.1665%" y="1013" width="0.0118%" height="15" fill="rgb(234,173,33)" fg:x="3308" fg:w="1"/><text x="39.4165%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="39.1665%" y="997" width="0.0118%" height="15" fill="rgb(245,47,8)" fg:x="3308" fg:w="1"/><text x="39.4165%" y="1007.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="39.1665%" y="981" width="0.0118%" height="15" fill="rgb(205,17,20)" fg:x="3308" fg:w="1"/><text x="39.4165%" y="991.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="39.1783%" y="997" width="0.0118%" height="15" fill="rgb(232,151,16)" fg:x="3309" fg:w="1"/><text x="39.4283%" y="1007.50"></text></g><g><title>[rotmguard] (1 samples, 0.01%)</title><rect x="39.1901%" y="997" width="0.0118%" height="15" fill="rgb(208,30,32)" fg:x="3310" fg:w="1"/><text x="39.4401%" y="1007.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="39.1901%" y="981" width="0.0118%" height="15" fill="rgb(254,26,3)" fg:x="3310" fg:w="1"/><text x="39.4401%" y="991.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="39.2020%" y="997" width="0.0118%" height="15" fill="rgb(240,177,30)" fg:x="3311" fg:w="1"/><text x="39.4520%" y="1007.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="39.2138%" y="997" width="0.0118%" height="15" fill="rgb(248,76,44)" fg:x="3312" fg:w="1"/><text x="39.4638%" y="1007.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="39.2138%" y="981" width="0.0118%" height="15" fill="rgb(241,186,54)" fg:x="3312" fg:w="1"/><text x="39.4638%" y="991.50"></text></g><g><title>&lt;rotmguard::packets::_42_update::UpdatePacket as rotmguard::read::RPRead&gt;::rp_read (13 samples, 0.15%)</title><rect x="39.1073%" y="1125" width="0.1539%" height="15" fill="rgb(249,171,29)" fg:x="3303" fg:w="13"/><text x="39.3573%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (7 samples, 0.08%)</title><rect x="39.1783%" y="1109" width="0.0829%" height="15" fill="rgb(237,151,44)" fg:x="3309" fg:w="7"/><text x="39.4283%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.08%)</title><rect x="39.1783%" y="1093" width="0.0829%" height="15" fill="rgb(228,174,30)" fg:x="3309" fg:w="7"/><text x="39.4283%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.08%)</title><rect x="39.1783%" y="1077" width="0.0829%" height="15" fill="rgb(252,14,37)" fg:x="3309" fg:w="7"/><text x="39.4283%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (7 samples, 0.08%)</title><rect x="39.1783%" y="1061" width="0.0829%" height="15" fill="rgb(207,111,40)" fg:x="3309" fg:w="7"/><text x="39.4283%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.08%)</title><rect x="39.1783%" y="1045" width="0.0829%" height="15" fill="rgb(248,171,54)" fg:x="3309" fg:w="7"/><text x="39.4283%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.08%)</title><rect x="39.1783%" y="1029" width="0.0829%" height="15" fill="rgb(211,127,2)" fg:x="3309" fg:w="7"/><text x="39.4283%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.08%)</title><rect x="39.1783%" y="1013" width="0.0829%" height="15" fill="rgb(236,87,47)" fg:x="3309" fg:w="7"/><text x="39.4283%" y="1023.50"></text></g><g><title>rotmguard::read::read_compressed_int (3 samples, 0.04%)</title><rect x="39.2257%" y="997" width="0.0355%" height="15" fill="rgb(223,190,45)" fg:x="3313" fg:w="3"/><text x="39.4757%" y="1007.50"></text></g><g><title>&lt;u8 as rotmguard::read::RPRead&gt;::rp_read (3 samples, 0.04%)</title><rect x="39.2257%" y="981" width="0.0355%" height="15" fill="rgb(215,5,16)" fg:x="3313" fg:w="3"/><text x="39.4757%" y="991.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (3 samples, 0.04%)</title><rect x="39.2257%" y="965" width="0.0355%" height="15" fill="rgb(252,82,33)" fg:x="3313" fg:w="3"/><text x="39.4757%" y="975.50"></text></g><g><title>&lt;rotmguard::packets::_67_notification::NotificationPacket as rotmguard::read::RPRead&gt;::rp_read (1 samples, 0.01%)</title><rect x="39.2612%" y="1093" width="0.0118%" height="15" fill="rgb(247,213,44)" fg:x="3316" fg:w="1"/><text x="39.5112%" y="1103.50"></text></g><g><title>&lt;rotmguard::packets::_67_notification::NotificationPacket as rotmguard::read::RPRead&gt;::rp_read (2 samples, 0.02%)</title><rect x="39.2612%" y="1125" width="0.0237%" height="15" fill="rgb(205,196,44)" fg:x="3316" fg:w="2"/><text x="39.5112%" y="1135.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;str&gt; as rotmguard::read::RPRead&gt;::rp_read (2 samples, 0.02%)</title><rect x="39.2612%" y="1109" width="0.0237%" height="15" fill="rgb(237,96,54)" fg:x="3316" fg:w="2"/><text x="39.5112%" y="1119.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="39.2730%" y="1093" width="0.0118%" height="15" fill="rgb(230,113,34)" fg:x="3317" fg:w="1"/><text x="39.5230%" y="1103.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="39.2849%" y="1125" width="0.0118%" height="15" fill="rgb(221,224,12)" fg:x="3318" fg:w="1"/><text x="39.5349%" y="1135.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="39.2967%" y="1125" width="0.0118%" height="15" fill="rgb(219,112,44)" fg:x="3319" fg:w="1"/><text x="39.5467%" y="1135.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="39.2967%" y="1109" width="0.0118%" height="15" fill="rgb(210,31,13)" fg:x="3319" fg:w="1"/><text x="39.5467%" y="1119.50"></text></g><g><title>__common_interrupt (1 samples, 0.01%)</title><rect x="39.2967%" y="1093" width="0.0118%" height="15" fill="rgb(230,25,16)" fg:x="3319" fg:w="1"/><text x="39.5467%" y="1103.50"></text></g><g><title>handle_edge_irq (1 samples, 0.01%)</title><rect x="39.2967%" y="1077" width="0.0118%" height="15" fill="rgb(246,108,53)" fg:x="3319" fg:w="1"/><text x="39.5467%" y="1087.50"></text></g><g><title>clock_gettime (1 samples, 0.01%)</title><rect x="39.3085%" y="1125" width="0.0118%" height="15" fill="rgb(241,172,50)" fg:x="3320" fg:w="1"/><text x="39.5585%" y="1135.50"></text></g><g><title>&lt;rotmguard::packets::ServerPacket as rotmguard::read::RPRead&gt;::rp_read (48 samples, 0.57%)</title><rect x="38.7639%" y="1141" width="0.5683%" height="15" fill="rgb(235,141,10)" fg:x="3274" fg:w="48"/><text x="39.0139%" y="1151.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (1 samples, 0.01%)</title><rect x="39.3204%" y="1125" width="0.0118%" height="15" fill="rgb(220,174,43)" fg:x="3321" fg:w="1"/><text x="39.5704%" y="1135.50"></text></g><g><title>rotmguard::proxy::PacketReader::wait_for_whole_packet::_{{closure}} (1 samples, 0.01%)</title><rect x="39.3204%" y="1109" width="0.0118%" height="15" fill="rgb(215,181,40)" fg:x="3321" fg:w="1"/><text x="39.5704%" y="1119.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (1 samples, 0.01%)</title><rect x="39.3204%" y="1093" width="0.0118%" height="15" fill="rgb(230,97,2)" fg:x="3321" fg:w="1"/><text x="39.5704%" y="1103.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (1 samples, 0.01%)</title><rect x="39.3204%" y="1077" width="0.0118%" height="15" fill="rgb(211,25,27)" fg:x="3321" fg:w="1"/><text x="39.5704%" y="1087.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (1 samples, 0.01%)</title><rect x="39.3204%" y="1061" width="0.0118%" height="15" fill="rgb(230,87,26)" fg:x="3321" fg:w="1"/><text x="39.5704%" y="1071.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (1 samples, 0.01%)</title><rect x="39.3204%" y="1045" width="0.0118%" height="15" fill="rgb(227,160,17)" fg:x="3321" fg:w="1"/><text x="39.5704%" y="1055.50"></text></g><g><title>&lt;rc4::Rc4Core&lt;KeySize&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1 samples, 0.01%)</title><rect x="39.3204%" y="1029" width="0.0118%" height="15" fill="rgb(244,85,34)" fg:x="3321" fg:w="1"/><text x="39.5704%" y="1039.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.01%)</title><rect x="39.3204%" y="1013" width="0.0118%" height="15" fill="rgb(207,70,0)" fg:x="3321" fg:w="1"/><text x="39.5704%" y="1023.50"></text></g><g><title>&lt;rc4::Backend as cipher::stream_core::StreamBackend&gt;::gen_ks_block (1 samples, 0.01%)</title><rect x="39.3204%" y="997" width="0.0118%" height="15" fill="rgb(223,129,7)" fg:x="3321" fg:w="1"/><text x="39.5704%" y="1007.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (1 samples, 0.01%)</title><rect x="39.3441%" y="1109" width="0.0118%" height="15" fill="rgb(246,105,7)" fg:x="3323" fg:w="1"/><text x="39.5941%" y="1119.50"></text></g><g><title>&lt;tokio::net::tcp::split::ReadHalf as tokio::io::async_read::AsyncRead&gt;::poll_read (2 samples, 0.02%)</title><rect x="39.5927%" y="1061" width="0.0237%" height="15" fill="rgb(215,154,42)" fg:x="3344" fg:w="2"/><text x="39.8427%" y="1071.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (2 samples, 0.02%)</title><rect x="39.5927%" y="1045" width="0.0237%" height="15" fill="rgb(220,215,30)" fg:x="3344" fg:w="2"/><text x="39.8427%" y="1055.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="39.6045%" y="1029" width="0.0118%" height="15" fill="rgb(228,81,51)" fg:x="3345" fg:w="1"/><text x="39.8545%" y="1039.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="39.6045%" y="1013" width="0.0118%" height="15" fill="rgb(247,71,54)" fg:x="3345" fg:w="1"/><text x="39.8545%" y="1023.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.01%)</title><rect x="39.6045%" y="997" width="0.0118%" height="15" fill="rgb(234,176,34)" fg:x="3345" fg:w="1"/><text x="39.8545%" y="1007.50"></text></g><g><title>handle_softirqs (1 samples, 0.01%)</title><rect x="39.6045%" y="981" width="0.0118%" height="15" fill="rgb(241,103,54)" fg:x="3345" fg:w="1"/><text x="39.8545%" y="991.50"></text></g><g><title>net_rx_action (1 samples, 0.01%)</title><rect x="39.6045%" y="965" width="0.0118%" height="15" fill="rgb(228,22,34)" fg:x="3345" fg:w="1"/><text x="39.8545%" y="975.50"></text></g><g><title>__napi_poll (1 samples, 0.01%)</title><rect x="39.6045%" y="949" width="0.0118%" height="15" fill="rgb(241,179,48)" fg:x="3345" fg:w="1"/><text x="39.8545%" y="959.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="39.6045%" y="933" width="0.0118%" height="15" fill="rgb(235,167,37)" fg:x="3345" fg:w="1"/><text x="39.8545%" y="943.50"></text></g><g><title>napi_complete_done (1 samples, 0.01%)</title><rect x="39.6045%" y="917" width="0.0118%" height="15" fill="rgb(213,109,30)" fg:x="3345" fg:w="1"/><text x="39.8545%" y="927.50"></text></g><g><title>netif_receive_skb_list_internal (1 samples, 0.01%)</title><rect x="39.6045%" y="901" width="0.0118%" height="15" fill="rgb(222,172,16)" fg:x="3345" fg:w="1"/><text x="39.8545%" y="911.50"></text></g><g><title>__netif_receive_skb_list_core (1 samples, 0.01%)</title><rect x="39.6045%" y="885" width="0.0118%" height="15" fill="rgb(233,192,5)" fg:x="3345" fg:w="1"/><text x="39.8545%" y="895.50"></text></g><g><title>ip_list_rcv (1 samples, 0.01%)</title><rect x="39.6045%" y="869" width="0.0118%" height="15" fill="rgb(247,189,41)" fg:x="3345" fg:w="1"/><text x="39.8545%" y="879.50"></text></g><g><title>ip_sublist_rcv (1 samples, 0.01%)</title><rect x="39.6045%" y="853" width="0.0118%" height="15" fill="rgb(218,134,47)" fg:x="3345" fg:w="1"/><text x="39.8545%" y="863.50"></text></g><g><title>ip_local_deliver (1 samples, 0.01%)</title><rect x="39.6045%" y="837" width="0.0118%" height="15" fill="rgb(216,29,3)" fg:x="3345" fg:w="1"/><text x="39.8545%" y="847.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.01%)</title><rect x="39.6045%" y="821" width="0.0118%" height="15" fill="rgb(246,140,12)" fg:x="3345" fg:w="1"/><text x="39.8545%" y="831.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.01%)</title><rect x="39.6045%" y="805" width="0.0118%" height="15" fill="rgb(230,136,11)" fg:x="3345" fg:w="1"/><text x="39.8545%" y="815.50"></text></g><g><title>__udp4_lib_rcv (1 samples, 0.01%)</title><rect x="39.6045%" y="789" width="0.0118%" height="15" fill="rgb(247,22,47)" fg:x="3345" fg:w="1"/><text x="39.8545%" y="799.50"></text></g><g><title>udp_unicast_rcv_skb (1 samples, 0.01%)</title><rect x="39.6045%" y="773" width="0.0118%" height="15" fill="rgb(218,84,22)" fg:x="3345" fg:w="1"/><text x="39.8545%" y="783.50"></text></g><g><title>udp_queue_rcv_one_skb (1 samples, 0.01%)</title><rect x="39.6045%" y="757" width="0.0118%" height="15" fill="rgb(216,87,39)" fg:x="3345" fg:w="1"/><text x="39.8545%" y="767.50"></text></g><g><title>__udp_enqueue_schedule_skb (1 samples, 0.01%)</title><rect x="39.6045%" y="741" width="0.0118%" height="15" fill="rgb(221,178,8)" fg:x="3345" fg:w="1"/><text x="39.8545%" y="751.50"></text></g><g><title>sock_def_readable (1 samples, 0.01%)</title><rect x="39.6045%" y="725" width="0.0118%" height="15" fill="rgb(230,42,11)" fg:x="3345" fg:w="1"/><text x="39.8545%" y="735.50"></text></g><g><title>__wake_up_sync_key (1 samples, 0.01%)</title><rect x="39.6045%" y="709" width="0.0118%" height="15" fill="rgb(237,229,4)" fg:x="3345" fg:w="1"/><text x="39.8545%" y="719.50"></text></g><g><title>__wake_up_common (1 samples, 0.01%)</title><rect x="39.6045%" y="693" width="0.0118%" height="15" fill="rgb(222,31,33)" fg:x="3345" fg:w="1"/><text x="39.8545%" y="703.50"></text></g><g><title>pollwake (1 samples, 0.01%)</title><rect x="39.6045%" y="677" width="0.0118%" height="15" fill="rgb(210,17,39)" fg:x="3345" fg:w="1"/><text x="39.8545%" y="687.50"></text></g><g><title>try_to_wake_up (1 samples, 0.01%)</title><rect x="39.6045%" y="661" width="0.0118%" height="15" fill="rgb(244,93,20)" fg:x="3345" fg:w="1"/><text x="39.8545%" y="671.50"></text></g><g><title>ttwu_queue_wakelist (1 samples, 0.01%)</title><rect x="39.6045%" y="645" width="0.0118%" height="15" fill="rgb(210,40,47)" fg:x="3345" fg:w="1"/><text x="39.8545%" y="655.50"></text></g><g><title>default_send_IPI_single_phys (1 samples, 0.01%)</title><rect x="39.6045%" y="629" width="0.0118%" height="15" fill="rgb(239,211,47)" fg:x="3345" fg:w="1"/><text x="39.8545%" y="639.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.01%)</title><rect x="39.6164%" y="1061" width="0.0118%" height="15" fill="rgb(251,223,49)" fg:x="3346" fg:w="1"/><text x="39.8664%" y="1071.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1 samples, 0.01%)</title><rect x="40.0308%" y="981" width="0.0118%" height="15" fill="rgb(221,149,5)" fg:x="3381" fg:w="1"/><text x="40.2808%" y="991.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1 samples, 0.01%)</title><rect x="40.0308%" y="965" width="0.0118%" height="15" fill="rgb(219,224,51)" fg:x="3381" fg:w="1"/><text x="40.2808%" y="975.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (1 samples, 0.01%)</title><rect x="40.0308%" y="949" width="0.0118%" height="15" fill="rgb(223,7,8)" fg:x="3381" fg:w="1"/><text x="40.2808%" y="959.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="40.1729%" y="965" width="0.0118%" height="15" fill="rgb(241,217,22)" fg:x="3393" fg:w="1"/><text x="40.4229%" y="975.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="40.1729%" y="949" width="0.0118%" height="15" fill="rgb(248,209,0)" fg:x="3393" fg:w="1"/><text x="40.4229%" y="959.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="40.1729%" y="933" width="0.0118%" height="15" fill="rgb(217,205,4)" fg:x="3393" fg:w="1"/><text x="40.4229%" y="943.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="40.1729%" y="917" width="0.0118%" height="15" fill="rgb(228,124,39)" fg:x="3393" fg:w="1"/><text x="40.4229%" y="927.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="40.1729%" y="901" width="0.0118%" height="15" fill="rgb(250,116,42)" fg:x="3393" fg:w="1"/><text x="40.4229%" y="911.50"></text></g><g><title>tick_nohz_handler (1 samples, 0.01%)</title><rect x="40.1729%" y="885" width="0.0118%" height="15" fill="rgb(223,202,9)" fg:x="3393" fg:w="1"/><text x="40.4229%" y="895.50"></text></g><g><title>update_process_times (1 samples, 0.01%)</title><rect x="40.1729%" y="869" width="0.0118%" height="15" fill="rgb(242,222,40)" fg:x="3393" fg:w="1"/><text x="40.4229%" y="879.50"></text></g><g><title>scheduler_tick (1 samples, 0.01%)</title><rect x="40.1729%" y="853" width="0.0118%" height="15" fill="rgb(229,99,46)" fg:x="3393" fg:w="1"/><text x="40.4229%" y="863.50"></text></g><g><title>perf_event_task_tick (1 samples, 0.01%)</title><rect x="40.1729%" y="837" width="0.0118%" height="15" fill="rgb(225,56,46)" fg:x="3393" fg:w="1"/><text x="40.4229%" y="847.50"></text></g><g><title>perf_adjust_freq_unthr_context (1 samples, 0.01%)</title><rect x="40.1729%" y="821" width="0.0118%" height="15" fill="rgb(227,94,5)" fg:x="3393" fg:w="1"/><text x="40.4229%" y="831.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1 samples, 0.01%)</title><rect x="40.2202%" y="917" width="0.0118%" height="15" fill="rgb(205,112,38)" fg:x="3397" fg:w="1"/><text x="40.4702%" y="927.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (4 samples, 0.05%)</title><rect x="40.2321%" y="917" width="0.0474%" height="15" fill="rgb(231,133,46)" fg:x="3398" fg:w="4"/><text x="40.4821%" y="927.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="40.2676%" y="901" width="0.0118%" height="15" fill="rgb(217,16,9)" fg:x="3401" fg:w="1"/><text x="40.5176%" y="911.50"></text></g><g><title>[libc.so.6] (11 samples, 0.13%)</title><rect x="40.6820%" y="901" width="0.1302%" height="15" fill="rgb(249,173,9)" fg:x="3436" fg:w="11"/><text x="40.9320%" y="911.50"></text></g><g><title>__x86_indirect_thunk_array (1 samples, 0.01%)</title><rect x="40.8122%" y="901" width="0.0118%" height="15" fill="rgb(205,163,53)" fg:x="3447" fg:w="1"/><text x="41.0622%" y="911.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="40.8241%" y="901" width="0.0118%" height="15" fill="rgb(217,54,41)" fg:x="3448" fg:w="1"/><text x="41.0741%" y="911.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="40.8241%" y="885" width="0.0118%" height="15" fill="rgb(228,216,12)" fg:x="3448" fg:w="1"/><text x="41.0741%" y="895.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.01%)</title><rect x="40.8241%" y="869" width="0.0118%" height="15" fill="rgb(244,228,15)" fg:x="3448" fg:w="1"/><text x="41.0741%" y="879.50"></text></g><g><title>asm_sysvec_irq_work (1 samples, 0.01%)</title><rect x="40.8359%" y="901" width="0.0118%" height="15" fill="rgb(221,176,53)" fg:x="3449" fg:w="1"/><text x="41.0859%" y="911.50"></text></g><g><title>sysvec_irq_work (1 samples, 0.01%)</title><rect x="40.8359%" y="885" width="0.0118%" height="15" fill="rgb(205,94,34)" fg:x="3449" fg:w="1"/><text x="41.0859%" y="895.50"></text></g><g><title>__sysvec_irq_work (1 samples, 0.01%)</title><rect x="40.8359%" y="869" width="0.0118%" height="15" fill="rgb(213,110,48)" fg:x="3449" fg:w="1"/><text x="41.0859%" y="879.50"></text></g><g><title>irq_work_run (1 samples, 0.01%)</title><rect x="40.8359%" y="853" width="0.0118%" height="15" fill="rgb(236,142,28)" fg:x="3449" fg:w="1"/><text x="41.0859%" y="863.50"></text></g><g><title>irq_work_run_list (1 samples, 0.01%)</title><rect x="40.8359%" y="837" width="0.0118%" height="15" fill="rgb(225,135,29)" fg:x="3449" fg:w="1"/><text x="41.0859%" y="847.50"></text></g><g><title>irq_work_single (1 samples, 0.01%)</title><rect x="40.8359%" y="821" width="0.0118%" height="15" fill="rgb(252,45,31)" fg:x="3449" fg:w="1"/><text x="41.0859%" y="831.50"></text></g><g><title>perf_pending_irq (1 samples, 0.01%)</title><rect x="40.8359%" y="805" width="0.0118%" height="15" fill="rgb(211,187,50)" fg:x="3449" fg:w="1"/><text x="41.0859%" y="815.50"></text></g><g><title>perf_event_wakeup (1 samples, 0.01%)</title><rect x="40.8359%" y="789" width="0.0118%" height="15" fill="rgb(229,109,7)" fg:x="3449" fg:w="1"/><text x="41.0859%" y="799.50"></text></g><g><title>__fdget (25 samples, 0.30%)</title><rect x="43.7840%" y="837" width="0.2960%" height="15" fill="rgb(251,131,51)" fg:x="3698" fg:w="25"/><text x="44.0340%" y="847.50"></text></g><g><title>srso_alias_safe_ret (2 samples, 0.02%)</title><rect x="44.0564%" y="821" width="0.0237%" height="15" fill="rgb(251,180,35)" fg:x="3721" fg:w="2"/><text x="44.3064%" y="831.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="44.0800%" y="837" width="0.0118%" height="15" fill="rgb(211,46,32)" fg:x="3723" fg:w="1"/><text x="44.3300%" y="847.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="44.0800%" y="821" width="0.0118%" height="15" fill="rgb(248,123,17)" fg:x="3723" fg:w="1"/><text x="44.3300%" y="831.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="44.0800%" y="805" width="0.0118%" height="15" fill="rgb(227,141,18)" fg:x="3723" fg:w="1"/><text x="44.3300%" y="815.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="44.0800%" y="789" width="0.0118%" height="15" fill="rgb(216,102,9)" fg:x="3723" fg:w="1"/><text x="44.3300%" y="799.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="44.0800%" y="773" width="0.0118%" height="15" fill="rgb(253,47,13)" fg:x="3723" fg:w="1"/><text x="44.3300%" y="783.50"></text></g><g><title>tick_nohz_handler (1 samples, 0.01%)</title><rect x="44.0800%" y="757" width="0.0118%" height="15" fill="rgb(226,93,23)" fg:x="3723" fg:w="1"/><text x="44.3300%" y="767.50"></text></g><g><title>update_process_times (1 samples, 0.01%)</title><rect x="44.0800%" y="741" width="0.0118%" height="15" fill="rgb(247,104,17)" fg:x="3723" fg:w="1"/><text x="44.3300%" y="751.50"></text></g><g><title>scheduler_tick (1 samples, 0.01%)</title><rect x="44.0800%" y="725" width="0.0118%" height="15" fill="rgb(233,203,26)" fg:x="3723" fg:w="1"/><text x="44.3300%" y="735.50"></text></g><g><title>perf_event_task_tick (1 samples, 0.01%)</title><rect x="44.0800%" y="709" width="0.0118%" height="15" fill="rgb(244,98,49)" fg:x="3723" fg:w="1"/><text x="44.3300%" y="719.50"></text></g><g><title>perf_adjust_freq_unthr_context (1 samples, 0.01%)</title><rect x="44.0800%" y="693" width="0.0118%" height="15" fill="rgb(235,134,22)" fg:x="3723" fg:w="1"/><text x="44.3300%" y="703.50"></text></g><g><title>fput (7 samples, 0.08%)</title><rect x="44.0919%" y="837" width="0.0829%" height="15" fill="rgb(221,70,32)" fg:x="3724" fg:w="7"/><text x="44.3419%" y="847.50"></text></g><g><title>import_ubuf (2 samples, 0.02%)</title><rect x="44.1748%" y="837" width="0.0237%" height="15" fill="rgb(238,15,50)" fg:x="3731" fg:w="2"/><text x="44.4248%" y="847.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="44.8852%" y="805" width="0.0118%" height="15" fill="rgb(215,221,48)" fg:x="3791" fg:w="1"/><text x="45.1352%" y="815.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="44.8852%" y="789" width="0.0118%" height="15" fill="rgb(236,73,3)" fg:x="3791" fg:w="1"/><text x="45.1352%" y="799.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.01%)</title><rect x="44.8852%" y="773" width="0.0118%" height="15" fill="rgb(250,107,11)" fg:x="3791" fg:w="1"/><text x="45.1352%" y="783.50"></text></g><g><title>handle_softirqs (1 samples, 0.01%)</title><rect x="44.8852%" y="757" width="0.0118%" height="15" fill="rgb(242,39,14)" fg:x="3791" fg:w="1"/><text x="45.1352%" y="767.50"></text></g><g><title>net_rx_action (1 samples, 0.01%)</title><rect x="44.8852%" y="741" width="0.0118%" height="15" fill="rgb(248,164,37)" fg:x="3791" fg:w="1"/><text x="45.1352%" y="751.50"></text></g><g><title>__napi_poll (1 samples, 0.01%)</title><rect x="44.8852%" y="725" width="0.0118%" height="15" fill="rgb(217,60,12)" fg:x="3791" fg:w="1"/><text x="45.1352%" y="735.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="44.8852%" y="709" width="0.0118%" height="15" fill="rgb(240,125,29)" fg:x="3791" fg:w="1"/><text x="45.1352%" y="719.50"></text></g><g><title>napi_complete_done (1 samples, 0.01%)</title><rect x="44.8852%" y="693" width="0.0118%" height="15" fill="rgb(208,207,28)" fg:x="3791" fg:w="1"/><text x="45.1352%" y="703.50"></text></g><g><title>netif_receive_skb_list_internal (1 samples, 0.01%)</title><rect x="44.8852%" y="677" width="0.0118%" height="15" fill="rgb(209,159,27)" fg:x="3791" fg:w="1"/><text x="45.1352%" y="687.50"></text></g><g><title>__netif_receive_skb_list_core (1 samples, 0.01%)</title><rect x="44.8852%" y="661" width="0.0118%" height="15" fill="rgb(251,176,53)" fg:x="3791" fg:w="1"/><text x="45.1352%" y="671.50"></text></g><g><title>__netif_receive_skb_core.constprop.0 (1 samples, 0.01%)</title><rect x="44.8852%" y="645" width="0.0118%" height="15" fill="rgb(211,85,7)" fg:x="3791" fg:w="1"/><text x="45.1352%" y="655.50"></text></g><g><title>srso_alias_return_thunk (3 samples, 0.04%)</title><rect x="44.8970%" y="805" width="0.0355%" height="15" fill="rgb(216,64,54)" fg:x="3792" fg:w="3"/><text x="45.1470%" y="815.50"></text></g><g><title>srso_alias_safe_ret (3 samples, 0.04%)</title><rect x="44.8970%" y="789" width="0.0355%" height="15" fill="rgb(217,54,24)" fg:x="3792" fg:w="3"/><text x="45.1470%" y="799.50"></text></g><g><title>__local_bh_enable_ip (27 samples, 0.32%)</title><rect x="45.5600%" y="789" width="0.3197%" height="15" fill="rgb(208,206,53)" fg:x="3848" fg:w="27"/><text x="45.8100%" y="799.50"></text></g><g><title>do_softirq.part.0 (1 samples, 0.01%)</title><rect x="45.8679%" y="773" width="0.0118%" height="15" fill="rgb(251,74,39)" fg:x="3874" fg:w="1"/><text x="46.1179%" y="783.50"></text></g><g><title>handle_softirqs (1 samples, 0.01%)</title><rect x="45.8679%" y="757" width="0.0118%" height="15" fill="rgb(226,47,5)" fg:x="3874" fg:w="1"/><text x="46.1179%" y="767.50"></text></g><g><title>net_rx_action (1 samples, 0.01%)</title><rect x="45.8679%" y="741" width="0.0118%" height="15" fill="rgb(234,111,33)" fg:x="3874" fg:w="1"/><text x="46.1179%" y="751.50"></text></g><g><title>__napi_poll (1 samples, 0.01%)</title><rect x="45.8679%" y="725" width="0.0118%" height="15" fill="rgb(251,14,10)" fg:x="3874" fg:w="1"/><text x="46.1179%" y="735.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="45.8679%" y="709" width="0.0118%" height="15" fill="rgb(232,43,0)" fg:x="3874" fg:w="1"/><text x="46.1179%" y="719.50"></text></g><g><title>napi_complete_done (1 samples, 0.01%)</title><rect x="45.8679%" y="693" width="0.0118%" height="15" fill="rgb(222,68,43)" fg:x="3874" fg:w="1"/><text x="46.1179%" y="703.50"></text></g><g><title>netif_receive_skb_list_internal (1 samples, 0.01%)</title><rect x="45.8679%" y="677" width="0.0118%" height="15" fill="rgb(217,24,23)" fg:x="3874" fg:w="1"/><text x="46.1179%" y="687.50"></text></g><g><title>__netif_receive_skb_list_core (1 samples, 0.01%)</title><rect x="45.8679%" y="661" width="0.0118%" height="15" fill="rgb(229,209,14)" fg:x="3874" fg:w="1"/><text x="46.1179%" y="671.50"></text></g><g><title>ip_list_rcv (1 samples, 0.01%)</title><rect x="45.8679%" y="645" width="0.0118%" height="15" fill="rgb(250,149,48)" fg:x="3874" fg:w="1"/><text x="46.1179%" y="655.50"></text></g><g><title>ip_sublist_rcv (1 samples, 0.01%)</title><rect x="45.8679%" y="629" width="0.0118%" height="15" fill="rgb(210,120,37)" fg:x="3874" fg:w="1"/><text x="46.1179%" y="639.50"></text></g><g><title>ip_local_deliver (1 samples, 0.01%)</title><rect x="45.8679%" y="613" width="0.0118%" height="15" fill="rgb(210,21,8)" fg:x="3874" fg:w="1"/><text x="46.1179%" y="623.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.01%)</title><rect x="45.8679%" y="597" width="0.0118%" height="15" fill="rgb(243,145,7)" fg:x="3874" fg:w="1"/><text x="46.1179%" y="607.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.01%)</title><rect x="45.8679%" y="581" width="0.0118%" height="15" fill="rgb(238,178,32)" fg:x="3874" fg:w="1"/><text x="46.1179%" y="591.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.01%)</title><rect x="45.8679%" y="565" width="0.0118%" height="15" fill="rgb(222,4,10)" fg:x="3874" fg:w="1"/><text x="46.1179%" y="575.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.01%)</title><rect x="45.8679%" y="549" width="0.0118%" height="15" fill="rgb(239,7,37)" fg:x="3874" fg:w="1"/><text x="46.1179%" y="559.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.01%)</title><rect x="45.8679%" y="533" width="0.0118%" height="15" fill="rgb(215,31,37)" fg:x="3874" fg:w="1"/><text x="46.1179%" y="543.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.01%)</title><rect x="45.8679%" y="517" width="0.0118%" height="15" fill="rgb(224,83,33)" fg:x="3874" fg:w="1"/><text x="46.1179%" y="527.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.01%)</title><rect x="45.8679%" y="501" width="0.0118%" height="15" fill="rgb(239,55,3)" fg:x="3874" fg:w="1"/><text x="46.1179%" y="511.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.01%)</title><rect x="45.8679%" y="485" width="0.0118%" height="15" fill="rgb(247,92,11)" fg:x="3874" fg:w="1"/><text x="46.1179%" y="495.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.01%)</title><rect x="45.8679%" y="469" width="0.0118%" height="15" fill="rgb(239,200,7)" fg:x="3874" fg:w="1"/><text x="46.1179%" y="479.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.01%)</title><rect x="45.8679%" y="453" width="0.0118%" height="15" fill="rgb(227,115,8)" fg:x="3874" fg:w="1"/><text x="46.1179%" y="463.50"></text></g><g><title>_raw_spin_unlock_bh (3 samples, 0.04%)</title><rect x="45.8797%" y="789" width="0.0355%" height="15" fill="rgb(215,189,27)" fg:x="3875" fg:w="3"/><text x="46.1297%" y="799.50"></text></g><g><title>_raw_spin_lock_bh (6 samples, 0.07%)</title><rect x="46.0455%" y="773" width="0.0710%" height="15" fill="rgb(251,216,39)" fg:x="3889" fg:w="6"/><text x="46.2955%" y="783.50"></text></g><g><title>native_queued_spin_lock_slowpath (1 samples, 0.01%)</title><rect x="46.1047%" y="757" width="0.0118%" height="15" fill="rgb(207,29,47)" fg:x="3894" fg:w="1"/><text x="46.3547%" y="767.50"></text></g><g><title>lock_sock_nested (18 samples, 0.21%)</title><rect x="45.9152%" y="789" width="0.2131%" height="15" fill="rgb(210,71,34)" fg:x="3878" fg:w="18"/><text x="46.1652%" y="799.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="46.1165%" y="773" width="0.0118%" height="15" fill="rgb(253,217,51)" fg:x="3895" fg:w="1"/><text x="46.3665%" y="783.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="46.1165%" y="757" width="0.0118%" height="15" fill="rgb(222,117,46)" fg:x="3895" fg:w="1"/><text x="46.3665%" y="767.50"></text></g><g><title>__release_sock (1 samples, 0.01%)</title><rect x="46.6611%" y="773" width="0.0118%" height="15" fill="rgb(226,132,6)" fg:x="3941" fg:w="1"/><text x="46.9111%" y="783.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.01%)</title><rect x="46.6611%" y="757" width="0.0118%" height="15" fill="rgb(254,145,51)" fg:x="3941" fg:w="1"/><text x="46.9111%" y="767.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.01%)</title><rect x="46.6611%" y="741" width="0.0118%" height="15" fill="rgb(231,199,27)" fg:x="3941" fg:w="1"/><text x="46.9111%" y="751.50"></text></g><g><title>__tcp_push_pending_frames (1 samples, 0.01%)</title><rect x="46.6611%" y="725" width="0.0118%" height="15" fill="rgb(245,158,14)" fg:x="3941" fg:w="1"/><text x="46.9111%" y="735.50"></text></g><g><title>tcp_write_xmit (1 samples, 0.01%)</title><rect x="46.6611%" y="709" width="0.0118%" height="15" fill="rgb(240,113,14)" fg:x="3941" fg:w="1"/><text x="46.9111%" y="719.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.01%)</title><rect x="46.6611%" y="693" width="0.0118%" height="15" fill="rgb(210,20,13)" fg:x="3941" fg:w="1"/><text x="46.9111%" y="703.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.01%)</title><rect x="46.6611%" y="677" width="0.0118%" height="15" fill="rgb(241,144,13)" fg:x="3941" fg:w="1"/><text x="46.9111%" y="687.50"></text></g><g><title>ip_local_out (1 samples, 0.01%)</title><rect x="46.6611%" y="661" width="0.0118%" height="15" fill="rgb(235,43,34)" fg:x="3941" fg:w="1"/><text x="46.9111%" y="671.50"></text></g><g><title>__ip_local_out (1 samples, 0.01%)</title><rect x="46.6611%" y="645" width="0.0118%" height="15" fill="rgb(208,36,20)" fg:x="3941" fg:w="1"/><text x="46.9111%" y="655.50"></text></g><g><title>nf_hook_slow (1 samples, 0.01%)</title><rect x="46.6611%" y="629" width="0.0118%" height="15" fill="rgb(239,204,10)" fg:x="3941" fg:w="1"/><text x="46.9111%" y="639.50"></text></g><g><title>[[nf_nat]] (1 samples, 0.01%)</title><rect x="46.6611%" y="613" width="0.0118%" height="15" fill="rgb(217,84,43)" fg:x="3941" fg:w="1"/><text x="46.9111%" y="623.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.01%)</title><rect x="46.6730%" y="773" width="0.0118%" height="15" fill="rgb(241,170,50)" fg:x="3942" fg:w="1"/><text x="46.9230%" y="783.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.01%)</title><rect x="46.6730%" y="757" width="0.0118%" height="15" fill="rgb(226,205,29)" fg:x="3942" fg:w="1"/><text x="46.9230%" y="767.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.01%)</title><rect x="46.6730%" y="741" width="0.0118%" height="15" fill="rgb(233,113,1)" fg:x="3942" fg:w="1"/><text x="46.9230%" y="751.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.01%)</title><rect x="46.6730%" y="725" width="0.0118%" height="15" fill="rgb(253,98,13)" fg:x="3942" fg:w="1"/><text x="46.9230%" y="735.50"></text></g><g><title>__qdisc_run (1 samples, 0.01%)</title><rect x="46.6730%" y="709" width="0.0118%" height="15" fill="rgb(211,115,12)" fg:x="3942" fg:w="1"/><text x="46.9230%" y="719.50"></text></g><g><title>fq_codel_dequeue (1 samples, 0.01%)</title><rect x="46.6730%" y="693" width="0.0118%" height="15" fill="rgb(208,12,16)" fg:x="3942" fg:w="1"/><text x="46.9230%" y="703.50"></text></g><g><title>_raw_spin_lock_bh (7 samples, 0.08%)</title><rect x="46.6848%" y="773" width="0.0829%" height="15" fill="rgb(237,193,54)" fg:x="3943" fg:w="7"/><text x="46.9348%" y="783.50"></text></g><g><title>release_sock (61 samples, 0.72%)</title><rect x="46.1283%" y="789" width="0.7222%" height="15" fill="rgb(243,22,42)" fg:x="3896" fg:w="61"/><text x="46.3783%" y="799.50"></text></g><g><title>tcp_release_cb (7 samples, 0.08%)</title><rect x="46.7677%" y="773" width="0.0829%" height="15" fill="rgb(233,151,36)" fg:x="3950" fg:w="7"/><text x="47.0177%" y="783.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="46.8506%" y="789" width="0.0118%" height="15" fill="rgb(237,57,45)" fg:x="3957" fg:w="1"/><text x="47.1006%" y="799.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="46.8506%" y="773" width="0.0118%" height="15" fill="rgb(221,88,17)" fg:x="3957" fg:w="1"/><text x="47.1006%" y="783.50"></text></g><g><title>__mod_memcg_state (5 samples, 0.06%)</title><rect x="47.3952%" y="725" width="0.0592%" height="15" fill="rgb(230,79,15)" fg:x="4003" fg:w="5"/><text x="47.6452%" y="735.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.01%)</title><rect x="47.4426%" y="709" width="0.0118%" height="15" fill="rgb(213,57,13)" fg:x="4007" fg:w="1"/><text x="47.6926%" y="719.50"></text></g><g><title>mem_cgroup_uncharge_skmem (7 samples, 0.08%)</title><rect x="47.3834%" y="757" width="0.0829%" height="15" fill="rgb(222,116,39)" fg:x="4002" fg:w="7"/><text x="47.6334%" y="767.50"></text></g><g><title>mod_memcg_state (6 samples, 0.07%)</title><rect x="47.3952%" y="741" width="0.0710%" height="15" fill="rgb(245,107,2)" fg:x="4003" fg:w="6"/><text x="47.6452%" y="751.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="47.4544%" y="725" width="0.0118%" height="15" fill="rgb(238,1,10)" fg:x="4008" fg:w="1"/><text x="47.7044%" y="735.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="47.4544%" y="709" width="0.0118%" height="15" fill="rgb(249,4,48)" fg:x="4008" fg:w="1"/><text x="47.7044%" y="719.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="47.4544%" y="693" width="0.0118%" height="15" fill="rgb(223,151,18)" fg:x="4008" fg:w="1"/><text x="47.7044%" y="703.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="47.4544%" y="677" width="0.0118%" height="15" fill="rgb(227,65,43)" fg:x="4008" fg:w="1"/><text x="47.7044%" y="687.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="47.4544%" y="661" width="0.0118%" height="15" fill="rgb(218,40,45)" fg:x="4008" fg:w="1"/><text x="47.7044%" y="671.50"></text></g><g><title>tick_nohz_handler (1 samples, 0.01%)</title><rect x="47.4544%" y="645" width="0.0118%" height="15" fill="rgb(252,121,31)" fg:x="4008" fg:w="1"/><text x="47.7044%" y="655.50"></text></g><g><title>update_process_times (1 samples, 0.01%)</title><rect x="47.4544%" y="629" width="0.0118%" height="15" fill="rgb(219,158,43)" fg:x="4008" fg:w="1"/><text x="47.7044%" y="639.50"></text></g><g><title>smp_call_function_single_async (1 samples, 0.01%)</title><rect x="47.4544%" y="613" width="0.0118%" height="15" fill="rgb(231,162,42)" fg:x="4008" fg:w="1"/><text x="47.7044%" y="623.50"></text></g><g><title>generic_exec_single (1 samples, 0.01%)</title><rect x="47.4544%" y="597" width="0.0118%" height="15" fill="rgb(217,179,25)" fg:x="4008" fg:w="1"/><text x="47.7044%" y="607.50"></text></g><g><title>default_send_IPI_single_phys (1 samples, 0.01%)</title><rect x="47.4544%" y="581" width="0.0118%" height="15" fill="rgb(206,212,31)" fg:x="4008" fg:w="1"/><text x="47.7044%" y="591.50"></text></g><g><title>__sk_mem_reduce_allocated (14 samples, 0.17%)</title><rect x="47.3479%" y="773" width="0.1658%" height="15" fill="rgb(235,144,12)" fg:x="3999" fg:w="14"/><text x="47.5979%" y="783.50"></text></g><g><title>refill_stock (4 samples, 0.05%)</title><rect x="47.4663%" y="757" width="0.0474%" height="15" fill="rgb(213,51,10)" fg:x="4009" fg:w="4"/><text x="47.7163%" y="767.50"></text></g><g><title>__refill_stock (4 samples, 0.05%)</title><rect x="47.4663%" y="741" width="0.0474%" height="15" fill="rgb(231,145,14)" fg:x="4009" fg:w="4"/><text x="47.7163%" y="751.50"></text></g><g><title>drain_stock (2 samples, 0.02%)</title><rect x="47.4899%" y="725" width="0.0237%" height="15" fill="rgb(235,15,28)" fg:x="4011" fg:w="2"/><text x="47.7399%" y="735.50"></text></g><g><title>page_counter_uncharge (2 samples, 0.02%)</title><rect x="47.4899%" y="709" width="0.0237%" height="15" fill="rgb(237,206,10)" fg:x="4011" fg:w="2"/><text x="47.7399%" y="719.50"></text></g><g><title>__tcp_cleanup_rbuf (2 samples, 0.02%)</title><rect x="47.5136%" y="773" width="0.0237%" height="15" fill="rgb(236,227,27)" fg:x="4013" fg:w="2"/><text x="47.7636%" y="783.50"></text></g><g><title>kmalloc_reserve (3 samples, 0.04%)</title><rect x="47.5491%" y="741" width="0.0355%" height="15" fill="rgb(246,83,35)" fg:x="4016" fg:w="3"/><text x="47.7991%" y="751.50"></text></g><g><title>kmem_cache_alloc_node (3 samples, 0.04%)</title><rect x="47.5491%" y="725" width="0.0355%" height="15" fill="rgb(220,136,24)" fg:x="4016" fg:w="3"/><text x="47.7991%" y="735.50"></text></g><g><title>__tcp_send_ack.part.0 (6 samples, 0.07%)</title><rect x="47.5373%" y="773" width="0.0710%" height="15" fill="rgb(217,3,25)" fg:x="4015" fg:w="6"/><text x="47.7873%" y="783.50"></text></g><g><title>__alloc_skb (5 samples, 0.06%)</title><rect x="47.5491%" y="757" width="0.0592%" height="15" fill="rgb(239,24,14)" fg:x="4016" fg:w="5"/><text x="47.7991%" y="767.50"></text></g><g><title>kmem_cache_alloc_node (2 samples, 0.02%)</title><rect x="47.5847%" y="741" width="0.0237%" height="15" fill="rgb(244,16,53)" fg:x="4019" fg:w="2"/><text x="47.8347%" y="751.50"></text></g><g><title>ip_skb_dst_mtu (2 samples, 0.02%)</title><rect x="47.7386%" y="725" width="0.0237%" height="15" fill="rgb(208,175,44)" fg:x="4032" fg:w="2"/><text x="47.9886%" y="735.50"></text></g><g><title>__ip_finish_output (4 samples, 0.05%)</title><rect x="47.7267%" y="741" width="0.0474%" height="15" fill="rgb(252,18,48)" fg:x="4031" fg:w="4"/><text x="47.9767%" y="751.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="47.7623%" y="725" width="0.0118%" height="15" fill="rgb(234,199,32)" fg:x="4034" fg:w="1"/><text x="48.0123%" y="735.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="47.7623%" y="709" width="0.0118%" height="15" fill="rgb(225,77,54)" fg:x="4034" fg:w="1"/><text x="48.0123%" y="719.50"></text></g><g><title>__sk_dst_check (7 samples, 0.08%)</title><rect x="47.7741%" y="741" width="0.0829%" height="15" fill="rgb(225,42,25)" fg:x="4035" fg:w="7"/><text x="48.0241%" y="751.50"></text></g><g><title>ipv4_dst_check (2 samples, 0.02%)</title><rect x="47.8333%" y="725" width="0.0237%" height="15" fill="rgb(242,227,46)" fg:x="4040" fg:w="2"/><text x="48.0833%" y="735.50"></text></g><g><title>ip_finish_output (3 samples, 0.04%)</title><rect x="47.8570%" y="741" width="0.0355%" height="15" fill="rgb(246,197,35)" fg:x="4042" fg:w="3"/><text x="48.1070%" y="751.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.01%)</title><rect x="48.0464%" y="661" width="0.0118%" height="15" fill="rgb(215,159,26)" fg:x="4058" fg:w="1"/><text x="48.2964%" y="671.50"></text></g><g><title>__netif_receive_skb_core.constprop.0 (1 samples, 0.01%)</title><rect x="48.0819%" y="597" width="0.0118%" height="15" fill="rgb(212,194,50)" fg:x="4061" fg:w="1"/><text x="48.3319%" y="607.50"></text></g><g><title>raw_local_deliver (1 samples, 0.01%)</title><rect x="48.0938%" y="549" width="0.0118%" height="15" fill="rgb(246,132,1)" fg:x="4062" fg:w="1"/><text x="48.3438%" y="559.50"></text></g><g><title>__inet_lookup_established (1 samples, 0.01%)</title><rect x="48.1175%" y="533" width="0.0118%" height="15" fill="rgb(217,71,7)" fg:x="4064" fg:w="1"/><text x="48.3675%" y="543.50"></text></g><g><title>sock_put (1 samples, 0.01%)</title><rect x="48.1293%" y="533" width="0.0118%" height="15" fill="rgb(252,59,32)" fg:x="4065" fg:w="1"/><text x="48.3793%" y="543.50"></text></g><g><title>ktime_get_seconds (1 samples, 0.01%)</title><rect x="48.1885%" y="501" width="0.0118%" height="15" fill="rgb(253,204,25)" fg:x="4070" fg:w="1"/><text x="48.4385%" y="511.50"></text></g><g><title>__sk_mem_reduce_allocated (1 samples, 0.01%)</title><rect x="48.2359%" y="485" width="0.0118%" height="15" fill="rgb(232,21,16)" fg:x="4074" fg:w="1"/><text x="48.4859%" y="495.50"></text></g><g><title>mem_cgroup_uncharge_skmem (1 samples, 0.01%)</title><rect x="48.2359%" y="469" width="0.0118%" height="15" fill="rgb(248,90,29)" fg:x="4074" fg:w="1"/><text x="48.4859%" y="479.50"></text></g><g><title>mod_memcg_state (1 samples, 0.01%)</title><rect x="48.2359%" y="453" width="0.0118%" height="15" fill="rgb(249,223,7)" fg:x="4074" fg:w="1"/><text x="48.4859%" y="463.50"></text></g><g><title>__mod_memcg_state (1 samples, 0.01%)</title><rect x="48.2359%" y="437" width="0.0118%" height="15" fill="rgb(231,119,42)" fg:x="4074" fg:w="1"/><text x="48.4859%" y="447.50"></text></g><g><title>kfree_skbmem (1 samples, 0.01%)</title><rect x="48.2477%" y="485" width="0.0118%" height="15" fill="rgb(215,41,35)" fg:x="4075" fg:w="1"/><text x="48.4977%" y="495.50"></text></g><g><title>rb_erase (1 samples, 0.01%)</title><rect x="48.2595%" y="485" width="0.0118%" height="15" fill="rgb(220,44,45)" fg:x="4076" fg:w="1"/><text x="48.5095%" y="495.50"></text></g><g><title>rb_next (1 samples, 0.01%)</title><rect x="48.2714%" y="485" width="0.0118%" height="15" fill="rgb(253,197,36)" fg:x="4077" fg:w="1"/><text x="48.5214%" y="495.50"></text></g><g><title>tcp_ack_update_rtt (1 samples, 0.01%)</title><rect x="48.2832%" y="485" width="0.0118%" height="15" fill="rgb(245,225,54)" fg:x="4078" fg:w="1"/><text x="48.5332%" y="495.50"></text></g><g><title>tcp_chrono_stop (1 samples, 0.01%)</title><rect x="48.2951%" y="485" width="0.0118%" height="15" fill="rgb(239,94,37)" fg:x="4079" fg:w="1"/><text x="48.5451%" y="495.50"></text></g><g><title>tcp_newly_delivered (1 samples, 0.01%)</title><rect x="48.3069%" y="485" width="0.0118%" height="15" fill="rgb(242,217,10)" fg:x="4080" fg:w="1"/><text x="48.5569%" y="495.50"></text></g><g><title>tcp_rack_advance (1 samples, 0.01%)</title><rect x="48.3187%" y="485" width="0.0118%" height="15" fill="rgb(250,193,7)" fg:x="4081" fg:w="1"/><text x="48.5687%" y="495.50"></text></g><g><title>tcp_v4_do_rcv (17 samples, 0.20%)</title><rect x="48.1411%" y="533" width="0.2013%" height="15" fill="rgb(230,104,19)" fg:x="4066" fg:w="17"/><text x="48.3911%" y="543.50"></text></g><g><title>tcp_rcv_established (17 samples, 0.20%)</title><rect x="48.1411%" y="517" width="0.2013%" height="15" fill="rgb(230,181,4)" fg:x="4066" fg:w="17"/><text x="48.3911%" y="527.50"></text></g><g><title>tcp_ack (12 samples, 0.14%)</title><rect x="48.2003%" y="501" width="0.1421%" height="15" fill="rgb(216,219,49)" fg:x="4071" fg:w="12"/><text x="48.4503%" y="511.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.01%)</title><rect x="48.3306%" y="485" width="0.0118%" height="15" fill="rgb(254,144,0)" fg:x="4082" fg:w="1"/><text x="48.5806%" y="495.50"></text></g><g><title>ip_local_deliver_finish (22 samples, 0.26%)</title><rect x="48.0938%" y="581" width="0.2605%" height="15" fill="rgb(205,209,38)" fg:x="4062" fg:w="22"/><text x="48.3438%" y="591.50"></text></g><g><title>ip_protocol_deliver_rcu (22 samples, 0.26%)</title><rect x="48.0938%" y="565" width="0.2605%" height="15" fill="rgb(240,21,42)" fg:x="4062" fg:w="22"/><text x="48.3438%" y="575.50"></text></g><g><title>tcp_v4_rcv (21 samples, 0.25%)</title><rect x="48.1056%" y="549" width="0.2486%" height="15" fill="rgb(241,132,3)" fg:x="4063" fg:w="21"/><text x="48.3556%" y="559.50"></text></g><g><title>tcp_v4_fill_cb (1 samples, 0.01%)</title><rect x="48.3424%" y="533" width="0.0118%" height="15" fill="rgb(225,14,2)" fg:x="4083" fg:w="1"/><text x="48.5924%" y="543.50"></text></g><g><title>ip_local_deliver (23 samples, 0.27%)</title><rect x="48.0938%" y="597" width="0.2723%" height="15" fill="rgb(210,141,35)" fg:x="4062" fg:w="23"/><text x="48.3438%" y="607.50"></text></g><g><title>nf_hook_slow (1 samples, 0.01%)</title><rect x="48.3543%" y="581" width="0.0118%" height="15" fill="rgb(251,14,44)" fg:x="4084" fg:w="1"/><text x="48.6043%" y="591.50"></text></g><g><title>[[nf_nat]] (1 samples, 0.01%)</title><rect x="48.3543%" y="565" width="0.0118%" height="15" fill="rgb(247,48,18)" fg:x="4084" fg:w="1"/><text x="48.6043%" y="575.50"></text></g><g><title>[[nf_nat]] (1 samples, 0.01%)</title><rect x="48.3543%" y="549" width="0.0118%" height="15" fill="rgb(225,0,40)" fg:x="4084" fg:w="1"/><text x="48.6043%" y="559.50"></text></g><g><title>[[nf_nat]] (1 samples, 0.01%)</title><rect x="48.3543%" y="533" width="0.0118%" height="15" fill="rgb(221,31,33)" fg:x="4084" fg:w="1"/><text x="48.6043%" y="543.50"></text></g><g><title>[[nf_nat]] (1 samples, 0.01%)</title><rect x="48.3543%" y="517" width="0.0118%" height="15" fill="rgb(237,42,40)" fg:x="4084" fg:w="1"/><text x="48.6043%" y="527.50"></text></g><g><title>[[nf_nat]] (1 samples, 0.01%)</title><rect x="48.3543%" y="501" width="0.0118%" height="15" fill="rgb(233,51,29)" fg:x="4084" fg:w="1"/><text x="48.6043%" y="511.50"></text></g><g><title>ip_rcv_core (2 samples, 0.02%)</title><rect x="48.3779%" y="581" width="0.0237%" height="15" fill="rgb(226,58,20)" fg:x="4086" fg:w="2"/><text x="48.6279%" y="591.50"></text></g><g><title>ip_rcv_finish_core.isra.0 (2 samples, 0.02%)</title><rect x="48.4016%" y="581" width="0.0237%" height="15" fill="rgb(208,98,7)" fg:x="4088" fg:w="2"/><text x="48.6516%" y="591.50"></text></g><g><title>[[br_netfilter]] (2 samples, 0.02%)</title><rect x="48.4253%" y="565" width="0.0237%" height="15" fill="rgb(228,143,44)" fg:x="4090" fg:w="2"/><text x="48.6753%" y="575.50"></text></g><g><title>__napi_poll (34 samples, 0.40%)</title><rect x="48.0819%" y="645" width="0.4026%" height="15" fill="rgb(246,55,38)" fg:x="4061" fg:w="34"/><text x="48.3319%" y="655.50"></text></g><g><title>process_backlog (34 samples, 0.40%)</title><rect x="48.0819%" y="629" width="0.4026%" height="15" fill="rgb(247,87,16)" fg:x="4061" fg:w="34"/><text x="48.3319%" y="639.50"></text></g><g><title>__netif_receive_skb_one_core (34 samples, 0.40%)</title><rect x="48.0819%" y="613" width="0.4026%" height="15" fill="rgb(234,129,42)" fg:x="4061" fg:w="34"/><text x="48.3319%" y="623.50"></text></g><g><title>ip_rcv (10 samples, 0.12%)</title><rect x="48.3661%" y="597" width="0.1184%" height="15" fill="rgb(220,82,16)" fg:x="4085" fg:w="10"/><text x="48.6161%" y="607.50"></text></g><g><title>nf_hook_slow (5 samples, 0.06%)</title><rect x="48.4253%" y="581" width="0.0592%" height="15" fill="rgb(211,88,4)" fg:x="4090" fg:w="5"/><text x="48.6753%" y="591.50"></text></g><g><title>[[nf_conntrack]] (3 samples, 0.04%)</title><rect x="48.4490%" y="565" width="0.0355%" height="15" fill="rgb(248,151,21)" fg:x="4092" fg:w="3"/><text x="48.6990%" y="575.50"></text></g><g><title>kmem_cache_free (2 samples, 0.02%)</title><rect x="48.4845%" y="645" width="0.0237%" height="15" fill="rgb(238,163,6)" fg:x="4095" fg:w="2"/><text x="48.7345%" y="655.50"></text></g><g><title>net_rx_action (39 samples, 0.46%)</title><rect x="48.0583%" y="661" width="0.4618%" height="15" fill="rgb(209,183,11)" fg:x="4059" fg:w="39"/><text x="48.3083%" y="671.50"></text></g><g><title>napi_consume_skb (1 samples, 0.01%)</title><rect x="48.5082%" y="645" width="0.0118%" height="15" fill="rgb(219,37,20)" fg:x="4097" fg:w="1"/><text x="48.7582%" y="655.50"></text></g><g><title>skb_release_data (1 samples, 0.01%)</title><rect x="48.5082%" y="629" width="0.0118%" height="15" fill="rgb(210,158,4)" fg:x="4097" fg:w="1"/><text x="48.7582%" y="639.50"></text></g><g><title>do_softirq.part.0 (41 samples, 0.49%)</title><rect x="48.0464%" y="693" width="0.4854%" height="15" fill="rgb(221,167,53)" fg:x="4058" fg:w="41"/><text x="48.2964%" y="703.50"></text></g><g><title>handle_softirqs (41 samples, 0.49%)</title><rect x="48.0464%" y="677" width="0.4854%" height="15" fill="rgb(237,151,45)" fg:x="4058" fg:w="41"/><text x="48.2964%" y="687.50"></text></g><g><title>rebalance_domains (1 samples, 0.01%)</title><rect x="48.5200%" y="661" width="0.0118%" height="15" fill="rgb(231,39,3)" fg:x="4098" fg:w="1"/><text x="48.7700%" y="671.50"></text></g><g><title>__local_bh_enable_ip (42 samples, 0.50%)</title><rect x="48.0464%" y="709" width="0.4973%" height="15" fill="rgb(212,167,28)" fg:x="4058" fg:w="42"/><text x="48.2964%" y="719.50"></text></g><g><title>preempt_schedule_thunk (1 samples, 0.01%)</title><rect x="48.5318%" y="693" width="0.0118%" height="15" fill="rgb(232,178,8)" fg:x="4099" fg:w="1"/><text x="48.7818%" y="703.50"></text></g><g><title>preempt_schedule (1 samples, 0.01%)</title><rect x="48.5318%" y="677" width="0.0118%" height="15" fill="rgb(225,151,20)" fg:x="4099" fg:w="1"/><text x="48.7818%" y="687.50"></text></g><g><title>__schedule (1 samples, 0.01%)</title><rect x="48.5318%" y="661" width="0.0118%" height="15" fill="rgb(238,3,37)" fg:x="4099" fg:w="1"/><text x="48.7818%" y="671.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="48.5437%" y="709" width="0.0118%" height="15" fill="rgb(251,147,42)" fg:x="4100" fg:w="1"/><text x="48.7937%" y="719.50"></text></g><g><title>__netif_rx (2 samples, 0.02%)</title><rect x="48.5555%" y="677" width="0.0237%" height="15" fill="rgb(208,173,10)" fg:x="4101" fg:w="2"/><text x="48.8055%" y="687.50"></text></g><g><title>netif_rx_internal (2 samples, 0.02%)</title><rect x="48.5555%" y="661" width="0.0237%" height="15" fill="rgb(246,225,4)" fg:x="4101" fg:w="2"/><text x="48.8055%" y="671.50"></text></g><g><title>enqueue_to_backlog (2 samples, 0.02%)</title><rect x="48.5555%" y="645" width="0.0237%" height="15" fill="rgb(248,102,6)" fg:x="4101" fg:w="2"/><text x="48.8055%" y="655.50"></text></g><g><title>__sock_wfree (2 samples, 0.02%)</title><rect x="48.5792%" y="677" width="0.0237%" height="15" fill="rgb(232,6,21)" fg:x="4103" fg:w="2"/><text x="48.8292%" y="687.50"></text></g><g><title>dev_hard_start_xmit (5 samples, 0.06%)</title><rect x="48.5555%" y="709" width="0.0592%" height="15" fill="rgb(221,179,22)" fg:x="4101" fg:w="5"/><text x="48.8055%" y="719.50"></text></g><g><title>loopback_xmit (5 samples, 0.06%)</title><rect x="48.5555%" y="693" width="0.0592%" height="15" fill="rgb(252,50,20)" fg:x="4101" fg:w="5"/><text x="48.8055%" y="703.50"></text></g><g><title>eth_type_trans (1 samples, 0.01%)</title><rect x="48.6029%" y="677" width="0.0118%" height="15" fill="rgb(222,56,38)" fg:x="4105" fg:w="1"/><text x="48.8529%" y="687.50"></text></g><g><title>dma_map_page_attrs (2 samples, 0.02%)</title><rect x="48.6739%" y="645" width="0.0237%" height="15" fill="rgb(206,193,29)" fg:x="4111" fg:w="2"/><text x="48.9239%" y="655.50"></text></g><g><title>iommu_dma_alloc_iova (2 samples, 0.02%)</title><rect x="48.7094%" y="613" width="0.0237%" height="15" fill="rgb(239,192,45)" fg:x="4114" fg:w="2"/><text x="48.9594%" y="623.50"></text></g><g><title>alloc_iova_fast (2 samples, 0.02%)</title><rect x="48.7094%" y="597" width="0.0237%" height="15" fill="rgb(254,18,36)" fg:x="4114" fg:w="2"/><text x="48.9594%" y="607.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.02%)</title><rect x="48.7094%" y="581" width="0.0237%" height="15" fill="rgb(221,127,11)" fg:x="4114" fg:w="2"/><text x="48.9594%" y="591.50"></text></g><g><title>__iommu_dma_map (13 samples, 0.15%)</title><rect x="48.6976%" y="629" width="0.1539%" height="15" fill="rgb(234,146,35)" fg:x="4113" fg:w="13"/><text x="48.9476%" y="639.50"></text></g><g><title>iommu_map (10 samples, 0.12%)</title><rect x="48.7331%" y="613" width="0.1184%" height="15" fill="rgb(254,201,37)" fg:x="4116" fg:w="10"/><text x="48.9831%" y="623.50"></text></g><g><title>__iommu_map (10 samples, 0.12%)</title><rect x="48.7331%" y="597" width="0.1184%" height="15" fill="rgb(211,202,23)" fg:x="4116" fg:w="10"/><text x="48.9831%" y="607.50"></text></g><g><title>iommu_v1_map_pages (10 samples, 0.12%)</title><rect x="48.7331%" y="581" width="0.1184%" height="15" fill="rgb(237,91,2)" fg:x="4116" fg:w="10"/><text x="48.9831%" y="591.50"></text></g><g><title>put_pages_list (1 samples, 0.01%)</title><rect x="48.8397%" y="565" width="0.0118%" height="15" fill="rgb(226,228,36)" fg:x="4125" fg:w="1"/><text x="49.0897%" y="575.50"></text></g><g><title>dev_hard_start_xmit (21 samples, 0.25%)</title><rect x="48.6266%" y="693" width="0.2486%" height="15" fill="rgb(213,63,50)" fg:x="4107" fg:w="21"/><text x="48.8766%" y="703.50"></text></g><g><title>[[r8169]] (21 samples, 0.25%)</title><rect x="48.6266%" y="677" width="0.2486%" height="15" fill="rgb(235,194,19)" fg:x="4107" fg:w="21"/><text x="48.8766%" y="687.50"></text></g><g><title>[[r8169]] (17 samples, 0.20%)</title><rect x="48.6739%" y="661" width="0.2013%" height="15" fill="rgb(207,204,18)" fg:x="4111" fg:w="17"/><text x="48.9239%" y="671.50"></text></g><g><title>iommu_dma_map_page (15 samples, 0.18%)</title><rect x="48.6976%" y="645" width="0.1776%" height="15" fill="rgb(248,8,7)" fg:x="4113" fg:w="15"/><text x="48.9476%" y="655.50"></text></g><g><title>iommu_get_dma_domain (2 samples, 0.02%)</title><rect x="48.8515%" y="629" width="0.0237%" height="15" fill="rgb(223,145,47)" fg:x="4126" fg:w="2"/><text x="49.1015%" y="639.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.02%)</title><rect x="48.8752%" y="677" width="0.0237%" height="15" fill="rgb(228,84,11)" fg:x="4128" fg:w="2"/><text x="49.1252%" y="687.50"></text></g><g><title>netif_skb_features (2 samples, 0.02%)</title><rect x="48.8752%" y="661" width="0.0237%" height="15" fill="rgb(218,76,45)" fg:x="4128" fg:w="2"/><text x="49.1252%" y="671.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="48.8870%" y="645" width="0.0118%" height="15" fill="rgb(223,80,15)" fg:x="4129" fg:w="1"/><text x="49.1370%" y="655.50"></text></g><g><title>sch_direct_xmit (25 samples, 0.30%)</title><rect x="48.6147%" y="709" width="0.2960%" height="15" fill="rgb(219,218,33)" fg:x="4106" fg:w="25"/><text x="48.8647%" y="719.50"></text></g><g><title>validate_xmit_skb_list (3 samples, 0.04%)</title><rect x="48.8752%" y="693" width="0.0355%" height="15" fill="rgb(208,51,11)" fg:x="4128" fg:w="3"/><text x="49.1252%" y="703.50"></text></g><g><title>validate_xmit_xfrm (1 samples, 0.01%)</title><rect x="48.8989%" y="677" width="0.0118%" height="15" fill="rgb(229,165,39)" fg:x="4130" fg:w="1"/><text x="49.1489%" y="687.50"></text></g><g><title>ip_finish_output2 (87 samples, 1.03%)</title><rect x="47.8925%" y="741" width="1.0301%" height="15" fill="rgb(241,100,24)" fg:x="4045" fg:w="87"/><text x="48.1425%" y="751.50"></text></g><g><title>__dev_queue_xmit (82 samples, 0.97%)</title><rect x="47.9517%" y="725" width="0.9709%" height="15" fill="rgb(228,14,23)" fg:x="4050" fg:w="82"/><text x="48.2017%" y="735.50"></text></g><g><title>validate_xmit_skb (1 samples, 0.01%)</title><rect x="48.9107%" y="709" width="0.0118%" height="15" fill="rgb(247,116,52)" fg:x="4131" fg:w="1"/><text x="49.1607%" y="719.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.01%)</title><rect x="48.9462%" y="709" width="0.0118%" height="15" fill="rgb(216,149,33)" fg:x="4134" fg:w="1"/><text x="49.1962%" y="719.50"></text></g><g><title>[[ip_tables]] (4 samples, 0.05%)</title><rect x="48.9936%" y="693" width="0.0474%" height="15" fill="rgb(238,142,29)" fg:x="4138" fg:w="4"/><text x="49.2436%" y="703.50"></text></g><g><title>[[nf_conntrack]] (2 samples, 0.02%)</title><rect x="49.2541%" y="661" width="0.0237%" height="15" fill="rgb(224,83,40)" fg:x="4160" fg:w="2"/><text x="49.5041%" y="671.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.01%)</title><rect x="49.2778%" y="661" width="0.0118%" height="15" fill="rgb(234,165,11)" fg:x="4162" fg:w="1"/><text x="49.5278%" y="671.50"></text></g><g><title>[[nf_conntrack]] (22 samples, 0.26%)</title><rect x="49.0410%" y="693" width="0.2605%" height="15" fill="rgb(215,96,23)" fg:x="4142" fg:w="22"/><text x="49.2910%" y="703.50"></text></g><g><title>[[nf_conntrack]] (16 samples, 0.19%)</title><rect x="49.1120%" y="677" width="0.1894%" height="15" fill="rgb(233,179,26)" fg:x="4148" fg:w="16"/><text x="49.3620%" y="687.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="49.2896%" y="661" width="0.0118%" height="15" fill="rgb(225,129,33)" fg:x="4163" fg:w="1"/><text x="49.5396%" y="671.50"></text></g><g><title>[[nf_defrag_ipv4]] (4 samples, 0.05%)</title><rect x="49.3014%" y="693" width="0.0474%" height="15" fill="rgb(237,49,13)" fg:x="4164" fg:w="4"/><text x="49.5514%" y="703.50"></text></g><g><title>[[nf_nat]] (2 samples, 0.02%)</title><rect x="49.3843%" y="645" width="0.0237%" height="15" fill="rgb(211,3,31)" fg:x="4171" fg:w="2"/><text x="49.6343%" y="655.50"></text></g><g><title>inet_proto_csum_replace4 (1 samples, 0.01%)</title><rect x="49.3962%" y="629" width="0.0118%" height="15" fill="rgb(216,152,19)" fg:x="4172" fg:w="1"/><text x="49.6462%" y="639.50"></text></g><g><title>[[nf_nat]] (3 samples, 0.04%)</title><rect x="49.3843%" y="661" width="0.0355%" height="15" fill="rgb(251,121,35)" fg:x="4171" fg:w="3"/><text x="49.6343%" y="671.50"></text></g><g><title>skb_ensure_writable (1 samples, 0.01%)</title><rect x="49.4080%" y="645" width="0.0118%" height="15" fill="rgb(210,217,47)" fg:x="4173" fg:w="1"/><text x="49.6580%" y="655.50"></text></g><g><title>__skb_flow_dissect (9 samples, 0.11%)</title><rect x="49.4317%" y="645" width="0.1066%" height="15" fill="rgb(244,116,22)" fg:x="4175" fg:w="9"/><text x="49.6817%" y="655.50"></text></g><g><title>__skb_flow_get_ports (1 samples, 0.01%)</title><rect x="49.5264%" y="629" width="0.0118%" height="15" fill="rgb(228,17,21)" fg:x="4183" fg:w="1"/><text x="49.7764%" y="639.50"></text></g><g><title>__xfrm_decode_session (12 samples, 0.14%)</title><rect x="49.4198%" y="661" width="0.1421%" height="15" fill="rgb(240,149,34)" fg:x="4174" fg:w="12"/><text x="49.6698%" y="671.50"></text></g><g><title>security_xfrm_decode_session (2 samples, 0.02%)</title><rect x="49.5382%" y="645" width="0.0237%" height="15" fill="rgb(208,125,47)" fg:x="4184" fg:w="2"/><text x="49.7882%" y="655.50"></text></g><g><title>bpf_lsm_xfrm_decode_session (1 samples, 0.01%)</title><rect x="49.5501%" y="629" width="0.0118%" height="15" fill="rgb(249,186,39)" fg:x="4185" fg:w="1"/><text x="49.8001%" y="639.50"></text></g><g><title>ip_local_out (57 samples, 0.67%)</title><rect x="48.9226%" y="741" width="0.6749%" height="15" fill="rgb(240,220,33)" fg:x="4132" fg:w="57"/><text x="49.1726%" y="751.50"></text></g><g><title>__ip_local_out (57 samples, 0.67%)</title><rect x="48.9226%" y="725" width="0.6749%" height="15" fill="rgb(243,110,23)" fg:x="4132" fg:w="57"/><text x="49.1726%" y="735.50"></text></g><g><title>nf_hook_slow (54 samples, 0.64%)</title><rect x="48.9581%" y="709" width="0.6394%" height="15" fill="rgb(219,163,46)" fg:x="4135" fg:w="54"/><text x="49.2081%" y="719.50"></text></g><g><title>[[nf_nat]] (21 samples, 0.25%)</title><rect x="49.3488%" y="693" width="0.2486%" height="15" fill="rgb(216,126,30)" fg:x="4168" fg:w="21"/><text x="49.5988%" y="703.50"></text></g><g><title>[[nf_nat]] (19 samples, 0.22%)</title><rect x="49.3725%" y="677" width="0.2250%" height="15" fill="rgb(208,139,11)" fg:x="4170" fg:w="19"/><text x="49.6225%" y="687.50"></text></g><g><title>xfrm_lookup_with_ifid (3 samples, 0.04%)</title><rect x="49.5619%" y="661" width="0.0355%" height="15" fill="rgb(213,118,36)" fg:x="4186" fg:w="3"/><text x="49.8119%" y="671.50"></text></g><g><title>[[nf_nat]] (1 samples, 0.01%)</title><rect x="49.6330%" y="693" width="0.0118%" height="15" fill="rgb(226,43,17)" fg:x="4192" fg:w="1"/><text x="49.8830%" y="703.50"></text></g><g><title>[[nf_nat]] (1 samples, 0.01%)</title><rect x="49.6330%" y="677" width="0.0118%" height="15" fill="rgb(254,217,4)" fg:x="4192" fg:w="1"/><text x="49.8830%" y="687.50"></text></g><g><title>[[nf_nat]] (3 samples, 0.04%)</title><rect x="49.6211%" y="709" width="0.0355%" height="15" fill="rgb(210,134,47)" fg:x="4191" fg:w="3"/><text x="49.8711%" y="719.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="49.6448%" y="693" width="0.0118%" height="15" fill="rgb(237,24,49)" fg:x="4193" fg:w="1"/><text x="49.8948%" y="703.50"></text></g><g><title>__ip_queue_xmit (166 samples, 1.97%)</title><rect x="47.7031%" y="757" width="1.9654%" height="15" fill="rgb(251,39,46)" fg:x="4029" fg:w="166"/><text x="47.9531%" y="767.50">_..</text></g><g><title>ip_output (6 samples, 0.07%)</title><rect x="49.5974%" y="741" width="0.0710%" height="15" fill="rgb(251,220,3)" fg:x="4189" fg:w="6"/><text x="49.8474%" y="751.50"></text></g><g><title>nf_hook_slow (6 samples, 0.07%)</title><rect x="49.5974%" y="725" width="0.0710%" height="15" fill="rgb(228,105,12)" fg:x="4189" fg:w="6"/><text x="49.8474%" y="735.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="49.6566%" y="709" width="0.0118%" height="15" fill="rgb(215,196,1)" fg:x="4194" fg:w="1"/><text x="49.9066%" y="719.50"></text></g><g><title>__tcp_select_window (1 samples, 0.01%)</title><rect x="49.6685%" y="757" width="0.0118%" height="15" fill="rgb(214,33,39)" fg:x="4195" fg:w="1"/><text x="49.9185%" y="767.50"></text></g><g><title>bpf_skops_write_hdr_opt.isra.0 (1 samples, 0.01%)</title><rect x="49.6803%" y="757" width="0.0118%" height="15" fill="rgb(220,19,52)" fg:x="4196" fg:w="1"/><text x="49.9303%" y="767.50"></text></g><g><title>tcp_established_options (4 samples, 0.05%)</title><rect x="49.6922%" y="757" width="0.0474%" height="15" fill="rgb(221,78,38)" fg:x="4197" fg:w="4"/><text x="49.9422%" y="767.50"></text></g><g><title>tcp_options_write (1 samples, 0.01%)</title><rect x="49.7395%" y="757" width="0.0118%" height="15" fill="rgb(253,30,16)" fg:x="4201" fg:w="1"/><text x="49.9895%" y="767.50"></text></g><g><title>__tcp_transmit_skb (183 samples, 2.17%)</title><rect x="47.6083%" y="773" width="2.1667%" height="15" fill="rgb(242,65,0)" fg:x="4021" fg:w="183"/><text x="47.8583%" y="783.50">_..</text></g><g><title>tcp_v4_send_check (2 samples, 0.02%)</title><rect x="49.7514%" y="757" width="0.0237%" height="15" fill="rgb(235,201,12)" fg:x="4202" fg:w="2"/><text x="50.0014%" y="767.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="49.7750%" y="773" width="0.0118%" height="15" fill="rgb(233,161,9)" fg:x="4204" fg:w="1"/><text x="50.0250%" y="783.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="49.7750%" y="757" width="0.0118%" height="15" fill="rgb(241,207,41)" fg:x="4204" fg:w="1"/><text x="50.0250%" y="767.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="49.7750%" y="741" width="0.0118%" height="15" fill="rgb(212,69,46)" fg:x="4204" fg:w="1"/><text x="50.0250%" y="751.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="49.7750%" y="725" width="0.0118%" height="15" fill="rgb(239,69,45)" fg:x="4204" fg:w="1"/><text x="50.0250%" y="735.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="49.7750%" y="709" width="0.0118%" height="15" fill="rgb(242,117,48)" fg:x="4204" fg:w="1"/><text x="50.0250%" y="719.50"></text></g><g><title>kmem_cache_free (1 samples, 0.01%)</title><rect x="49.7869%" y="773" width="0.0118%" height="15" fill="rgb(228,41,36)" fg:x="4205" fg:w="1"/><text x="50.0369%" y="783.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.02%)</title><rect x="49.8461%" y="757" width="0.0237%" height="15" fill="rgb(212,3,32)" fg:x="4210" fg:w="2"/><text x="50.0961%" y="767.50"></text></g><g><title>skb_attempt_defer_free (7 samples, 0.08%)</title><rect x="49.7987%" y="773" width="0.0829%" height="15" fill="rgb(233,41,49)" fg:x="4206" fg:w="7"/><text x="50.0487%" y="783.50"></text></g><g><title>skb_release_data (1 samples, 0.01%)</title><rect x="49.8698%" y="757" width="0.0118%" height="15" fill="rgb(252,170,49)" fg:x="4212" fg:w="1"/><text x="50.1198%" y="767.50"></text></g><g><title>page_frag_free (1 samples, 0.01%)</title><rect x="49.8698%" y="741" width="0.0118%" height="15" fill="rgb(229,53,26)" fg:x="4212" fg:w="1"/><text x="50.1198%" y="751.50"></text></g><g><title>_copy_to_iter (4 samples, 0.05%)</title><rect x="49.9171%" y="741" width="0.0474%" height="15" fill="rgb(217,157,12)" fg:x="4216" fg:w="4"/><text x="50.1671%" y="751.50"></text></g><g><title>__virt_addr_valid (1 samples, 0.01%)</title><rect x="50.0355%" y="709" width="0.0118%" height="15" fill="rgb(227,17,9)" fg:x="4226" fg:w="1"/><text x="50.2855%" y="719.50"></text></g><g><title>check_stack_object (1 samples, 0.01%)</title><rect x="50.0474%" y="709" width="0.0118%" height="15" fill="rgb(218,84,12)" fg:x="4227" fg:w="1"/><text x="50.2974%" y="719.50"></text></g><g><title>skb_copy_datagram_iter (16 samples, 0.19%)</title><rect x="49.8816%" y="773" width="0.1894%" height="15" fill="rgb(212,79,24)" fg:x="4213" fg:w="16"/><text x="50.1316%" y="783.50"></text></g><g><title>__skb_datagram_iter (16 samples, 0.19%)</title><rect x="49.8816%" y="757" width="0.1894%" height="15" fill="rgb(217,222,37)" fg:x="4213" fg:w="16"/><text x="50.1316%" y="767.50"></text></g><g><title>simple_copy_to_iter (9 samples, 0.11%)</title><rect x="49.9645%" y="741" width="0.1066%" height="15" fill="rgb(246,208,8)" fg:x="4220" fg:w="9"/><text x="50.2145%" y="751.50"></text></g><g><title>__check_object_size (9 samples, 0.11%)</title><rect x="49.9645%" y="725" width="0.1066%" height="15" fill="rgb(244,133,10)" fg:x="4220" fg:w="9"/><text x="50.2145%" y="735.50"></text></g><g><title>is_vmalloc_addr (1 samples, 0.01%)</title><rect x="50.0592%" y="709" width="0.0118%" height="15" fill="rgb(209,219,41)" fg:x="4228" fg:w="1"/><text x="50.3092%" y="719.50"></text></g><g><title>sock_rfree (2 samples, 0.02%)</title><rect x="50.0710%" y="773" width="0.0237%" height="15" fill="rgb(253,175,45)" fg:x="4229" fg:w="2"/><text x="50.3210%" y="783.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="50.0947%" y="773" width="0.0118%" height="15" fill="rgb(235,100,37)" fg:x="4231" fg:w="1"/><text x="50.3447%" y="783.50"></text></g><g><title>tcp_cleanup_rbuf (2 samples, 0.02%)</title><rect x="50.1066%" y="773" width="0.0237%" height="15" fill="rgb(225,87,19)" fg:x="4232" fg:w="2"/><text x="50.3566%" y="783.50"></text></g><g><title>inet_recvmsg (475 samples, 5.62%)</title><rect x="44.5892%" y="821" width="5.6240%" height="15" fill="rgb(217,152,17)" fg:x="3766" fg:w="475"/><text x="44.8392%" y="831.50">inet_re..</text></g><g><title>tcp_recvmsg (446 samples, 5.28%)</title><rect x="44.9325%" y="805" width="5.2806%" height="15" fill="rgb(235,72,13)" fg:x="3795" fg:w="446"/><text x="45.1825%" y="815.50">tcp_re..</text></g><g><title>tcp_recvmsg_locked (283 samples, 3.35%)</title><rect x="46.8624%" y="789" width="3.3507%" height="15" fill="rgb(233,140,18)" fg:x="3958" fg:w="283"/><text x="47.1124%" y="799.50">tcp..</text></g><g><title>tcp_rcv_space_adjust (7 samples, 0.08%)</title><rect x="50.1302%" y="773" width="0.0829%" height="15" fill="rgb(207,212,28)" fg:x="4234" fg:w="7"/><text x="50.3802%" y="783.50"></text></g><g><title>tcp_mstamp_refresh (3 samples, 0.04%)</title><rect x="50.1776%" y="757" width="0.0355%" height="15" fill="rgb(220,130,25)" fg:x="4238" fg:w="3"/><text x="50.4276%" y="767.50"></text></g><g><title>ktime_get (2 samples, 0.02%)</title><rect x="50.1894%" y="741" width="0.0237%" height="15" fill="rgb(205,55,34)" fg:x="4239" fg:w="2"/><text x="50.4394%" y="751.50"></text></g><g><title>security_socket_recvmsg (19 samples, 0.22%)</title><rect x="50.2131%" y="821" width="0.2250%" height="15" fill="rgb(237,54,35)" fg:x="4241" fg:w="19"/><text x="50.4631%" y="831.50"></text></g><g><title>bpf_lsm_socket_recvmsg (4 samples, 0.05%)</title><rect x="50.3907%" y="805" width="0.0474%" height="15" fill="rgb(208,67,23)" fg:x="4256" fg:w="4"/><text x="50.6407%" y="815.50"></text></g><g><title>sock_recvmsg (530 samples, 6.28%)</title><rect x="44.1984%" y="837" width="6.2752%" height="15" fill="rgb(206,207,50)" fg:x="3733" fg:w="530"/><text x="44.4484%" y="847.50">sock_rec..</text></g><g><title>srso_alias_return_thunk (3 samples, 0.04%)</title><rect x="50.4381%" y="821" width="0.0355%" height="15" fill="rgb(213,211,42)" fg:x="4260" fg:w="3"/><text x="50.6881%" y="831.50"></text></g><g><title>srso_alias_safe_ret (3 samples, 0.04%)</title><rect x="50.4381%" y="805" width="0.0355%" height="15" fill="rgb(252,197,50)" fg:x="4260" fg:w="3"/><text x="50.6881%" y="815.50"></text></g><g><title>__sys_recvfrom (655 samples, 7.76%)</title><rect x="42.7540%" y="853" width="7.7552%" height="15" fill="rgb(251,211,41)" fg:x="3611" fg:w="655"/><text x="43.0040%" y="863.50">__sys_recvf..</text></g><g><title>srso_alias_return_thunk (3 samples, 0.04%)</title><rect x="50.4736%" y="837" width="0.0355%" height="15" fill="rgb(229,211,5)" fg:x="4263" fg:w="3"/><text x="50.7236%" y="847.50"></text></g><g><title>srso_alias_safe_ret (3 samples, 0.04%)</title><rect x="50.4736%" y="821" width="0.0355%" height="15" fill="rgb(239,36,31)" fg:x="4263" fg:w="3"/><text x="50.7236%" y="831.50"></text></g><g><title>__x64_sys_recvfrom (670 samples, 7.93%)</title><rect x="42.5882%" y="869" width="7.9327%" height="15" fill="rgb(248,67,31)" fg:x="3597" fg:w="670"/><text x="42.8382%" y="879.50">__x64_sys_r..</text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="50.5091%" y="853" width="0.0118%" height="15" fill="rgb(249,55,44)" fg:x="4266" fg:w="1"/><text x="50.7591%" y="863.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="50.5091%" y="837" width="0.0118%" height="15" fill="rgb(216,82,12)" fg:x="4266" fg:w="1"/><text x="50.7591%" y="847.50"></text></g><g><title>srso_alias_return_thunk (6 samples, 0.07%)</title><rect x="50.5210%" y="869" width="0.0710%" height="15" fill="rgb(242,174,1)" fg:x="4267" fg:w="6"/><text x="50.7710%" y="879.50"></text></g><g><title>srso_alias_safe_ret (6 samples, 0.07%)</title><rect x="50.5210%" y="853" width="0.0710%" height="15" fill="rgb(208,120,29)" fg:x="4267" fg:w="6"/><text x="50.7710%" y="863.50"></text></g><g><title>amd_clear_divider (1 samples, 0.01%)</title><rect x="51.0893%" y="853" width="0.0118%" height="15" fill="rgb(221,105,43)" fg:x="4315" fg:w="1"/><text x="51.3393%" y="863.50"></text></g><g><title>syscall_exit_to_user_mode (52 samples, 0.62%)</title><rect x="50.5920%" y="869" width="0.6157%" height="15" fill="rgb(234,124,22)" fg:x="4273" fg:w="52"/><text x="50.8420%" y="879.50"></text></g><g><title>syscall_exit_to_user_mode_prepare (9 samples, 0.11%)</title><rect x="51.1011%" y="853" width="0.1066%" height="15" fill="rgb(212,23,30)" fg:x="4316" fg:w="9"/><text x="51.3511%" y="863.50"></text></g><g><title>do_syscall_64 (784 samples, 9.28%)</title><rect x="41.9844%" y="885" width="9.2825%" height="15" fill="rgb(219,122,53)" fg:x="3546" fg:w="784"/><text x="42.2344%" y="895.50">do_syscall_64</text></g><g><title>x64_sys_call (5 samples, 0.06%)</title><rect x="51.2077%" y="869" width="0.0592%" height="15" fill="rgb(248,84,24)" fg:x="4325" fg:w="5"/><text x="51.4577%" y="879.50"></text></g><g><title>srso_alias_return_thunk (14 samples, 0.17%)</title><rect x="51.2669%" y="885" width="0.1658%" height="15" fill="rgb(245,115,18)" fg:x="4330" fg:w="14"/><text x="51.5169%" y="895.50"></text></g><g><title>srso_alias_safe_ret (14 samples, 0.17%)</title><rect x="51.2669%" y="869" width="0.1658%" height="15" fill="rgb(227,176,51)" fg:x="4330" fg:w="14"/><text x="51.5169%" y="879.50"></text></g><g><title>entry_SYSCALL_64 (900 samples, 10.66%)</title><rect x="40.8477%" y="901" width="10.6559%" height="15" fill="rgb(229,63,42)" fg:x="3450" fg:w="900"/><text x="41.0977%" y="911.50">entry_SYSCALL_64</text></g><g><title>srso_alias_untrain_ret (6 samples, 0.07%)</title><rect x="51.4326%" y="885" width="0.0710%" height="15" fill="rgb(247,202,24)" fg:x="4344" fg:w="6"/><text x="51.6826%" y="895.50"></text></g><g><title>entry_SYSRETQ_unsafe_stack (4 samples, 0.05%)</title><rect x="51.5037%" y="901" width="0.0474%" height="15" fill="rgb(244,173,20)" fg:x="4350" fg:w="4"/><text x="51.7537%" y="911.50"></text></g><g><title>recv (972 samples, 11.51%)</title><rect x="40.2794%" y="917" width="11.5084%" height="15" fill="rgb(242,81,47)" fg:x="3402" fg:w="972"/><text x="40.5294%" y="927.50">recv</text></g><g><title>syscall_return_via_sysret (20 samples, 0.24%)</title><rect x="51.5510%" y="901" width="0.2368%" height="15" fill="rgb(231,185,54)" fg:x="4354" fg:w="20"/><text x="51.8010%" y="911.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (997 samples, 11.80%)</title><rect x="40.0426%" y="981" width="11.8044%" height="15" fill="rgb(243,55,32)" fg:x="3382" fg:w="997"/><text x="40.2926%" y="991.50">&lt;&amp;std::net::tcp::T..</text></g><g><title>std::sys_common::net::TcpStream::read (985 samples, 11.66%)</title><rect x="40.1847%" y="965" width="11.6623%" height="15" fill="rgb(208,167,19)" fg:x="3394" fg:w="985"/><text x="40.4347%" y="975.50">std::sys_common::..</text></g><g><title>std::sys::pal::unix::net::Socket::read (985 samples, 11.66%)</title><rect x="40.1847%" y="949" width="11.6623%" height="15" fill="rgb(231,72,35)" fg:x="3394" fg:w="985"/><text x="40.4347%" y="959.50">std::sys::pal::un..</text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (985 samples, 11.66%)</title><rect x="40.1847%" y="933" width="11.6623%" height="15" fill="rgb(250,173,51)" fg:x="3394" fg:w="985"/><text x="40.4347%" y="943.50">std::sys::pal::un..</text></g><g><title>std::sys::pal::unix::cvt (5 samples, 0.06%)</title><rect x="51.7878%" y="917" width="0.0592%" height="15" fill="rgb(209,5,22)" fg:x="4374" fg:w="5"/><text x="52.0378%" y="927.50"></text></g><g><title>&lt;tokio::net::tcp::split::ReadHalf as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.01%)</title><rect x="51.8470%" y="981" width="0.0118%" height="15" fill="rgb(250,174,19)" fg:x="4379" fg:w="1"/><text x="52.0970%" y="991.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (1 samples, 0.01%)</title><rect x="51.8470%" y="965" width="0.0118%" height="15" fill="rgb(217,3,49)" fg:x="4379" fg:w="1"/><text x="52.0970%" y="975.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1,017 samples, 12.04%)</title><rect x="39.8295%" y="1045" width="12.0412%" height="15" fill="rgb(218,225,5)" fg:x="3364" fg:w="1017"/><text x="40.0795%" y="1055.50">&lt;&amp;mio::net::tcp::s..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1,001 samples, 11.85%)</title><rect x="40.0189%" y="1029" width="11.8518%" height="15" fill="rgb(236,89,11)" fg:x="3380" fg:w="1001"/><text x="40.2689%" y="1039.50">mio::io_source::Io..</text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (1,001 samples, 11.85%)</title><rect x="40.0189%" y="1013" width="11.8518%" height="15" fill="rgb(206,33,28)" fg:x="3380" fg:w="1001"/><text x="40.2689%" y="1023.50">mio::sys::unix::st..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (1,000 samples, 11.84%)</title><rect x="40.0308%" y="997" width="11.8399%" height="15" fill="rgb(241,56,42)" fg:x="3381" fg:w="1000"/><text x="40.2808%" y="1007.50">&lt;&amp;mio::net::tcp::s..</text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (1 samples, 0.01%)</title><rect x="51.8589%" y="981" width="0.0118%" height="15" fill="rgb(222,44,11)" fg:x="4380" fg:w="1"/><text x="52.1089%" y="991.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="51.8589%" y="965" width="0.0118%" height="15" fill="rgb(234,111,20)" fg:x="4380" fg:w="1"/><text x="52.1089%" y="975.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.01%)</title><rect x="51.8589%" y="949" width="0.0118%" height="15" fill="rgb(237,77,6)" fg:x="4380" fg:w="1"/><text x="52.1089%" y="959.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.01%)</title><rect x="51.8589%" y="933" width="0.0118%" height="15" fill="rgb(235,111,23)" fg:x="4380" fg:w="1"/><text x="52.1089%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.01%)</title><rect x="51.8589%" y="917" width="0.0118%" height="15" fill="rgb(251,135,29)" fg:x="4380" fg:w="1"/><text x="52.1089%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="51.8589%" y="901" width="0.0118%" height="15" fill="rgb(217,57,1)" fg:x="4380" fg:w="1"/><text x="52.1089%" y="911.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.01%)</title><rect x="51.8707%" y="1045" width="0.0118%" height="15" fill="rgb(249,119,31)" fg:x="4381" fg:w="1"/><text x="52.1207%" y="1055.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (2 samples, 0.02%)</title><rect x="51.8825%" y="1045" width="0.0237%" height="15" fill="rgb(233,164,33)" fg:x="4382" fg:w="2"/><text x="52.1325%" y="1055.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::assume_init (4 samples, 0.05%)</title><rect x="51.9062%" y="1045" width="0.0474%" height="15" fill="rgb(250,217,43)" fg:x="4384" fg:w="4"/><text x="52.1562%" y="1055.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="52.0720%" y="933" width="0.0237%" height="15" fill="rgb(232,154,50)" fg:x="4398" fg:w="2"/><text x="52.3220%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.01%)</title><rect x="52.0957%" y="933" width="0.0118%" height="15" fill="rgb(227,190,8)" fg:x="4400" fg:w="1"/><text x="52.3457%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.01%)</title><rect x="52.0957%" y="917" width="0.0118%" height="15" fill="rgb(209,217,32)" fg:x="4400" fg:w="1"/><text x="52.3457%" y="927.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="52.0957%" y="901" width="0.0118%" height="15" fill="rgb(243,203,50)" fg:x="4400" fg:w="1"/><text x="52.3457%" y="911.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="52.0957%" y="885" width="0.0118%" height="15" fill="rgb(232,152,27)" fg:x="4400" fg:w="1"/><text x="52.3457%" y="895.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (4 samples, 0.05%)</title><rect x="52.0720%" y="1013" width="0.0474%" height="15" fill="rgb(240,34,29)" fg:x="4398" fg:w="4"/><text x="52.3220%" y="1023.50"></text></g><g><title>tokio::runtime::context::budget (4 samples, 0.05%)</title><rect x="52.0720%" y="997" width="0.0474%" height="15" fill="rgb(215,185,52)" fg:x="4398" fg:w="4"/><text x="52.3220%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.05%)</title><rect x="52.0720%" y="981" width="0.0474%" height="15" fill="rgb(240,89,49)" fg:x="4398" fg:w="4"/><text x="52.3220%" y="991.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (4 samples, 0.05%)</title><rect x="52.0720%" y="965" width="0.0474%" height="15" fill="rgb(225,12,52)" fg:x="4398" fg:w="4"/><text x="52.3220%" y="975.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (4 samples, 0.05%)</title><rect x="52.0720%" y="949" width="0.0474%" height="15" fill="rgb(239,128,45)" fg:x="4398" fg:w="4"/><text x="52.3220%" y="959.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (1 samples, 0.01%)</title><rect x="52.1075%" y="933" width="0.0118%" height="15" fill="rgb(211,78,47)" fg:x="4401" fg:w="1"/><text x="52.3575%" y="943.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (1 samples, 0.01%)</title><rect x="52.1075%" y="917" width="0.0118%" height="15" fill="rgb(232,31,21)" fg:x="4401" fg:w="1"/><text x="52.3575%" y="927.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_ref (1 samples, 0.01%)</title><rect x="52.1075%" y="901" width="0.0118%" height="15" fill="rgb(222,168,14)" fg:x="4401" fg:w="1"/><text x="52.3575%" y="911.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_ref (1 samples, 0.01%)</title><rect x="52.1075%" y="885" width="0.0118%" height="15" fill="rgb(209,128,24)" fg:x="4401" fg:w="1"/><text x="52.3575%" y="895.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (1 samples, 0.01%)</title><rect x="52.1075%" y="869" width="0.0118%" height="15" fill="rgb(249,35,13)" fg:x="4401" fg:w="1"/><text x="52.3575%" y="879.50"></text></g><g><title>tokio::runtime::task::state::State::load (1 samples, 0.01%)</title><rect x="52.1075%" y="853" width="0.0118%" height="15" fill="rgb(218,7,2)" fg:x="4401" fg:w="1"/><text x="52.3575%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="52.1075%" y="837" width="0.0118%" height="15" fill="rgb(238,107,27)" fg:x="4401" fg:w="1"/><text x="52.3575%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="52.1075%" y="821" width="0.0118%" height="15" fill="rgb(217,88,38)" fg:x="4401" fg:w="1"/><text x="52.3575%" y="831.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="52.1430%" y="997" width="0.0474%" height="15" fill="rgb(230,207,0)" fg:x="4404" fg:w="4"/><text x="52.3930%" y="1007.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="52.1430%" y="981" width="0.0474%" height="15" fill="rgb(249,64,54)" fg:x="4404" fg:w="4"/><text x="52.3930%" y="991.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (1,065 samples, 12.61%)</title><rect x="39.5927%" y="1077" width="12.6095%" height="15" fill="rgb(231,7,11)" fg:x="3344" fg:w="1065"/><text x="39.8427%" y="1087.50">&lt;&amp;mut T as tokio::i..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (1,062 samples, 12.57%)</title><rect x="39.6282%" y="1061" width="12.5740%" height="15" fill="rgb(205,149,21)" fg:x="3347" fg:w="1062"/><text x="39.8782%" y="1071.50">tokio::io::poll_eve..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (21 samples, 0.25%)</title><rect x="51.9536%" y="1045" width="0.2486%" height="15" fill="rgb(215,126,34)" fg:x="4388" fg:w="21"/><text x="52.2036%" y="1055.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (20 samples, 0.24%)</title><rect x="51.9654%" y="1029" width="0.2368%" height="15" fill="rgb(241,132,45)" fg:x="4389" fg:w="20"/><text x="52.2154%" y="1039.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (7 samples, 0.08%)</title><rect x="52.1193%" y="1013" width="0.0829%" height="15" fill="rgb(252,69,32)" fg:x="4402" fg:w="7"/><text x="52.3693%" y="1023.50"></text></g><g><title>tokio::runtime::io::driver::Direction::mask (1 samples, 0.01%)</title><rect x="52.1904%" y="997" width="0.0118%" height="15" fill="rgb(232,204,19)" fg:x="4408" fg:w="1"/><text x="52.4404%" y="1007.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="52.2022%" y="1077" width="0.0118%" height="15" fill="rgb(249,15,47)" fg:x="4409" fg:w="1"/><text x="52.4522%" y="1087.50"></text></g><g><title>&lt;tokio::io::util::read::Read&lt;R&gt; as core::future::future::Future&gt;::poll (1,082 samples, 12.81%)</title><rect x="39.4506%" y="1093" width="12.8108%" height="15" fill="rgb(209,227,23)" fg:x="3332" fg:w="1082"/><text x="39.7006%" y="1103.50">&lt;tokio::io::util::r..</text></g><g><title>tokio::io::read_buf::ReadBuf::filled (4 samples, 0.05%)</title><rect x="52.2141%" y="1077" width="0.0474%" height="15" fill="rgb(248,92,24)" fg:x="4410" fg:w="4"/><text x="52.4641%" y="1087.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1 samples, 0.01%)</title><rect x="52.2614%" y="981" width="0.0118%" height="15" fill="rgb(247,59,2)" fg:x="4414" fg:w="1"/><text x="52.5114%" y="991.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (2 samples, 0.02%)</title><rect x="52.2733%" y="981" width="0.0237%" height="15" fill="rgb(221,30,5)" fg:x="4415" fg:w="2"/><text x="52.5233%" y="991.50"></text></g><g><title>[libc.so.6] (43 samples, 0.51%)</title><rect x="52.2969%" y="981" width="0.5091%" height="15" fill="rgb(208,108,53)" fg:x="4417" fg:w="43"/><text x="52.5469%" y="991.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="52.8061%" y="981" width="0.0118%" height="15" fill="rgb(211,183,26)" fg:x="4460" fg:w="1"/><text x="53.0561%" y="991.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.01%)</title><rect x="52.9363%" y="965" width="0.0118%" height="15" fill="rgb(232,132,4)" fg:x="4471" fg:w="1"/><text x="53.1863%" y="975.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;u8&gt; for usize&gt;::from (1 samples, 0.01%)</title><rect x="52.9363%" y="949" width="0.0118%" height="15" fill="rgb(253,128,37)" fg:x="4471" fg:w="1"/><text x="53.1863%" y="959.50"></text></g><g><title>core::num::&lt;impl u8&gt;::wrapping_add (10 samples, 0.12%)</title><rect x="52.9481%" y="965" width="0.1184%" height="15" fill="rgb(221,58,24)" fg:x="4472" fg:w="10"/><text x="53.1981%" y="975.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="53.0547%" y="949" width="0.0118%" height="15" fill="rgb(230,54,45)" fg:x="4481" fg:w="1"/><text x="53.3047%" y="959.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="53.0547%" y="933" width="0.0118%" height="15" fill="rgb(254,21,18)" fg:x="4481" fg:w="1"/><text x="53.3047%" y="943.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.01%)</title><rect x="53.0547%" y="917" width="0.0118%" height="15" fill="rgb(221,108,0)" fg:x="4481" fg:w="1"/><text x="53.3047%" y="927.50"></text></g><g><title>handle_softirqs (1 samples, 0.01%)</title><rect x="53.0547%" y="901" width="0.0118%" height="15" fill="rgb(206,95,1)" fg:x="4481" fg:w="1"/><text x="53.3047%" y="911.50"></text></g><g><title>net_rx_action (1 samples, 0.01%)</title><rect x="53.0547%" y="885" width="0.0118%" height="15" fill="rgb(237,52,5)" fg:x="4481" fg:w="1"/><text x="53.3047%" y="895.50"></text></g><g><title>__napi_poll (1 samples, 0.01%)</title><rect x="53.0547%" y="869" width="0.0118%" height="15" fill="rgb(218,150,34)" fg:x="4481" fg:w="1"/><text x="53.3047%" y="879.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="53.0547%" y="853" width="0.0118%" height="15" fill="rgb(235,194,28)" fg:x="4481" fg:w="1"/><text x="53.3047%" y="863.50"></text></g><g><title>napi_gro_receive (1 samples, 0.01%)</title><rect x="53.0547%" y="837" width="0.0118%" height="15" fill="rgb(245,92,18)" fg:x="4481" fg:w="1"/><text x="53.3047%" y="847.50"></text></g><g><title>dev_gro_receive (1 samples, 0.01%)</title><rect x="53.0547%" y="821" width="0.0118%" height="15" fill="rgb(253,203,53)" fg:x="4481" fg:w="1"/><text x="53.3047%" y="831.50"></text></g><g><title>inet_gro_receive (1 samples, 0.01%)</title><rect x="53.0547%" y="805" width="0.0118%" height="15" fill="rgb(249,185,47)" fg:x="4481" fg:w="1"/><text x="53.3047%" y="815.50"></text></g><g><title>udp4_gro_receive (1 samples, 0.01%)</title><rect x="53.0547%" y="789" width="0.0118%" height="15" fill="rgb(252,194,52)" fg:x="4481" fg:w="1"/><text x="53.3047%" y="799.50"></text></g><g><title>core::intrinsics::copy (2 samples, 0.02%)</title><rect x="53.0665%" y="933" width="0.0237%" height="15" fill="rgb(210,53,36)" fg:x="4482" fg:w="2"/><text x="53.3165%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (3 samples, 0.04%)</title><rect x="53.0665%" y="965" width="0.0355%" height="15" fill="rgb(237,37,25)" fg:x="4482" fg:w="3"/><text x="53.3165%" y="975.50"></text></g><g><title>core::ptr::swap (3 samples, 0.04%)</title><rect x="53.0665%" y="949" width="0.0355%" height="15" fill="rgb(242,116,27)" fg:x="4482" fg:w="3"/><text x="53.3165%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="53.0902%" y="933" width="0.0118%" height="15" fill="rgb(213,185,26)" fg:x="4484" fg:w="1"/><text x="53.3402%" y="943.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1,166 samples, 13.81%)</title><rect x="39.3322%" y="1141" width="13.8054%" height="15" fill="rgb(225,204,8)" fg:x="3322" fg:w="1166"/><text x="39.5822%" y="1151.50">&lt;tokio::future::poll_..</text></g><g><title>rotmguard::proxy::Proxy::run::_{{closure}}::_{{closure}}::_{{closure}} (1,165 samples, 13.79%)</title><rect x="39.3441%" y="1125" width="13.7935%" height="15" fill="rgb(254,111,37)" fg:x="3323" fg:w="1165"/><text x="39.5941%" y="1135.50">rotmguard::proxy::Pro..</text></g><g><title>rotmguard::proxy::PacketReader::wait_for_whole_packet::_{{closure}} (1,164 samples, 13.78%)</title><rect x="39.3559%" y="1109" width="13.7817%" height="15" fill="rgb(242,35,9)" fg:x="3324" fg:w="1164"/><text x="39.6059%" y="1119.50">rotmguard::proxy::Pac..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream (74 samples, 0.88%)</title><rect x="52.2614%" y="1093" width="0.8762%" height="15" fill="rgb(232,138,49)" fg:x="4414" fg:w="74"/><text x="52.5114%" y="1103.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (74 samples, 0.88%)</title><rect x="52.2614%" y="1077" width="0.8762%" height="15" fill="rgb(247,56,4)" fg:x="4414" fg:w="74"/><text x="52.5114%" y="1087.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (74 samples, 0.88%)</title><rect x="52.2614%" y="1061" width="0.8762%" height="15" fill="rgb(226,179,17)" fg:x="4414" fg:w="74"/><text x="52.5114%" y="1071.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (74 samples, 0.88%)</title><rect x="52.2614%" y="1045" width="0.8762%" height="15" fill="rgb(216,163,45)" fg:x="4414" fg:w="74"/><text x="52.5114%" y="1055.50"></text></g><g><title>&lt;rc4::Rc4Core&lt;KeySize&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (74 samples, 0.88%)</title><rect x="52.2614%" y="1029" width="0.8762%" height="15" fill="rgb(211,157,3)" fg:x="4414" fg:w="74"/><text x="52.5114%" y="1039.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (74 samples, 0.88%)</title><rect x="52.2614%" y="1013" width="0.8762%" height="15" fill="rgb(234,44,20)" fg:x="4414" fg:w="74"/><text x="52.5114%" y="1023.50"></text></g><g><title>&lt;rc4::Backend as cipher::stream_core::StreamBackend&gt;::gen_ks_block (74 samples, 0.88%)</title><rect x="52.2614%" y="997" width="0.8762%" height="15" fill="rgb(254,138,23)" fg:x="4414" fg:w="74"/><text x="52.5114%" y="1007.50"></text></g><g><title>rc4::Rc4State::prga (27 samples, 0.32%)</title><rect x="52.8179%" y="981" width="0.3197%" height="15" fill="rgb(206,119,39)" fg:x="4461" fg:w="27"/><text x="53.0679%" y="991.50"></text></g><g><title>rc4::Rc4State::s_i (3 samples, 0.04%)</title><rect x="53.1021%" y="965" width="0.0355%" height="15" fill="rgb(231,105,52)" fg:x="4485" fg:w="3"/><text x="53.3521%" y="975.50"></text></g><g><title>[libc.so.6] (10 samples, 0.12%)</title><rect x="53.1376%" y="1141" width="0.1184%" height="15" fill="rgb(250,20,5)" fg:x="4488" fg:w="10"/><text x="53.3876%" y="1151.50"></text></g><g><title>__floatuntidf (1 samples, 0.01%)</title><rect x="53.2560%" y="1141" width="0.0118%" height="15" fill="rgb(215,198,30)" fg:x="4498" fg:w="1"/><text x="53.5060%" y="1151.50"></text></g><g><title>compiler_builtins::float::conv::__floatuntidf (1 samples, 0.01%)</title><rect x="53.2560%" y="1125" width="0.0118%" height="15" fill="rgb(246,142,8)" fg:x="4498" fg:w="1"/><text x="53.5060%" y="1135.50"></text></g><g><title>compiler_builtins::float::conv::int_to_float::u128_to_f64_bits (1 samples, 0.01%)</title><rect x="53.2560%" y="1109" width="0.0118%" height="15" fill="rgb(243,26,38)" fg:x="4498" fg:w="1"/><text x="53.5060%" y="1119.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.01%)</title><rect x="53.2678%" y="1077" width="0.0118%" height="15" fill="rgb(205,133,28)" fg:x="4499" fg:w="1"/><text x="53.5178%" y="1087.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="53.2678%" y="1141" width="0.0237%" height="15" fill="rgb(212,34,0)" fg:x="4499" fg:w="2"/><text x="53.5178%" y="1151.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="53.2678%" y="1125" width="0.0237%" height="15" fill="rgb(251,226,22)" fg:x="4499" fg:w="2"/><text x="53.5178%" y="1135.50"></text></g><g><title>__irq_exit_rcu (2 samples, 0.02%)</title><rect x="53.2678%" y="1109" width="0.0237%" height="15" fill="rgb(252,119,9)" fg:x="4499" fg:w="2"/><text x="53.5178%" y="1119.50"></text></g><g><title>handle_softirqs (2 samples, 0.02%)</title><rect x="53.2678%" y="1093" width="0.0237%" height="15" fill="rgb(213,150,50)" fg:x="4499" fg:w="2"/><text x="53.5178%" y="1103.50"></text></g><g><title>net_rx_action (1 samples, 0.01%)</title><rect x="53.2797%" y="1077" width="0.0118%" height="15" fill="rgb(212,24,39)" fg:x="4500" fg:w="1"/><text x="53.5297%" y="1087.50"></text></g><g><title>__napi_poll (1 samples, 0.01%)</title><rect x="53.2797%" y="1061" width="0.0118%" height="15" fill="rgb(213,46,39)" fg:x="4500" fg:w="1"/><text x="53.5297%" y="1071.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="53.2797%" y="1045" width="0.0118%" height="15" fill="rgb(239,106,12)" fg:x="4500" fg:w="1"/><text x="53.5297%" y="1055.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="53.2797%" y="1029" width="0.0118%" height="15" fill="rgb(249,229,21)" fg:x="4500" fg:w="1"/><text x="53.5297%" y="1039.50"></text></g><g><title>iommu_dma_unmap_page (1 samples, 0.01%)</title><rect x="53.2797%" y="1013" width="0.0118%" height="15" fill="rgb(212,158,3)" fg:x="4500" fg:w="1"/><text x="53.5297%" y="1023.50"></text></g><g><title>cfree (4 samples, 0.05%)</title><rect x="53.2915%" y="1141" width="0.0474%" height="15" fill="rgb(253,26,48)" fg:x="4501" fg:w="4"/><text x="53.5415%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.01%)</title><rect x="53.3389%" y="1141" width="0.0118%" height="15" fill="rgb(238,178,20)" fg:x="4505" fg:w="1"/><text x="53.5889%" y="1151.50"></text></g><g><title>&lt;u128 as core::iter::traits::accum::Sum&lt;&amp;u128&gt;&gt;::sum (1 samples, 0.01%)</title><rect x="53.3389%" y="1125" width="0.0118%" height="15" fill="rgb(208,86,15)" fg:x="4505" fg:w="1"/><text x="53.5889%" y="1135.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="53.3389%" y="1109" width="0.0118%" height="15" fill="rgb(239,42,53)" fg:x="4505" fg:w="1"/><text x="53.5889%" y="1119.50"></text></g><g><title>&lt;u128 as core::iter::traits::accum::Sum&lt;&amp;u128&gt;&gt;::sum::_{{closure}} (1 samples, 0.01%)</title><rect x="53.3389%" y="1093" width="0.0118%" height="15" fill="rgb(245,226,8)" fg:x="4505" fg:w="1"/><text x="53.5889%" y="1103.50"></text></g><g><title>&lt;u128 as core::ops::arith::Add&lt;&amp;u128&gt;&gt;::add (1 samples, 0.01%)</title><rect x="53.3389%" y="1077" width="0.0118%" height="15" fill="rgb(216,176,32)" fg:x="4505" fg:w="1"/><text x="53.5889%" y="1087.50"></text></g><g><title>&lt;u128 as core::ops::arith::Add&gt;::add (1 samples, 0.01%)</title><rect x="53.3389%" y="1061" width="0.0118%" height="15" fill="rgb(231,186,21)" fg:x="4505" fg:w="1"/><text x="53.5889%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;rotmguard::module::con::ConInst as rotmguard::module::ModuleInstance&gt;::client_packet::{{closure}}&gt; (1 samples, 0.01%)</title><rect x="53.3507%" y="1141" width="0.0118%" height="15" fill="rgb(205,95,49)" fg:x="4506" fg:w="1"/><text x="53.6007%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;rotmguard::packets::ClientPacket&gt; (1 samples, 0.01%)</title><rect x="53.3625%" y="1141" width="0.0118%" height="15" fill="rgb(217,145,8)" fg:x="4507" fg:w="1"/><text x="53.6125%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="53.5046%" y="1077" width="0.0118%" height="15" fill="rgb(239,144,48)" fg:x="4519" fg:w="1"/><text x="53.7546%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.01%)</title><rect x="53.5046%" y="1061" width="0.0118%" height="15" fill="rgb(214,189,23)" fg:x="4519" fg:w="1"/><text x="53.7546%" y="1071.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="53.5283%" y="965" width="0.0118%" height="15" fill="rgb(229,157,17)" fg:x="4521" fg:w="1"/><text x="53.7783%" y="975.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="53.5283%" y="949" width="0.0118%" height="15" fill="rgb(230,5,48)" fg:x="4521" fg:w="1"/><text x="53.7783%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;rotmguard::packets::_10_new_tick::NewTick&gt; (4 samples, 0.05%)</title><rect x="53.5046%" y="1125" width="0.0474%" height="15" fill="rgb(224,156,48)" fg:x="4519" fg:w="4"/><text x="53.7546%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;rotmguard::extra_datatypes::object_status_data::ObjectStatusData&gt;&gt; (4 samples, 0.05%)</title><rect x="53.5046%" y="1109" width="0.0474%" height="15" fill="rgb(223,14,29)" fg:x="4519" fg:w="4"/><text x="53.7546%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="53.5046%" y="1093" width="0.0474%" height="15" fill="rgb(229,96,36)" fg:x="4519" fg:w="4"/><text x="53.7546%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;[rotmguard::extra_datatypes::object_status_data::ObjectStatusData]&gt; (3 samples, 0.04%)</title><rect x="53.5165%" y="1077" width="0.0355%" height="15" fill="rgb(231,102,53)" fg:x="4520" fg:w="3"/><text x="53.7665%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;rotmguard::extra_datatypes::object_status_data::ObjectStatusData&gt; (2 samples, 0.02%)</title><rect x="53.5283%" y="1061" width="0.0237%" height="15" fill="rgb(210,77,38)" fg:x="4521" fg:w="2"/><text x="53.7783%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;rotmguard::extra_datatypes::statdata::StatData&gt;&gt; (2 samples, 0.02%)</title><rect x="53.5283%" y="1045" width="0.0237%" height="15" fill="rgb(235,131,6)" fg:x="4521" fg:w="2"/><text x="53.7783%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;rotmguard::extra_datatypes::statdata::StatData&gt;&gt; (2 samples, 0.02%)</title><rect x="53.5283%" y="1029" width="0.0237%" height="15" fill="rgb(252,55,38)" fg:x="4521" fg:w="2"/><text x="53.7783%" y="1039.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="53.5283%" y="1013" width="0.0237%" height="15" fill="rgb(246,38,14)" fg:x="4521" fg:w="2"/><text x="53.7783%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="53.5283%" y="997" width="0.0237%" height="15" fill="rgb(242,27,5)" fg:x="4521" fg:w="2"/><text x="53.7783%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="53.5283%" y="981" width="0.0237%" height="15" fill="rgb(228,65,35)" fg:x="4521" fg:w="2"/><text x="53.7783%" y="991.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="53.5401%" y="965" width="0.0118%" height="15" fill="rgb(245,93,11)" fg:x="4522" fg:w="1"/><text x="53.7901%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;rotmguard::packets::_42_update::UpdatePacket&gt; (3 samples, 0.04%)</title><rect x="53.5520%" y="1125" width="0.0355%" height="15" fill="rgb(213,1,31)" fg:x="4523" fg:w="3"/><text x="53.8020%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(u16,rotmguard::extra_datatypes::object_status_data::ObjectStatusData)&gt;&gt; (3 samples, 0.04%)</title><rect x="53.5520%" y="1109" width="0.0355%" height="15" fill="rgb(237,205,14)" fg:x="4523" fg:w="3"/><text x="53.8020%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="53.5520%" y="1093" width="0.0355%" height="15" fill="rgb(232,118,45)" fg:x="4523" fg:w="3"/><text x="53.8020%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(u16,rotmguard::extra_datatypes::object_status_data::ObjectStatusData)]&gt; (3 samples, 0.04%)</title><rect x="53.5520%" y="1077" width="0.0355%" height="15" fill="rgb(218,5,6)" fg:x="4523" fg:w="3"/><text x="53.8020%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u16,rotmguard::extra_datatypes::object_status_data::ObjectStatusData)&gt; (3 samples, 0.04%)</title><rect x="53.5520%" y="1061" width="0.0355%" height="15" fill="rgb(251,87,51)" fg:x="4523" fg:w="3"/><text x="53.8020%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;rotmguard::extra_datatypes::object_status_data::ObjectStatusData&gt; (3 samples, 0.04%)</title><rect x="53.5520%" y="1045" width="0.0355%" height="15" fill="rgb(207,225,20)" fg:x="4523" fg:w="3"/><text x="53.8020%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;rotmguard::extra_datatypes::statdata::StatData&gt;&gt; (3 samples, 0.04%)</title><rect x="53.5520%" y="1029" width="0.0355%" height="15" fill="rgb(222,78,54)" fg:x="4523" fg:w="3"/><text x="53.8020%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;rotmguard::extra_datatypes::statdata::StatData&gt;&gt; (3 samples, 0.04%)</title><rect x="53.5520%" y="1013" width="0.0355%" height="15" fill="rgb(232,85,16)" fg:x="4523" fg:w="3"/><text x="53.8020%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="53.5520%" y="997" width="0.0355%" height="15" fill="rgb(244,25,33)" fg:x="4523" fg:w="3"/><text x="53.8020%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.04%)</title><rect x="53.5520%" y="981" width="0.0355%" height="15" fill="rgb(233,24,36)" fg:x="4523" fg:w="3"/><text x="53.8020%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.04%)</title><rect x="53.5520%" y="965" width="0.0355%" height="15" fill="rgb(253,49,54)" fg:x="4523" fg:w="3"/><text x="53.8020%" y="975.50"></text></g><g><title>cfree (3 samples, 0.04%)</title><rect x="53.5520%" y="949" width="0.0355%" height="15" fill="rgb(245,12,22)" fg:x="4523" fg:w="3"/><text x="53.8020%" y="959.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="53.5638%" y="933" width="0.0237%" height="15" fill="rgb(253,141,28)" fg:x="4524" fg:w="2"/><text x="53.8138%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;rotmguard::packets::ServerPacket&gt; (21 samples, 0.25%)</title><rect x="53.3744%" y="1141" width="0.2486%" height="15" fill="rgb(225,207,27)" fg:x="4508" fg:w="21"/><text x="53.6244%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;rotmguard::packets::_67_notification::NotificationPacket&gt; (3 samples, 0.04%)</title><rect x="53.5875%" y="1125" width="0.0355%" height="15" fill="rgb(220,84,2)" fg:x="4526" fg:w="3"/><text x="53.8375%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;rotmguard::packets::_67_notification::NotificationType&gt; (3 samples, 0.04%)</title><rect x="53.5875%" y="1109" width="0.0355%" height="15" fill="rgb(224,37,37)" fg:x="4526" fg:w="3"/><text x="53.8375%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::borrow::Cow&lt;str&gt;&gt; (1 samples, 0.01%)</title><rect x="53.6112%" y="1093" width="0.0118%" height="15" fill="rgb(220,143,18)" fg:x="4528" fg:w="1"/><text x="53.8612%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;rotmguard::proxy::Proxy&gt; (1 samples, 0.01%)</title><rect x="53.6230%" y="1141" width="0.0118%" height="15" fill="rgb(210,88,33)" fg:x="4529" fg:w="1"/><text x="53.8730%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;rotmguard::module::RootModuleInstance&gt; (1 samples, 0.01%)</title><rect x="53.6230%" y="1125" width="0.0118%" height="15" fill="rgb(219,87,51)" fg:x="4529" fg:w="1"/><text x="53.8730%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;rotmguard::module::autonexus::AutonexusInst&gt; (1 samples, 0.01%)</title><rect x="53.6230%" y="1109" width="0.0118%" height="15" fill="rgb(211,7,35)" fg:x="4529" fg:w="1"/><text x="53.8730%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;rotmguard::module::autonexus::projectiles::Projectiles&gt; (1 samples, 0.01%)</title><rect x="53.6230%" y="1093" width="0.0118%" height="15" fill="rgb(232,77,2)" fg:x="4529" fg:w="1"/><text x="53.8730%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;lru::LruCache&lt;rotmguard::extra_datatypes::ProjectileId,rotmguard::module::autonexus::projectiles::Bullet&gt;&gt; (1 samples, 0.01%)</title><rect x="53.6230%" y="1077" width="0.0118%" height="15" fill="rgb(249,94,25)" fg:x="4529" fg:w="1"/><text x="53.8730%" y="1087.50"></text></g><g><title>&lt;lru::LruCache&lt;K,V,S&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="53.6230%" y="1061" width="0.0118%" height="15" fill="rgb(215,112,2)" fg:x="4529" fg:w="1"/><text x="53.8730%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.01%)</title><rect x="53.6230%" y="1045" width="0.0118%" height="15" fill="rgb(226,115,48)" fg:x="4529" fg:w="1"/><text x="53.8730%" y="1055.50"></text></g><g><title>&lt;hashbrown::map::Drain&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="53.6230%" y="1029" width="0.0118%" height="15" fill="rgb(249,196,10)" fg:x="4529" fg:w="1"/><text x="53.8730%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="53.6230%" y="1013" width="0.0118%" height="15" fill="rgb(237,109,14)" fg:x="4529" fg:w="1"/><text x="53.8730%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.01%)</title><rect x="53.6230%" y="997" width="0.0118%" height="15" fill="rgb(217,103,53)" fg:x="4529" fg:w="1"/><text x="53.8730%" y="1007.50"></text></g><g><title>&lt;lru::LruCache&lt;K,V,S&gt; as core::ops::drop::Drop&gt;::drop::_{{closure}} (1 samples, 0.01%)</title><rect x="53.6230%" y="981" width="0.0118%" height="15" fill="rgb(244,137,9)" fg:x="4529" fg:w="1"/><text x="53.8730%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;lru::LruEntry&lt;rotmguard::extra_datatypes::ProjectileId,rotmguard::module::autonexus::projectiles::Bullet&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="53.6230%" y="965" width="0.0118%" height="15" fill="rgb(227,201,3)" fg:x="4529" fg:w="1"/><text x="53.8730%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="53.6230%" y="949" width="0.0118%" height="15" fill="rgb(243,94,6)" fg:x="4529" fg:w="1"/><text x="53.8730%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="53.6230%" y="933" width="0.0118%" height="15" fill="rgb(235,118,5)" fg:x="4529" fg:w="1"/><text x="53.8730%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="53.6230%" y="917" width="0.0118%" height="15" fill="rgb(247,10,30)" fg:x="4529" fg:w="1"/><text x="53.8730%" y="927.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="53.6230%" y="901" width="0.0118%" height="15" fill="rgb(205,26,28)" fg:x="4529" fg:w="1"/><text x="53.8730%" y="911.50"></text></g><g><title>rc4::Rc4State::prga (1 samples, 0.01%)</title><rect x="53.6349%" y="1141" width="0.0118%" height="15" fill="rgb(206,99,35)" fg:x="4530" fg:w="1"/><text x="53.8849%" y="1151.50"></text></g><g><title>core::num::&lt;impl u8&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="53.6349%" y="1125" width="0.0118%" height="15" fill="rgb(238,130,40)" fg:x="4530" fg:w="1"/><text x="53.8849%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.02%)</title><rect x="53.6585%" y="1125" width="0.0237%" height="15" fill="rgb(224,126,31)" fg:x="4532" fg:w="2"/><text x="53.9085%" y="1135.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.02%)</title><rect x="53.6585%" y="1109" width="0.0237%" height="15" fill="rgb(254,105,17)" fg:x="4532" fg:w="2"/><text x="53.9085%" y="1119.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.02%)</title><rect x="53.6585%" y="1093" width="0.0237%" height="15" fill="rgb(216,87,36)" fg:x="4532" fg:w="2"/><text x="53.9085%" y="1103.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (3 samples, 0.04%)</title><rect x="53.7059%" y="1077" width="0.0355%" height="15" fill="rgb(240,21,12)" fg:x="4536" fg:w="3"/><text x="53.9559%" y="1087.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="53.7414%" y="1077" width="0.0118%" height="15" fill="rgb(245,192,34)" fg:x="4539" fg:w="1"/><text x="53.9914%" y="1087.50"></text></g><g><title>__udp4_lib_rcv (1 samples, 0.01%)</title><rect x="62.7516%" y="821" width="0.0118%" height="15" fill="rgb(226,100,49)" fg:x="5300" fg:w="1"/><text x="63.0016%" y="831.50"></text></g><g><title>udp_unicast_rcv_skb (1 samples, 0.01%)</title><rect x="62.7516%" y="805" width="0.0118%" height="15" fill="rgb(245,188,27)" fg:x="5300" fg:w="1"/><text x="63.0016%" y="815.50"></text></g><g><title>udp_queue_rcv_one_skb (1 samples, 0.01%)</title><rect x="62.7516%" y="789" width="0.0118%" height="15" fill="rgb(212,170,8)" fg:x="5300" fg:w="1"/><text x="63.0016%" y="799.50"></text></g><g><title>__udp_enqueue_schedule_skb (1 samples, 0.01%)</title><rect x="62.7516%" y="773" width="0.0118%" height="15" fill="rgb(217,113,29)" fg:x="5300" fg:w="1"/><text x="63.0016%" y="783.50"></text></g><g><title>sock_def_readable (1 samples, 0.01%)</title><rect x="62.7516%" y="757" width="0.0118%" height="15" fill="rgb(237,30,3)" fg:x="5300" fg:w="1"/><text x="63.0016%" y="767.50"></text></g><g><title>__wake_up_sync_key (1 samples, 0.01%)</title><rect x="62.7516%" y="741" width="0.0118%" height="15" fill="rgb(227,19,28)" fg:x="5300" fg:w="1"/><text x="63.0016%" y="751.50"></text></g><g><title>__wake_up_common (1 samples, 0.01%)</title><rect x="62.7516%" y="725" width="0.0118%" height="15" fill="rgb(239,172,45)" fg:x="5300" fg:w="1"/><text x="63.0016%" y="735.50"></text></g><g><title>pollwake (1 samples, 0.01%)</title><rect x="62.7516%" y="709" width="0.0118%" height="15" fill="rgb(254,55,39)" fg:x="5300" fg:w="1"/><text x="63.0016%" y="719.50"></text></g><g><title>try_to_wake_up (1 samples, 0.01%)</title><rect x="62.7516%" y="693" width="0.0118%" height="15" fill="rgb(249,208,12)" fg:x="5300" fg:w="1"/><text x="63.0016%" y="703.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.04%)</title><rect x="62.7398%" y="1061" width="0.0355%" height="15" fill="rgb(240,52,13)" fg:x="5299" fg:w="3"/><text x="62.9898%" y="1071.50"></text></g><g><title>common_interrupt (3 samples, 0.04%)</title><rect x="62.7398%" y="1045" width="0.0355%" height="15" fill="rgb(252,149,13)" fg:x="5299" fg:w="3"/><text x="62.9898%" y="1055.50"></text></g><g><title>__irq_exit_rcu (3 samples, 0.04%)</title><rect x="62.7398%" y="1029" width="0.0355%" height="15" fill="rgb(232,81,48)" fg:x="5299" fg:w="3"/><text x="62.9898%" y="1039.50"></text></g><g><title>handle_softirqs (3 samples, 0.04%)</title><rect x="62.7398%" y="1013" width="0.0355%" height="15" fill="rgb(222,144,2)" fg:x="5299" fg:w="3"/><text x="62.9898%" y="1023.50"></text></g><g><title>net_rx_action (3 samples, 0.04%)</title><rect x="62.7398%" y="997" width="0.0355%" height="15" fill="rgb(216,81,32)" fg:x="5299" fg:w="3"/><text x="62.9898%" y="1007.50"></text></g><g><title>__napi_poll (3 samples, 0.04%)</title><rect x="62.7398%" y="981" width="0.0355%" height="15" fill="rgb(244,78,51)" fg:x="5299" fg:w="3"/><text x="62.9898%" y="991.50"></text></g><g><title>[[r8169]] (3 samples, 0.04%)</title><rect x="62.7398%" y="965" width="0.0355%" height="15" fill="rgb(217,66,21)" fg:x="5299" fg:w="3"/><text x="62.9898%" y="975.50"></text></g><g><title>napi_complete_done (3 samples, 0.04%)</title><rect x="62.7398%" y="949" width="0.0355%" height="15" fill="rgb(247,101,42)" fg:x="5299" fg:w="3"/><text x="62.9898%" y="959.50"></text></g><g><title>netif_receive_skb_list_internal (3 samples, 0.04%)</title><rect x="62.7398%" y="933" width="0.0355%" height="15" fill="rgb(227,81,39)" fg:x="5299" fg:w="3"/><text x="62.9898%" y="943.50"></text></g><g><title>__netif_receive_skb_list_core (3 samples, 0.04%)</title><rect x="62.7398%" y="917" width="0.0355%" height="15" fill="rgb(220,223,44)" fg:x="5299" fg:w="3"/><text x="62.9898%" y="927.50"></text></g><g><title>ip_list_rcv (3 samples, 0.04%)</title><rect x="62.7398%" y="901" width="0.0355%" height="15" fill="rgb(205,218,2)" fg:x="5299" fg:w="3"/><text x="62.9898%" y="911.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.02%)</title><rect x="62.7516%" y="885" width="0.0237%" height="15" fill="rgb(212,207,28)" fg:x="5300" fg:w="2"/><text x="63.0016%" y="895.50"></text></g><g><title>ip_local_deliver (2 samples, 0.02%)</title><rect x="62.7516%" y="869" width="0.0237%" height="15" fill="rgb(224,12,41)" fg:x="5300" fg:w="2"/><text x="63.0016%" y="879.50"></text></g><g><title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="62.7516%" y="853" width="0.0237%" height="15" fill="rgb(216,118,12)" fg:x="5300" fg:w="2"/><text x="63.0016%" y="863.50"></text></g><g><title>ip_protocol_deliver_rcu (2 samples, 0.02%)</title><rect x="62.7516%" y="837" width="0.0237%" height="15" fill="rgb(252,97,46)" fg:x="5300" fg:w="2"/><text x="63.0016%" y="847.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.01%)</title><rect x="62.7634%" y="821" width="0.0118%" height="15" fill="rgb(244,206,19)" fg:x="5301" fg:w="1"/><text x="63.0134%" y="831.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.01%)</title><rect x="62.7634%" y="805" width="0.0118%" height="15" fill="rgb(231,84,31)" fg:x="5301" fg:w="1"/><text x="63.0134%" y="815.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.01%)</title><rect x="62.7634%" y="789" width="0.0118%" height="15" fill="rgb(244,133,0)" fg:x="5301" fg:w="1"/><text x="63.0134%" y="799.50"></text></g><g><title>__tcp_ack_snd_check (1 samples, 0.01%)</title><rect x="62.7634%" y="773" width="0.0118%" height="15" fill="rgb(223,15,50)" fg:x="5301" fg:w="1"/><text x="63.0134%" y="783.50"></text></g><g><title>__tcp_select_window (1 samples, 0.01%)</title><rect x="62.7634%" y="757" width="0.0118%" height="15" fill="rgb(250,118,49)" fg:x="5301" fg:w="1"/><text x="63.0134%" y="767.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.01%)</title><rect x="62.7753%" y="1061" width="0.0118%" height="15" fill="rgb(248,25,38)" fg:x="5302" fg:w="1"/><text x="63.0253%" y="1071.50"></text></g><g><title>exc_page_fault (1 samples, 0.01%)</title><rect x="62.7753%" y="1045" width="0.0118%" height="15" fill="rgb(215,70,14)" fg:x="5302" fg:w="1"/><text x="63.0253%" y="1055.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.01%)</title><rect x="62.7753%" y="1029" width="0.0118%" height="15" fill="rgb(215,28,15)" fg:x="5302" fg:w="1"/><text x="63.0253%" y="1039.50"></text></g><g><title>handle_mm_fault (1 samples, 0.01%)</title><rect x="62.7753%" y="1013" width="0.0118%" height="15" fill="rgb(243,6,28)" fg:x="5302" fg:w="1"/><text x="63.0253%" y="1023.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.01%)</title><rect x="62.7871%" y="1045" width="0.0118%" height="15" fill="rgb(222,130,1)" fg:x="5303" fg:w="1"/><text x="63.0371%" y="1055.50"></text></g><g><title>task_work_run (1 samples, 0.01%)</title><rect x="62.7871%" y="1029" width="0.0118%" height="15" fill="rgb(236,166,44)" fg:x="5303" fg:w="1"/><text x="63.0371%" y="1039.50"></text></g><g><title>task_mm_cid_work (1 samples, 0.01%)</title><rect x="62.7871%" y="1013" width="0.0118%" height="15" fill="rgb(221,108,14)" fg:x="5303" fg:w="1"/><text x="63.0371%" y="1023.50"></text></g><g><title>net_rx_action (1 samples, 0.01%)</title><rect x="62.7990%" y="997" width="0.0118%" height="15" fill="rgb(252,3,45)" fg:x="5304" fg:w="1"/><text x="63.0490%" y="1007.50"></text></g><g><title>__napi_poll (1 samples, 0.01%)</title><rect x="62.7990%" y="981" width="0.0118%" height="15" fill="rgb(237,68,30)" fg:x="5304" fg:w="1"/><text x="63.0490%" y="991.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="62.7990%" y="965" width="0.0118%" height="15" fill="rgb(211,79,22)" fg:x="5304" fg:w="1"/><text x="63.0490%" y="975.50"></text></g><g><title>napi_gro_receive (1 samples, 0.01%)</title><rect x="62.7990%" y="949" width="0.0118%" height="15" fill="rgb(252,185,21)" fg:x="5304" fg:w="1"/><text x="63.0490%" y="959.50"></text></g><g><title>dev_gro_receive (1 samples, 0.01%)</title><rect x="62.7990%" y="933" width="0.0118%" height="15" fill="rgb(225,189,26)" fg:x="5304" fg:w="1"/><text x="63.0490%" y="943.50"></text></g><g><title>napi_gro_complete.constprop.0 (1 samples, 0.01%)</title><rect x="62.7990%" y="917" width="0.0118%" height="15" fill="rgb(241,30,40)" fg:x="5304" fg:w="1"/><text x="63.0490%" y="927.50"></text></g><g><title>tcp4_gro_complete (1 samples, 0.01%)</title><rect x="62.7990%" y="901" width="0.0118%" height="15" fill="rgb(235,215,44)" fg:x="5304" fg:w="1"/><text x="63.0490%" y="911.50"></text></g><g><title>__irq_exit_rcu (2 samples, 0.02%)</title><rect x="62.7990%" y="1029" width="0.0237%" height="15" fill="rgb(205,8,29)" fg:x="5304" fg:w="2"/><text x="63.0490%" y="1039.50"></text></g><g><title>handle_softirqs (2 samples, 0.02%)</title><rect x="62.7990%" y="1013" width="0.0237%" height="15" fill="rgb(241,137,42)" fg:x="5304" fg:w="2"/><text x="63.0490%" y="1023.50"></text></g><g><title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="62.8108%" y="997" width="0.0118%" height="15" fill="rgb(237,155,2)" fg:x="5305" fg:w="1"/><text x="63.0608%" y="1007.50"></text></g><g><title>update_blocked_averages (1 samples, 0.01%)</title><rect x="62.8108%" y="981" width="0.0118%" height="15" fill="rgb(245,29,42)" fg:x="5305" fg:w="1"/><text x="63.0608%" y="991.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="62.8108%" y="965" width="0.0118%" height="15" fill="rgb(234,101,35)" fg:x="5305" fg:w="1"/><text x="63.0608%" y="975.50"></text></g><g><title>acct_account_cputime (1 samples, 0.01%)</title><rect x="62.8226%" y="949" width="0.0118%" height="15" fill="rgb(228,64,37)" fg:x="5306" fg:w="1"/><text x="63.0726%" y="959.50"></text></g><g><title>irq_work_run_list (1 samples, 0.01%)</title><rect x="62.8345%" y="949" width="0.0118%" height="15" fill="rgb(217,214,36)" fg:x="5307" fg:w="1"/><text x="63.0845%" y="959.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (7 samples, 0.08%)</title><rect x="62.7871%" y="1061" width="0.0829%" height="15" fill="rgb(243,70,3)" fg:x="5303" fg:w="7"/><text x="63.0371%" y="1071.50"></text></g><g><title>sysvec_apic_timer_interrupt (6 samples, 0.07%)</title><rect x="62.7990%" y="1045" width="0.0710%" height="15" fill="rgb(253,158,52)" fg:x="5304" fg:w="6"/><text x="63.0490%" y="1055.50"></text></g><g><title>__sysvec_apic_timer_interrupt (4 samples, 0.05%)</title><rect x="62.8226%" y="1029" width="0.0474%" height="15" fill="rgb(234,111,54)" fg:x="5306" fg:w="4"/><text x="63.0726%" y="1039.50"></text></g><g><title>hrtimer_interrupt (4 samples, 0.05%)</title><rect x="62.8226%" y="1013" width="0.0474%" height="15" fill="rgb(217,70,32)" fg:x="5306" fg:w="4"/><text x="63.0726%" y="1023.50"></text></g><g><title>__hrtimer_run_queues (4 samples, 0.05%)</title><rect x="62.8226%" y="997" width="0.0474%" height="15" fill="rgb(234,18,33)" fg:x="5306" fg:w="4"/><text x="63.0726%" y="1007.50"></text></g><g><title>tick_nohz_handler (4 samples, 0.05%)</title><rect x="62.8226%" y="981" width="0.0474%" height="15" fill="rgb(234,12,49)" fg:x="5306" fg:w="4"/><text x="63.0726%" y="991.50"></text></g><g><title>update_process_times (4 samples, 0.05%)</title><rect x="62.8226%" y="965" width="0.0474%" height="15" fill="rgb(236,10,21)" fg:x="5306" fg:w="4"/><text x="63.0726%" y="975.50"></text></g><g><title>scheduler_tick (2 samples, 0.02%)</title><rect x="62.8463%" y="949" width="0.0237%" height="15" fill="rgb(248,182,45)" fg:x="5308" fg:w="2"/><text x="63.0963%" y="959.50"></text></g><g><title>perf_event_task_tick (2 samples, 0.02%)</title><rect x="62.8463%" y="933" width="0.0237%" height="15" fill="rgb(217,95,36)" fg:x="5308" fg:w="2"/><text x="63.0963%" y="943.50"></text></g><g><title>perf_adjust_freq_unthr_context (2 samples, 0.02%)</title><rect x="62.8463%" y="917" width="0.0237%" height="15" fill="rgb(212,110,31)" fg:x="5308" fg:w="2"/><text x="63.0963%" y="927.50"></text></g><g><title>[libc.so.6] (771 samples, 9.13%)</title><rect x="53.7533%" y="1077" width="9.1286%" height="15" fill="rgb(206,32,53)" fg:x="4540" fg:w="771"/><text x="54.0033%" y="1087.50">[libc.so.6]</text></g><g><title>asm_sysvec_call_function_single (1 samples, 0.01%)</title><rect x="62.8700%" y="1061" width="0.0118%" height="15" fill="rgb(246,141,37)" fg:x="5310" fg:w="1"/><text x="63.1200%" y="1071.50"></text></g><g><title>sysvec_call_function_single (1 samples, 0.01%)</title><rect x="62.8700%" y="1045" width="0.0118%" height="15" fill="rgb(219,16,7)" fg:x="5310" fg:w="1"/><text x="63.1200%" y="1055.50"></text></g><g><title>__sysvec_call_function_single (1 samples, 0.01%)</title><rect x="62.8700%" y="1029" width="0.0118%" height="15" fill="rgb(230,205,45)" fg:x="5310" fg:w="1"/><text x="63.1200%" y="1039.50"></text></g><g><title>__flush_smp_call_function_queue (1 samples, 0.01%)</title><rect x="62.8700%" y="1013" width="0.0118%" height="15" fill="rgb(231,43,49)" fg:x="5310" fg:w="1"/><text x="63.1200%" y="1023.50"></text></g><g><title>sched_ttwu_pending (1 samples, 0.01%)</title><rect x="62.8700%" y="997" width="0.0118%" height="15" fill="rgb(212,106,34)" fg:x="5310" fg:w="1"/><text x="63.1200%" y="1007.50"></text></g><g><title>update_rq_clock (1 samples, 0.01%)</title><rect x="62.8700%" y="981" width="0.0118%" height="15" fill="rgb(206,83,17)" fg:x="5310" fg:w="1"/><text x="63.1200%" y="991.50"></text></g><g><title>psi_account_irqtime (1 samples, 0.01%)</title><rect x="62.8700%" y="965" width="0.0118%" height="15" fill="rgb(244,154,49)" fg:x="5310" fg:w="1"/><text x="63.1200%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;rotmguard::packets::ClientPacket&gt; (1 samples, 0.01%)</title><rect x="62.8818%" y="1077" width="0.0118%" height="15" fill="rgb(244,149,49)" fg:x="5311" fg:w="1"/><text x="63.1318%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;rotmguard::packets::ServerPacket&gt; (1 samples, 0.01%)</title><rect x="62.8937%" y="1077" width="0.0118%" height="15" fill="rgb(227,134,18)" fg:x="5312" fg:w="1"/><text x="63.1437%" y="1087.50"></text></g><g><title>core::slice::rotate::ptr_rotate (6 samples, 0.07%)</title><rect x="62.9055%" y="1077" width="0.0710%" height="15" fill="rgb(237,116,36)" fg:x="5313" fg:w="6"/><text x="63.1555%" y="1087.50"></text></g><g><title>core::intrinsics::copy (784 samples, 9.28%)</title><rect x="53.7059%" y="1093" width="9.2825%" height="15" fill="rgb(205,129,40)" fg:x="4536" fg:w="784"/><text x="53.9559%" y="1103.50">core::intrins..</text></g><g><title>rotmguard::proxy::ProxyWriteHalf::send_client::_{{closure}} (1 samples, 0.01%)</title><rect x="62.9766%" y="1077" width="0.0118%" height="15" fill="rgb(236,178,4)" fg:x="5319" fg:w="1"/><text x="63.2266%" y="1087.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.04%)</title><rect x="62.9884%" y="1093" width="0.0355%" height="15" fill="rgb(251,76,53)" fg:x="5320" fg:w="3"/><text x="63.2384%" y="1103.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="62.9884%" y="1077" width="0.0355%" height="15" fill="rgb(242,92,40)" fg:x="5320" fg:w="3"/><text x="63.2384%" y="1087.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="63.0239%" y="1093" width="0.0118%" height="15" fill="rgb(209,45,30)" fg:x="5323" fg:w="1"/><text x="63.2739%" y="1103.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="63.0358%" y="1093" width="0.0118%" height="15" fill="rgb(218,157,36)" fg:x="5324" fg:w="1"/><text x="63.2858%" y="1103.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="63.0358%" y="1077" width="0.0118%" height="15" fill="rgb(222,186,16)" fg:x="5324" fg:w="1"/><text x="63.2858%" y="1087.50"></text></g><g><title>core::ptr::read (20 samples, 0.24%)</title><rect x="63.1778%" y="1061" width="0.2368%" height="15" fill="rgb(254,72,35)" fg:x="5336" fg:w="20"/><text x="63.4278%" y="1071.50"></text></g><g><title>core::slice::rotate::ptr_rotate (836 samples, 9.90%)</title><rect x="53.6822%" y="1109" width="9.8982%" height="15" fill="rgb(224,25,35)" fg:x="4534" fg:w="836"/><text x="53.9322%" y="1119.50">core::slice::r..</text></g><g><title>core::ptr::swap_nonoverlapping (45 samples, 0.53%)</title><rect x="63.0476%" y="1093" width="0.5328%" height="15" fill="rgb(206,135,52)" fg:x="5325" fg:w="45"/><text x="63.2976%" y="1103.50"></text></g><g><title>core::ptr::swap_nonoverlapping_simple_untyped (45 samples, 0.53%)</title><rect x="63.0476%" y="1077" width="0.5328%" height="15" fill="rgb(229,174,47)" fg:x="5325" fg:w="45"/><text x="63.2976%" y="1087.50"></text></g><g><title>core::ptr::write (14 samples, 0.17%)</title><rect x="63.4146%" y="1061" width="0.1658%" height="15" fill="rgb(242,184,21)" fg:x="5356" fg:w="14"/><text x="63.6646%" y="1071.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::rotate_left (837 samples, 9.91%)</title><rect x="53.6822%" y="1125" width="9.9100%" height="15" fill="rgb(213,22,45)" fg:x="4534" fg:w="837"/><text x="53.9322%" y="1135.50">core::slice::&lt;..</text></g><g><title>rotmguard::proxy::ProxyWriteHalf::send_client::_{{closure}} (1 samples, 0.01%)</title><rect x="63.5804%" y="1109" width="0.0118%" height="15" fill="rgb(237,81,54)" fg:x="5370" fg:w="1"/><text x="63.8304%" y="1119.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="63.5804%" y="1093" width="0.0118%" height="15" fill="rgb(248,177,18)" fg:x="5370" fg:w="1"/><text x="63.8304%" y="1103.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (1 samples, 0.01%)</title><rect x="63.5804%" y="1077" width="0.0118%" height="15" fill="rgb(254,31,16)" fg:x="5370" fg:w="1"/><text x="63.8304%" y="1087.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (1 samples, 0.01%)</title><rect x="63.5804%" y="1061" width="0.0118%" height="15" fill="rgb(235,20,31)" fg:x="5370" fg:w="1"/><text x="63.8304%" y="1071.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="63.5804%" y="1045" width="0.0118%" height="15" fill="rgb(240,56,43)" fg:x="5370" fg:w="1"/><text x="63.8304%" y="1055.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="63.5804%" y="1029" width="0.0118%" height="15" fill="rgb(237,197,51)" fg:x="5370" fg:w="1"/><text x="63.8304%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;rotmguard::packets::ServerPacket&gt; (1 samples, 0.01%)</title><rect x="63.5804%" y="1013" width="0.0118%" height="15" fill="rgb(241,162,44)" fg:x="5370" fg:w="1"/><text x="63.8304%" y="1023.50"></text></g><g><title>rotmguard::proxy::PacketReader::pop_packet (841 samples, 9.96%)</title><rect x="53.6467%" y="1141" width="9.9574%" height="15" fill="rgb(224,23,20)" fg:x="4531" fg:w="841"/><text x="53.8967%" y="1151.50">rotmguard::pro..</text></g><g><title>rotmguard::proxy::read_packet_size (1 samples, 0.01%)</title><rect x="63.5922%" y="1125" width="0.0118%" height="15" fill="rgb(250,109,34)" fg:x="5371" fg:w="1"/><text x="63.8422%" y="1135.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (1 samples, 0.01%)</title><rect x="63.5922%" y="1109" width="0.0118%" height="15" fill="rgb(214,175,50)" fg:x="5371" fg:w="1"/><text x="63.8422%" y="1119.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (1 samples, 0.01%)</title><rect x="63.5922%" y="1093" width="0.0118%" height="15" fill="rgb(213,182,5)" fg:x="5371" fg:w="1"/><text x="63.8422%" y="1103.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (1 samples, 0.01%)</title><rect x="63.5922%" y="1077" width="0.0118%" height="15" fill="rgb(209,199,19)" fg:x="5371" fg:w="1"/><text x="63.8422%" y="1087.50"></text></g><g><title>rotmguard::proxy::PacketReader::wait_for_whole_packet::_{{closure}} (1 samples, 0.01%)</title><rect x="63.6041%" y="1141" width="0.0118%" height="15" fill="rgb(236,224,42)" fg:x="5372" fg:w="1"/><text x="63.8541%" y="1151.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (1 samples, 0.01%)</title><rect x="63.6041%" y="1125" width="0.0118%" height="15" fill="rgb(246,226,29)" fg:x="5372" fg:w="1"/><text x="63.8541%" y="1135.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (1 samples, 0.01%)</title><rect x="63.6041%" y="1109" width="0.0118%" height="15" fill="rgb(227,223,11)" fg:x="5372" fg:w="1"/><text x="63.8541%" y="1119.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (1 samples, 0.01%)</title><rect x="63.6041%" y="1093" width="0.0118%" height="15" fill="rgb(219,7,51)" fg:x="5372" fg:w="1"/><text x="63.8541%" y="1103.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (1 samples, 0.01%)</title><rect x="63.6041%" y="1077" width="0.0118%" height="15" fill="rgb(245,167,10)" fg:x="5372" fg:w="1"/><text x="63.8541%" y="1087.50"></text></g><g><title>&lt;rc4::Rc4Core&lt;KeySize&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1 samples, 0.01%)</title><rect x="63.6041%" y="1061" width="0.0118%" height="15" fill="rgb(237,224,16)" fg:x="5372" fg:w="1"/><text x="63.8541%" y="1071.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.01%)</title><rect x="63.6041%" y="1045" width="0.0118%" height="15" fill="rgb(226,132,13)" fg:x="5372" fg:w="1"/><text x="63.8541%" y="1055.50"></text></g><g><title>&lt;rc4::Backend as cipher::stream_core::StreamBackend&gt;::gen_ks_block (1 samples, 0.01%)</title><rect x="63.6041%" y="1029" width="0.0118%" height="15" fill="rgb(214,140,3)" fg:x="5372" fg:w="1"/><text x="63.8541%" y="1039.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (1 samples, 0.01%)</title><rect x="63.6041%" y="1013" width="0.0118%" height="15" fill="rgb(221,177,4)" fg:x="5372" fg:w="1"/><text x="63.8541%" y="1023.50"></text></g><g><title>&lt;rotmguard::packets::_42_update::UpdatePacket as rotmguard::read::RPRead&gt;::rp_read (1 samples, 0.01%)</title><rect x="63.6041%" y="997" width="0.0118%" height="15" fill="rgb(238,139,3)" fg:x="5372" fg:w="1"/><text x="63.8541%" y="1007.50"></text></g><g><title>&lt;i16 as rotmguard::read::RPRead&gt;::rp_read (1 samples, 0.01%)</title><rect x="63.6041%" y="981" width="0.0118%" height="15" fill="rgb(216,17,39)" fg:x="5372" fg:w="1"/><text x="63.8541%" y="991.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (1 samples, 0.01%)</title><rect x="63.6041%" y="965" width="0.0118%" height="15" fill="rgb(238,120,9)" fg:x="5372" fg:w="1"/><text x="63.8541%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.01%)</title><rect x="63.6041%" y="949" width="0.0118%" height="15" fill="rgb(244,92,53)" fg:x="5372" fg:w="1"/><text x="63.8541%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="63.6041%" y="933" width="0.0118%" height="15" fill="rgb(224,148,33)" fg:x="5372" fg:w="1"/><text x="63.8541%" y="943.50"></text></g><g><title>&lt;rotmguard::packets::ServerPacket as rotmguard::write::RPWrite&gt;::rp_write (2 samples, 0.02%)</title><rect x="63.6278%" y="1109" width="0.0237%" height="15" fill="rgb(243,6,36)" fg:x="5374" fg:w="2"/><text x="63.8778%" y="1119.50"></text></g><g><title>&lt;rotmguard::extra_datatypes::worldpos::WorldPos as rotmguard::write::RPWrite&gt;::rp_write (1 samples, 0.01%)</title><rect x="63.6514%" y="1077" width="0.0118%" height="15" fill="rgb(230,102,11)" fg:x="5376" fg:w="1"/><text x="63.9014%" y="1087.50"></text></g><g><title>&lt;f32 as rotmguard::write::RPWrite&gt;::rp_write (1 samples, 0.01%)</title><rect x="63.6514%" y="1061" width="0.0118%" height="15" fill="rgb(234,148,36)" fg:x="5376" fg:w="1"/><text x="63.9014%" y="1071.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.01%)</title><rect x="63.6514%" y="1045" width="0.0118%" height="15" fill="rgb(251,153,25)" fg:x="5376" fg:w="1"/><text x="63.9014%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="63.6514%" y="1029" width="0.0118%" height="15" fill="rgb(215,129,8)" fg:x="5376" fg:w="1"/><text x="63.9014%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="63.6514%" y="1013" width="0.0118%" height="15" fill="rgb(224,128,35)" fg:x="5376" fg:w="1"/><text x="63.9014%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="63.6514%" y="997" width="0.0118%" height="15" fill="rgb(237,56,52)" fg:x="5376" fg:w="1"/><text x="63.9014%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="63.6514%" y="981" width="0.0118%" height="15" fill="rgb(234,213,19)" fg:x="5376" fg:w="1"/><text x="63.9014%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.01%)</title><rect x="63.6514%" y="965" width="0.0118%" height="15" fill="rgb(252,82,23)" fg:x="5376" fg:w="1"/><text x="63.9014%" y="975.50"></text></g><g><title>&lt;rotmguard::packets::_10_new_tick::NewTick as rotmguard::write::RPWrite&gt;::rp_write (4 samples, 0.05%)</title><rect x="63.6514%" y="1109" width="0.0474%" height="15" fill="rgb(254,201,21)" fg:x="5376" fg:w="4"/><text x="63.9014%" y="1119.50"></text></g><g><title>&lt;rotmguard::extra_datatypes::object_status_data::ObjectStatusData as rotmguard::write::RPWrite&gt;::rp_write (4 samples, 0.05%)</title><rect x="63.6514%" y="1093" width="0.0474%" height="15" fill="rgb(250,186,11)" fg:x="5376" fg:w="4"/><text x="63.9014%" y="1103.50"></text></g><g><title>rotmguard::write::write_compressed_int (3 samples, 0.04%)</title><rect x="63.6633%" y="1077" width="0.0355%" height="15" fill="rgb(211,174,5)" fg:x="5377" fg:w="3"/><text x="63.9133%" y="1087.50"></text></g><g><title>&lt;u8 as rotmguard::write::RPWrite&gt;::rp_write (1 samples, 0.01%)</title><rect x="63.6988%" y="1077" width="0.0118%" height="15" fill="rgb(214,121,10)" fg:x="5380" fg:w="1"/><text x="63.9488%" y="1087.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.01%)</title><rect x="63.6988%" y="1061" width="0.0118%" height="15" fill="rgb(241,66,2)" fg:x="5380" fg:w="1"/><text x="63.9488%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="63.6988%" y="1045" width="0.0118%" height="15" fill="rgb(220,167,19)" fg:x="5380" fg:w="1"/><text x="63.9488%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="63.6988%" y="1029" width="0.0118%" height="15" fill="rgb(231,54,50)" fg:x="5380" fg:w="1"/><text x="63.9488%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="63.6988%" y="1013" width="0.0118%" height="15" fill="rgb(239,217,53)" fg:x="5380" fg:w="1"/><text x="63.9488%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="63.6988%" y="997" width="0.0118%" height="15" fill="rgb(248,8,0)" fg:x="5380" fg:w="1"/><text x="63.9488%" y="1007.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="63.6988%" y="981" width="0.0118%" height="15" fill="rgb(229,118,37)" fg:x="5380" fg:w="1"/><text x="63.9488%" y="991.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="63.6988%" y="965" width="0.0118%" height="15" fill="rgb(253,223,43)" fg:x="5380" fg:w="1"/><text x="63.9488%" y="975.50"></text></g><g><title>__common_interrupt (1 samples, 0.01%)</title><rect x="63.6988%" y="949" width="0.0118%" height="15" fill="rgb(211,77,36)" fg:x="5380" fg:w="1"/><text x="63.9488%" y="959.50"></text></g><g><title>handle_edge_irq (1 samples, 0.01%)</title><rect x="63.6988%" y="933" width="0.0118%" height="15" fill="rgb(219,3,53)" fg:x="5380" fg:w="1"/><text x="63.9488%" y="943.50"></text></g><g><title>handle_irq_event (1 samples, 0.01%)</title><rect x="63.6988%" y="917" width="0.0118%" height="15" fill="rgb(244,45,42)" fg:x="5380" fg:w="1"/><text x="63.9488%" y="927.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="63.6988%" y="901" width="0.0118%" height="15" fill="rgb(225,95,27)" fg:x="5380" fg:w="1"/><text x="63.9488%" y="911.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="63.6988%" y="885" width="0.0118%" height="15" fill="rgb(207,74,8)" fg:x="5380" fg:w="1"/><text x="63.9488%" y="895.50"></text></g><g><title>&lt;rotmguard::packets::_11_show_effect::ShowEffect as rotmguard::write::RPWrite&gt;::rp_write (2 samples, 0.02%)</title><rect x="63.6988%" y="1109" width="0.0237%" height="15" fill="rgb(243,63,36)" fg:x="5380" fg:w="2"/><text x="63.9488%" y="1119.50"></text></g><g><title>rotmguard::write::write_compressed_int (2 samples, 0.02%)</title><rect x="63.6988%" y="1093" width="0.0237%" height="15" fill="rgb(211,180,12)" fg:x="5380" fg:w="2"/><text x="63.9488%" y="1103.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="63.7106%" y="1077" width="0.0118%" height="15" fill="rgb(254,166,49)" fg:x="5381" fg:w="1"/><text x="63.9606%" y="1087.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="63.7106%" y="1061" width="0.0118%" height="15" fill="rgb(205,19,0)" fg:x="5381" fg:w="1"/><text x="63.9606%" y="1071.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.01%)</title><rect x="63.7106%" y="1045" width="0.0118%" height="15" fill="rgb(224,172,32)" fg:x="5381" fg:w="1"/><text x="63.9606%" y="1055.50"></text></g><g><title>handle_softirqs (1 samples, 0.01%)</title><rect x="63.7106%" y="1029" width="0.0118%" height="15" fill="rgb(254,136,30)" fg:x="5381" fg:w="1"/><text x="63.9606%" y="1039.50"></text></g><g><title>net_rx_action (1 samples, 0.01%)</title><rect x="63.7106%" y="1013" width="0.0118%" height="15" fill="rgb(246,19,35)" fg:x="5381" fg:w="1"/><text x="63.9606%" y="1023.50"></text></g><g><title>__napi_poll (1 samples, 0.01%)</title><rect x="63.7106%" y="997" width="0.0118%" height="15" fill="rgb(219,24,36)" fg:x="5381" fg:w="1"/><text x="63.9606%" y="1007.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="63.7106%" y="981" width="0.0118%" height="15" fill="rgb(251,55,1)" fg:x="5381" fg:w="1"/><text x="63.9606%" y="991.50"></text></g><g><title>&lt;rotmguard::packets::_67_notification::NotificationPacket as rotmguard::write::RPWrite&gt;::rp_write (1 samples, 0.01%)</title><rect x="63.7225%" y="1109" width="0.0118%" height="15" fill="rgb(218,117,39)" fg:x="5382" fg:w="1"/><text x="63.9725%" y="1119.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;str&gt; as rotmguard::write::RPWrite&gt;::rp_write (1 samples, 0.01%)</title><rect x="63.7225%" y="1093" width="0.0118%" height="15" fill="rgb(248,169,11)" fg:x="5382" fg:w="1"/><text x="63.9725%" y="1103.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.01%)</title><rect x="63.7225%" y="1077" width="0.0118%" height="15" fill="rgb(244,40,44)" fg:x="5382" fg:w="1"/><text x="63.9725%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="63.7225%" y="1061" width="0.0118%" height="15" fill="rgb(234,62,37)" fg:x="5382" fg:w="1"/><text x="63.9725%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="63.7225%" y="1045" width="0.0118%" height="15" fill="rgb(207,117,42)" fg:x="5382" fg:w="1"/><text x="63.9725%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="63.7225%" y="1029" width="0.0118%" height="15" fill="rgb(213,43,2)" fg:x="5382" fg:w="1"/><text x="63.9725%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="63.7225%" y="1013" width="0.0118%" height="15" fill="rgb(244,202,51)" fg:x="5382" fg:w="1"/><text x="63.9725%" y="1023.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="63.7225%" y="997" width="0.0118%" height="15" fill="rgb(253,174,46)" fg:x="5382" fg:w="1"/><text x="63.9725%" y="1007.50"></text></g><g><title>&lt;rotmguard::packets::ServerPacket as rotmguard::write::RPWrite&gt;::rp_write (10 samples, 0.12%)</title><rect x="63.6278%" y="1125" width="0.1184%" height="15" fill="rgb(251,23,1)" fg:x="5374" fg:w="10"/><text x="63.8778%" y="1135.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.01%)</title><rect x="63.7343%" y="1109" width="0.0118%" height="15" fill="rgb(253,26,1)" fg:x="5383" fg:w="1"/><text x="63.9843%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="63.7343%" y="1093" width="0.0118%" height="15" fill="rgb(216,89,31)" fg:x="5383" fg:w="1"/><text x="63.9843%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="63.7343%" y="1077" width="0.0118%" height="15" fill="rgb(209,109,5)" fg:x="5383" fg:w="1"/><text x="63.9843%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="63.7343%" y="1061" width="0.0118%" height="15" fill="rgb(229,63,13)" fg:x="5383" fg:w="1"/><text x="63.9843%" y="1071.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="63.7343%" y="1045" width="0.0118%" height="15" fill="rgb(238,137,54)" fg:x="5383" fg:w="1"/><text x="63.9843%" y="1055.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="63.7343%" y="1029" width="0.0118%" height="15" fill="rgb(228,1,9)" fg:x="5383" fg:w="1"/><text x="63.9843%" y="1039.50"></text></g><g><title>&lt;rotmguard::packets::ServerPacket as rotmguard::write::RPWrite&gt;::rp_write (1 samples, 0.01%)</title><rect x="63.8054%" y="1093" width="0.0118%" height="15" fill="rgb(249,120,48)" fg:x="5389" fg:w="1"/><text x="64.0554%" y="1103.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1 samples, 0.01%)</title><rect x="63.8054%" y="1077" width="0.0118%" height="15" fill="rgb(209,72,36)" fg:x="5389" fg:w="1"/><text x="64.0554%" y="1087.50"></text></g><g><title>[libc.so.6] (5 samples, 0.06%)</title><rect x="64.0540%" y="1029" width="0.0592%" height="15" fill="rgb(247,98,49)" fg:x="5410" fg:w="5"/><text x="64.3040%" y="1039.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="64.1132%" y="1029" width="0.0118%" height="15" fill="rgb(233,75,36)" fg:x="5415" fg:w="1"/><text x="64.3632%" y="1039.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="64.1132%" y="1013" width="0.0118%" height="15" fill="rgb(225,14,24)" fg:x="5415" fg:w="1"/><text x="64.3632%" y="1023.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.01%)</title><rect x="64.1132%" y="997" width="0.0118%" height="15" fill="rgb(237,193,20)" fg:x="5415" fg:w="1"/><text x="64.3632%" y="1007.50"></text></g><g><title>handle_softirqs (1 samples, 0.01%)</title><rect x="64.1132%" y="981" width="0.0118%" height="15" fill="rgb(239,122,19)" fg:x="5415" fg:w="1"/><text x="64.3632%" y="991.50"></text></g><g><title>net_rx_action (1 samples, 0.01%)</title><rect x="64.1132%" y="965" width="0.0118%" height="15" fill="rgb(231,220,10)" fg:x="5415" fg:w="1"/><text x="64.3632%" y="975.50"></text></g><g><title>__napi_poll (1 samples, 0.01%)</title><rect x="64.1132%" y="949" width="0.0118%" height="15" fill="rgb(220,66,15)" fg:x="5415" fg:w="1"/><text x="64.3632%" y="959.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="64.1132%" y="933" width="0.0118%" height="15" fill="rgb(215,171,52)" fg:x="5415" fg:w="1"/><text x="64.3632%" y="943.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="64.1132%" y="917" width="0.0118%" height="15" fill="rgb(241,169,50)" fg:x="5415" fg:w="1"/><text x="64.3632%" y="927.50"></text></g><g><title>iommu_dma_unmap_page (1 samples, 0.01%)</title><rect x="64.1132%" y="901" width="0.0118%" height="15" fill="rgb(236,189,0)" fg:x="5415" fg:w="1"/><text x="64.3632%" y="911.50"></text></g><g><title>iommu_iova_to_phys (1 samples, 0.01%)</title><rect x="64.1132%" y="885" width="0.0118%" height="15" fill="rgb(217,147,20)" fg:x="5415" fg:w="1"/><text x="64.3632%" y="895.50"></text></g><g><title>asm_sysvec_reschedule_ipi (1 samples, 0.01%)</title><rect x="64.1250%" y="1029" width="0.0118%" height="15" fill="rgb(206,188,39)" fg:x="5416" fg:w="1"/><text x="64.3750%" y="1039.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.01%)</title><rect x="64.1250%" y="1013" width="0.0118%" height="15" fill="rgb(227,118,25)" fg:x="5416" fg:w="1"/><text x="64.3750%" y="1023.50"></text></g><g><title>schedule (1 samples, 0.01%)</title><rect x="64.1250%" y="997" width="0.0118%" height="15" fill="rgb(248,171,40)" fg:x="5416" fg:w="1"/><text x="64.3750%" y="1007.50"></text></g><g><title>__schedule (1 samples, 0.01%)</title><rect x="64.1250%" y="981" width="0.0118%" height="15" fill="rgb(251,90,54)" fg:x="5416" fg:w="1"/><text x="64.3750%" y="991.50"></text></g><g><title>finish_task_switch.isra.0 (1 samples, 0.01%)</title><rect x="64.1250%" y="965" width="0.0118%" height="15" fill="rgb(234,11,46)" fg:x="5416" fg:w="1"/><text x="64.3750%" y="975.50"></text></g><g><title>asm_sysvec_call_function_single (1 samples, 0.01%)</title><rect x="64.1250%" y="949" width="0.0118%" height="15" fill="rgb(229,134,13)" fg:x="5416" fg:w="1"/><text x="64.3750%" y="959.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="64.1250%" y="933" width="0.0118%" height="15" fill="rgb(223,129,3)" fg:x="5416" fg:w="1"/><text x="64.3750%" y="943.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="64.3263%" y="965" width="0.0118%" height="15" fill="rgb(221,124,13)" fg:x="5433" fg:w="1"/><text x="64.5763%" y="975.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="64.3263%" y="949" width="0.0118%" height="15" fill="rgb(234,3,18)" fg:x="5433" fg:w="1"/><text x="64.5763%" y="959.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.01%)</title><rect x="64.3263%" y="933" width="0.0118%" height="15" fill="rgb(249,199,20)" fg:x="5433" fg:w="1"/><text x="64.5763%" y="943.50"></text></g><g><title>handle_softirqs (1 samples, 0.01%)</title><rect x="64.3263%" y="917" width="0.0118%" height="15" fill="rgb(224,134,6)" fg:x="5433" fg:w="1"/><text x="64.5763%" y="927.50"></text></g><g><title>net_rx_action (1 samples, 0.01%)</title><rect x="64.3263%" y="901" width="0.0118%" height="15" fill="rgb(254,83,26)" fg:x="5433" fg:w="1"/><text x="64.5763%" y="911.50"></text></g><g><title>__napi_poll (1 samples, 0.01%)</title><rect x="64.3263%" y="885" width="0.0118%" height="15" fill="rgb(217,88,9)" fg:x="5433" fg:w="1"/><text x="64.5763%" y="895.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="64.3263%" y="869" width="0.0118%" height="15" fill="rgb(225,73,2)" fg:x="5433" fg:w="1"/><text x="64.5763%" y="879.50"></text></g><g><title>napi_complete_done (1 samples, 0.01%)</title><rect x="64.3263%" y="853" width="0.0118%" height="15" fill="rgb(226,44,39)" fg:x="5433" fg:w="1"/><text x="64.5763%" y="863.50"></text></g><g><title>netif_receive_skb_list_internal (1 samples, 0.01%)</title><rect x="64.3263%" y="837" width="0.0118%" height="15" fill="rgb(228,53,17)" fg:x="5433" fg:w="1"/><text x="64.5763%" y="847.50"></text></g><g><title>__netif_receive_skb_list_core (1 samples, 0.01%)</title><rect x="64.3263%" y="821" width="0.0118%" height="15" fill="rgb(212,27,27)" fg:x="5433" fg:w="1"/><text x="64.5763%" y="831.50"></text></g><g><title>ip_list_rcv (1 samples, 0.01%)</title><rect x="64.3263%" y="805" width="0.0118%" height="15" fill="rgb(241,50,6)" fg:x="5433" fg:w="1"/><text x="64.5763%" y="815.50"></text></g><g><title>ip_sublist_rcv (1 samples, 0.01%)</title><rect x="64.3263%" y="789" width="0.0118%" height="15" fill="rgb(225,28,51)" fg:x="5433" fg:w="1"/><text x="64.5763%" y="799.50"></text></g><g><title>ip_local_deliver (1 samples, 0.01%)</title><rect x="64.3263%" y="773" width="0.0118%" height="15" fill="rgb(215,33,16)" fg:x="5433" fg:w="1"/><text x="64.5763%" y="783.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.01%)</title><rect x="64.3263%" y="757" width="0.0118%" height="15" fill="rgb(243,40,39)" fg:x="5433" fg:w="1"/><text x="64.5763%" y="767.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.01%)</title><rect x="64.3263%" y="741" width="0.0118%" height="15" fill="rgb(225,11,42)" fg:x="5433" fg:w="1"/><text x="64.5763%" y="751.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.01%)</title><rect x="64.3263%" y="725" width="0.0118%" height="15" fill="rgb(241,220,38)" fg:x="5433" fg:w="1"/><text x="64.5763%" y="735.50"></text></g><g><title>tcp_v4_fill_cb (1 samples, 0.01%)</title><rect x="64.3263%" y="709" width="0.0118%" height="15" fill="rgb(244,52,35)" fg:x="5433" fg:w="1"/><text x="64.5763%" y="719.50"></text></g><g><title>fput (2 samples, 0.02%)</title><rect x="64.3381%" y="965" width="0.0237%" height="15" fill="rgb(246,42,46)" fg:x="5434" fg:w="2"/><text x="64.5881%" y="975.50"></text></g><g><title>inet_send_prepare (1 samples, 0.01%)</title><rect x="64.3618%" y="949" width="0.0118%" height="15" fill="rgb(205,184,13)" fg:x="5436" fg:w="1"/><text x="64.6118%" y="959.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="64.3618%" y="933" width="0.0118%" height="15" fill="rgb(209,48,36)" fg:x="5436" fg:w="1"/><text x="64.6118%" y="943.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="64.3618%" y="917" width="0.0118%" height="15" fill="rgb(244,34,51)" fg:x="5436" fg:w="1"/><text x="64.6118%" y="927.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.01%)</title><rect x="64.3618%" y="901" width="0.0118%" height="15" fill="rgb(221,107,33)" fg:x="5436" fg:w="1"/><text x="64.6118%" y="911.50"></text></g><g><title>handle_softirqs (1 samples, 0.01%)</title><rect x="64.3618%" y="885" width="0.0118%" height="15" fill="rgb(224,203,12)" fg:x="5436" fg:w="1"/><text x="64.6118%" y="895.50"></text></g><g><title>net_rx_action (1 samples, 0.01%)</title><rect x="64.3618%" y="869" width="0.0118%" height="15" fill="rgb(230,215,18)" fg:x="5436" fg:w="1"/><text x="64.6118%" y="879.50"></text></g><g><title>__napi_poll (1 samples, 0.01%)</title><rect x="64.3618%" y="853" width="0.0118%" height="15" fill="rgb(206,185,35)" fg:x="5436" fg:w="1"/><text x="64.6118%" y="863.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="64.3618%" y="837" width="0.0118%" height="15" fill="rgb(228,140,34)" fg:x="5436" fg:w="1"/><text x="64.6118%" y="847.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="64.3618%" y="821" width="0.0118%" height="15" fill="rgb(208,93,13)" fg:x="5436" fg:w="1"/><text x="64.6118%" y="831.50"></text></g><g><title>iommu_dma_unmap_page (1 samples, 0.01%)</title><rect x="64.3618%" y="805" width="0.0118%" height="15" fill="rgb(221,193,39)" fg:x="5436" fg:w="1"/><text x="64.6118%" y="815.50"></text></g><g><title>__iommu_dma_unmap (1 samples, 0.01%)</title><rect x="64.3618%" y="789" width="0.0118%" height="15" fill="rgb(241,132,34)" fg:x="5436" fg:w="1"/><text x="64.6118%" y="799.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="64.3618%" y="773" width="0.0118%" height="15" fill="rgb(221,141,10)" fg:x="5436" fg:w="1"/><text x="64.6118%" y="783.50"></text></g><g><title>inet_sendmsg (2 samples, 0.02%)</title><rect x="64.3618%" y="965" width="0.0237%" height="15" fill="rgb(226,90,31)" fg:x="5436" fg:w="2"/><text x="64.6118%" y="975.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="64.3737%" y="949" width="0.0118%" height="15" fill="rgb(243,75,5)" fg:x="5437" fg:w="1"/><text x="64.6237%" y="959.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="64.3737%" y="933" width="0.0118%" height="15" fill="rgb(227,156,21)" fg:x="5437" fg:w="1"/><text x="64.6237%" y="943.50"></text></g><g><title>__local_bh_enable_ip (2 samples, 0.02%)</title><rect x="64.4329%" y="949" width="0.0237%" height="15" fill="rgb(250,195,8)" fg:x="5442" fg:w="2"/><text x="64.6829%" y="959.50"></text></g><g><title>lock_sock_nested (4 samples, 0.05%)</title><rect x="64.4565%" y="949" width="0.0474%" height="15" fill="rgb(220,134,5)" fg:x="5444" fg:w="4"/><text x="64.7065%" y="959.50"></text></g><g><title>_raw_spin_lock_bh (4 samples, 0.05%)</title><rect x="64.4565%" y="933" width="0.0474%" height="15" fill="rgb(246,106,34)" fg:x="5444" fg:w="4"/><text x="64.7065%" y="943.50"></text></g><g><title>native_queued_spin_lock_slowpath (3 samples, 0.04%)</title><rect x="64.4684%" y="917" width="0.0355%" height="15" fill="rgb(205,1,4)" fg:x="5445" fg:w="3"/><text x="64.7184%" y="927.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.01%)</title><rect x="64.6223%" y="917" width="0.0118%" height="15" fill="rgb(224,151,29)" fg:x="5458" fg:w="1"/><text x="64.8723%" y="927.50"></text></g><g><title>sk_filter_trim_cap (1 samples, 0.01%)</title><rect x="64.6697%" y="613" width="0.0118%" height="15" fill="rgb(251,196,0)" fg:x="5462" fg:w="1"/><text x="64.9197%" y="623.50"></text></g><g><title>__local_bh_enable_ip (3 samples, 0.04%)</title><rect x="64.6578%" y="789" width="0.0355%" height="15" fill="rgb(212,127,0)" fg:x="5461" fg:w="3"/><text x="64.9078%" y="799.50"></text></g><g><title>do_softirq.part.0 (3 samples, 0.04%)</title><rect x="64.6578%" y="773" width="0.0355%" height="15" fill="rgb(236,71,53)" fg:x="5461" fg:w="3"/><text x="64.9078%" y="783.50"></text></g><g><title>handle_softirqs (3 samples, 0.04%)</title><rect x="64.6578%" y="757" width="0.0355%" height="15" fill="rgb(227,99,0)" fg:x="5461" fg:w="3"/><text x="64.9078%" y="767.50"></text></g><g><title>net_rx_action (3 samples, 0.04%)</title><rect x="64.6578%" y="741" width="0.0355%" height="15" fill="rgb(239,89,21)" fg:x="5461" fg:w="3"/><text x="64.9078%" y="751.50"></text></g><g><title>__napi_poll (3 samples, 0.04%)</title><rect x="64.6578%" y="725" width="0.0355%" height="15" fill="rgb(243,122,19)" fg:x="5461" fg:w="3"/><text x="64.9078%" y="735.50"></text></g><g><title>process_backlog (3 samples, 0.04%)</title><rect x="64.6578%" y="709" width="0.0355%" height="15" fill="rgb(229,192,45)" fg:x="5461" fg:w="3"/><text x="64.9078%" y="719.50"></text></g><g><title>__netif_receive_skb_one_core (3 samples, 0.04%)</title><rect x="64.6578%" y="693" width="0.0355%" height="15" fill="rgb(235,165,35)" fg:x="5461" fg:w="3"/><text x="64.9078%" y="703.50"></text></g><g><title>ip_local_deliver (3 samples, 0.04%)</title><rect x="64.6578%" y="677" width="0.0355%" height="15" fill="rgb(253,202,0)" fg:x="5461" fg:w="3"/><text x="64.9078%" y="687.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.04%)</title><rect x="64.6578%" y="661" width="0.0355%" height="15" fill="rgb(235,51,20)" fg:x="5461" fg:w="3"/><text x="64.9078%" y="671.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.04%)</title><rect x="64.6578%" y="645" width="0.0355%" height="15" fill="rgb(218,95,46)" fg:x="5461" fg:w="3"/><text x="64.9078%" y="655.50"></text></g><g><title>tcp_v4_rcv (3 samples, 0.04%)</title><rect x="64.6578%" y="629" width="0.0355%" height="15" fill="rgb(212,81,10)" fg:x="5461" fg:w="3"/><text x="64.9078%" y="639.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.01%)</title><rect x="64.6815%" y="613" width="0.0118%" height="15" fill="rgb(240,59,0)" fg:x="5463" fg:w="1"/><text x="64.9315%" y="623.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.01%)</title><rect x="64.6815%" y="597" width="0.0118%" height="15" fill="rgb(212,191,42)" fg:x="5463" fg:w="1"/><text x="64.9315%" y="607.50"></text></g><g><title>tcp_data_queue (1 samples, 0.01%)</title><rect x="64.6815%" y="581" width="0.0118%" height="15" fill="rgb(233,140,3)" fg:x="5463" fg:w="1"/><text x="64.9315%" y="591.50"></text></g><g><title>tcp_queue_rcv (1 samples, 0.01%)</title><rect x="64.6815%" y="565" width="0.0118%" height="15" fill="rgb(215,69,23)" fg:x="5463" fg:w="1"/><text x="64.9315%" y="575.50"></text></g><g><title>tcp_try_coalesce (1 samples, 0.01%)</title><rect x="64.6815%" y="549" width="0.0118%" height="15" fill="rgb(240,202,20)" fg:x="5463" fg:w="1"/><text x="64.9315%" y="559.50"></text></g><g><title>skb_try_coalesce (1 samples, 0.01%)</title><rect x="64.6815%" y="533" width="0.0118%" height="15" fill="rgb(209,146,50)" fg:x="5463" fg:w="1"/><text x="64.9315%" y="543.50"></text></g><g><title>ip_finish_output2 (4 samples, 0.05%)</title><rect x="64.6578%" y="821" width="0.0474%" height="15" fill="rgb(253,102,54)" fg:x="5461" fg:w="4"/><text x="64.9078%" y="831.50"></text></g><g><title>__dev_queue_xmit (4 samples, 0.05%)</title><rect x="64.6578%" y="805" width="0.0474%" height="15" fill="rgb(250,173,47)" fg:x="5461" fg:w="4"/><text x="64.9078%" y="815.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.01%)</title><rect x="64.6933%" y="789" width="0.0118%" height="15" fill="rgb(232,142,7)" fg:x="5464" fg:w="1"/><text x="64.9433%" y="799.50"></text></g><g><title>loopback_xmit (1 samples, 0.01%)</title><rect x="64.6933%" y="773" width="0.0118%" height="15" fill="rgb(230,157,47)" fg:x="5464" fg:w="1"/><text x="64.9433%" y="783.50"></text></g><g><title>__netif_rx (1 samples, 0.01%)</title><rect x="64.6933%" y="757" width="0.0118%" height="15" fill="rgb(214,177,35)" fg:x="5464" fg:w="1"/><text x="64.9433%" y="767.50"></text></g><g><title>netif_rx_internal (1 samples, 0.01%)</title><rect x="64.6933%" y="741" width="0.0118%" height="15" fill="rgb(234,119,46)" fg:x="5464" fg:w="1"/><text x="64.9433%" y="751.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.01%)</title><rect x="64.6933%" y="725" width="0.0118%" height="15" fill="rgb(241,180,50)" fg:x="5464" fg:w="1"/><text x="64.9433%" y="735.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="64.6933%" y="709" width="0.0118%" height="15" fill="rgb(221,54,25)" fg:x="5464" fg:w="1"/><text x="64.9433%" y="719.50"></text></g><g><title>__tcp_push_pending_frames (5 samples, 0.06%)</title><rect x="64.6578%" y="885" width="0.0592%" height="15" fill="rgb(209,157,44)" fg:x="5461" fg:w="5"/><text x="64.9078%" y="895.50"></text></g><g><title>tcp_write_xmit (5 samples, 0.06%)</title><rect x="64.6578%" y="869" width="0.0592%" height="15" fill="rgb(246,115,41)" fg:x="5461" fg:w="5"/><text x="64.9078%" y="879.50"></text></g><g><title>__tcp_transmit_skb (5 samples, 0.06%)</title><rect x="64.6578%" y="853" width="0.0592%" height="15" fill="rgb(229,86,1)" fg:x="5461" fg:w="5"/><text x="64.9078%" y="863.50"></text></g><g><title>__ip_queue_xmit (5 samples, 0.06%)</title><rect x="64.6578%" y="837" width="0.0592%" height="15" fill="rgb(240,108,53)" fg:x="5461" fg:w="5"/><text x="64.9078%" y="847.50"></text></g><g><title>ip_output (1 samples, 0.01%)</title><rect x="64.7052%" y="821" width="0.0118%" height="15" fill="rgb(227,134,2)" fg:x="5465" fg:w="1"/><text x="64.9552%" y="831.50"></text></g><g><title>nf_hook_slow (1 samples, 0.01%)</title><rect x="64.7052%" y="805" width="0.0118%" height="15" fill="rgb(213,129,25)" fg:x="5465" fg:w="1"/><text x="64.9552%" y="815.50"></text></g><g><title>[[nf_nat]] (1 samples, 0.01%)</title><rect x="64.7052%" y="789" width="0.0118%" height="15" fill="rgb(226,35,21)" fg:x="5465" fg:w="1"/><text x="64.9552%" y="799.50"></text></g><g><title>[[nf_nat]] (1 samples, 0.01%)</title><rect x="64.7052%" y="773" width="0.0118%" height="15" fill="rgb(208,129,26)" fg:x="5465" fg:w="1"/><text x="64.9552%" y="783.50"></text></g><g><title>tcp_ack (2 samples, 0.02%)</title><rect x="64.7170%" y="885" width="0.0237%" height="15" fill="rgb(224,83,6)" fg:x="5466" fg:w="2"/><text x="64.9670%" y="895.50"></text></g><g><title>__sk_mem_reduce_allocated (1 samples, 0.01%)</title><rect x="64.7289%" y="869" width="0.0118%" height="15" fill="rgb(227,52,39)" fg:x="5467" fg:w="1"/><text x="64.9789%" y="879.50"></text></g><g><title>refill_stock (1 samples, 0.01%)</title><rect x="64.7289%" y="853" width="0.0118%" height="15" fill="rgb(241,30,17)" fg:x="5467" fg:w="1"/><text x="64.9789%" y="863.50"></text></g><g><title>__release_sock (11 samples, 0.13%)</title><rect x="64.6223%" y="933" width="0.1302%" height="15" fill="rgb(246,186,42)" fg:x="5458" fg:w="11"/><text x="64.8723%" y="943.50"></text></g><g><title>tcp_v4_do_rcv (10 samples, 0.12%)</title><rect x="64.6341%" y="917" width="0.1184%" height="15" fill="rgb(221,169,15)" fg:x="5459" fg:w="10"/><text x="64.8841%" y="927.50"></text></g><g><title>tcp_rcv_established (9 samples, 0.11%)</title><rect x="64.6460%" y="901" width="0.1066%" height="15" fill="rgb(235,108,21)" fg:x="5460" fg:w="9"/><text x="64.8960%" y="911.50"></text></g><g><title>tcp_data_queue (1 samples, 0.01%)</title><rect x="64.7407%" y="885" width="0.0118%" height="15" fill="rgb(219,148,30)" fg:x="5468" fg:w="1"/><text x="64.9907%" y="895.50"></text></g><g><title>kmem_cache_free (1 samples, 0.01%)</title><rect x="64.7407%" y="869" width="0.0118%" height="15" fill="rgb(220,109,5)" fg:x="5468" fg:w="1"/><text x="64.9907%" y="879.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="64.7525%" y="933" width="0.0118%" height="15" fill="rgb(213,203,48)" fg:x="5469" fg:w="1"/><text x="65.0025%" y="943.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="64.7525%" y="917" width="0.0118%" height="15" fill="rgb(244,71,33)" fg:x="5469" fg:w="1"/><text x="65.0025%" y="927.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="64.7525%" y="901" width="0.0118%" height="15" fill="rgb(209,23,2)" fg:x="5469" fg:w="1"/><text x="65.0025%" y="911.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="64.7525%" y="885" width="0.0118%" height="15" fill="rgb(219,97,7)" fg:x="5469" fg:w="1"/><text x="65.0025%" y="895.50"></text></g><g><title>ktime_get_update_offsets_now (1 samples, 0.01%)</title><rect x="64.7525%" y="869" width="0.0118%" height="15" fill="rgb(216,161,23)" fg:x="5469" fg:w="1"/><text x="65.0025%" y="879.50"></text></g><g><title>release_sock (23 samples, 0.27%)</title><rect x="64.5039%" y="949" width="0.2723%" height="15" fill="rgb(207,45,42)" fg:x="5448" fg:w="23"/><text x="64.7539%" y="959.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="64.7644%" y="933" width="0.0118%" height="15" fill="rgb(241,61,4)" fg:x="5470" fg:w="1"/><text x="65.0144%" y="943.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="64.7644%" y="917" width="0.0118%" height="15" fill="rgb(236,170,1)" fg:x="5470" fg:w="1"/><text x="65.0144%" y="927.50"></text></g><g><title>__virt_addr_valid (6 samples, 0.07%)</title><rect x="65.1906%" y="917" width="0.0710%" height="15" fill="rgb(239,72,5)" fg:x="5506" fg:w="6"/><text x="65.4406%" y="927.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="65.2617%" y="917" width="0.0118%" height="15" fill="rgb(214,13,50)" fg:x="5512" fg:w="1"/><text x="65.5117%" y="927.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="65.2617%" y="901" width="0.0118%" height="15" fill="rgb(224,88,9)" fg:x="5512" fg:w="1"/><text x="65.5117%" y="911.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="65.2617%" y="885" width="0.0118%" height="15" fill="rgb(238,192,34)" fg:x="5512" fg:w="1"/><text x="65.5117%" y="895.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="65.2617%" y="869" width="0.0118%" height="15" fill="rgb(217,203,50)" fg:x="5512" fg:w="1"/><text x="65.5117%" y="879.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="65.2617%" y="853" width="0.0118%" height="15" fill="rgb(241,123,32)" fg:x="5512" fg:w="1"/><text x="65.5117%" y="863.50"></text></g><g><title>tick_nohz_handler (1 samples, 0.01%)</title><rect x="65.2617%" y="837" width="0.0118%" height="15" fill="rgb(248,151,39)" fg:x="5512" fg:w="1"/><text x="65.5117%" y="847.50"></text></g><g><title>update_wall_time (1 samples, 0.01%)</title><rect x="65.2617%" y="821" width="0.0118%" height="15" fill="rgb(208,89,6)" fg:x="5512" fg:w="1"/><text x="65.5117%" y="831.50"></text></g><g><title>timekeeping_advance (1 samples, 0.01%)</title><rect x="65.2617%" y="805" width="0.0118%" height="15" fill="rgb(254,43,26)" fg:x="5512" fg:w="1"/><text x="65.5117%" y="815.50"></text></g><g><title>check_stack_object (1 samples, 0.01%)</title><rect x="65.2735%" y="917" width="0.0118%" height="15" fill="rgb(216,158,13)" fg:x="5513" fg:w="1"/><text x="65.5235%" y="927.50"></text></g><g><title>__check_object_size (17 samples, 0.20%)</title><rect x="65.0959%" y="933" width="0.2013%" height="15" fill="rgb(212,47,37)" fg:x="5498" fg:w="17"/><text x="65.3459%" y="943.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="65.2853%" y="917" width="0.0118%" height="15" fill="rgb(254,16,10)" fg:x="5514" fg:w="1"/><text x="65.5353%" y="927.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="65.2853%" y="901" width="0.0118%" height="15" fill="rgb(223,228,16)" fg:x="5514" fg:w="1"/><text x="65.5353%" y="911.50"></text></g><g><title>ip_skb_dst_mtu (1 samples, 0.01%)</title><rect x="65.8537%" y="853" width="0.0118%" height="15" fill="rgb(249,108,50)" fg:x="5562" fg:w="1"/><text x="66.1037%" y="863.50"></text></g><g><title>__ip_finish_output (4 samples, 0.05%)</title><rect x="65.8300%" y="869" width="0.0474%" height="15" fill="rgb(208,220,5)" fg:x="5560" fg:w="4"/><text x="66.0800%" y="879.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="65.8655%" y="853" width="0.0118%" height="15" fill="rgb(217,89,48)" fg:x="5563" fg:w="1"/><text x="66.1155%" y="863.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="65.8655%" y="837" width="0.0118%" height="15" fill="rgb(212,113,41)" fg:x="5563" fg:w="1"/><text x="66.1155%" y="847.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.01%)</title><rect x="65.8773%" y="869" width="0.0118%" height="15" fill="rgb(231,127,5)" fg:x="5564" fg:w="1"/><text x="66.1273%" y="879.50"></text></g><g><title>__sk_dst_check (4 samples, 0.05%)</title><rect x="65.8892%" y="869" width="0.0474%" height="15" fill="rgb(217,141,17)" fg:x="5565" fg:w="4"/><text x="66.1392%" y="879.50"></text></g><g><title>ipv4_dst_check (2 samples, 0.02%)</title><rect x="65.9129%" y="853" width="0.0237%" height="15" fill="rgb(245,125,54)" fg:x="5567" fg:w="2"/><text x="66.1629%" y="863.50"></text></g><g><title>ip_finish_output (2 samples, 0.02%)</title><rect x="65.9365%" y="869" width="0.0237%" height="15" fill="rgb(248,125,3)" fg:x="5569" fg:w="2"/><text x="66.1865%" y="879.50"></text></g><g><title>irqtime_account_irq (1 samples, 0.01%)</title><rect x="66.1141%" y="789" width="0.0118%" height="15" fill="rgb(236,119,51)" fg:x="5584" fg:w="1"/><text x="66.3641%" y="799.50"></text></g><g><title>__netif_receive_skb (1 samples, 0.01%)</title><rect x="66.2444%" y="741" width="0.0118%" height="15" fill="rgb(239,99,8)" fg:x="5595" fg:w="1"/><text x="66.4944%" y="751.50"></text></g><g><title>__netif_receive_skb_core.constprop.0 (3 samples, 0.04%)</title><rect x="66.2562%" y="725" width="0.0355%" height="15" fill="rgb(224,228,4)" fg:x="5596" fg:w="3"/><text x="66.5062%" y="735.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.01%)</title><rect x="66.3036%" y="693" width="0.0118%" height="15" fill="rgb(220,131,45)" fg:x="5600" fg:w="1"/><text x="66.5536%" y="703.50"></text></g><g><title>__inet_lookup_established (10 samples, 0.12%)</title><rect x="66.4575%" y="661" width="0.1184%" height="15" fill="rgb(215,62,5)" fg:x="5613" fg:w="10"/><text x="66.7075%" y="671.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="66.5641%" y="645" width="0.0118%" height="15" fill="rgb(253,12,24)" fg:x="5622" fg:w="1"/><text x="66.8141%" y="655.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="66.5641%" y="629" width="0.0118%" height="15" fill="rgb(248,120,50)" fg:x="5622" fg:w="1"/><text x="66.8141%" y="639.50"></text></g><g><title>__xfrm_policy_check2.constprop.0 (1 samples, 0.01%)</title><rect x="66.5759%" y="661" width="0.0118%" height="15" fill="rgb(245,194,10)" fg:x="5623" fg:w="1"/><text x="66.8259%" y="671.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="66.5877%" y="661" width="0.0118%" height="15" fill="rgb(241,149,38)" fg:x="5624" fg:w="1"/><text x="66.8377%" y="671.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.01%)</title><rect x="66.5996%" y="661" width="0.0118%" height="15" fill="rgb(219,215,7)" fg:x="5625" fg:w="1"/><text x="66.8496%" y="671.50"></text></g><g><title>sk_filter_trim_cap (5 samples, 0.06%)</title><rect x="66.6114%" y="661" width="0.0592%" height="15" fill="rgb(208,120,31)" fg:x="5626" fg:w="5"/><text x="66.8614%" y="671.50"></text></g><g><title>security_sock_rcv_skb (2 samples, 0.02%)</title><rect x="66.6469%" y="645" width="0.0237%" height="15" fill="rgb(244,30,8)" fg:x="5629" fg:w="2"/><text x="66.8969%" y="655.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="66.6706%" y="661" width="0.0118%" height="15" fill="rgb(238,35,44)" fg:x="5631" fg:w="1"/><text x="66.9206%" y="671.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="66.6706%" y="645" width="0.0118%" height="15" fill="rgb(243,218,37)" fg:x="5631" fg:w="1"/><text x="66.9206%" y="655.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.01%)</title><rect x="66.6943%" y="645" width="0.0118%" height="15" fill="rgb(218,169,10)" fg:x="5633" fg:w="1"/><text x="66.9443%" y="655.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.01%)</title><rect x="66.6943%" y="629" width="0.0118%" height="15" fill="rgb(221,144,10)" fg:x="5633" fg:w="1"/><text x="66.9443%" y="639.50"></text></g><g><title>ip_local_out (1 samples, 0.01%)</title><rect x="66.6943%" y="613" width="0.0118%" height="15" fill="rgb(226,41,38)" fg:x="5633" fg:w="1"/><text x="66.9443%" y="623.50"></text></g><g><title>__ip_local_out (1 samples, 0.01%)</title><rect x="66.6943%" y="597" width="0.0118%" height="15" fill="rgb(228,3,1)" fg:x="5633" fg:w="1"/><text x="66.9443%" y="607.50"></text></g><g><title>nf_hook_slow (1 samples, 0.01%)</title><rect x="66.6943%" y="581" width="0.0118%" height="15" fill="rgb(209,129,12)" fg:x="5633" fg:w="1"/><text x="66.9443%" y="591.50"></text></g><g><title>[[nf_nat]] (1 samples, 0.01%)</title><rect x="66.6943%" y="565" width="0.0118%" height="15" fill="rgb(213,136,33)" fg:x="5633" fg:w="1"/><text x="66.9443%" y="575.50"></text></g><g><title>ip_route_me_harder (1 samples, 0.01%)</title><rect x="66.6943%" y="549" width="0.0118%" height="15" fill="rgb(209,181,29)" fg:x="5633" fg:w="1"/><text x="66.9443%" y="559.50"></text></g><g><title>ip_route_output_flow (1 samples, 0.01%)</title><rect x="66.6943%" y="533" width="0.0118%" height="15" fill="rgb(234,173,18)" fg:x="5633" fg:w="1"/><text x="66.9443%" y="543.50"></text></g><g><title>ip_route_output_key_hash_rcu (1 samples, 0.01%)</title><rect x="66.6943%" y="517" width="0.0118%" height="15" fill="rgb(227,73,47)" fg:x="5633" fg:w="1"/><text x="66.9443%" y="527.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.01%)</title><rect x="66.7180%" y="613" width="0.0118%" height="15" fill="rgb(234,9,34)" fg:x="5635" fg:w="1"/><text x="66.9680%" y="623.50"></text></g><g><title>sk_reset_timer (4 samples, 0.05%)</title><rect x="66.7061%" y="645" width="0.0474%" height="15" fill="rgb(235,172,15)" fg:x="5634" fg:w="4"/><text x="66.9561%" y="655.50"></text></g><g><title>__mod_timer (4 samples, 0.05%)</title><rect x="66.7061%" y="629" width="0.0474%" height="15" fill="rgb(245,61,2)" fg:x="5634" fg:w="4"/><text x="66.9561%" y="639.50"></text></g><g><title>enqueue_timer (2 samples, 0.02%)</title><rect x="66.7298%" y="613" width="0.0237%" height="15" fill="rgb(238,39,47)" fg:x="5636" fg:w="2"/><text x="66.9798%" y="623.50"></text></g><g><title>__tcp_ack_snd_check (1 samples, 0.01%)</title><rect x="66.8482%" y="629" width="0.0118%" height="15" fill="rgb(234,37,24)" fg:x="5646" fg:w="1"/><text x="67.0982%" y="639.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="66.8482%" y="613" width="0.0118%" height="15" fill="rgb(248,223,24)" fg:x="5646" fg:w="1"/><text x="67.0982%" y="623.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="66.8482%" y="597" width="0.0118%" height="15" fill="rgb(223,12,15)" fg:x="5646" fg:w="1"/><text x="67.0982%" y="607.50"></text></g><g><title>ip_local_out (1 samples, 0.01%)</title><rect x="66.8601%" y="597" width="0.0118%" height="15" fill="rgb(249,6,3)" fg:x="5647" fg:w="1"/><text x="67.1101%" y="607.50"></text></g><g><title>__ip_local_out (1 samples, 0.01%)</title><rect x="66.8601%" y="581" width="0.0118%" height="15" fill="rgb(237,105,33)" fg:x="5647" fg:w="1"/><text x="67.1101%" y="591.50"></text></g><g><title>nf_hook_slow (1 samples, 0.01%)</title><rect x="66.8601%" y="565" width="0.0118%" height="15" fill="rgb(252,208,35)" fg:x="5647" fg:w="1"/><text x="67.1101%" y="575.50"></text></g><g><title>[[nf_conntrack]] (1 samples, 0.01%)</title><rect x="66.8601%" y="549" width="0.0118%" height="15" fill="rgb(215,181,35)" fg:x="5647" fg:w="1"/><text x="67.1101%" y="559.50"></text></g><g><title>[[nf_conntrack]] (1 samples, 0.01%)</title><rect x="66.8601%" y="533" width="0.0118%" height="15" fill="rgb(246,212,3)" fg:x="5647" fg:w="1"/><text x="67.1101%" y="543.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.02%)</title><rect x="66.8601%" y="629" width="0.0237%" height="15" fill="rgb(247,156,24)" fg:x="5647" fg:w="2"/><text x="67.1101%" y="639.50"></text></g><g><title>__ip_queue_xmit (2 samples, 0.02%)</title><rect x="66.8601%" y="613" width="0.0237%" height="15" fill="rgb(248,9,31)" fg:x="5647" fg:w="2"/><text x="67.1101%" y="623.50"></text></g><g><title>ip_output (1 samples, 0.01%)</title><rect x="66.8719%" y="597" width="0.0118%" height="15" fill="rgb(234,26,45)" fg:x="5648" fg:w="1"/><text x="67.1219%" y="607.50"></text></g><g><title>nf_hook_slow (1 samples, 0.01%)</title><rect x="66.8719%" y="581" width="0.0118%" height="15" fill="rgb(249,11,32)" fg:x="5648" fg:w="1"/><text x="67.1219%" y="591.50"></text></g><g><title>kfree_skbmem (1 samples, 0.01%)</title><rect x="66.8837%" y="629" width="0.0118%" height="15" fill="rgb(249,162,33)" fg:x="5649" fg:w="1"/><text x="67.1337%" y="639.50"></text></g><g><title>sk_reset_timer (1 samples, 0.01%)</title><rect x="66.8956%" y="629" width="0.0118%" height="15" fill="rgb(232,4,32)" fg:x="5650" fg:w="1"/><text x="67.1456%" y="639.50"></text></g><g><title>__wake_up (2 samples, 0.02%)</title><rect x="66.9193%" y="565" width="0.0237%" height="15" fill="rgb(212,5,45)" fg:x="5652" fg:w="2"/><text x="67.1693%" y="575.50"></text></g><g><title>__wake_up_common (2 samples, 0.02%)</title><rect x="66.9193%" y="549" width="0.0237%" height="15" fill="rgb(227,95,13)" fg:x="5652" fg:w="2"/><text x="67.1693%" y="559.50"></text></g><g><title>ep_autoremove_wake_function (1 samples, 0.01%)</title><rect x="66.9311%" y="533" width="0.0118%" height="15" fill="rgb(223,205,10)" fg:x="5653" fg:w="1"/><text x="67.1811%" y="543.50"></text></g><g><title>try_to_wake_up (1 samples, 0.01%)</title><rect x="66.9311%" y="517" width="0.0118%" height="15" fill="rgb(222,178,8)" fg:x="5653" fg:w="1"/><text x="67.1811%" y="527.50"></text></g><g><title>select_task_rq_fair (1 samples, 0.01%)</title><rect x="66.9311%" y="501" width="0.0118%" height="15" fill="rgb(216,13,22)" fg:x="5653" fg:w="1"/><text x="67.1811%" y="511.50"></text></g><g><title>available_idle_cpu (1 samples, 0.01%)</title><rect x="66.9311%" y="485" width="0.0118%" height="15" fill="rgb(240,167,12)" fg:x="5653" fg:w="1"/><text x="67.1811%" y="495.50"></text></g><g><title>sock_def_readable (4 samples, 0.05%)</title><rect x="66.9074%" y="629" width="0.0474%" height="15" fill="rgb(235,68,35)" fg:x="5651" fg:w="4"/><text x="67.1574%" y="639.50"></text></g><g><title>__wake_up_sync_key (4 samples, 0.05%)</title><rect x="66.9074%" y="613" width="0.0474%" height="15" fill="rgb(253,40,27)" fg:x="5651" fg:w="4"/><text x="67.1574%" y="623.50"></text></g><g><title>__wake_up_common (4 samples, 0.05%)</title><rect x="66.9074%" y="597" width="0.0474%" height="15" fill="rgb(214,19,28)" fg:x="5651" fg:w="4"/><text x="67.1574%" y="607.50"></text></g><g><title>ep_poll_callback (4 samples, 0.05%)</title><rect x="66.9074%" y="581" width="0.0474%" height="15" fill="rgb(210,167,45)" fg:x="5651" fg:w="4"/><text x="67.1574%" y="591.50"></text></g><g><title>_raw_read_lock_irqsave (1 samples, 0.01%)</title><rect x="66.9429%" y="565" width="0.0118%" height="15" fill="rgb(232,97,40)" fg:x="5654" fg:w="1"/><text x="67.1929%" y="575.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="66.9548%" y="629" width="0.0118%" height="15" fill="rgb(250,35,23)" fg:x="5655" fg:w="1"/><text x="67.2048%" y="639.50"></text></g><g><title>tcp_ack_tstamp (1 samples, 0.01%)</title><rect x="67.0140%" y="613" width="0.0118%" height="15" fill="rgb(248,47,53)" fg:x="5660" fg:w="1"/><text x="67.2640%" y="623.50"></text></g><g><title>tcp_rate_skb_delivered (3 samples, 0.04%)</title><rect x="67.0258%" y="613" width="0.0355%" height="15" fill="rgb(226,58,50)" fg:x="5661" fg:w="3"/><text x="67.2758%" y="623.50"></text></g><g><title>tcp_ack (9 samples, 0.11%)</title><rect x="66.9666%" y="629" width="0.1066%" height="15" fill="rgb(217,105,26)" fg:x="5656" fg:w="9"/><text x="67.2166%" y="639.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.01%)</title><rect x="67.0613%" y="613" width="0.0118%" height="15" fill="rgb(208,64,1)" fg:x="5664" fg:w="1"/><text x="67.3113%" y="623.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="67.2981%" y="485" width="0.0118%" height="15" fill="rgb(214,80,1)" fg:x="5684" fg:w="1"/><text x="67.5481%" y="495.50"></text></g><g><title>__wake_up (9 samples, 0.11%)</title><rect x="67.2389%" y="549" width="0.1066%" height="15" fill="rgb(206,175,26)" fg:x="5679" fg:w="9"/><text x="67.4889%" y="559.50"></text></g><g><title>__wake_up_common (9 samples, 0.11%)</title><rect x="67.2389%" y="533" width="0.1066%" height="15" fill="rgb(235,156,37)" fg:x="5679" fg:w="9"/><text x="67.4889%" y="543.50"></text></g><g><title>ep_autoremove_wake_function (7 samples, 0.08%)</title><rect x="67.2626%" y="517" width="0.0829%" height="15" fill="rgb(213,100,9)" fg:x="5681" fg:w="7"/><text x="67.5126%" y="527.50"></text></g><g><title>try_to_wake_up (7 samples, 0.08%)</title><rect x="67.2626%" y="501" width="0.0829%" height="15" fill="rgb(241,15,13)" fg:x="5681" fg:w="7"/><text x="67.5126%" y="511.50"></text></g><g><title>ttwu_queue_wakelist (3 samples, 0.04%)</title><rect x="67.3100%" y="485" width="0.0355%" height="15" fill="rgb(205,97,43)" fg:x="5685" fg:w="3"/><text x="67.5600%" y="495.50"></text></g><g><title>__smp_call_single_queue (1 samples, 0.01%)</title><rect x="67.3336%" y="469" width="0.0118%" height="15" fill="rgb(216,106,32)" fg:x="5687" fg:w="1"/><text x="67.5836%" y="479.50"></text></g><g><title>llist_add_batch (1 samples, 0.01%)</title><rect x="67.3336%" y="453" width="0.0118%" height="15" fill="rgb(226,200,8)" fg:x="5687" fg:w="1"/><text x="67.5836%" y="463.50"></text></g><g><title>sock_def_readable (20 samples, 0.24%)</title><rect x="67.1205%" y="613" width="0.2368%" height="15" fill="rgb(244,54,29)" fg:x="5669" fg:w="20"/><text x="67.3705%" y="623.50"></text></g><g><title>__wake_up_sync_key (18 samples, 0.21%)</title><rect x="67.1442%" y="597" width="0.2131%" height="15" fill="rgb(252,169,12)" fg:x="5671" fg:w="18"/><text x="67.3942%" y="607.50"></text></g><g><title>__wake_up_common (18 samples, 0.21%)</title><rect x="67.1442%" y="581" width="0.2131%" height="15" fill="rgb(231,199,11)" fg:x="5671" fg:w="18"/><text x="67.3942%" y="591.50"></text></g><g><title>ep_poll_callback (12 samples, 0.14%)</title><rect x="67.2152%" y="565" width="0.1421%" height="15" fill="rgb(233,191,18)" fg:x="5677" fg:w="12"/><text x="67.4652%" y="575.50"></text></g><g><title>_raw_read_lock_irqsave (1 samples, 0.01%)</title><rect x="67.3455%" y="549" width="0.0118%" height="15" fill="rgb(215,83,47)" fg:x="5688" fg:w="1"/><text x="67.5955%" y="559.50"></text></g><g><title>tcp_data_ready (1 samples, 0.01%)</title><rect x="67.3573%" y="613" width="0.0118%" height="15" fill="rgb(251,67,19)" fg:x="5689" fg:w="1"/><text x="67.6073%" y="623.50"></text></g><g><title>tcp_queue_rcv (3 samples, 0.04%)</title><rect x="67.3692%" y="613" width="0.0355%" height="15" fill="rgb(240,7,20)" fg:x="5690" fg:w="3"/><text x="67.6192%" y="623.50"></text></g><g><title>tcp_try_coalesce (1 samples, 0.01%)</title><rect x="67.3928%" y="597" width="0.0118%" height="15" fill="rgb(210,150,26)" fg:x="5692" fg:w="1"/><text x="67.6428%" y="607.50"></text></g><g><title>mod_memcg_state (1 samples, 0.01%)</title><rect x="67.4520%" y="549" width="0.0118%" height="15" fill="rgb(228,75,42)" fg:x="5697" fg:w="1"/><text x="67.7020%" y="559.50"></text></g><g><title>__mod_memcg_state (1 samples, 0.01%)</title><rect x="67.4520%" y="533" width="0.0118%" height="15" fill="rgb(237,134,48)" fg:x="5697" fg:w="1"/><text x="67.7020%" y="543.50"></text></g><g><title>page_counter_try_charge (2 samples, 0.02%)</title><rect x="67.4994%" y="533" width="0.0237%" height="15" fill="rgb(205,80,50)" fg:x="5701" fg:w="2"/><text x="67.7494%" y="543.50"></text></g><g><title>mem_cgroup_charge_skmem (11 samples, 0.13%)</title><rect x="67.4520%" y="565" width="0.1302%" height="15" fill="rgb(217,74,48)" fg:x="5697" fg:w="11"/><text x="67.7020%" y="575.50"></text></g><g><title>try_charge_memcg (10 samples, 0.12%)</title><rect x="67.4639%" y="549" width="0.1184%" height="15" fill="rgb(205,82,50)" fg:x="5698" fg:w="10"/><text x="67.7139%" y="559.50"></text></g><g><title>refill_stock (5 samples, 0.06%)</title><rect x="67.5231%" y="533" width="0.0592%" height="15" fill="rgb(228,1,33)" fg:x="5703" fg:w="5"/><text x="67.7731%" y="543.50"></text></g><g><title>__refill_stock (5 samples, 0.06%)</title><rect x="67.5231%" y="517" width="0.0592%" height="15" fill="rgb(214,50,23)" fg:x="5703" fg:w="5"/><text x="67.7731%" y="527.50"></text></g><g><title>drain_stock (3 samples, 0.04%)</title><rect x="67.5468%" y="501" width="0.0355%" height="15" fill="rgb(210,62,9)" fg:x="5705" fg:w="3"/><text x="67.7968%" y="511.50"></text></g><g><title>page_counter_uncharge (3 samples, 0.04%)</title><rect x="67.5468%" y="485" width="0.0355%" height="15" fill="rgb(210,104,37)" fg:x="5705" fg:w="3"/><text x="67.7968%" y="495.50"></text></g><g><title>srso_alias_return_thunk (2 samples, 0.02%)</title><rect x="67.5586%" y="469" width="0.0237%" height="15" fill="rgb(232,104,43)" fg:x="5706" fg:w="2"/><text x="67.8086%" y="479.50"></text></g><g><title>sk_leave_memory_pressure (1 samples, 0.01%)</title><rect x="67.5823%" y="565" width="0.0118%" height="15" fill="rgb(244,52,6)" fg:x="5708" fg:w="1"/><text x="67.8323%" y="575.50"></text></g><g><title>tcp_data_queue (45 samples, 0.53%)</title><rect x="67.0732%" y="629" width="0.5328%" height="15" fill="rgb(211,174,52)" fg:x="5665" fg:w="45"/><text x="67.3232%" y="639.50"></text></g><g><title>tcp_try_rmem_schedule (17 samples, 0.20%)</title><rect x="67.4047%" y="613" width="0.2013%" height="15" fill="rgb(229,48,4)" fg:x="5693" fg:w="17"/><text x="67.6547%" y="623.50"></text></g><g><title>__sk_mem_schedule (17 samples, 0.20%)</title><rect x="67.4047%" y="597" width="0.2013%" height="15" fill="rgb(205,155,16)" fg:x="5693" fg:w="17"/><text x="67.6547%" y="607.50"></text></g><g><title>__sk_mem_raise_allocated (17 samples, 0.20%)</title><rect x="67.4047%" y="581" width="0.2013%" height="15" fill="rgb(211,141,53)" fg:x="5693" fg:w="17"/><text x="67.6547%" y="591.50"></text></g><g><title>tcp_leave_memory_pressure (1 samples, 0.01%)</title><rect x="67.5941%" y="565" width="0.0118%" height="15" fill="rgb(240,148,11)" fg:x="5709" fg:w="1"/><text x="67.8441%" y="575.50"></text></g><g><title>tcp_event_data_recv (1 samples, 0.01%)</title><rect x="67.6060%" y="629" width="0.0118%" height="15" fill="rgb(214,45,23)" fg:x="5710" fg:w="1"/><text x="67.8560%" y="639.50"></text></g><g><title>tcp_mstamp_refresh (5 samples, 0.06%)</title><rect x="67.6178%" y="629" width="0.0592%" height="15" fill="rgb(248,74,26)" fg:x="5711" fg:w="5"/><text x="67.8678%" y="639.50"></text></g><g><title>ktime_get (4 samples, 0.05%)</title><rect x="67.6296%" y="613" width="0.0474%" height="15" fill="rgb(218,121,16)" fg:x="5712" fg:w="4"/><text x="67.8796%" y="623.50"></text></g><g><title>read_tsc (4 samples, 0.05%)</title><rect x="67.6296%" y="597" width="0.0474%" height="15" fill="rgb(218,10,47)" fg:x="5712" fg:w="4"/><text x="67.8796%" y="607.50"></text></g><g><title>tcp_queue_rcv (5 samples, 0.06%)</title><rect x="67.6770%" y="629" width="0.0592%" height="15" fill="rgb(227,99,14)" fg:x="5716" fg:w="5"/><text x="67.9270%" y="639.50"></text></g><g><title>tcp_try_coalesce (5 samples, 0.06%)</title><rect x="67.6770%" y="613" width="0.0592%" height="15" fill="rgb(229,83,46)" fg:x="5716" fg:w="5"/><text x="67.9270%" y="623.50"></text></g><g><title>skb_try_coalesce (3 samples, 0.04%)</title><rect x="67.7007%" y="597" width="0.0355%" height="15" fill="rgb(228,25,1)" fg:x="5718" fg:w="3"/><text x="67.9507%" y="607.50"></text></g><g><title>tcp_urg (1 samples, 0.01%)</title><rect x="67.7362%" y="629" width="0.0118%" height="15" fill="rgb(252,190,15)" fg:x="5721" fg:w="1"/><text x="67.9862%" y="639.50"></text></g><g><title>tcp_v4_do_rcv (91 samples, 1.08%)</title><rect x="66.6825%" y="661" width="1.0774%" height="15" fill="rgb(213,103,51)" fg:x="5632" fg:w="91"/><text x="66.9325%" y="671.50"></text></g><g><title>tcp_rcv_established (85 samples, 1.01%)</title><rect x="66.7535%" y="645" width="1.0064%" height="15" fill="rgb(220,38,44)" fg:x="5638" fg:w="85"/><text x="67.0035%" y="655.50"></text></g><g><title>tcp_validate_incoming (1 samples, 0.01%)</title><rect x="67.7480%" y="629" width="0.0118%" height="15" fill="rgb(210,45,26)" fg:x="5722" fg:w="1"/><text x="67.9980%" y="639.50"></text></g><g><title>ip_local_deliver_finish (127 samples, 1.50%)</title><rect x="66.2917%" y="709" width="1.5037%" height="15" fill="rgb(205,95,48)" fg:x="5599" fg:w="127"/><text x="66.5417%" y="719.50"></text></g><g><title>ip_protocol_deliver_rcu (125 samples, 1.48%)</title><rect x="66.3154%" y="693" width="1.4800%" height="15" fill="rgb(225,179,37)" fg:x="5601" fg:w="125"/><text x="66.5654%" y="703.50"></text></g><g><title>tcp_v4_rcv (124 samples, 1.47%)</title><rect x="66.3273%" y="677" width="1.4682%" height="15" fill="rgb(230,209,3)" fg:x="5602" fg:w="124"/><text x="66.5773%" y="687.50"></text></g><g><title>tcp_v4_fill_cb (3 samples, 0.04%)</title><rect x="67.7599%" y="661" width="0.0355%" height="15" fill="rgb(248,12,46)" fg:x="5723" fg:w="3"/><text x="68.0099%" y="671.50"></text></g><g><title>[[ip_tables]] (4 samples, 0.05%)</title><rect x="67.8072%" y="693" width="0.0474%" height="15" fill="rgb(234,18,0)" fg:x="5727" fg:w="4"/><text x="68.0572%" y="703.50"></text></g><g><title>[[nf_conntrack]] (1 samples, 0.01%)</title><rect x="67.8546%" y="693" width="0.0118%" height="15" fill="rgb(238,197,14)" fg:x="5731" fg:w="1"/><text x="68.1046%" y="703.50"></text></g><g><title>[[nf_nat]] (1 samples, 0.01%)</title><rect x="67.8783%" y="645" width="0.0118%" height="15" fill="rgb(251,162,48)" fg:x="5733" fg:w="1"/><text x="68.1283%" y="655.50"></text></g><g><title>ip_local_deliver (136 samples, 1.61%)</title><rect x="66.2917%" y="725" width="1.6102%" height="15" fill="rgb(237,73,42)" fg:x="5599" fg:w="136"/><text x="66.5417%" y="735.50"></text></g><g><title>nf_hook_slow (9 samples, 0.11%)</title><rect x="67.7954%" y="709" width="0.1066%" height="15" fill="rgb(211,108,8)" fg:x="5726" fg:w="9"/><text x="68.0454%" y="719.50"></text></g><g><title>[[nf_nat]] (3 samples, 0.04%)</title><rect x="67.8664%" y="693" width="0.0355%" height="15" fill="rgb(213,45,22)" fg:x="5732" fg:w="3"/><text x="68.1164%" y="703.50"></text></g><g><title>[[nf_nat]] (3 samples, 0.04%)</title><rect x="67.8664%" y="677" width="0.0355%" height="15" fill="rgb(252,154,5)" fg:x="5732" fg:w="3"/><text x="68.1164%" y="687.50"></text></g><g><title>[[nf_nat]] (3 samples, 0.04%)</title><rect x="67.8664%" y="661" width="0.0355%" height="15" fill="rgb(221,79,52)" fg:x="5732" fg:w="3"/><text x="68.1164%" y="671.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="67.8901%" y="645" width="0.0118%" height="15" fill="rgb(229,220,36)" fg:x="5734" fg:w="1"/><text x="68.1401%" y="655.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="67.8901%" y="629" width="0.0118%" height="15" fill="rgb(211,17,16)" fg:x="5734" fg:w="1"/><text x="68.1401%" y="639.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="67.8901%" y="613" width="0.0118%" height="15" fill="rgb(222,55,31)" fg:x="5734" fg:w="1"/><text x="68.1401%" y="623.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="67.8901%" y="597" width="0.0118%" height="15" fill="rgb(221,221,31)" fg:x="5734" fg:w="1"/><text x="68.1401%" y="607.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="67.8901%" y="581" width="0.0118%" height="15" fill="rgb(227,168,26)" fg:x="5734" fg:w="1"/><text x="68.1401%" y="591.50"></text></g><g><title>timerqueue_del (1 samples, 0.01%)</title><rect x="67.8901%" y="565" width="0.0118%" height="15" fill="rgb(224,139,9)" fg:x="5734" fg:w="1"/><text x="68.1401%" y="575.50"></text></g><g><title>rb_next (1 samples, 0.01%)</title><rect x="67.8901%" y="549" width="0.0118%" height="15" fill="rgb(254,172,0)" fg:x="5734" fg:w="1"/><text x="68.1401%" y="559.50"></text></g><g><title>ip_rcv_core (2 samples, 0.02%)</title><rect x="67.9138%" y="709" width="0.0237%" height="15" fill="rgb(235,203,1)" fg:x="5736" fg:w="2"/><text x="68.1638%" y="719.50"></text></g><g><title>ip_rcv_finish_core.isra.0 (3 samples, 0.04%)</title><rect x="67.9375%" y="709" width="0.0355%" height="15" fill="rgb(216,205,24)" fg:x="5738" fg:w="3"/><text x="68.1875%" y="719.50"></text></g><g><title>[[br_netfilter]] (1 samples, 0.01%)</title><rect x="67.9848%" y="693" width="0.0118%" height="15" fill="rgb(233,24,6)" fg:x="5742" fg:w="1"/><text x="68.2348%" y="703.50"></text></g><g><title>[[nf_conntrack]] (1 samples, 0.01%)</title><rect x="67.9967%" y="693" width="0.0118%" height="15" fill="rgb(244,110,9)" fg:x="5743" fg:w="1"/><text x="68.2467%" y="703.50"></text></g><g><title>__netif_receive_skb_one_core (150 samples, 1.78%)</title><rect x="66.2562%" y="741" width="1.7760%" height="15" fill="rgb(239,222,42)" fg:x="5596" fg:w="150"/><text x="66.5062%" y="751.50">_..</text></g><g><title>ip_rcv (11 samples, 0.13%)</title><rect x="67.9020%" y="725" width="0.1302%" height="15" fill="rgb(218,145,13)" fg:x="5735" fg:w="11"/><text x="68.1520%" y="735.50"></text></g><g><title>nf_hook_slow (5 samples, 0.06%)</title><rect x="67.9730%" y="709" width="0.0592%" height="15" fill="rgb(207,69,11)" fg:x="5741" fg:w="5"/><text x="68.2230%" y="719.50"></text></g><g><title>[[nf_nat]] (2 samples, 0.02%)</title><rect x="68.0085%" y="693" width="0.0237%" height="15" fill="rgb(220,223,22)" fg:x="5744" fg:w="2"/><text x="68.2585%" y="703.50"></text></g><g><title>[[nf_nat]] (2 samples, 0.02%)</title><rect x="68.0085%" y="677" width="0.0237%" height="15" fill="rgb(245,102,5)" fg:x="5744" fg:w="2"/><text x="68.2585%" y="687.50"></text></g><g><title>[[nf_nat]] (2 samples, 0.02%)</title><rect x="68.0085%" y="661" width="0.0237%" height="15" fill="rgb(211,148,2)" fg:x="5744" fg:w="2"/><text x="68.2585%" y="671.50"></text></g><g><title>[[nf_nat]] (2 samples, 0.02%)</title><rect x="68.0085%" y="645" width="0.0237%" height="15" fill="rgb(241,13,44)" fg:x="5744" fg:w="2"/><text x="68.2585%" y="655.50"></text></g><g><title>__napi_poll (159 samples, 1.88%)</title><rect x="66.1615%" y="773" width="1.8825%" height="15" fill="rgb(219,137,21)" fg:x="5588" fg:w="159"/><text x="66.4115%" y="783.50">_..</text></g><g><title>process_backlog (158 samples, 1.87%)</title><rect x="66.1733%" y="757" width="1.8707%" height="15" fill="rgb(242,206,5)" fg:x="5589" fg:w="158"/><text x="66.4233%" y="767.50">p..</text></g><g><title>_raw_spin_lock_irq (1 samples, 0.01%)</title><rect x="68.0322%" y="741" width="0.0118%" height="15" fill="rgb(217,114,22)" fg:x="5746" fg:w="1"/><text x="68.2822%" y="751.50"></text></g><g><title>kfree_skbmem (1 samples, 0.01%)</title><rect x="68.0440%" y="773" width="0.0118%" height="15" fill="rgb(253,206,42)" fg:x="5747" fg:w="1"/><text x="68.2940%" y="783.50"></text></g><g><title>kmem_cache_free (3 samples, 0.04%)</title><rect x="68.0559%" y="773" width="0.0355%" height="15" fill="rgb(236,102,18)" fg:x="5748" fg:w="3"/><text x="68.3059%" y="783.50"></text></g><g><title>__local_bh_enable_ip (174 samples, 2.06%)</title><rect x="66.0668%" y="837" width="2.0601%" height="15" fill="rgb(208,59,49)" fg:x="5580" fg:w="174"/><text x="66.3168%" y="847.50">_..</text></g><g><title>do_softirq.part.0 (174 samples, 2.06%)</title><rect x="66.0668%" y="821" width="2.0601%" height="15" fill="rgb(215,194,28)" fg:x="5580" fg:w="174"/><text x="66.3168%" y="831.50">d..</text></g><g><title>handle_softirqs (173 samples, 2.05%)</title><rect x="66.0786%" y="805" width="2.0483%" height="15" fill="rgb(243,207,11)" fg:x="5581" fg:w="173"/><text x="66.3286%" y="815.50">h..</text></g><g><title>net_rx_action (169 samples, 2.00%)</title><rect x="66.1260%" y="789" width="2.0009%" height="15" fill="rgb(254,179,35)" fg:x="5585" fg:w="169"/><text x="66.3760%" y="799.50">n..</text></g><g><title>napi_consume_skb (3 samples, 0.04%)</title><rect x="68.0914%" y="773" width="0.0355%" height="15" fill="rgb(235,97,3)" fg:x="5751" fg:w="3"/><text x="68.3414%" y="783.50"></text></g><g><title>__netif_rx (4 samples, 0.05%)</title><rect x="68.1624%" y="805" width="0.0474%" height="15" fill="rgb(215,155,33)" fg:x="5757" fg:w="4"/><text x="68.4124%" y="815.50"></text></g><g><title>netif_rx_internal (4 samples, 0.05%)</title><rect x="68.1624%" y="789" width="0.0474%" height="15" fill="rgb(223,128,12)" fg:x="5757" fg:w="4"/><text x="68.4124%" y="799.50"></text></g><g><title>enqueue_to_backlog (3 samples, 0.04%)</title><rect x="68.1743%" y="773" width="0.0355%" height="15" fill="rgb(208,157,18)" fg:x="5758" fg:w="3"/><text x="68.4243%" y="783.50"></text></g><g><title>__raise_softirq_irqoff (1 samples, 0.01%)</title><rect x="68.1980%" y="757" width="0.0118%" height="15" fill="rgb(249,70,54)" fg:x="5760" fg:w="1"/><text x="68.4480%" y="767.50"></text></g><g><title>eth_type_trans (7 samples, 0.08%)</title><rect x="68.2098%" y="805" width="0.0829%" height="15" fill="rgb(244,118,24)" fg:x="5761" fg:w="7"/><text x="68.4598%" y="815.50"></text></g><g><title>sk_free (2 samples, 0.02%)</title><rect x="68.2927%" y="805" width="0.0237%" height="15" fill="rgb(211,54,0)" fg:x="5768" fg:w="2"/><text x="68.5427%" y="815.50"></text></g><g><title>dev_hard_start_xmit (20 samples, 0.24%)</title><rect x="68.1269%" y="837" width="0.2368%" height="15" fill="rgb(245,137,45)" fg:x="5754" fg:w="20"/><text x="68.3769%" y="847.50"></text></g><g><title>loopback_xmit (19 samples, 0.22%)</title><rect x="68.1388%" y="821" width="0.2250%" height="15" fill="rgb(232,154,31)" fg:x="5755" fg:w="19"/><text x="68.3888%" y="831.50"></text></g><g><title>tcp_wfree (4 samples, 0.05%)</title><rect x="68.3164%" y="805" width="0.0474%" height="15" fill="rgb(253,6,39)" fg:x="5770" fg:w="4"/><text x="68.5664%" y="815.50"></text></g><g><title>netif_skb_features (2 samples, 0.02%)</title><rect x="68.3637%" y="821" width="0.0237%" height="15" fill="rgb(234,183,24)" fg:x="5774" fg:w="2"/><text x="68.6137%" y="831.50"></text></g><g><title>skb_network_protocol (1 samples, 0.01%)</title><rect x="68.3756%" y="805" width="0.0118%" height="15" fill="rgb(252,84,40)" fg:x="5775" fg:w="1"/><text x="68.6256%" y="815.50"></text></g><g><title>ip_finish_output2 (206 samples, 2.44%)</title><rect x="65.9602%" y="869" width="2.4390%" height="15" fill="rgb(224,65,2)" fg:x="5571" fg:w="206"/><text x="66.2102%" y="879.50">ip..</text></g><g><title>__dev_queue_xmit (200 samples, 2.37%)</title><rect x="66.0313%" y="853" width="2.3680%" height="15" fill="rgb(229,38,24)" fg:x="5577" fg:w="200"/><text x="66.2813%" y="863.50">__..</text></g><g><title>validate_xmit_skb (3 samples, 0.04%)</title><rect x="68.3637%" y="837" width="0.0355%" height="15" fill="rgb(218,131,50)" fg:x="5774" fg:w="3"/><text x="68.6137%" y="847.50"></text></g><g><title>skb_csum_hwoffload_help (1 samples, 0.01%)</title><rect x="68.3874%" y="821" width="0.0118%" height="15" fill="rgb(233,106,18)" fg:x="5776" fg:w="1"/><text x="68.6374%" y="831.50"></text></g><g><title>ip_send_check (1 samples, 0.01%)</title><rect x="68.4111%" y="837" width="0.0118%" height="15" fill="rgb(220,216,11)" fg:x="5778" fg:w="1"/><text x="68.6611%" y="847.50"></text></g><g><title>[[ip_tables]] (7 samples, 0.08%)</title><rect x="68.4466%" y="821" width="0.0829%" height="15" fill="rgb(251,100,45)" fg:x="5781" fg:w="7"/><text x="68.6966%" y="831.50"></text></g><g><title>[[nf_conntrack]] (31 samples, 0.37%)</title><rect x="68.5295%" y="821" width="0.3670%" height="15" fill="rgb(235,143,32)" fg:x="5788" fg:w="31"/><text x="68.7795%" y="831.50"></text></g><g><title>[[nf_conntrack]] (26 samples, 0.31%)</title><rect x="68.5887%" y="805" width="0.3078%" height="15" fill="rgb(248,124,34)" fg:x="5793" fg:w="26"/><text x="68.8387%" y="815.50"></text></g><g><title>_raw_spin_unlock_bh (1 samples, 0.01%)</title><rect x="68.8847%" y="789" width="0.0118%" height="15" fill="rgb(225,221,4)" fg:x="5818" fg:w="1"/><text x="69.1347%" y="799.50"></text></g><g><title>[[nf_defrag_ipv4]] (1 samples, 0.01%)</title><rect x="68.8965%" y="821" width="0.0118%" height="15" fill="rgb(242,27,43)" fg:x="5819" fg:w="1"/><text x="69.1465%" y="831.50"></text></g><g><title>ip_local_out (47 samples, 0.56%)</title><rect x="68.3992%" y="869" width="0.5565%" height="15" fill="rgb(227,54,8)" fg:x="5777" fg:w="47"/><text x="68.6492%" y="879.50"></text></g><g><title>__ip_local_out (46 samples, 0.54%)</title><rect x="68.4111%" y="853" width="0.5446%" height="15" fill="rgb(253,139,49)" fg:x="5778" fg:w="46"/><text x="68.6611%" y="863.50"></text></g><g><title>nf_hook_slow (45 samples, 0.53%)</title><rect x="68.4229%" y="837" width="0.5328%" height="15" fill="rgb(231,26,43)" fg:x="5779" fg:w="45"/><text x="68.6729%" y="847.50"></text></g><g><title>[[nf_nat]] (4 samples, 0.05%)</title><rect x="68.9084%" y="821" width="0.0474%" height="15" fill="rgb(207,121,39)" fg:x="5820" fg:w="4"/><text x="69.1584%" y="831.50"></text></g><g><title>[[nf_nat]] (3 samples, 0.04%)</title><rect x="68.9202%" y="805" width="0.0355%" height="15" fill="rgb(223,101,35)" fg:x="5821" fg:w="3"/><text x="69.1702%" y="815.50"></text></g><g><title>[[nf_nat]] (1 samples, 0.01%)</title><rect x="69.0623%" y="773" width="0.0118%" height="15" fill="rgb(232,87,23)" fg:x="5833" fg:w="1"/><text x="69.3123%" y="783.50"></text></g><g><title>[[nf_nat]] (5 samples, 0.06%)</title><rect x="69.0268%" y="789" width="0.0592%" height="15" fill="rgb(225,180,29)" fg:x="5830" fg:w="5"/><text x="69.2768%" y="799.50"></text></g><g><title>inet_proto_csum_replace4 (1 samples, 0.01%)</title><rect x="69.0741%" y="773" width="0.0118%" height="15" fill="rgb(225,25,17)" fg:x="5834" fg:w="1"/><text x="69.3241%" y="783.50"></text></g><g><title>[[nf_nat]] (6 samples, 0.07%)</title><rect x="69.0268%" y="805" width="0.0710%" height="15" fill="rgb(223,8,52)" fg:x="5830" fg:w="6"/><text x="69.2768%" y="815.50"></text></g><g><title>skb_ensure_writable (1 samples, 0.01%)</title><rect x="69.0860%" y="789" width="0.0118%" height="15" fill="rgb(246,42,21)" fg:x="5835" fg:w="1"/><text x="69.3360%" y="799.50"></text></g><g><title>__skb_flow_dissect (5 samples, 0.06%)</title><rect x="69.1333%" y="789" width="0.0592%" height="15" fill="rgb(205,64,43)" fg:x="5839" fg:w="5"/><text x="69.3833%" y="799.50"></text></g><g><title>__xfrm_decode_session (10 samples, 0.12%)</title><rect x="69.0978%" y="805" width="0.1184%" height="15" fill="rgb(221,160,13)" fg:x="5836" fg:w="10"/><text x="69.3478%" y="815.50"></text></g><g><title>security_xfrm_decode_session (2 samples, 0.02%)</title><rect x="69.1925%" y="789" width="0.0237%" height="15" fill="rgb(239,58,35)" fg:x="5844" fg:w="2"/><text x="69.4425%" y="799.50"></text></g><g><title>bpf_lsm_xfrm_decode_session (1 samples, 0.01%)</title><rect x="69.2044%" y="773" width="0.0118%" height="15" fill="rgb(251,26,40)" fg:x="5845" fg:w="1"/><text x="69.4544%" y="783.50"></text></g><g><title>__ip_queue_xmit (295 samples, 3.49%)</title><rect x="65.7589%" y="885" width="3.4928%" height="15" fill="rgb(247,0,4)" fg:x="5554" fg:w="295"/><text x="66.0089%" y="895.50">__i..</text></g><g><title>ip_output (25 samples, 0.30%)</title><rect x="68.9557%" y="869" width="0.2960%" height="15" fill="rgb(218,130,10)" fg:x="5824" fg:w="25"/><text x="69.2057%" y="879.50"></text></g><g><title>nf_hook_slow (24 samples, 0.28%)</title><rect x="68.9676%" y="853" width="0.2842%" height="15" fill="rgb(239,32,7)" fg:x="5825" fg:w="24"/><text x="69.2176%" y="863.50"></text></g><g><title>[[nf_nat]] (22 samples, 0.26%)</title><rect x="68.9912%" y="837" width="0.2605%" height="15" fill="rgb(210,192,24)" fg:x="5827" fg:w="22"/><text x="69.2412%" y="847.50"></text></g><g><title>[[nf_nat]] (21 samples, 0.25%)</title><rect x="69.0031%" y="821" width="0.2486%" height="15" fill="rgb(226,212,17)" fg:x="5828" fg:w="21"/><text x="69.2531%" y="831.50"></text></g><g><title>xfrm_lookup_with_ifid (3 samples, 0.04%)</title><rect x="69.2162%" y="805" width="0.0355%" height="15" fill="rgb(219,201,28)" fg:x="5846" fg:w="3"/><text x="69.4662%" y="815.50"></text></g><g><title>__skb_clone (2 samples, 0.02%)</title><rect x="69.2517%" y="885" width="0.0237%" height="15" fill="rgb(235,207,41)" fg:x="5849" fg:w="2"/><text x="69.5017%" y="895.50"></text></g><g><title>__copy_skb_header (1 samples, 0.01%)</title><rect x="69.2636%" y="869" width="0.0118%" height="15" fill="rgb(241,95,54)" fg:x="5850" fg:w="1"/><text x="69.5136%" y="879.50"></text></g><g><title>cubictcp_cwnd_event (5 samples, 0.06%)</title><rect x="69.2754%" y="885" width="0.0592%" height="15" fill="rgb(248,12,23)" fg:x="5851" fg:w="5"/><text x="69.5254%" y="895.50"></text></g><g><title>__x86_indirect_thunk_array (1 samples, 0.01%)</title><rect x="69.3228%" y="869" width="0.0118%" height="15" fill="rgb(228,173,4)" fg:x="5855" fg:w="1"/><text x="69.5728%" y="879.50"></text></g><g><title>skb_clone (4 samples, 0.05%)</title><rect x="69.3346%" y="885" width="0.0474%" height="15" fill="rgb(254,99,5)" fg:x="5856" fg:w="4"/><text x="69.5846%" y="895.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="69.3820%" y="885" width="0.0118%" height="15" fill="rgb(212,184,17)" fg:x="5860" fg:w="1"/><text x="69.6320%" y="895.50"></text></g><g><title>__tcp_transmit_skb (321 samples, 3.80%)</title><rect x="65.6169%" y="901" width="3.8006%" height="15" fill="rgb(252,174,1)" fg:x="5542" fg:w="321"/><text x="65.8669%" y="911.50">__tc..</text></g><g><title>tcp_rate_skb_sent (2 samples, 0.02%)</title><rect x="69.3938%" y="885" width="0.0237%" height="15" fill="rgb(241,118,51)" fg:x="5861" fg:w="2"/><text x="69.6438%" y="895.50"></text></g><g><title>ktime_get (13 samples, 0.15%)</title><rect x="69.4175%" y="901" width="0.1539%" height="15" fill="rgb(227,94,47)" fg:x="5863" fg:w="13"/><text x="69.6675%" y="911.50"></text></g><g><title>read_tsc (10 samples, 0.12%)</title><rect x="69.4530%" y="885" width="0.1184%" height="15" fill="rgb(229,104,2)" fg:x="5866" fg:w="10"/><text x="69.7030%" y="895.50"></text></g><g><title>skb_split (3 samples, 0.04%)</title><rect x="69.5714%" y="901" width="0.0355%" height="15" fill="rgb(219,28,31)" fg:x="5876" fg:w="3"/><text x="69.8214%" y="911.50"></text></g><g><title>skb_zerocopy_clone (1 samples, 0.01%)</title><rect x="69.5951%" y="885" width="0.0118%" height="15" fill="rgb(233,109,36)" fg:x="5878" fg:w="1"/><text x="69.8451%" y="895.50"></text></g><g><title>tcp_chrono_stop (1 samples, 0.01%)</title><rect x="69.6069%" y="901" width="0.0118%" height="15" fill="rgb(246,88,11)" fg:x="5879" fg:w="1"/><text x="69.8569%" y="911.50"></text></g><g><title>rb_insert_color (1 samples, 0.01%)</title><rect x="69.6543%" y="885" width="0.0118%" height="15" fill="rgb(209,212,17)" fg:x="5883" fg:w="1"/><text x="69.9043%" y="895.50"></text></g><g><title>detach_if_pending (1 samples, 0.01%)</title><rect x="69.6898%" y="853" width="0.0118%" height="15" fill="rgb(243,59,29)" fg:x="5886" fg:w="1"/><text x="69.9398%" y="863.50"></text></g><g><title>enqueue_timer (1 samples, 0.01%)</title><rect x="69.7016%" y="853" width="0.0118%" height="15" fill="rgb(244,205,48)" fg:x="5887" fg:w="1"/><text x="69.9516%" y="863.50"></text></g><g><title>sk_reset_timer (5 samples, 0.06%)</title><rect x="69.6661%" y="885" width="0.0592%" height="15" fill="rgb(227,30,6)" fg:x="5884" fg:w="5"/><text x="69.9161%" y="895.50"></text></g><g><title>__mod_timer (5 samples, 0.06%)</title><rect x="69.6661%" y="869" width="0.0592%" height="15" fill="rgb(220,205,48)" fg:x="5884" fg:w="5"/><text x="69.9161%" y="879.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="69.7135%" y="853" width="0.0118%" height="15" fill="rgb(250,94,14)" fg:x="5888" fg:w="1"/><text x="69.9635%" y="863.50"></text></g><g><title>tcp_rbtree_insert (2 samples, 0.02%)</title><rect x="69.7253%" y="885" width="0.0237%" height="15" fill="rgb(216,119,42)" fg:x="5889" fg:w="2"/><text x="69.9753%" y="895.50"></text></g><g><title>tcp_event_new_data_sent (14 samples, 0.17%)</title><rect x="69.6188%" y="901" width="0.1658%" height="15" fill="rgb(232,155,0)" fg:x="5880" fg:w="14"/><text x="69.8688%" y="911.50"></text></g><g><title>tcp_rearm_rto (3 samples, 0.04%)</title><rect x="69.7490%" y="885" width="0.0355%" height="15" fill="rgb(212,24,32)" fg:x="5891" fg:w="3"/><text x="69.9990%" y="895.50"></text></g><g><title>jiffies_to_usecs (1 samples, 0.01%)</title><rect x="69.7964%" y="885" width="0.0118%" height="15" fill="rgb(216,69,20)" fg:x="5895" fg:w="1"/><text x="70.0464%" y="895.50"></text></g><g><title>rb_first (1 samples, 0.01%)</title><rect x="69.8082%" y="885" width="0.0118%" height="15" fill="rgb(229,73,31)" fg:x="5896" fg:w="1"/><text x="70.0582%" y="895.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (4 samples, 0.05%)</title><rect x="69.7845%" y="901" width="0.0474%" height="15" fill="rgb(224,219,20)" fg:x="5894" fg:w="4"/><text x="70.0345%" y="911.50"></text></g><g><title>sk_reset_timer (1 samples, 0.01%)</title><rect x="69.8200%" y="885" width="0.0118%" height="15" fill="rgb(215,146,41)" fg:x="5897" fg:w="1"/><text x="70.0700%" y="895.50"></text></g><g><title>__mod_timer (1 samples, 0.01%)</title><rect x="69.8200%" y="869" width="0.0118%" height="15" fill="rgb(244,71,31)" fg:x="5897" fg:w="1"/><text x="70.0700%" y="879.50"></text></g><g><title>lock_timer_base (1 samples, 0.01%)</title><rect x="69.8200%" y="853" width="0.0118%" height="15" fill="rgb(224,24,11)" fg:x="5897" fg:w="1"/><text x="70.0700%" y="863.50"></text></g><g><title>kmalloc_reserve (2 samples, 0.02%)</title><rect x="69.8319%" y="869" width="0.0237%" height="15" fill="rgb(229,76,15)" fg:x="5898" fg:w="2"/><text x="70.0819%" y="879.50"></text></g><g><title>kmem_cache_alloc_node (2 samples, 0.02%)</title><rect x="69.8319%" y="853" width="0.0237%" height="15" fill="rgb(209,93,2)" fg:x="5898" fg:w="2"/><text x="70.0819%" y="863.50"></text></g><g><title>memset (1 samples, 0.01%)</title><rect x="69.8437%" y="837" width="0.0118%" height="15" fill="rgb(216,200,50)" fg:x="5899" fg:w="1"/><text x="70.0937%" y="847.50"></text></g><g><title>__alloc_skb (4 samples, 0.05%)</title><rect x="69.8319%" y="885" width="0.0474%" height="15" fill="rgb(211,67,34)" fg:x="5898" fg:w="4"/><text x="70.0819%" y="895.50"></text></g><g><title>kmem_cache_alloc_node (2 samples, 0.02%)</title><rect x="69.8556%" y="869" width="0.0237%" height="15" fill="rgb(225,87,47)" fg:x="5900" fg:w="2"/><text x="70.1056%" y="879.50"></text></g><g><title>memset (2 samples, 0.02%)</title><rect x="69.8556%" y="853" width="0.0237%" height="15" fill="rgb(217,185,16)" fg:x="5900" fg:w="2"/><text x="70.1056%" y="863.50"></text></g><g><title>mem_cgroup_charge_skmem (3 samples, 0.04%)</title><rect x="69.8792%" y="885" width="0.0355%" height="15" fill="rgb(205,0,0)" fg:x="5902" fg:w="3"/><text x="70.1292%" y="895.50"></text></g><g><title>try_charge_memcg (3 samples, 0.04%)</title><rect x="69.8792%" y="869" width="0.0355%" height="15" fill="rgb(207,116,45)" fg:x="5902" fg:w="3"/><text x="70.1292%" y="879.50"></text></g><g><title>refill_stock (2 samples, 0.02%)</title><rect x="69.8911%" y="853" width="0.0237%" height="15" fill="rgb(221,156,26)" fg:x="5903" fg:w="2"/><text x="70.1411%" y="863.50"></text></g><g><title>__refill_stock (2 samples, 0.02%)</title><rect x="69.8911%" y="837" width="0.0237%" height="15" fill="rgb(213,140,4)" fg:x="5903" fg:w="2"/><text x="70.1411%" y="847.50"></text></g><g><title>drain_stock (1 samples, 0.01%)</title><rect x="69.9029%" y="821" width="0.0118%" height="15" fill="rgb(231,224,15)" fg:x="5904" fg:w="1"/><text x="70.1529%" y="831.50"></text></g><g><title>page_counter_uncharge (1 samples, 0.01%)</title><rect x="69.9029%" y="805" width="0.0118%" height="15" fill="rgb(244,76,20)" fg:x="5904" fg:w="1"/><text x="70.1529%" y="815.50"></text></g><g><title>tcp_stream_alloc_skb (8 samples, 0.09%)</title><rect x="69.8319%" y="901" width="0.0947%" height="15" fill="rgb(238,117,7)" fg:x="5898" fg:w="8"/><text x="70.0819%" y="911.50"></text></g><g><title>sk_forced_mem_schedule (1 samples, 0.01%)</title><rect x="69.9148%" y="885" width="0.0118%" height="15" fill="rgb(235,1,10)" fg:x="5905" fg:w="1"/><text x="70.1648%" y="895.50"></text></g><g><title>__tcp_push_pending_frames (396 samples, 4.69%)</title><rect x="65.2972%" y="933" width="4.6886%" height="15" fill="rgb(216,165,6)" fg:x="5515" fg:w="396"/><text x="65.5472%" y="943.50">__tcp..</text></g><g><title>tcp_write_xmit (392 samples, 4.64%)</title><rect x="65.3445%" y="917" width="4.6413%" height="15" fill="rgb(246,91,35)" fg:x="5519" fg:w="392"/><text x="65.5945%" y="927.50">tcp_w..</text></g><g><title>tcp_tso_segs (5 samples, 0.06%)</title><rect x="69.9266%" y="901" width="0.0592%" height="15" fill="rgb(228,96,24)" fg:x="5906" fg:w="5"/><text x="70.1766%" y="911.50"></text></g><g><title>_copy_from_iter (10 samples, 0.12%)</title><rect x="69.9858%" y="933" width="0.1184%" height="15" fill="rgb(254,217,53)" fg:x="5911" fg:w="10"/><text x="70.2358%" y="943.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="70.1042%" y="933" width="0.0118%" height="15" fill="rgb(209,60,0)" fg:x="5921" fg:w="1"/><text x="70.3542%" y="943.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="70.1042%" y="917" width="0.0118%" height="15" fill="rgb(250,93,26)" fg:x="5921" fg:w="1"/><text x="70.3542%" y="927.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="70.1042%" y="901" width="0.0118%" height="15" fill="rgb(211,9,40)" fg:x="5921" fg:w="1"/><text x="70.3542%" y="911.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="70.1042%" y="885" width="0.0118%" height="15" fill="rgb(242,57,20)" fg:x="5921" fg:w="1"/><text x="70.3542%" y="895.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="70.1042%" y="869" width="0.0118%" height="15" fill="rgb(248,85,48)" fg:x="5921" fg:w="1"/><text x="70.3542%" y="879.50"></text></g><g><title>tick_nohz_handler (1 samples, 0.01%)</title><rect x="70.1042%" y="853" width="0.0118%" height="15" fill="rgb(212,117,2)" fg:x="5921" fg:w="1"/><text x="70.3542%" y="863.50"></text></g><g><title>update_process_times (1 samples, 0.01%)</title><rect x="70.1042%" y="837" width="0.0118%" height="15" fill="rgb(243,19,3)" fg:x="5921" fg:w="1"/><text x="70.3542%" y="847.50"></text></g><g><title>rcu_sched_clock_irq (1 samples, 0.01%)</title><rect x="70.1042%" y="821" width="0.0118%" height="15" fill="rgb(232,217,24)" fg:x="5921" fg:w="1"/><text x="70.3542%" y="831.50"></text></g><g><title>__rmqueue_pcplist (1 samples, 0.01%)</title><rect x="70.1989%" y="853" width="0.0118%" height="15" fill="rgb(224,175,40)" fg:x="5929" fg:w="1"/><text x="70.4489%" y="863.50"></text></g><g><title>__zone_watermark_ok (1 samples, 0.01%)</title><rect x="70.2108%" y="853" width="0.0118%" height="15" fill="rgb(212,162,32)" fg:x="5930" fg:w="1"/><text x="70.4608%" y="863.50"></text></g><g><title>sk_page_frag_refill (11 samples, 0.13%)</title><rect x="70.1160%" y="933" width="0.1302%" height="15" fill="rgb(215,9,4)" fg:x="5922" fg:w="11"/><text x="70.3660%" y="943.50"></text></g><g><title>skb_page_frag_refill (10 samples, 0.12%)</title><rect x="70.1279%" y="917" width="0.1184%" height="15" fill="rgb(242,42,7)" fg:x="5923" fg:w="10"/><text x="70.3779%" y="927.50"></text></g><g><title>alloc_pages_mpol (4 samples, 0.05%)</title><rect x="70.1989%" y="901" width="0.0474%" height="15" fill="rgb(242,184,45)" fg:x="5929" fg:w="4"/><text x="70.4489%" y="911.50"></text></g><g><title>__alloc_pages (4 samples, 0.05%)</title><rect x="70.1989%" y="885" width="0.0474%" height="15" fill="rgb(228,111,51)" fg:x="5929" fg:w="4"/><text x="70.4489%" y="895.50"></text></g><g><title>get_page_from_freelist (4 samples, 0.05%)</title><rect x="70.1989%" y="869" width="0.0474%" height="15" fill="rgb(236,147,17)" fg:x="5929" fg:w="4"/><text x="70.4489%" y="879.50"></text></g><g><title>clear_page_erms (2 samples, 0.02%)</title><rect x="70.2226%" y="853" width="0.0237%" height="15" fill="rgb(210,75,22)" fg:x="5931" fg:w="2"/><text x="70.4726%" y="863.50"></text></g><g><title>tcp_rate_check_app_limited (2 samples, 0.02%)</title><rect x="70.2463%" y="933" width="0.0237%" height="15" fill="rgb(217,159,45)" fg:x="5933" fg:w="2"/><text x="70.4963%" y="943.50"></text></g><g><title>tcp_send_mss (11 samples, 0.13%)</title><rect x="70.2700%" y="933" width="0.1302%" height="15" fill="rgb(245,165,53)" fg:x="5935" fg:w="11"/><text x="70.5200%" y="943.50"></text></g><g><title>tcp_current_mss (9 samples, 0.11%)</title><rect x="70.2936%" y="917" width="0.1066%" height="15" fill="rgb(251,190,50)" fg:x="5937" fg:w="9"/><text x="70.5436%" y="927.50"></text></g><g><title>ipv4_mtu (2 samples, 0.02%)</title><rect x="70.3765%" y="901" width="0.0237%" height="15" fill="rgb(208,203,29)" fg:x="5944" fg:w="2"/><text x="70.6265%" y="911.50"></text></g><g><title>tcp_skb_entail (4 samples, 0.05%)</title><rect x="70.4002%" y="933" width="0.0474%" height="15" fill="rgb(207,209,35)" fg:x="5946" fg:w="4"/><text x="70.6502%" y="943.50"></text></g><g><title>kmalloc_reserve (7 samples, 0.08%)</title><rect x="70.5186%" y="901" width="0.0829%" height="15" fill="rgb(230,144,49)" fg:x="5956" fg:w="7"/><text x="70.7686%" y="911.50"></text></g><g><title>kmem_cache_alloc_node (7 samples, 0.08%)</title><rect x="70.5186%" y="885" width="0.0829%" height="15" fill="rgb(229,31,6)" fg:x="5956" fg:w="7"/><text x="70.7686%" y="895.50"></text></g><g><title>memset (2 samples, 0.02%)</title><rect x="70.5778%" y="869" width="0.0237%" height="15" fill="rgb(251,129,24)" fg:x="5961" fg:w="2"/><text x="70.8278%" y="879.50"></text></g><g><title>__alloc_skb (17 samples, 0.20%)</title><rect x="70.4712%" y="917" width="0.2013%" height="15" fill="rgb(235,105,15)" fg:x="5952" fg:w="17"/><text x="70.7212%" y="927.50"></text></g><g><title>kmem_cache_alloc_node (6 samples, 0.07%)</title><rect x="70.6015%" y="901" width="0.0710%" height="15" fill="rgb(216,52,43)" fg:x="5963" fg:w="6"/><text x="70.8515%" y="911.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="70.6607%" y="885" width="0.0118%" height="15" fill="rgb(238,144,41)" fg:x="5968" fg:w="1"/><text x="70.9107%" y="895.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="70.6607%" y="869" width="0.0118%" height="15" fill="rgb(243,63,9)" fg:x="5968" fg:w="1"/><text x="70.9107%" y="879.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="70.6607%" y="853" width="0.0118%" height="15" fill="rgb(246,208,1)" fg:x="5968" fg:w="1"/><text x="70.9107%" y="863.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="70.6607%" y="837" width="0.0118%" height="15" fill="rgb(233,182,18)" fg:x="5968" fg:w="1"/><text x="70.9107%" y="847.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="70.6607%" y="821" width="0.0118%" height="15" fill="rgb(242,224,8)" fg:x="5968" fg:w="1"/><text x="70.9107%" y="831.50"></text></g><g><title>hrtimer_wakeup (1 samples, 0.01%)</title><rect x="70.6607%" y="805" width="0.0118%" height="15" fill="rgb(243,54,37)" fg:x="5968" fg:w="1"/><text x="70.9107%" y="815.50"></text></g><g><title>try_to_wake_up (1 samples, 0.01%)</title><rect x="70.6607%" y="789" width="0.0118%" height="15" fill="rgb(233,192,12)" fg:x="5968" fg:w="1"/><text x="70.9107%" y="799.50"></text></g><g><title>ttwu_do_activate (1 samples, 0.01%)</title><rect x="70.6607%" y="773" width="0.0118%" height="15" fill="rgb(251,192,53)" fg:x="5968" fg:w="1"/><text x="70.9107%" y="783.50"></text></g><g><title>wakeup_preempt (1 samples, 0.01%)</title><rect x="70.6607%" y="757" width="0.0118%" height="15" fill="rgb(246,141,26)" fg:x="5968" fg:w="1"/><text x="70.9107%" y="767.50"></text></g><g><title>check_preempt_wakeup_fair (1 samples, 0.01%)</title><rect x="70.6607%" y="741" width="0.0118%" height="15" fill="rgb(239,195,19)" fg:x="5968" fg:w="1"/><text x="70.9107%" y="751.50"></text></g><g><title>mod_memcg_state (4 samples, 0.05%)</title><rect x="70.6725%" y="901" width="0.0474%" height="15" fill="rgb(241,16,39)" fg:x="5969" fg:w="4"/><text x="70.9225%" y="911.50"></text></g><g><title>__mod_memcg_state (3 samples, 0.04%)</title><rect x="70.6843%" y="885" width="0.0355%" height="15" fill="rgb(223,13,53)" fg:x="5970" fg:w="3"/><text x="70.9343%" y="895.50"></text></g><g><title>page_counter_try_charge (4 samples, 0.05%)</title><rect x="70.7199%" y="885" width="0.0474%" height="15" fill="rgb(214,227,0)" fg:x="5973" fg:w="4"/><text x="70.9699%" y="895.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.01%)</title><rect x="70.7672%" y="853" width="0.0118%" height="15" fill="rgb(228,103,26)" fg:x="5977" fg:w="1"/><text x="71.0172%" y="863.50"></text></g><g><title>mem_cgroup_charge_skmem (10 samples, 0.12%)</title><rect x="70.6725%" y="917" width="0.1184%" height="15" fill="rgb(254,177,53)" fg:x="5969" fg:w="10"/><text x="70.9225%" y="927.50"></text></g><g><title>try_charge_memcg (6 samples, 0.07%)</title><rect x="70.7199%" y="901" width="0.0710%" height="15" fill="rgb(208,201,34)" fg:x="5973" fg:w="6"/><text x="70.9699%" y="911.50"></text></g><g><title>refill_stock (2 samples, 0.02%)</title><rect x="70.7672%" y="885" width="0.0237%" height="15" fill="rgb(212,39,5)" fg:x="5977" fg:w="2"/><text x="71.0172%" y="895.50"></text></g><g><title>__refill_stock (2 samples, 0.02%)</title><rect x="70.7672%" y="869" width="0.0237%" height="15" fill="rgb(246,117,3)" fg:x="5977" fg:w="2"/><text x="71.0172%" y="879.50"></text></g><g><title>drain_stock (1 samples, 0.01%)</title><rect x="70.7791%" y="853" width="0.0118%" height="15" fill="rgb(244,118,39)" fg:x="5978" fg:w="1"/><text x="71.0291%" y="863.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="70.7791%" y="837" width="0.0118%" height="15" fill="rgb(241,64,10)" fg:x="5978" fg:w="1"/><text x="71.0291%" y="847.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="70.7791%" y="821" width="0.0118%" height="15" fill="rgb(229,39,44)" fg:x="5978" fg:w="1"/><text x="71.0291%" y="831.50"></text></g><g><title>__x64_sys_sendto (552 samples, 6.54%)</title><rect x="64.2671%" y="997" width="6.5356%" height="15" fill="rgb(230,226,3)" fg:x="5428" fg:w="552"/><text x="64.5171%" y="1007.50">__x64_sys..</text></g><g><title>__sys_sendto (551 samples, 6.52%)</title><rect x="64.2789%" y="981" width="6.5238%" height="15" fill="rgb(222,13,42)" fg:x="5429" fg:w="551"/><text x="64.5289%" y="991.50">__sys_sen..</text></g><g><title>tcp_sendmsg (542 samples, 6.42%)</title><rect x="64.3855%" y="965" width="6.4172%" height="15" fill="rgb(247,180,54)" fg:x="5438" fg:w="542"/><text x="64.6355%" y="975.50">tcp_send..</text></g><g><title>tcp_sendmsg_locked (509 samples, 6.03%)</title><rect x="64.7762%" y="949" width="6.0265%" height="15" fill="rgb(205,96,16)" fg:x="5471" fg:w="509"/><text x="65.0262%" y="959.50">tcp_send..</text></g><g><title>tcp_stream_alloc_skb (30 samples, 0.36%)</title><rect x="70.4475%" y="933" width="0.3552%" height="15" fill="rgb(205,100,21)" fg:x="5950" fg:w="30"/><text x="70.6975%" y="943.50"></text></g><g><title>sk_forced_mem_schedule (1 samples, 0.01%)</title><rect x="70.7909%" y="917" width="0.0118%" height="15" fill="rgb(248,51,4)" fg:x="5979" fg:w="1"/><text x="71.0409%" y="927.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="70.8027%" y="997" width="0.0118%" height="15" fill="rgb(217,197,30)" fg:x="5980" fg:w="1"/><text x="71.0527%" y="1007.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="70.8027%" y="981" width="0.0118%" height="15" fill="rgb(240,179,40)" fg:x="5980" fg:w="1"/><text x="71.0527%" y="991.50"></text></g><g><title>__rseq_handle_notify_resume (1 samples, 0.01%)</title><rect x="70.9685%" y="981" width="0.0118%" height="15" fill="rgb(212,185,35)" fg:x="5994" fg:w="1"/><text x="71.2185%" y="991.50"></text></g><g><title>__get_user_8 (1 samples, 0.01%)</title><rect x="70.9685%" y="965" width="0.0118%" height="15" fill="rgb(251,222,31)" fg:x="5994" fg:w="1"/><text x="71.2185%" y="975.50"></text></g><g><title>syscall_exit_to_user_mode_prepare (1 samples, 0.01%)</title><rect x="70.9803%" y="981" width="0.0118%" height="15" fill="rgb(208,140,36)" fg:x="5995" fg:w="1"/><text x="71.2303%" y="991.50"></text></g><g><title>entry_SYSCALL_64 (581 samples, 6.88%)</title><rect x="64.1369%" y="1029" width="6.8790%" height="15" fill="rgb(220,148,1)" fg:x="5417" fg:w="581"/><text x="64.3869%" y="1039.50">entry_SYS..</text></g><g><title>do_syscall_64 (578 samples, 6.84%)</title><rect x="64.1724%" y="1013" width="6.8435%" height="15" fill="rgb(254,4,28)" fg:x="5420" fg:w="578"/><text x="64.4224%" y="1023.50">do_syscal..</text></g><g><title>syscall_exit_to_user_mode (17 samples, 0.20%)</title><rect x="70.8146%" y="997" width="0.2013%" height="15" fill="rgb(222,185,44)" fg:x="5981" fg:w="17"/><text x="71.0646%" y="1007.50"></text></g><g><title>task_work_run (2 samples, 0.02%)</title><rect x="70.9922%" y="981" width="0.0237%" height="15" fill="rgb(215,74,39)" fg:x="5996" fg:w="2"/><text x="71.2422%" y="991.50"></text></g><g><title>task_mm_cid_work (2 samples, 0.02%)</title><rect x="70.9922%" y="965" width="0.0237%" height="15" fill="rgb(247,86,4)" fg:x="5996" fg:w="2"/><text x="71.2422%" y="975.50"></text></g><g><title>rc4::Rc4State::prga (1 samples, 0.01%)</title><rect x="71.0159%" y="1029" width="0.0118%" height="15" fill="rgb(231,105,32)" fg:x="5998" fg:w="1"/><text x="71.2659%" y="1039.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.01%)</title><rect x="71.0159%" y="1013" width="0.0118%" height="15" fill="rgb(222,65,35)" fg:x="5998" fg:w="1"/><text x="71.2659%" y="1023.50"></text></g><g><title>core::ptr::swap (1 samples, 0.01%)</title><rect x="71.0159%" y="997" width="0.0118%" height="15" fill="rgb(218,145,35)" fg:x="5998" fg:w="1"/><text x="71.2659%" y="1007.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="71.0159%" y="981" width="0.0118%" height="15" fill="rgb(208,7,15)" fg:x="5998" fg:w="1"/><text x="71.2659%" y="991.50"></text></g><g><title>__send (603 samples, 7.14%)</title><rect x="63.9474%" y="1045" width="7.1395%" height="15" fill="rgb(209,83,13)" fg:x="5401" fg:w="603"/><text x="64.1974%" y="1055.50">__send</text></g><g><title>syscall_return_via_sysret (5 samples, 0.06%)</title><rect x="71.0277%" y="1029" width="0.0592%" height="15" fill="rgb(218,3,10)" fg:x="5999" fg:w="5"/><text x="71.2777%" y="1039.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (606 samples, 7.17%)</title><rect x="63.9356%" y="1061" width="7.1750%" height="15" fill="rgb(211,219,4)" fg:x="5400" fg:w="606"/><text x="64.1856%" y="1071.50">&lt;&amp;std::net..</text></g><g><title>__vdso_clock_gettime (2 samples, 0.02%)</title><rect x="71.0869%" y="1045" width="0.0237%" height="15" fill="rgb(228,194,12)" fg:x="6004" fg:w="2"/><text x="71.3369%" y="1055.50"></text></g><g><title>entry_SYSCALL_64 (2 samples, 0.02%)</title><rect x="71.0869%" y="1029" width="0.0237%" height="15" fill="rgb(210,175,7)" fg:x="6004" fg:w="2"/><text x="71.3369%" y="1039.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="71.1106%" y="1061" width="0.0118%" height="15" fill="rgb(243,132,6)" fg:x="6006" fg:w="1"/><text x="71.3606%" y="1071.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (610 samples, 7.22%)</title><rect x="63.9119%" y="1077" width="7.2224%" height="15" fill="rgb(207,72,18)" fg:x="5398" fg:w="610"/><text x="64.1619%" y="1087.50">&lt;&amp;mio::net..</text></g><g><title>rc4::Rc4State::prga (1 samples, 0.01%)</title><rect x="71.1224%" y="1061" width="0.0118%" height="15" fill="rgb(236,1,18)" fg:x="6007" fg:w="1"/><text x="71.3724%" y="1071.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="71.1343%" y="1061" width="0.0118%" height="15" fill="rgb(227,0,18)" fg:x="6008" fg:w="1"/><text x="71.3843%" y="1071.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (622 samples, 7.36%)</title><rect x="63.8054%" y="1109" width="7.3644%" height="15" fill="rgb(247,37,5)" fg:x="5389" fg:w="622"/><text x="64.0554%" y="1119.50">&lt;&amp;mut T as..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (621 samples, 7.35%)</title><rect x="63.8172%" y="1093" width="7.3526%" height="15" fill="rgb(237,179,24)" fg:x="5390" fg:w="621"/><text x="64.0672%" y="1103.50">tokio::io:..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (3 samples, 0.04%)</title><rect x="71.1343%" y="1077" width="0.0355%" height="15" fill="rgb(226,53,20)" fg:x="6008" fg:w="3"/><text x="71.3843%" y="1087.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (2 samples, 0.02%)</title><rect x="71.1461%" y="1061" width="0.0237%" height="15" fill="rgb(247,75,7)" fg:x="6009" fg:w="2"/><text x="71.3961%" y="1071.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (2 samples, 0.02%)</title><rect x="71.1461%" y="1045" width="0.0237%" height="15" fill="rgb(233,96,12)" fg:x="6009" fg:w="2"/><text x="71.3961%" y="1055.50"></text></g><g><title>tokio::runtime::io::driver::Direction::mask (2 samples, 0.02%)</title><rect x="71.1461%" y="1029" width="0.0237%" height="15" fill="rgb(224,125,0)" fg:x="6009" fg:w="2"/><text x="71.3961%" y="1039.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="71.1579%" y="1013" width="0.0118%" height="15" fill="rgb(224,92,25)" fg:x="6010" fg:w="1"/><text x="71.4079%" y="1023.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="71.1579%" y="997" width="0.0118%" height="15" fill="rgb(224,42,24)" fg:x="6010" fg:w="1"/><text x="71.4079%" y="1007.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.01%)</title><rect x="71.1579%" y="981" width="0.0118%" height="15" fill="rgb(234,132,49)" fg:x="6010" fg:w="1"/><text x="71.4079%" y="991.50"></text></g><g><title>handle_softirqs (1 samples, 0.01%)</title><rect x="71.1579%" y="965" width="0.0118%" height="15" fill="rgb(248,100,35)" fg:x="6010" fg:w="1"/><text x="71.4079%" y="975.50"></text></g><g><title>net_rx_action (1 samples, 0.01%)</title><rect x="71.1579%" y="949" width="0.0118%" height="15" fill="rgb(239,94,40)" fg:x="6010" fg:w="1"/><text x="71.4079%" y="959.50"></text></g><g><title>__napi_poll (1 samples, 0.01%)</title><rect x="71.1579%" y="933" width="0.0118%" height="15" fill="rgb(235,139,28)" fg:x="6010" fg:w="1"/><text x="71.4079%" y="943.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="71.1579%" y="917" width="0.0118%" height="15" fill="rgb(217,144,7)" fg:x="6010" fg:w="1"/><text x="71.4079%" y="927.50"></text></g><g><title>napi_consume_skb (1 samples, 0.01%)</title><rect x="71.1579%" y="901" width="0.0118%" height="15" fill="rgb(227,55,4)" fg:x="6010" fg:w="1"/><text x="71.4079%" y="911.50"></text></g><g><title>skb_release_head_state (1 samples, 0.01%)</title><rect x="71.1579%" y="885" width="0.0118%" height="15" fill="rgb(252,82,54)" fg:x="6010" fg:w="1"/><text x="71.4079%" y="895.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (628 samples, 7.44%)</title><rect x="63.7462%" y="1125" width="7.4355%" height="15" fill="rgb(245,172,4)" fg:x="5384" fg:w="628"/><text x="63.9962%" y="1135.50">&lt;tokio::io..</text></g><g><title>core::mem::take (1 samples, 0.01%)</title><rect x="71.1698%" y="1109" width="0.0118%" height="15" fill="rgb(207,26,27)" fg:x="6011" fg:w="1"/><text x="71.4198%" y="1119.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="71.1698%" y="1093" width="0.0118%" height="15" fill="rgb(252,98,18)" fg:x="6011" fg:w="1"/><text x="71.4198%" y="1103.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="71.1698%" y="1077" width="0.0118%" height="15" fill="rgb(244,8,26)" fg:x="6011" fg:w="1"/><text x="71.4198%" y="1087.50"></text></g><g><title>&lt;u32 as rotmguard::write::RPWrite&gt;::rp_write (1 samples, 0.01%)</title><rect x="71.1816%" y="1125" width="0.0118%" height="15" fill="rgb(237,173,45)" fg:x="6012" fg:w="1"/><text x="71.4316%" y="1135.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.01%)</title><rect x="71.1816%" y="1109" width="0.0118%" height="15" fill="rgb(208,213,49)" fg:x="6012" fg:w="1"/><text x="71.4316%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="71.1816%" y="1093" width="0.0118%" height="15" fill="rgb(212,122,37)" fg:x="6012" fg:w="1"/><text x="71.4316%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="71.1816%" y="1077" width="0.0118%" height="15" fill="rgb(213,80,17)" fg:x="6012" fg:w="1"/><text x="71.4316%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="71.1816%" y="1061" width="0.0118%" height="15" fill="rgb(206,210,43)" fg:x="6012" fg:w="1"/><text x="71.4316%" y="1071.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="71.1816%" y="1045" width="0.0118%" height="15" fill="rgb(229,214,3)" fg:x="6012" fg:w="1"/><text x="71.4316%" y="1055.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="71.1816%" y="1029" width="0.0118%" height="15" fill="rgb(235,213,29)" fg:x="6012" fg:w="1"/><text x="71.4316%" y="1039.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="71.1816%" y="1013" width="0.0118%" height="15" fill="rgb(248,135,26)" fg:x="6012" fg:w="1"/><text x="71.4316%" y="1023.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="71.1816%" y="997" width="0.0118%" height="15" fill="rgb(242,188,12)" fg:x="6012" fg:w="1"/><text x="71.4316%" y="1007.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="71.1816%" y="981" width="0.0118%" height="15" fill="rgb(245,38,12)" fg:x="6012" fg:w="1"/><text x="71.4316%" y="991.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="71.1816%" y="965" width="0.0118%" height="15" fill="rgb(218,42,13)" fg:x="6012" fg:w="1"/><text x="71.4316%" y="975.50"></text></g><g><title>napi_watchdog (1 samples, 0.01%)</title><rect x="71.1816%" y="949" width="0.0118%" height="15" fill="rgb(238,132,49)" fg:x="6012" fg:w="1"/><text x="71.4316%" y="959.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.02%)</title><rect x="71.1935%" y="1125" width="0.0237%" height="15" fill="rgb(209,196,19)" fg:x="6013" fg:w="2"/><text x="71.4435%" y="1135.50"></text></g><g><title>common_interrupt (2 samples, 0.02%)</title><rect x="71.1935%" y="1109" width="0.0237%" height="15" fill="rgb(244,131,22)" fg:x="6013" fg:w="2"/><text x="71.4435%" y="1119.50"></text></g><g><title>__irq_exit_rcu (2 samples, 0.02%)</title><rect x="71.1935%" y="1093" width="0.0237%" height="15" fill="rgb(223,18,34)" fg:x="6013" fg:w="2"/><text x="71.4435%" y="1103.50"></text></g><g><title>handle_softirqs (2 samples, 0.02%)</title><rect x="71.1935%" y="1077" width="0.0237%" height="15" fill="rgb(252,124,54)" fg:x="6013" fg:w="2"/><text x="71.4435%" y="1087.50"></text></g><g><title>net_rx_action (2 samples, 0.02%)</title><rect x="71.1935%" y="1061" width="0.0237%" height="15" fill="rgb(229,106,42)" fg:x="6013" fg:w="2"/><text x="71.4435%" y="1071.50"></text></g><g><title>__napi_poll (1 samples, 0.01%)</title><rect x="71.2053%" y="1045" width="0.0118%" height="15" fill="rgb(221,129,1)" fg:x="6014" fg:w="1"/><text x="71.4553%" y="1055.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="71.2053%" y="1029" width="0.0118%" height="15" fill="rgb(229,74,15)" fg:x="6014" fg:w="1"/><text x="71.4553%" y="1039.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="71.2053%" y="1013" width="0.0118%" height="15" fill="rgb(210,206,50)" fg:x="6014" fg:w="1"/><text x="71.4553%" y="1023.50"></text></g><g><title>iommu_dma_unmap_page (1 samples, 0.01%)</title><rect x="71.2053%" y="997" width="0.0118%" height="15" fill="rgb(251,114,31)" fg:x="6014" fg:w="1"/><text x="71.4553%" y="1007.50"></text></g><g><title>__iommu_dma_unmap (1 samples, 0.01%)</title><rect x="71.2053%" y="981" width="0.0118%" height="15" fill="rgb(215,225,28)" fg:x="6014" fg:w="1"/><text x="71.4553%" y="991.50"></text></g><g><title>__iommu_unmap (1 samples, 0.01%)</title><rect x="71.2053%" y="965" width="0.0118%" height="15" fill="rgb(237,109,14)" fg:x="6014" fg:w="1"/><text x="71.4553%" y="975.50"></text></g><g><title>amd_iommu_unmap_pages (1 samples, 0.01%)</title><rect x="71.2053%" y="949" width="0.0118%" height="15" fill="rgb(230,13,37)" fg:x="6014" fg:w="1"/><text x="71.4553%" y="959.50"></text></g><g><title>iommu_v1_unmap_pages (1 samples, 0.01%)</title><rect x="71.2053%" y="933" width="0.0118%" height="15" fill="rgb(231,40,28)" fg:x="6014" fg:w="1"/><text x="71.4553%" y="943.50"></text></g><g><title>fetch_pte (1 samples, 0.01%)</title><rect x="71.2053%" y="917" width="0.0118%" height="15" fill="rgb(231,202,18)" fg:x="6014" fg:w="1"/><text x="71.4553%" y="927.50"></text></g><g><title>&lt;rotmguard::extra_datatypes::object_status_data::ObjectStatusData as rotmguard::write::RPWrite&gt;::rp_write (1 samples, 0.01%)</title><rect x="71.2171%" y="1013" width="0.0118%" height="15" fill="rgb(225,33,18)" fg:x="6015" fg:w="1"/><text x="71.4671%" y="1023.50"></text></g><g><title>&lt;rotmguard::packets::ServerPacket as rotmguard::write::RPWrite&gt;::rp_write (1 samples, 0.01%)</title><rect x="71.2290%" y="1013" width="0.0118%" height="15" fill="rgb(223,64,47)" fg:x="6016" fg:w="1"/><text x="71.4790%" y="1023.50"></text></g><g><title>&lt;rotmguard::packets::_67_notification::NotificationPacket as rotmguard::write::RPWrite&gt;::rp_write (1 samples, 0.01%)</title><rect x="71.2408%" y="1013" width="0.0118%" height="15" fill="rgb(234,114,13)" fg:x="6017" fg:w="1"/><text x="71.4908%" y="1023.50"></text></g><g><title>[libc.so.6] (16 samples, 0.19%)</title><rect x="71.2527%" y="1013" width="0.1894%" height="15" fill="rgb(248,56,40)" fg:x="6018" fg:w="16"/><text x="71.5027%" y="1023.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.02%)</title><rect x="71.5250%" y="997" width="0.0237%" height="15" fill="rgb(221,194,21)" fg:x="6041" fg:w="2"/><text x="71.7750%" y="1007.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;u8&gt; for usize&gt;::from (2 samples, 0.02%)</title><rect x="71.5250%" y="981" width="0.0237%" height="15" fill="rgb(242,108,46)" fg:x="6041" fg:w="2"/><text x="71.7750%" y="991.50"></text></g><g><title>core::num::&lt;impl u8&gt;::wrapping_add (6 samples, 0.07%)</title><rect x="71.5487%" y="997" width="0.0710%" height="15" fill="rgb(220,106,10)" fg:x="6043" fg:w="6"/><text x="71.7987%" y="1007.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (1 samples, 0.01%)</title><rect x="71.6197%" y="997" width="0.0118%" height="15" fill="rgb(211,88,4)" fg:x="6049" fg:w="1"/><text x="71.8697%" y="1007.50"></text></g><g><title>core::ptr::swap (1 samples, 0.01%)</title><rect x="71.6197%" y="981" width="0.0118%" height="15" fill="rgb(214,95,34)" fg:x="6049" fg:w="1"/><text x="71.8697%" y="991.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.01%)</title><rect x="71.6197%" y="965" width="0.0118%" height="15" fill="rgb(250,160,33)" fg:x="6049" fg:w="1"/><text x="71.8697%" y="975.50"></text></g><g><title>rc4::Rc4State::prga (20 samples, 0.24%)</title><rect x="71.4421%" y="1013" width="0.2368%" height="15" fill="rgb(225,29,10)" fg:x="6034" fg:w="20"/><text x="71.6921%" y="1023.50"></text></g><g><title>rc4::Rc4State::s_i (4 samples, 0.05%)</title><rect x="71.6315%" y="997" width="0.0474%" height="15" fill="rgb(224,28,30)" fg:x="6050" fg:w="4"/><text x="71.8815%" y="1007.50"></text></g><g><title>rotmguard::write::write_compressed_int (2 samples, 0.02%)</title><rect x="71.6789%" y="1013" width="0.0237%" height="15" fill="rgb(231,77,4)" fg:x="6054" fg:w="2"/><text x="71.9289%" y="1023.50"></text></g><g><title>rotmguard::proxy::ProxyWriteHalf::send_client::_{{closure}} (684 samples, 8.10%)</title><rect x="63.6159%" y="1141" width="8.0985%" height="15" fill="rgb(209,63,21)" fg:x="5373" fg:w="684"/><text x="63.8659%" y="1151.50">rotmguard::..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream (42 samples, 0.50%)</title><rect x="71.2171%" y="1125" width="0.4973%" height="15" fill="rgb(226,22,11)" fg:x="6015" fg:w="42"/><text x="71.4671%" y="1135.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (42 samples, 0.50%)</title><rect x="71.2171%" y="1109" width="0.4973%" height="15" fill="rgb(216,82,30)" fg:x="6015" fg:w="42"/><text x="71.4671%" y="1119.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (42 samples, 0.50%)</title><rect x="71.2171%" y="1093" width="0.4973%" height="15" fill="rgb(246,227,38)" fg:x="6015" fg:w="42"/><text x="71.4671%" y="1103.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (42 samples, 0.50%)</title><rect x="71.2171%" y="1077" width="0.4973%" height="15" fill="rgb(251,203,53)" fg:x="6015" fg:w="42"/><text x="71.4671%" y="1087.50"></text></g><g><title>&lt;rc4::Rc4Core&lt;KeySize&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (42 samples, 0.50%)</title><rect x="71.2171%" y="1061" width="0.4973%" height="15" fill="rgb(254,101,1)" fg:x="6015" fg:w="42"/><text x="71.4671%" y="1071.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (42 samples, 0.50%)</title><rect x="71.2171%" y="1045" width="0.4973%" height="15" fill="rgb(241,180,5)" fg:x="6015" fg:w="42"/><text x="71.4671%" y="1055.50"></text></g><g><title>&lt;rc4::Backend as cipher::stream_core::StreamBackend&gt;::gen_ks_block (42 samples, 0.50%)</title><rect x="71.2171%" y="1029" width="0.4973%" height="15" fill="rgb(218,168,4)" fg:x="6015" fg:w="42"/><text x="71.4671%" y="1039.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.01%)</title><rect x="71.7026%" y="1013" width="0.0118%" height="15" fill="rgb(224,223,32)" fg:x="6056" fg:w="1"/><text x="71.9526%" y="1023.50"></text></g><g><title>&lt;rotmguard::packets::ClientPacket as rotmguard::write::RPWrite&gt;::rp_write (1 samples, 0.01%)</title><rect x="71.7144%" y="1125" width="0.0118%" height="15" fill="rgb(236,106,22)" fg:x="6057" fg:w="1"/><text x="71.9644%" y="1135.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (1 samples, 0.01%)</title><rect x="71.7144%" y="1109" width="0.0118%" height="15" fill="rgb(206,121,5)" fg:x="6057" fg:w="1"/><text x="71.9644%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="71.7144%" y="1093" width="0.0118%" height="15" fill="rgb(233,87,28)" fg:x="6057" fg:w="1"/><text x="71.9644%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="71.7144%" y="1077" width="0.0118%" height="15" fill="rgb(236,137,17)" fg:x="6057" fg:w="1"/><text x="71.9644%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="71.7144%" y="1061" width="0.0118%" height="15" fill="rgb(209,183,38)" fg:x="6057" fg:w="1"/><text x="71.9644%" y="1071.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="71.7144%" y="1045" width="0.0118%" height="15" fill="rgb(206,162,44)" fg:x="6057" fg:w="1"/><text x="71.9644%" y="1055.50"></text></g><g><title>&lt;rotmguard::packets::ClientPacket as rotmguard::write::RPWrite&gt;::rp_write (1 samples, 0.01%)</title><rect x="71.7144%" y="1029" width="0.0118%" height="15" fill="rgb(237,70,39)" fg:x="6057" fg:w="1"/><text x="71.9644%" y="1039.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="71.8091%" y="1045" width="0.0118%" height="15" fill="rgb(212,176,5)" fg:x="6065" fg:w="1"/><text x="72.0591%" y="1055.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="71.8447%" y="1029" width="0.0118%" height="15" fill="rgb(232,95,16)" fg:x="6068" fg:w="1"/><text x="72.0947%" y="1039.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="71.9631%" y="965" width="0.0118%" height="15" fill="rgb(219,115,35)" fg:x="6078" fg:w="1"/><text x="72.2131%" y="975.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="71.9631%" y="949" width="0.0118%" height="15" fill="rgb(251,67,27)" fg:x="6078" fg:w="1"/><text x="72.2131%" y="959.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="71.9631%" y="933" width="0.0118%" height="15" fill="rgb(222,95,40)" fg:x="6078" fg:w="1"/><text x="72.2131%" y="943.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="71.9631%" y="917" width="0.0118%" height="15" fill="rgb(250,35,16)" fg:x="6078" fg:w="1"/><text x="72.2131%" y="927.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="71.9631%" y="901" width="0.0118%" height="15" fill="rgb(224,86,44)" fg:x="6078" fg:w="1"/><text x="72.2131%" y="911.50"></text></g><g><title>tick_nohz_handler (1 samples, 0.01%)</title><rect x="71.9631%" y="885" width="0.0118%" height="15" fill="rgb(237,53,53)" fg:x="6078" fg:w="1"/><text x="72.2131%" y="895.50"></text></g><g><title>update_process_times (1 samples, 0.01%)</title><rect x="71.9631%" y="869" width="0.0118%" height="15" fill="rgb(208,171,33)" fg:x="6078" fg:w="1"/><text x="72.2131%" y="879.50"></text></g><g><title>scheduler_tick (1 samples, 0.01%)</title><rect x="71.9631%" y="853" width="0.0118%" height="15" fill="rgb(222,64,27)" fg:x="6078" fg:w="1"/><text x="72.2131%" y="863.50"></text></g><g><title>task_tick_fair (1 samples, 0.01%)</title><rect x="71.9631%" y="837" width="0.0118%" height="15" fill="rgb(221,121,35)" fg:x="6078" fg:w="1"/><text x="72.2131%" y="847.50"></text></g><g><title>update_cfs_group (1 samples, 0.01%)</title><rect x="71.9631%" y="821" width="0.0118%" height="15" fill="rgb(228,137,42)" fg:x="6078" fg:w="1"/><text x="72.2131%" y="831.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.01%)</title><rect x="72.0104%" y="949" width="0.0118%" height="15" fill="rgb(227,54,21)" fg:x="6082" fg:w="1"/><text x="72.2604%" y="959.50"></text></g><g><title>_raw_spin_unlock_bh (1 samples, 0.01%)</title><rect x="72.0223%" y="949" width="0.0118%" height="15" fill="rgb(240,168,33)" fg:x="6083" fg:w="1"/><text x="72.2723%" y="959.50"></text></g><g><title>lock_sock_nested (1 samples, 0.01%)</title><rect x="72.0341%" y="949" width="0.0118%" height="15" fill="rgb(243,159,6)" fg:x="6084" fg:w="1"/><text x="72.2841%" y="959.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.01%)</title><rect x="72.0341%" y="933" width="0.0118%" height="15" fill="rgb(205,211,41)" fg:x="6084" fg:w="1"/><text x="72.2841%" y="943.50"></text></g><g><title>release_sock (8 samples, 0.09%)</title><rect x="72.0459%" y="949" width="0.0947%" height="15" fill="rgb(253,30,1)" fg:x="6085" fg:w="8"/><text x="72.2959%" y="959.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.01%)</title><rect x="72.1288%" y="933" width="0.0118%" height="15" fill="rgb(226,80,18)" fg:x="6092" fg:w="1"/><text x="72.3788%" y="943.50"></text></g><g><title>__virt_addr_valid (3 samples, 0.04%)</title><rect x="72.3064%" y="917" width="0.0355%" height="15" fill="rgb(253,156,46)" fg:x="6107" fg:w="3"/><text x="72.5564%" y="927.50"></text></g><g><title>__check_object_size (4 samples, 0.05%)</title><rect x="72.3064%" y="933" width="0.0474%" height="15" fill="rgb(248,87,27)" fg:x="6107" fg:w="4"/><text x="72.5564%" y="943.50"></text></g><g><title>is_vmalloc_addr (1 samples, 0.01%)</title><rect x="72.3419%" y="917" width="0.0118%" height="15" fill="rgb(227,122,2)" fg:x="6110" fg:w="1"/><text x="72.5919%" y="927.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.01%)</title><rect x="72.5432%" y="901" width="0.0118%" height="15" fill="rgb(229,94,39)" fg:x="6127" fg:w="1"/><text x="72.7932%" y="911.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.01%)</title><rect x="72.5432%" y="885" width="0.0118%" height="15" fill="rgb(225,173,31)" fg:x="6127" fg:w="1"/><text x="72.7932%" y="895.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.01%)</title><rect x="72.5432%" y="869" width="0.0118%" height="15" fill="rgb(239,176,30)" fg:x="6127" fg:w="1"/><text x="72.7932%" y="879.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.01%)</title><rect x="72.5432%" y="853" width="0.0118%" height="15" fill="rgb(212,104,21)" fg:x="6127" fg:w="1"/><text x="72.7932%" y="863.50"></text></g><g><title>sch_direct_xmit (1 samples, 0.01%)</title><rect x="72.5432%" y="837" width="0.0118%" height="15" fill="rgb(240,209,40)" fg:x="6127" fg:w="1"/><text x="72.7932%" y="847.50"></text></g><g><title>validate_xmit_skb_list (1 samples, 0.01%)</title><rect x="72.5432%" y="821" width="0.0118%" height="15" fill="rgb(234,195,5)" fg:x="6127" fg:w="1"/><text x="72.7932%" y="831.50"></text></g><g><title>validate_xmit_skb (1 samples, 0.01%)</title><rect x="72.5432%" y="805" width="0.0118%" height="15" fill="rgb(238,213,1)" fg:x="6127" fg:w="1"/><text x="72.7932%" y="815.50"></text></g><g><title>__pskb_pull_tail (1 samples, 0.01%)</title><rect x="72.5432%" y="789" width="0.0118%" height="15" fill="rgb(235,182,54)" fg:x="6127" fg:w="1"/><text x="72.7932%" y="799.50"></text></g><g><title>pskb_expand_head (1 samples, 0.01%)</title><rect x="72.5432%" y="773" width="0.0118%" height="15" fill="rgb(229,50,46)" fg:x="6127" fg:w="1"/><text x="72.7932%" y="783.50"></text></g><g><title>kmalloc_reserve (1 samples, 0.01%)</title><rect x="72.5432%" y="757" width="0.0118%" height="15" fill="rgb(219,145,13)" fg:x="6127" fg:w="1"/><text x="72.7932%" y="767.50"></text></g><g><title>__kmalloc_node_track_caller (1 samples, 0.01%)</title><rect x="72.5432%" y="741" width="0.0118%" height="15" fill="rgb(220,226,10)" fg:x="6127" fg:w="1"/><text x="72.7932%" y="751.50"></text></g><g><title>memset (1 samples, 0.01%)</title><rect x="72.5432%" y="725" width="0.0118%" height="15" fill="rgb(248,47,30)" fg:x="6127" fg:w="1"/><text x="72.7932%" y="735.50"></text></g><g><title>tcp_chrono_stop (1 samples, 0.01%)</title><rect x="72.5551%" y="901" width="0.0118%" height="15" fill="rgb(231,209,44)" fg:x="6128" fg:w="1"/><text x="72.8051%" y="911.50"></text></g><g><title>__tcp_push_pending_frames (19 samples, 0.22%)</title><rect x="72.3538%" y="933" width="0.2250%" height="15" fill="rgb(209,80,30)" fg:x="6111" fg:w="19"/><text x="72.6038%" y="943.50"></text></g><g><title>tcp_write_xmit (15 samples, 0.18%)</title><rect x="72.4011%" y="917" width="0.1776%" height="15" fill="rgb(232,9,14)" fg:x="6115" fg:w="15"/><text x="72.6511%" y="927.50"></text></g><g><title>tcp_tso_segs (1 samples, 0.01%)</title><rect x="72.5669%" y="901" width="0.0118%" height="15" fill="rgb(243,91,43)" fg:x="6129" fg:w="1"/><text x="72.8169%" y="911.50"></text></g><g><title>_copy_from_iter (7 samples, 0.08%)</title><rect x="72.5787%" y="933" width="0.0829%" height="15" fill="rgb(231,90,52)" fg:x="6130" fg:w="7"/><text x="72.8287%" y="943.50"></text></g><g><title>sk_page_frag_refill (2 samples, 0.02%)</title><rect x="72.6616%" y="933" width="0.0237%" height="15" fill="rgb(253,192,44)" fg:x="6137" fg:w="2"/><text x="72.9116%" y="943.50"></text></g><g><title>skb_page_frag_refill (2 samples, 0.02%)</title><rect x="72.6616%" y="917" width="0.0237%" height="15" fill="rgb(241,66,31)" fg:x="6137" fg:w="2"/><text x="72.9116%" y="927.50"></text></g><g><title>ipv4_mtu (2 samples, 0.02%)</title><rect x="72.7682%" y="901" width="0.0237%" height="15" fill="rgb(235,81,37)" fg:x="6146" fg:w="2"/><text x="73.0182%" y="911.50"></text></g><g><title>tcp_send_mss (10 samples, 0.12%)</title><rect x="72.6853%" y="933" width="0.1184%" height="15" fill="rgb(223,221,9)" fg:x="6139" fg:w="10"/><text x="72.9353%" y="943.50"></text></g><g><title>tcp_current_mss (8 samples, 0.09%)</title><rect x="72.7090%" y="917" width="0.0947%" height="15" fill="rgb(242,180,7)" fg:x="6141" fg:w="8"/><text x="72.9590%" y="927.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="72.7919%" y="901" width="0.0118%" height="15" fill="rgb(243,78,19)" fg:x="6148" fg:w="1"/><text x="73.0419%" y="911.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="72.7919%" y="885" width="0.0118%" height="15" fill="rgb(233,23,17)" fg:x="6148" fg:w="1"/><text x="73.0419%" y="895.50"></text></g><g><title>__x64_sys_sendto (79 samples, 0.94%)</title><rect x="71.9039%" y="997" width="0.9354%" height="15" fill="rgb(252,122,45)" fg:x="6073" fg:w="79"/><text x="72.1539%" y="1007.50"></text></g><g><title>__sys_sendto (79 samples, 0.94%)</title><rect x="71.9039%" y="981" width="0.9354%" height="15" fill="rgb(247,108,20)" fg:x="6073" fg:w="79"/><text x="72.1539%" y="991.50"></text></g><g><title>tcp_sendmsg (73 samples, 0.86%)</title><rect x="71.9749%" y="965" width="0.8643%" height="15" fill="rgb(235,84,21)" fg:x="6079" fg:w="73"/><text x="72.2249%" y="975.50"></text></g><g><title>tcp_sendmsg_locked (59 samples, 0.70%)</title><rect x="72.1407%" y="949" width="0.6986%" height="15" fill="rgb(247,129,10)" fg:x="6093" fg:w="59"/><text x="72.3907%" y="959.50"></text></g><g><title>tcp_stream_alloc_skb (3 samples, 0.04%)</title><rect x="72.8037%" y="933" width="0.0355%" height="15" fill="rgb(208,173,14)" fg:x="6149" fg:w="3"/><text x="73.0537%" y="943.50"></text></g><g><title>__alloc_skb (3 samples, 0.04%)</title><rect x="72.8037%" y="917" width="0.0355%" height="15" fill="rgb(236,31,38)" fg:x="6149" fg:w="3"/><text x="73.0537%" y="927.50"></text></g><g><title>kmalloc_reserve (3 samples, 0.04%)</title><rect x="72.8037%" y="901" width="0.0355%" height="15" fill="rgb(232,65,17)" fg:x="6149" fg:w="3"/><text x="73.0537%" y="911.50"></text></g><g><title>kmem_cache_alloc_node (3 samples, 0.04%)</title><rect x="72.8037%" y="885" width="0.0355%" height="15" fill="rgb(224,45,49)" fg:x="6149" fg:w="3"/><text x="73.0537%" y="895.50"></text></g><g><title>memset (1 samples, 0.01%)</title><rect x="72.8274%" y="869" width="0.0118%" height="15" fill="rgb(225,2,53)" fg:x="6151" fg:w="1"/><text x="73.0774%" y="879.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="72.8392%" y="997" width="0.0118%" height="15" fill="rgb(248,210,53)" fg:x="6152" fg:w="1"/><text x="73.0892%" y="1007.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="72.8392%" y="981" width="0.0118%" height="15" fill="rgb(211,1,30)" fg:x="6152" fg:w="1"/><text x="73.0892%" y="991.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="72.8392%" y="965" width="0.0118%" height="15" fill="rgb(224,96,15)" fg:x="6152" fg:w="1"/><text x="73.0892%" y="975.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="72.8392%" y="949" width="0.0118%" height="15" fill="rgb(252,45,11)" fg:x="6152" fg:w="1"/><text x="73.0892%" y="959.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="72.8392%" y="933" width="0.0118%" height="15" fill="rgb(220,125,38)" fg:x="6152" fg:w="1"/><text x="73.0892%" y="943.50"></text></g><g><title>tick_nohz_handler (1 samples, 0.01%)</title><rect x="72.8392%" y="917" width="0.0118%" height="15" fill="rgb(243,161,33)" fg:x="6152" fg:w="1"/><text x="73.0892%" y="927.50"></text></g><g><title>update_process_times (1 samples, 0.01%)</title><rect x="72.8392%" y="901" width="0.0118%" height="15" fill="rgb(248,197,34)" fg:x="6152" fg:w="1"/><text x="73.0892%" y="911.50"></text></g><g><title>scheduler_tick (1 samples, 0.01%)</title><rect x="72.8392%" y="885" width="0.0118%" height="15" fill="rgb(228,165,23)" fg:x="6152" fg:w="1"/><text x="73.0892%" y="895.50"></text></g><g><title>perf_event_task_tick (1 samples, 0.01%)</title><rect x="72.8392%" y="869" width="0.0118%" height="15" fill="rgb(236,94,38)" fg:x="6152" fg:w="1"/><text x="73.0892%" y="879.50"></text></g><g><title>perf_adjust_freq_unthr_context (1 samples, 0.01%)</title><rect x="72.8392%" y="853" width="0.0118%" height="15" fill="rgb(220,13,23)" fg:x="6152" fg:w="1"/><text x="73.0892%" y="863.50"></text></g><g><title>entry_SYSCALL_64 (95 samples, 1.12%)</title><rect x="71.8565%" y="1029" width="1.1248%" height="15" fill="rgb(234,26,39)" fg:x="6069" fg:w="95"/><text x="72.1065%" y="1039.50"></text></g><g><title>do_syscall_64 (94 samples, 1.11%)</title><rect x="71.8683%" y="1013" width="1.1130%" height="15" fill="rgb(205,117,44)" fg:x="6070" fg:w="94"/><text x="72.1183%" y="1023.50"></text></g><g><title>syscall_exit_to_user_mode (11 samples, 0.13%)</title><rect x="72.8511%" y="997" width="0.1302%" height="15" fill="rgb(250,42,2)" fg:x="6153" fg:w="11"/><text x="73.1011%" y="1007.50"></text></g><g><title>syscall_exit_to_user_mode_prepare (1 samples, 0.01%)</title><rect x="72.9695%" y="981" width="0.0118%" height="15" fill="rgb(223,83,14)" fg:x="6163" fg:w="1"/><text x="73.2195%" y="991.50"></text></g><g><title>__send (101 samples, 1.20%)</title><rect x="71.8210%" y="1045" width="1.1958%" height="15" fill="rgb(241,147,50)" fg:x="6066" fg:w="101"/><text x="72.0710%" y="1055.50"></text></g><g><title>syscall_return_via_sysret (3 samples, 0.04%)</title><rect x="72.9813%" y="1029" width="0.0355%" height="15" fill="rgb(218,90,6)" fg:x="6164" fg:w="3"/><text x="73.2313%" y="1039.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (104 samples, 1.23%)</title><rect x="71.7973%" y="1061" width="1.2314%" height="15" fill="rgb(210,191,5)" fg:x="6064" fg:w="104"/><text x="72.0473%" y="1071.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.01%)</title><rect x="73.0168%" y="1045" width="0.0118%" height="15" fill="rgb(225,139,19)" fg:x="6167" fg:w="1"/><text x="73.2668%" y="1055.50"></text></g><g><title>std::sys::pal::unix::cvt (1 samples, 0.01%)</title><rect x="73.0168%" y="1029" width="0.0118%" height="15" fill="rgb(210,1,33)" fg:x="6167" fg:w="1"/><text x="73.2668%" y="1039.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (108 samples, 1.28%)</title><rect x="71.7618%" y="1077" width="1.2787%" height="15" fill="rgb(213,50,3)" fg:x="6061" fg:w="108"/><text x="72.0118%" y="1087.50"></text></g><g><title>rc4::Rc4State::prga (1 samples, 0.01%)</title><rect x="73.0287%" y="1061" width="0.0118%" height="15" fill="rgb(234,227,4)" fg:x="6168" fg:w="1"/><text x="73.2787%" y="1071.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (1 samples, 0.01%)</title><rect x="73.0405%" y="1077" width="0.0118%" height="15" fill="rgb(246,63,5)" fg:x="6169" fg:w="1"/><text x="73.2905%" y="1087.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (1 samples, 0.01%)</title><rect x="73.0405%" y="1061" width="0.0118%" height="15" fill="rgb(245,136,27)" fg:x="6169" fg:w="1"/><text x="73.2905%" y="1071.50"></text></g><g><title>tokio::runtime::context::budget (1 samples, 0.01%)</title><rect x="73.0405%" y="1045" width="0.0118%" height="15" fill="rgb(247,199,27)" fg:x="6169" fg:w="1"/><text x="73.2905%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="73.0405%" y="1029" width="0.0118%" height="15" fill="rgb(252,158,49)" fg:x="6169" fg:w="1"/><text x="73.2905%" y="1039.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (1 samples, 0.01%)</title><rect x="73.0405%" y="1013" width="0.0118%" height="15" fill="rgb(254,73,1)" fg:x="6169" fg:w="1"/><text x="73.2905%" y="1023.50"></text></g><g><title>std::sys::thread_local::fast_local::eager::Storage&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="73.0405%" y="997" width="0.0118%" height="15" fill="rgb(248,93,19)" fg:x="6169" fg:w="1"/><text x="73.2905%" y="1007.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="73.0405%" y="981" width="0.0118%" height="15" fill="rgb(206,67,5)" fg:x="6169" fg:w="1"/><text x="73.2905%" y="991.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="73.0405%" y="965" width="0.0118%" height="15" fill="rgb(209,210,4)" fg:x="6169" fg:w="1"/><text x="73.2905%" y="975.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (112 samples, 1.33%)</title><rect x="71.7381%" y="1109" width="1.3261%" height="15" fill="rgb(214,185,36)" fg:x="6059" fg:w="112"/><text x="71.9881%" y="1119.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (112 samples, 1.33%)</title><rect x="71.7381%" y="1093" width="1.3261%" height="15" fill="rgb(233,191,26)" fg:x="6059" fg:w="112"/><text x="71.9881%" y="1103.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (1 samples, 0.01%)</title><rect x="73.0523%" y="1077" width="0.0118%" height="15" fill="rgb(248,94,17)" fg:x="6170" fg:w="1"/><text x="73.3023%" y="1087.50"></text></g><g><title>&lt;rotmguard::packets::ClientPacket as rotmguard::write::RPWrite&gt;::rp_write (1 samples, 0.01%)</title><rect x="73.0523%" y="1061" width="0.0118%" height="15" fill="rgb(250,64,4)" fg:x="6170" fg:w="1"/><text x="73.3023%" y="1071.50"></text></g><g><title>core::mem::take (1 samples, 0.01%)</title><rect x="73.0642%" y="1109" width="0.0118%" height="15" fill="rgb(218,41,53)" fg:x="6171" fg:w="1"/><text x="73.3142%" y="1119.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="73.0642%" y="1093" width="0.0118%" height="15" fill="rgb(251,176,28)" fg:x="6171" fg:w="1"/><text x="73.3142%" y="1103.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="73.0642%" y="1077" width="0.0118%" height="15" fill="rgb(247,22,9)" fg:x="6171" fg:w="1"/><text x="73.3142%" y="1087.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (115 samples, 1.36%)</title><rect x="71.7263%" y="1125" width="1.3616%" height="15" fill="rgb(218,201,14)" fg:x="6058" fg:w="115"/><text x="71.9763%" y="1135.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (1 samples, 0.01%)</title><rect x="73.0760%" y="1109" width="0.0118%" height="15" fill="rgb(218,94,10)" fg:x="6172" fg:w="1"/><text x="73.3260%" y="1119.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_checked (1 samples, 0.01%)</title><rect x="73.0760%" y="1093" width="0.0118%" height="15" fill="rgb(222,183,52)" fg:x="6172" fg:w="1"/><text x="73.3260%" y="1103.50"></text></g><g><title>&lt;rotmguard::packets::ClientPacket as rotmguard::write::RPWrite&gt;::rp_write (1 samples, 0.01%)</title><rect x="73.0879%" y="1013" width="0.0118%" height="15" fill="rgb(242,140,25)" fg:x="6173" fg:w="1"/><text x="73.3379%" y="1023.50"></text></g><g><title>rotmguard::proxy::ProxyWriteHalf::send_server::_{{closure}} (123 samples, 1.46%)</title><rect x="71.7144%" y="1141" width="1.4563%" height="15" fill="rgb(235,197,38)" fg:x="6057" fg:w="123"/><text x="71.9644%" y="1151.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (7 samples, 0.08%)</title><rect x="73.0879%" y="1125" width="0.0829%" height="15" fill="rgb(237,136,15)" fg:x="6173" fg:w="7"/><text x="73.3379%" y="1135.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (7 samples, 0.08%)</title><rect x="73.0879%" y="1109" width="0.0829%" height="15" fill="rgb(223,44,49)" fg:x="6173" fg:w="7"/><text x="73.3379%" y="1119.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (7 samples, 0.08%)</title><rect x="73.0879%" y="1093" width="0.0829%" height="15" fill="rgb(227,71,15)" fg:x="6173" fg:w="7"/><text x="73.3379%" y="1103.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (7 samples, 0.08%)</title><rect x="73.0879%" y="1077" width="0.0829%" height="15" fill="rgb(225,153,20)" fg:x="6173" fg:w="7"/><text x="73.3379%" y="1087.50"></text></g><g><title>&lt;rc4::Rc4Core&lt;KeySize&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (7 samples, 0.08%)</title><rect x="73.0879%" y="1061" width="0.0829%" height="15" fill="rgb(210,190,26)" fg:x="6173" fg:w="7"/><text x="73.3379%" y="1071.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (7 samples, 0.08%)</title><rect x="73.0879%" y="1045" width="0.0829%" height="15" fill="rgb(223,147,5)" fg:x="6173" fg:w="7"/><text x="73.3379%" y="1055.50"></text></g><g><title>&lt;rc4::Backend as cipher::stream_core::StreamBackend&gt;::gen_ks_block (7 samples, 0.08%)</title><rect x="73.0879%" y="1029" width="0.0829%" height="15" fill="rgb(207,14,23)" fg:x="6173" fg:w="7"/><text x="73.3379%" y="1039.50"></text></g><g><title>[libc.so.6] (6 samples, 0.07%)</title><rect x="73.0997%" y="1013" width="0.0710%" height="15" fill="rgb(211,195,53)" fg:x="6174" fg:w="6"/><text x="73.3497%" y="1023.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="73.2181%" y="1029" width="0.0118%" height="15" fill="rgb(237,75,46)" fg:x="6184" fg:w="1"/><text x="73.4681%" y="1039.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="73.2181%" y="1013" width="0.0118%" height="15" fill="rgb(254,55,14)" fg:x="6184" fg:w="1"/><text x="73.4681%" y="1023.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.01%)</title><rect x="73.2181%" y="997" width="0.0118%" height="15" fill="rgb(230,185,30)" fg:x="6184" fg:w="1"/><text x="73.4681%" y="1007.50"></text></g><g><title>handle_softirqs (1 samples, 0.01%)</title><rect x="73.2181%" y="981" width="0.0118%" height="15" fill="rgb(220,14,11)" fg:x="6184" fg:w="1"/><text x="73.4681%" y="991.50"></text></g><g><title>net_rx_action (1 samples, 0.01%)</title><rect x="73.2181%" y="965" width="0.0118%" height="15" fill="rgb(215,169,44)" fg:x="6184" fg:w="1"/><text x="73.4681%" y="975.50"></text></g><g><title>__napi_poll (1 samples, 0.01%)</title><rect x="73.2181%" y="949" width="0.0118%" height="15" fill="rgb(253,203,20)" fg:x="6184" fg:w="1"/><text x="73.4681%" y="959.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="73.2181%" y="933" width="0.0118%" height="15" fill="rgb(229,225,17)" fg:x="6184" fg:w="1"/><text x="73.4681%" y="943.50"></text></g><g><title>napi_complete_done (1 samples, 0.01%)</title><rect x="73.2181%" y="917" width="0.0118%" height="15" fill="rgb(236,76,26)" fg:x="6184" fg:w="1"/><text x="73.4681%" y="927.50"></text></g><g><title>netif_receive_skb_list_internal (1 samples, 0.01%)</title><rect x="73.2181%" y="901" width="0.0118%" height="15" fill="rgb(234,15,30)" fg:x="6184" fg:w="1"/><text x="73.4681%" y="911.50"></text></g><g><title>__netif_receive_skb_list_core (1 samples, 0.01%)</title><rect x="73.2181%" y="885" width="0.0118%" height="15" fill="rgb(211,113,48)" fg:x="6184" fg:w="1"/><text x="73.4681%" y="895.50"></text></g><g><title>ip_list_rcv (1 samples, 0.01%)</title><rect x="73.2181%" y="869" width="0.0118%" height="15" fill="rgb(221,31,36)" fg:x="6184" fg:w="1"/><text x="73.4681%" y="879.50"></text></g><g><title>ip_sublist_rcv (1 samples, 0.01%)</title><rect x="73.2181%" y="853" width="0.0118%" height="15" fill="rgb(215,118,52)" fg:x="6184" fg:w="1"/><text x="73.4681%" y="863.50"></text></g><g><title>ip_local_deliver (1 samples, 0.01%)</title><rect x="73.2181%" y="837" width="0.0118%" height="15" fill="rgb(241,151,27)" fg:x="6184" fg:w="1"/><text x="73.4681%" y="847.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.01%)</title><rect x="73.2181%" y="821" width="0.0118%" height="15" fill="rgb(253,51,3)" fg:x="6184" fg:w="1"/><text x="73.4681%" y="831.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.01%)</title><rect x="73.2181%" y="805" width="0.0118%" height="15" fill="rgb(216,201,24)" fg:x="6184" fg:w="1"/><text x="73.4681%" y="815.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.01%)</title><rect x="73.2181%" y="789" width="0.0118%" height="15" fill="rgb(231,107,4)" fg:x="6184" fg:w="1"/><text x="73.4681%" y="799.50"></text></g><g><title>tcp_v4_do_rcv (1 samples, 0.01%)</title><rect x="73.2181%" y="773" width="0.0118%" height="15" fill="rgb(243,97,54)" fg:x="6184" fg:w="1"/><text x="73.4681%" y="783.50"></text></g><g><title>tcp_rcv_established (1 samples, 0.01%)</title><rect x="73.2181%" y="757" width="0.0118%" height="15" fill="rgb(221,32,51)" fg:x="6184" fg:w="1"/><text x="73.4681%" y="767.50"></text></g><g><title>__tcp_transmit_skb (1 samples, 0.01%)</title><rect x="73.2181%" y="741" width="0.0118%" height="15" fill="rgb(218,171,35)" fg:x="6184" fg:w="1"/><text x="73.4681%" y="751.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.01%)</title><rect x="73.2181%" y="725" width="0.0118%" height="15" fill="rgb(214,20,53)" fg:x="6184" fg:w="1"/><text x="73.4681%" y="735.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.01%)</title><rect x="73.2181%" y="709" width="0.0118%" height="15" fill="rgb(239,9,52)" fg:x="6184" fg:w="1"/><text x="73.4681%" y="719.50"></text></g><g><title>__dev_queue_xmit (1 samples, 0.01%)</title><rect x="73.2181%" y="693" width="0.0118%" height="15" fill="rgb(215,114,45)" fg:x="6184" fg:w="1"/><text x="73.4681%" y="703.50"></text></g><g><title>sch_direct_xmit (1 samples, 0.01%)</title><rect x="73.2181%" y="677" width="0.0118%" height="15" fill="rgb(208,118,9)" fg:x="6184" fg:w="1"/><text x="73.4681%" y="687.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.01%)</title><rect x="73.2181%" y="661" width="0.0118%" height="15" fill="rgb(235,7,39)" fg:x="6184" fg:w="1"/><text x="73.4681%" y="671.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="73.2181%" y="645" width="0.0118%" height="15" fill="rgb(243,225,15)" fg:x="6184" fg:w="1"/><text x="73.4681%" y="655.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="73.2181%" y="629" width="0.0118%" height="15" fill="rgb(225,216,18)" fg:x="6184" fg:w="1"/><text x="73.4681%" y="639.50"></text></g><g><title>iommu_dma_map_page (1 samples, 0.01%)</title><rect x="73.2181%" y="613" width="0.0118%" height="15" fill="rgb(233,36,38)" fg:x="6184" fg:w="1"/><text x="73.4681%" y="623.50"></text></g><g><title>__iommu_dma_map (1 samples, 0.01%)</title><rect x="73.2181%" y="597" width="0.0118%" height="15" fill="rgb(239,88,23)" fg:x="6184" fg:w="1"/><text x="73.4681%" y="607.50"></text></g><g><title>iommu_dma_alloc_iova (1 samples, 0.01%)</title><rect x="73.2181%" y="581" width="0.0118%" height="15" fill="rgb(219,181,35)" fg:x="6184" fg:w="1"/><text x="73.4681%" y="591.50"></text></g><g><title>alloc_iova_fast (1 samples, 0.01%)</title><rect x="73.2181%" y="565" width="0.0118%" height="15" fill="rgb(215,18,46)" fg:x="6184" fg:w="1"/><text x="73.4681%" y="575.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="73.2181%" y="549" width="0.0118%" height="15" fill="rgb(241,38,11)" fg:x="6184" fg:w="1"/><text x="73.4681%" y="559.50"></text></g><g><title>entry_SYSCALL_64 (7 samples, 0.08%)</title><rect x="73.1826%" y="1109" width="0.0829%" height="15" fill="rgb(248,169,45)" fg:x="6181" fg:w="7"/><text x="73.4326%" y="1119.50"></text></g><g><title>do_syscall_64 (6 samples, 0.07%)</title><rect x="73.1944%" y="1093" width="0.0710%" height="15" fill="rgb(239,50,49)" fg:x="6182" fg:w="6"/><text x="73.4444%" y="1103.50"></text></g><g><title>__x64_sys_ioctl (6 samples, 0.07%)</title><rect x="73.1944%" y="1077" width="0.0710%" height="15" fill="rgb(231,96,31)" fg:x="6182" fg:w="6"/><text x="73.4444%" y="1087.50"></text></g><g><title>do_vfs_ioctl (6 samples, 0.07%)</title><rect x="73.1944%" y="1061" width="0.0710%" height="15" fill="rgb(224,193,37)" fg:x="6182" fg:w="6"/><text x="73.4444%" y="1071.50"></text></g><g><title>sock_do_ioctl (5 samples, 0.06%)</title><rect x="73.2063%" y="1045" width="0.0592%" height="15" fill="rgb(227,153,50)" fg:x="6183" fg:w="5"/><text x="73.4563%" y="1055.50"></text></g><g><title>inet_ioctl (3 samples, 0.04%)</title><rect x="73.2299%" y="1029" width="0.0355%" height="15" fill="rgb(249,228,3)" fg:x="6185" fg:w="3"/><text x="73.4799%" y="1039.50"></text></g><g><title>sk_ioctl (2 samples, 0.02%)</title><rect x="73.2418%" y="1013" width="0.0237%" height="15" fill="rgb(219,164,43)" fg:x="6186" fg:w="2"/><text x="73.4918%" y="1023.50"></text></g><g><title>tcp_ioctl (2 samples, 0.02%)</title><rect x="73.2418%" y="997" width="0.0237%" height="15" fill="rgb(216,45,41)" fg:x="6186" fg:w="2"/><text x="73.4918%" y="1007.50"></text></g><g><title>rotmguard::proxy::check_available_bytes (9 samples, 0.11%)</title><rect x="73.1707%" y="1141" width="0.1066%" height="15" fill="rgb(210,226,51)" fg:x="6180" fg:w="9"/><text x="73.4207%" y="1151.50"></text></g><g><title>ioctl (8 samples, 0.09%)</title><rect x="73.1826%" y="1125" width="0.0947%" height="15" fill="rgb(209,117,49)" fg:x="6181" fg:w="8"/><text x="73.4326%" y="1135.50"></text></g><g><title>syscall_return_via_sysret (1 samples, 0.01%)</title><rect x="73.2655%" y="1109" width="0.0118%" height="15" fill="rgb(206,196,24)" fg:x="6188" fg:w="1"/><text x="73.5155%" y="1119.50"></text></g><g><title>std::fs::OpenOptions::open (1 samples, 0.01%)</title><rect x="73.2773%" y="1141" width="0.0118%" height="15" fill="rgb(253,218,3)" fg:x="6189" fg:w="1"/><text x="73.5273%" y="1151.50"></text></g><g><title>std::fs::OpenOptions::_open (1 samples, 0.01%)</title><rect x="73.2773%" y="1125" width="0.0118%" height="15" fill="rgb(252,166,2)" fg:x="6189" fg:w="1"/><text x="73.5273%" y="1135.50"></text></g><g><title>std::sys::pal::unix::fs::File::open (1 samples, 0.01%)</title><rect x="73.2773%" y="1109" width="0.0118%" height="15" fill="rgb(236,218,26)" fg:x="6189" fg:w="1"/><text x="73.5273%" y="1119.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_path_with_cstr (1 samples, 0.01%)</title><rect x="73.2773%" y="1093" width="0.0118%" height="15" fill="rgb(254,84,19)" fg:x="6189" fg:w="1"/><text x="73.5273%" y="1103.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_with_cstr (1 samples, 0.01%)</title><rect x="73.2773%" y="1077" width="0.0118%" height="15" fill="rgb(219,137,29)" fg:x="6189" fg:w="1"/><text x="73.5273%" y="1087.50"></text></g><g><title>std::sys::pal::common::small_c_string::run_with_cstr_stack (1 samples, 0.01%)</title><rect x="73.2773%" y="1061" width="0.0118%" height="15" fill="rgb(227,47,52)" fg:x="6189" fg:w="1"/><text x="73.5273%" y="1071.50"></text></g><g><title>std::sys::pal::unix::fs::File::open::_{{closure}} (1 samples, 0.01%)</title><rect x="73.2773%" y="1045" width="0.0118%" height="15" fill="rgb(229,167,24)" fg:x="6189" fg:w="1"/><text x="73.5273%" y="1055.50"></text></g><g><title>std::sys::pal::unix::fs::File::open_c (1 samples, 0.01%)</title><rect x="73.2773%" y="1029" width="0.0118%" height="15" fill="rgb(233,164,1)" fg:x="6189" fg:w="1"/><text x="73.5273%" y="1039.50"></text></g><g><title>std::sys::pal::unix::cvt_r (1 samples, 0.01%)</title><rect x="73.2773%" y="1013" width="0.0118%" height="15" fill="rgb(218,88,48)" fg:x="6189" fg:w="1"/><text x="73.5273%" y="1023.50"></text></g><g><title>std::sys::pal::unix::fs::File::open_c::_{{closure}} (1 samples, 0.01%)</title><rect x="73.2773%" y="997" width="0.0118%" height="15" fill="rgb(226,214,24)" fg:x="6189" fg:w="1"/><text x="73.5273%" y="1007.50"></text></g><g><title>open64 (1 samples, 0.01%)</title><rect x="73.2773%" y="981" width="0.0118%" height="15" fill="rgb(233,29,12)" fg:x="6189" fg:w="1"/><text x="73.5273%" y="991.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="73.2773%" y="965" width="0.0118%" height="15" fill="rgb(219,120,34)" fg:x="6189" fg:w="1"/><text x="73.5273%" y="975.50"></text></g><g><title>do_syscall_64 (1 samples, 0.01%)</title><rect x="73.2773%" y="949" width="0.0118%" height="15" fill="rgb(226,78,44)" fg:x="6189" fg:w="1"/><text x="73.5273%" y="959.50"></text></g><g><title>__x64_sys_openat (1 samples, 0.01%)</title><rect x="73.2773%" y="933" width="0.0118%" height="15" fill="rgb(240,15,48)" fg:x="6189" fg:w="1"/><text x="73.5273%" y="943.50"></text></g><g><title>do_sys_openat2 (1 samples, 0.01%)</title><rect x="73.2773%" y="917" width="0.0118%" height="15" fill="rgb(253,176,7)" fg:x="6189" fg:w="1"/><text x="73.5273%" y="927.50"></text></g><g><title>do_filp_open (1 samples, 0.01%)</title><rect x="73.2773%" y="901" width="0.0118%" height="15" fill="rgb(206,166,28)" fg:x="6189" fg:w="1"/><text x="73.5273%" y="911.50"></text></g><g><title>path_openat (1 samples, 0.01%)</title><rect x="73.2773%" y="885" width="0.0118%" height="15" fill="rgb(241,53,51)" fg:x="6189" fg:w="1"/><text x="73.5273%" y="895.50"></text></g><g><title>do_dentry_open (1 samples, 0.01%)</title><rect x="73.2773%" y="869" width="0.0118%" height="15" fill="rgb(249,112,30)" fg:x="6189" fg:w="1"/><text x="73.5273%" y="879.50"></text></g><g><title>__dquot_initialize (1 samples, 0.01%)</title><rect x="73.2773%" y="853" width="0.0118%" height="15" fill="rgb(217,85,30)" fg:x="6189" fg:w="1"/><text x="73.5273%" y="863.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="73.2891%" y="1109" width="0.0118%" height="15" fill="rgb(233,49,7)" fg:x="6190" fg:w="1"/><text x="73.5391%" y="1119.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (2 samples, 0.02%)</title><rect x="73.3365%" y="1077" width="0.0237%" height="15" fill="rgb(234,109,9)" fg:x="6194" fg:w="2"/><text x="73.5865%" y="1087.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="73.3483%" y="1061" width="0.0118%" height="15" fill="rgb(253,95,22)" fg:x="6195" fg:w="1"/><text x="73.5983%" y="1071.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="73.3957%" y="1045" width="0.0118%" height="15" fill="rgb(233,176,25)" fg:x="6199" fg:w="1"/><text x="73.6457%" y="1055.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="73.4075%" y="1045" width="0.0118%" height="15" fill="rgb(236,33,39)" fg:x="6200" fg:w="1"/><text x="73.6575%" y="1055.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="73.4075%" y="1029" width="0.0118%" height="15" fill="rgb(223,226,42)" fg:x="6200" fg:w="1"/><text x="73.6575%" y="1039.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="73.4075%" y="1013" width="0.0118%" height="15" fill="rgb(216,99,33)" fg:x="6200" fg:w="1"/><text x="73.6575%" y="1023.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="73.4075%" y="997" width="0.0118%" height="15" fill="rgb(235,84,23)" fg:x="6200" fg:w="1"/><text x="73.6575%" y="1007.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="73.4075%" y="981" width="0.0118%" height="15" fill="rgb(232,2,27)" fg:x="6200" fg:w="1"/><text x="73.6575%" y="991.50"></text></g><g><title>tick_nohz_handler (1 samples, 0.01%)</title><rect x="73.4075%" y="965" width="0.0118%" height="15" fill="rgb(241,23,22)" fg:x="6200" fg:w="1"/><text x="73.6575%" y="975.50"></text></g><g><title>run_posix_cpu_timers (1 samples, 0.01%)</title><rect x="73.4075%" y="949" width="0.0118%" height="15" fill="rgb(211,73,27)" fg:x="6200" fg:w="1"/><text x="73.6575%" y="959.50"></text></g><g><title>__fdget_pos (2 samples, 0.02%)</title><rect x="73.4904%" y="997" width="0.0237%" height="15" fill="rgb(235,109,49)" fg:x="6207" fg:w="2"/><text x="73.7404%" y="1007.50"></text></g><g><title>mutex_lock (1 samples, 0.01%)</title><rect x="73.5022%" y="981" width="0.0118%" height="15" fill="rgb(230,99,29)" fg:x="6208" fg:w="1"/><text x="73.7522%" y="991.50"></text></g><g><title>[[ext4]] (3 samples, 0.04%)</title><rect x="73.6680%" y="965" width="0.0355%" height="15" fill="rgb(245,199,7)" fg:x="6222" fg:w="3"/><text x="73.9180%" y="975.50"></text></g><g><title>generic_write_checks (2 samples, 0.02%)</title><rect x="73.6798%" y="949" width="0.0237%" height="15" fill="rgb(217,179,10)" fg:x="6223" fg:w="2"/><text x="73.9298%" y="959.50"></text></g><g><title>down_write (2 samples, 0.02%)</title><rect x="73.7035%" y="965" width="0.0237%" height="15" fill="rgb(254,99,47)" fg:x="6225" fg:w="2"/><text x="73.9535%" y="975.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="73.7154%" y="949" width="0.0118%" height="15" fill="rgb(251,121,7)" fg:x="6226" fg:w="1"/><text x="73.9654%" y="959.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="73.7154%" y="933" width="0.0118%" height="15" fill="rgb(250,177,26)" fg:x="6226" fg:w="1"/><text x="73.9654%" y="943.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.01%)</title><rect x="73.7154%" y="917" width="0.0118%" height="15" fill="rgb(232,88,15)" fg:x="6226" fg:w="1"/><text x="73.9654%" y="927.50"></text></g><g><title>handle_softirqs (1 samples, 0.01%)</title><rect x="73.7154%" y="901" width="0.0118%" height="15" fill="rgb(251,54,54)" fg:x="6226" fg:w="1"/><text x="73.9654%" y="911.50"></text></g><g><title>net_rx_action (1 samples, 0.01%)</title><rect x="73.7154%" y="885" width="0.0118%" height="15" fill="rgb(208,177,15)" fg:x="6226" fg:w="1"/><text x="73.9654%" y="895.50"></text></g><g><title>__napi_poll (1 samples, 0.01%)</title><rect x="73.7154%" y="869" width="0.0118%" height="15" fill="rgb(205,97,32)" fg:x="6226" fg:w="1"/><text x="73.9654%" y="879.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="73.7154%" y="853" width="0.0118%" height="15" fill="rgb(217,192,13)" fg:x="6226" fg:w="1"/><text x="73.9654%" y="863.50"></text></g><g><title>napi_complete_done (1 samples, 0.01%)</title><rect x="73.7154%" y="837" width="0.0118%" height="15" fill="rgb(215,163,41)" fg:x="6226" fg:w="1"/><text x="73.9654%" y="847.50"></text></g><g><title>netif_receive_skb_list_internal (1 samples, 0.01%)</title><rect x="73.7154%" y="821" width="0.0118%" height="15" fill="rgb(246,83,29)" fg:x="6226" fg:w="1"/><text x="73.9654%" y="831.50"></text></g><g><title>__netif_receive_skb_list_core (1 samples, 0.01%)</title><rect x="73.7154%" y="805" width="0.0118%" height="15" fill="rgb(219,2,45)" fg:x="6226" fg:w="1"/><text x="73.9654%" y="815.50"></text></g><g><title>ip_list_rcv (1 samples, 0.01%)</title><rect x="73.7154%" y="789" width="0.0118%" height="15" fill="rgb(242,215,33)" fg:x="6226" fg:w="1"/><text x="73.9654%" y="799.50"></text></g><g><title>ip_sublist_rcv (1 samples, 0.01%)</title><rect x="73.7154%" y="773" width="0.0118%" height="15" fill="rgb(217,1,6)" fg:x="6226" fg:w="1"/><text x="73.9654%" y="783.50"></text></g><g><title>ip_local_deliver (1 samples, 0.01%)</title><rect x="73.7154%" y="757" width="0.0118%" height="15" fill="rgb(207,85,52)" fg:x="6226" fg:w="1"/><text x="73.9654%" y="767.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.01%)</title><rect x="73.7154%" y="741" width="0.0118%" height="15" fill="rgb(231,171,19)" fg:x="6226" fg:w="1"/><text x="73.9654%" y="751.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.01%)</title><rect x="73.7154%" y="725" width="0.0118%" height="15" fill="rgb(207,128,4)" fg:x="6226" fg:w="1"/><text x="73.9654%" y="735.50"></text></g><g><title>tcp_v4_rcv (1 samples, 0.01%)</title><rect x="73.7154%" y="709" width="0.0118%" height="15" fill="rgb(219,208,4)" fg:x="6226" fg:w="1"/><text x="73.9654%" y="719.50"></text></g><g><title>file_remove_privs_flags (2 samples, 0.02%)</title><rect x="73.7509%" y="949" width="0.0237%" height="15" fill="rgb(235,161,42)" fg:x="6229" fg:w="2"/><text x="74.0009%" y="959.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="74.0706%" y="821" width="0.0118%" height="15" fill="rgb(247,218,18)" fg:x="6256" fg:w="1"/><text x="74.3206%" y="831.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="74.0706%" y="805" width="0.0118%" height="15" fill="rgb(232,114,51)" fg:x="6256" fg:w="1"/><text x="74.3206%" y="815.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.01%)</title><rect x="74.0706%" y="789" width="0.0118%" height="15" fill="rgb(222,95,3)" fg:x="6256" fg:w="1"/><text x="74.3206%" y="799.50"></text></g><g><title>handle_softirqs (1 samples, 0.01%)</title><rect x="74.0706%" y="773" width="0.0118%" height="15" fill="rgb(240,65,29)" fg:x="6256" fg:w="1"/><text x="74.3206%" y="783.50"></text></g><g><title>run_timer_softirq (1 samples, 0.01%)</title><rect x="74.0706%" y="757" width="0.0118%" height="15" fill="rgb(249,209,20)" fg:x="6256" fg:w="1"/><text x="74.3206%" y="767.50"></text></g><g><title>crypto_shash_update (5 samples, 0.06%)</title><rect x="74.0824%" y="821" width="0.0592%" height="15" fill="rgb(241,48,37)" fg:x="6257" fg:w="5"/><text x="74.3324%" y="831.50"></text></g><g><title>[[crc32c_intel]] (3 samples, 0.04%)</title><rect x="74.1061%" y="805" width="0.0355%" height="15" fill="rgb(230,140,42)" fg:x="6259" fg:w="3"/><text x="74.3561%" y="815.50"></text></g><g><title>[[ext4]] (13 samples, 0.15%)</title><rect x="73.9995%" y="837" width="0.1539%" height="15" fill="rgb(230,176,45)" fg:x="6250" fg:w="13"/><text x="74.2495%" y="847.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="74.1416%" y="821" width="0.0118%" height="15" fill="rgb(245,112,21)" fg:x="6262" fg:w="1"/><text x="74.3916%" y="831.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="74.1416%" y="805" width="0.0118%" height="15" fill="rgb(207,183,35)" fg:x="6262" fg:w="1"/><text x="74.3916%" y="815.50"></text></g><g><title>[[ext4]] (17 samples, 0.20%)</title><rect x="73.9758%" y="853" width="0.2013%" height="15" fill="rgb(227,44,33)" fg:x="6248" fg:w="17"/><text x="74.2258%" y="863.50"></text></g><g><title>bdev_getblk (2 samples, 0.02%)</title><rect x="74.1534%" y="837" width="0.0237%" height="15" fill="rgb(246,120,21)" fg:x="6263" fg:w="2"/><text x="74.4034%" y="847.50"></text></g><g><title>__find_get_block (2 samples, 0.02%)</title><rect x="74.1534%" y="821" width="0.0237%" height="15" fill="rgb(235,57,52)" fg:x="6263" fg:w="2"/><text x="74.4034%" y="831.50"></text></g><g><title>__filemap_get_folio (1 samples, 0.01%)</title><rect x="74.1653%" y="805" width="0.0118%" height="15" fill="rgb(238,84,10)" fg:x="6264" fg:w="1"/><text x="74.4153%" y="815.50"></text></g><g><title>filemap_get_entry (1 samples, 0.01%)</title><rect x="74.1653%" y="789" width="0.0118%" height="15" fill="rgb(251,200,32)" fg:x="6264" fg:w="1"/><text x="74.4153%" y="799.50"></text></g><g><title>[[jbd2]] (3 samples, 0.04%)</title><rect x="74.1771%" y="853" width="0.0355%" height="15" fill="rgb(247,159,13)" fg:x="6265" fg:w="3"/><text x="74.4271%" y="863.50"></text></g><g><title>[[jbd2]] (2 samples, 0.02%)</title><rect x="74.1890%" y="837" width="0.0237%" height="15" fill="rgb(238,64,4)" fg:x="6266" fg:w="2"/><text x="74.4390%" y="847.50"></text></g><g><title>[[ext4]] (37 samples, 0.44%)</title><rect x="73.7864%" y="901" width="0.4381%" height="15" fill="rgb(221,131,51)" fg:x="6232" fg:w="37"/><text x="74.0364%" y="911.50"></text></g><g><title>[[ext4]] (32 samples, 0.38%)</title><rect x="73.8456%" y="885" width="0.3789%" height="15" fill="rgb(242,5,29)" fg:x="6237" fg:w="32"/><text x="74.0956%" y="895.50"></text></g><g><title>[[ext4]] (24 samples, 0.28%)</title><rect x="73.9403%" y="869" width="0.2842%" height="15" fill="rgb(214,130,32)" fg:x="6245" fg:w="24"/><text x="74.1903%" y="879.50"></text></g><g><title>map_id_up (1 samples, 0.01%)</title><rect x="74.2126%" y="853" width="0.0118%" height="15" fill="rgb(244,210,16)" fg:x="6268" fg:w="1"/><text x="74.4626%" y="863.50"></text></g><g><title>__wake_up (1 samples, 0.01%)</title><rect x="74.2837%" y="869" width="0.0118%" height="15" fill="rgb(234,48,26)" fg:x="6274" fg:w="1"/><text x="74.5337%" y="879.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="74.2837%" y="853" width="0.0118%" height="15" fill="rgb(231,82,38)" fg:x="6274" fg:w="1"/><text x="74.5337%" y="863.50"></text></g><g><title>[[jbd2]] (4 samples, 0.05%)</title><rect x="74.2600%" y="885" width="0.0474%" height="15" fill="rgb(254,128,41)" fg:x="6272" fg:w="4"/><text x="74.5100%" y="895.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.01%)</title><rect x="74.2955%" y="869" width="0.0118%" height="15" fill="rgb(212,73,49)" fg:x="6275" fg:w="1"/><text x="74.5455%" y="879.50"></text></g><g><title>kmem_cache_alloc (2 samples, 0.02%)</title><rect x="74.3074%" y="885" width="0.0237%" height="15" fill="rgb(205,62,54)" fg:x="6276" fg:w="2"/><text x="74.5574%" y="895.50"></text></g><g><title>__mark_inode_dirty (51 samples, 0.60%)</title><rect x="73.7746%" y="933" width="0.6038%" height="15" fill="rgb(228,0,8)" fg:x="6231" fg:w="51"/><text x="74.0246%" y="943.50"></text></g><g><title>[[ext4]] (51 samples, 0.60%)</title><rect x="73.7746%" y="917" width="0.6038%" height="15" fill="rgb(251,28,17)" fg:x="6231" fg:w="51"/><text x="74.0246%" y="927.50"></text></g><g><title>[[jbd2]] (13 samples, 0.15%)</title><rect x="74.2245%" y="901" width="0.1539%" height="15" fill="rgb(238,105,27)" fg:x="6269" fg:w="13"/><text x="74.4745%" y="911.50"></text></g><g><title>kmem_cache_free (4 samples, 0.05%)</title><rect x="74.3310%" y="885" width="0.0474%" height="15" fill="rgb(237,216,33)" fg:x="6278" fg:w="4"/><text x="74.5810%" y="895.50"></text></g><g><title>inode_update_timestamps (1 samples, 0.01%)</title><rect x="74.3784%" y="933" width="0.0118%" height="15" fill="rgb(229,228,25)" fg:x="6282" fg:w="1"/><text x="74.6284%" y="943.50"></text></g><g><title>generic_update_time (53 samples, 0.63%)</title><rect x="73.7746%" y="949" width="0.6275%" height="15" fill="rgb(233,75,23)" fg:x="6231" fg:w="53"/><text x="74.0246%" y="959.50"></text></g><g><title>wb_wakeup_delayed (1 samples, 0.01%)</title><rect x="74.3902%" y="933" width="0.0118%" height="15" fill="rgb(231,207,16)" fg:x="6283" fg:w="1"/><text x="74.6402%" y="943.50"></text></g><g><title>queue_delayed_work_on (1 samples, 0.01%)</title><rect x="74.3902%" y="917" width="0.0118%" height="15" fill="rgb(231,191,45)" fg:x="6283" fg:w="1"/><text x="74.6402%" y="927.50"></text></g><g><title>__mod_timer (1 samples, 0.01%)</title><rect x="74.3902%" y="901" width="0.0118%" height="15" fill="rgb(224,133,17)" fg:x="6283" fg:w="1"/><text x="74.6402%" y="911.50"></text></g><g><title>enqueue_timer (1 samples, 0.01%)</title><rect x="74.3902%" y="885" width="0.0118%" height="15" fill="rgb(209,178,27)" fg:x="6283" fg:w="1"/><text x="74.6402%" y="895.50"></text></g><g><title>inode_needs_update_time (2 samples, 0.02%)</title><rect x="74.4021%" y="949" width="0.0237%" height="15" fill="rgb(218,37,11)" fg:x="6284" fg:w="2"/><text x="74.6521%" y="959.50"></text></g><g><title>mnt_get_write_access_file (1 samples, 0.01%)</title><rect x="74.4258%" y="949" width="0.0118%" height="15" fill="rgb(251,226,25)" fg:x="6286" fg:w="1"/><text x="74.6758%" y="959.50"></text></g><g><title>file_modified (61 samples, 0.72%)</title><rect x="73.7272%" y="965" width="0.7222%" height="15" fill="rgb(209,222,27)" fg:x="6227" fg:w="61"/><text x="73.9772%" y="975.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="74.4376%" y="949" width="0.0118%" height="15" fill="rgb(238,22,21)" fg:x="6287" fg:w="1"/><text x="74.6876%" y="959.50"></text></g><g><title>[[ext4]] (12 samples, 0.14%)</title><rect x="74.7691%" y="869" width="0.1421%" height="15" fill="rgb(233,161,25)" fg:x="6315" fg:w="12"/><text x="75.0191%" y="879.50"></text></g><g><title>crypto_shash_update (7 samples, 0.08%)</title><rect x="74.8283%" y="853" width="0.0829%" height="15" fill="rgb(226,122,53)" fg:x="6320" fg:w="7"/><text x="75.0783%" y="863.50"></text></g><g><title>[[crc32c_intel]] (4 samples, 0.05%)</title><rect x="74.8638%" y="837" width="0.0474%" height="15" fill="rgb(220,123,17)" fg:x="6323" fg:w="4"/><text x="75.1138%" y="847.50"></text></g><g><title>__filemap_get_folio (1 samples, 0.01%)</title><rect x="74.9704%" y="837" width="0.0118%" height="15" fill="rgb(230,224,35)" fg:x="6332" fg:w="1"/><text x="75.2204%" y="847.50"></text></g><g><title>filemap_get_entry (1 samples, 0.01%)</title><rect x="74.9704%" y="821" width="0.0118%" height="15" fill="rgb(246,83,8)" fg:x="6332" fg:w="1"/><text x="75.2204%" y="831.50"></text></g><g><title>xas_load (1 samples, 0.01%)</title><rect x="74.9704%" y="805" width="0.0118%" height="15" fill="rgb(230,214,17)" fg:x="6332" fg:w="1"/><text x="75.2204%" y="815.50"></text></g><g><title>xas_descend (1 samples, 0.01%)</title><rect x="74.9704%" y="789" width="0.0118%" height="15" fill="rgb(222,97,18)" fg:x="6332" fg:w="1"/><text x="75.2204%" y="799.50"></text></g><g><title>[[ext4]] (19 samples, 0.22%)</title><rect x="74.7691%" y="885" width="0.2250%" height="15" fill="rgb(206,79,1)" fg:x="6315" fg:w="19"/><text x="75.0191%" y="895.50"></text></g><g><title>bdev_getblk (7 samples, 0.08%)</title><rect x="74.9112%" y="869" width="0.0829%" height="15" fill="rgb(214,121,34)" fg:x="6327" fg:w="7"/><text x="75.1612%" y="879.50"></text></g><g><title>__find_get_block (6 samples, 0.07%)</title><rect x="74.9230%" y="853" width="0.0710%" height="15" fill="rgb(249,199,46)" fg:x="6328" fg:w="6"/><text x="75.1730%" y="863.50"></text></g><g><title>cpuset_cpu_is_isolated (1 samples, 0.01%)</title><rect x="74.9822%" y="837" width="0.0118%" height="15" fill="rgb(214,222,46)" fg:x="6333" fg:w="1"/><text x="75.2322%" y="847.50"></text></g><g><title>from_kprojid (1 samples, 0.01%)</title><rect x="74.9941%" y="885" width="0.0118%" height="15" fill="rgb(248,168,30)" fg:x="6334" fg:w="1"/><text x="75.2441%" y="895.50"></text></g><g><title>[[ext4]] (28 samples, 0.33%)</title><rect x="74.6862%" y="901" width="0.3315%" height="15" fill="rgb(226,14,28)" fg:x="6308" fg:w="28"/><text x="74.9362%" y="911.50"></text></g><g><title>map_id_up (1 samples, 0.01%)</title><rect x="75.0059%" y="885" width="0.0118%" height="15" fill="rgb(253,123,1)" fg:x="6335" fg:w="1"/><text x="75.2559%" y="895.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="75.0178%" y="901" width="0.0118%" height="15" fill="rgb(225,24,42)" fg:x="6336" fg:w="1"/><text x="75.2678%" y="911.50"></text></g><g><title>[[ext4]] (35 samples, 0.41%)</title><rect x="74.6270%" y="917" width="0.4144%" height="15" fill="rgb(216,161,37)" fg:x="6303" fg:w="35"/><text x="74.8770%" y="927.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.01%)</title><rect x="75.0296%" y="901" width="0.0118%" height="15" fill="rgb(251,164,26)" fg:x="6337" fg:w="1"/><text x="75.2796%" y="911.50"></text></g><g><title>[[jbd2]] (1 samples, 0.01%)</title><rect x="75.0414%" y="901" width="0.0118%" height="15" fill="rgb(219,177,3)" fg:x="6338" fg:w="1"/><text x="75.2914%" y="911.50"></text></g><g><title>[[jbd2]] (2 samples, 0.02%)</title><rect x="75.0414%" y="917" width="0.0237%" height="15" fill="rgb(222,65,0)" fg:x="6338" fg:w="2"/><text x="75.2914%" y="927.50"></text></g><g><title>kmem_cache_free (1 samples, 0.01%)</title><rect x="75.0533%" y="901" width="0.0118%" height="15" fill="rgb(223,69,54)" fg:x="6339" fg:w="1"/><text x="75.3033%" y="911.50"></text></g><g><title>[[ext4]] (46 samples, 0.54%)</title><rect x="74.5323%" y="933" width="0.5446%" height="15" fill="rgb(235,30,27)" fg:x="6295" fg:w="46"/><text x="74.7823%" y="943.50"></text></g><g><title>create_empty_buffers (1 samples, 0.01%)</title><rect x="75.0651%" y="917" width="0.0118%" height="15" fill="rgb(220,183,50)" fg:x="6340" fg:w="1"/><text x="75.3151%" y="927.50"></text></g><g><title>folio_alloc_buffers (1 samples, 0.01%)</title><rect x="75.0651%" y="901" width="0.0118%" height="15" fill="rgb(248,198,15)" fg:x="6340" fg:w="1"/><text x="75.3151%" y="911.50"></text></g><g><title>alloc_buffer_head (1 samples, 0.01%)</title><rect x="75.0651%" y="885" width="0.0118%" height="15" fill="rgb(222,211,4)" fg:x="6340" fg:w="1"/><text x="75.3151%" y="895.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.01%)</title><rect x="75.0651%" y="869" width="0.0118%" height="15" fill="rgb(214,102,34)" fg:x="6340" fg:w="1"/><text x="75.3151%" y="879.50"></text></g><g><title>[[jbd2]] (1 samples, 0.01%)</title><rect x="75.0770%" y="917" width="0.0118%" height="15" fill="rgb(245,92,5)" fg:x="6341" fg:w="1"/><text x="75.3270%" y="927.50"></text></g><g><title>[[jbd2]] (2 samples, 0.02%)</title><rect x="75.0770%" y="933" width="0.0237%" height="15" fill="rgb(252,72,51)" fg:x="6341" fg:w="2"/><text x="75.3270%" y="943.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.01%)</title><rect x="75.0888%" y="917" width="0.0118%" height="15" fill="rgb(252,208,19)" fg:x="6342" fg:w="1"/><text x="75.3388%" y="927.50"></text></g><g><title>xas_descend (1 samples, 0.01%)</title><rect x="75.1125%" y="885" width="0.0118%" height="15" fill="rgb(211,69,7)" fg:x="6344" fg:w="1"/><text x="75.3625%" y="895.50"></text></g><g><title>filemap_get_entry (3 samples, 0.04%)</title><rect x="75.1006%" y="917" width="0.0355%" height="15" fill="rgb(211,27,16)" fg:x="6343" fg:w="3"/><text x="75.3506%" y="927.50"></text></g><g><title>xas_load (2 samples, 0.02%)</title><rect x="75.1125%" y="901" width="0.0237%" height="15" fill="rgb(219,216,14)" fg:x="6344" fg:w="2"/><text x="75.3625%" y="911.50"></text></g><g><title>xas_start (1 samples, 0.01%)</title><rect x="75.1243%" y="885" width="0.0118%" height="15" fill="rgb(219,71,8)" fg:x="6345" fg:w="1"/><text x="75.3743%" y="895.50"></text></g><g><title>folio_alloc (1 samples, 0.01%)</title><rect x="75.1362%" y="917" width="0.0118%" height="15" fill="rgb(223,170,53)" fg:x="6346" fg:w="1"/><text x="75.3862%" y="927.50"></text></g><g><title>alloc_pages_mpol (1 samples, 0.01%)</title><rect x="75.1362%" y="901" width="0.0118%" height="15" fill="rgb(246,21,26)" fg:x="6346" fg:w="1"/><text x="75.3862%" y="911.50"></text></g><g><title>__alloc_pages (1 samples, 0.01%)</title><rect x="75.1362%" y="885" width="0.0118%" height="15" fill="rgb(248,20,46)" fg:x="6346" fg:w="1"/><text x="75.3862%" y="895.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.01%)</title><rect x="75.1362%" y="869" width="0.0118%" height="15" fill="rgb(252,94,11)" fg:x="6346" fg:w="1"/><text x="75.3862%" y="879.50"></text></g><g><title>clear_page_erms (1 samples, 0.01%)</title><rect x="75.1362%" y="853" width="0.0118%" height="15" fill="rgb(236,163,8)" fg:x="6346" fg:w="1"/><text x="75.3862%" y="863.50"></text></g><g><title>__filemap_get_folio (6 samples, 0.07%)</title><rect x="75.1006%" y="933" width="0.0710%" height="15" fill="rgb(217,221,45)" fg:x="6343" fg:w="6"/><text x="75.3506%" y="943.50"></text></g><g><title>folio_wait_stable (2 samples, 0.02%)</title><rect x="75.1480%" y="917" width="0.0237%" height="15" fill="rgb(238,38,17)" fg:x="6347" fg:w="2"/><text x="75.3980%" y="927.50"></text></g><g><title>folio_mapping (1 samples, 0.01%)</title><rect x="75.1598%" y="901" width="0.0118%" height="15" fill="rgb(242,210,23)" fg:x="6348" fg:w="1"/><text x="75.4098%" y="911.50"></text></g><g><title>block_write_end (3 samples, 0.04%)</title><rect x="75.1717%" y="933" width="0.0355%" height="15" fill="rgb(250,86,53)" fg:x="6349" fg:w="3"/><text x="75.4217%" y="943.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="75.2072%" y="933" width="0.0118%" height="15" fill="rgb(223,168,25)" fg:x="6352" fg:w="1"/><text x="75.4572%" y="943.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="75.2072%" y="917" width="0.0118%" height="15" fill="rgb(251,189,4)" fg:x="6352" fg:w="1"/><text x="75.4572%" y="927.50"></text></g><g><title>[[ext4]] (65 samples, 0.77%)</title><rect x="74.4613%" y="949" width="0.7696%" height="15" fill="rgb(245,19,28)" fg:x="6289" fg:w="65"/><text x="74.7113%" y="959.50"></text></g><g><title>up_write (1 samples, 0.01%)</title><rect x="75.2190%" y="933" width="0.0118%" height="15" fill="rgb(207,10,34)" fg:x="6353" fg:w="1"/><text x="75.4690%" y="943.50"></text></g><g><title>__radix_tree_lookup (4 samples, 0.05%)</title><rect x="75.2782%" y="933" width="0.0474%" height="15" fill="rgb(235,153,31)" fg:x="6358" fg:w="4"/><text x="75.5282%" y="943.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.01%)</title><rect x="75.3256%" y="933" width="0.0118%" height="15" fill="rgb(228,72,37)" fg:x="6362" fg:w="1"/><text x="75.5756%" y="943.50"></text></g><g><title>balance_dirty_pages_ratelimited_flags (10 samples, 0.12%)</title><rect x="75.2309%" y="949" width="0.1184%" height="15" fill="rgb(215,15,16)" fg:x="6354" fg:w="10"/><text x="75.4809%" y="959.50"></text></g><g><title>inode_to_bdi (1 samples, 0.01%)</title><rect x="75.3374%" y="933" width="0.0118%" height="15" fill="rgb(250,119,29)" fg:x="6363" fg:w="1"/><text x="75.5874%" y="943.50"></text></g><g><title>copy_page_from_iter_atomic (6 samples, 0.07%)</title><rect x="75.3493%" y="949" width="0.0710%" height="15" fill="rgb(214,59,1)" fg:x="6364" fg:w="6"/><text x="75.5993%" y="959.50"></text></g><g><title>[[ext4]] (157 samples, 1.86%)</title><rect x="73.5851%" y="981" width="1.8589%" height="15" fill="rgb(223,109,25)" fg:x="6215" fg:w="157"/><text x="73.8351%" y="991.50">[..</text></g><g><title>generic_perform_write (84 samples, 0.99%)</title><rect x="74.4494%" y="965" width="0.9946%" height="15" fill="rgb(230,198,22)" fg:x="6288" fg:w="84"/><text x="74.6994%" y="975.50"></text></g><g><title>fault_in_iov_iter_readable (2 samples, 0.02%)</title><rect x="75.4203%" y="949" width="0.0237%" height="15" fill="rgb(245,184,46)" fg:x="6370" fg:w="2"/><text x="75.6703%" y="959.50"></text></g><g><title>fault_in_readable (2 samples, 0.02%)</title><rect x="75.4203%" y="933" width="0.0237%" height="15" fill="rgb(253,73,16)" fg:x="6370" fg:w="2"/><text x="75.6703%" y="943.50"></text></g><g><title>lockref_get_not_zero (3 samples, 0.04%)</title><rect x="75.5861%" y="949" width="0.0355%" height="15" fill="rgb(206,94,45)" fg:x="6384" fg:w="3"/><text x="75.8361%" y="959.50"></text></g><g><title>dget_parent (5 samples, 0.06%)</title><rect x="75.5742%" y="965" width="0.0592%" height="15" fill="rgb(236,83,27)" fg:x="6383" fg:w="5"/><text x="75.8242%" y="975.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="75.6216%" y="949" width="0.0118%" height="15" fill="rgb(220,196,8)" fg:x="6387" fg:w="1"/><text x="75.8716%" y="959.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="75.6216%" y="933" width="0.0118%" height="15" fill="rgb(254,185,14)" fg:x="6387" fg:w="1"/><text x="75.8716%" y="943.50"></text></g><g><title>dput (1 samples, 0.01%)</title><rect x="75.6334%" y="965" width="0.0118%" height="15" fill="rgb(226,50,22)" fg:x="6388" fg:w="1"/><text x="75.8834%" y="975.50"></text></g><g><title>__srcu_read_lock (3 samples, 0.04%)</title><rect x="76.0123%" y="949" width="0.0355%" height="15" fill="rgb(253,147,0)" fg:x="6420" fg:w="3"/><text x="76.2623%" y="959.50"></text></g><g><title>__srcu_read_unlock (1 samples, 0.01%)</title><rect x="76.0478%" y="949" width="0.0118%" height="15" fill="rgb(252,46,33)" fg:x="6423" fg:w="1"/><text x="76.2978%" y="959.50"></text></g><g><title>__memcg_slab_post_alloc_hook (7 samples, 0.08%)</title><rect x="76.2373%" y="917" width="0.0829%" height="15" fill="rgb(242,22,54)" fg:x="6439" fg:w="7"/><text x="76.4873%" y="927.50"></text></g><g><title>mod_objcg_state (1 samples, 0.01%)</title><rect x="76.3083%" y="901" width="0.0118%" height="15" fill="rgb(223,178,32)" fg:x="6445" fg:w="1"/><text x="76.5583%" y="911.50"></text></g><g><title>current_obj_cgroup (3 samples, 0.04%)</title><rect x="76.3202%" y="917" width="0.0355%" height="15" fill="rgb(214,106,53)" fg:x="6446" fg:w="3"/><text x="76.5702%" y="927.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.01%)</title><rect x="76.4978%" y="901" width="0.0118%" height="15" fill="rgb(232,65,50)" fg:x="6461" fg:w="1"/><text x="76.7478%" y="911.50"></text></g><g><title>memcg_account_kmem (10 samples, 0.12%)</title><rect x="76.5096%" y="901" width="0.1184%" height="15" fill="rgb(231,110,28)" fg:x="6462" fg:w="10"/><text x="76.7596%" y="911.50"></text></g><g><title>mod_memcg_state (10 samples, 0.12%)</title><rect x="76.5096%" y="885" width="0.1184%" height="15" fill="rgb(216,71,40)" fg:x="6462" fg:w="10"/><text x="76.7596%" y="895.50"></text></g><g><title>__mod_memcg_state (8 samples, 0.09%)</title><rect x="76.5333%" y="869" width="0.0947%" height="15" fill="rgb(229,89,53)" fg:x="6464" fg:w="8"/><text x="76.7833%" y="879.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.01%)</title><rect x="76.6161%" y="853" width="0.0118%" height="15" fill="rgb(210,124,14)" fg:x="6471" fg:w="1"/><text x="76.8661%" y="863.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.01%)</title><rect x="76.7109%" y="885" width="0.0118%" height="15" fill="rgb(236,213,6)" fg:x="6479" fg:w="1"/><text x="76.9609%" y="895.50"></text></g><g><title>memcg_account_kmem (5 samples, 0.06%)</title><rect x="76.7227%" y="885" width="0.0592%" height="15" fill="rgb(228,41,5)" fg:x="6480" fg:w="5"/><text x="76.9727%" y="895.50"></text></g><g><title>mod_memcg_state (3 samples, 0.04%)</title><rect x="76.7464%" y="869" width="0.0355%" height="15" fill="rgb(221,167,25)" fg:x="6482" fg:w="3"/><text x="76.9964%" y="879.50"></text></g><g><title>__mod_memcg_state (1 samples, 0.01%)</title><rect x="76.7701%" y="853" width="0.0118%" height="15" fill="rgb(228,144,37)" fg:x="6484" fg:w="1"/><text x="77.0201%" y="863.50"></text></g><g><title>obj_cgroup_uncharge_pages (18 samples, 0.21%)</title><rect x="76.6280%" y="901" width="0.2131%" height="15" fill="rgb(227,189,38)" fg:x="6472" fg:w="18"/><text x="76.8780%" y="911.50"></text></g><g><title>refill_stock (5 samples, 0.06%)</title><rect x="76.7819%" y="885" width="0.0592%" height="15" fill="rgb(218,8,2)" fg:x="6485" fg:w="5"/><text x="77.0319%" y="895.50"></text></g><g><title>__refill_stock (1 samples, 0.01%)</title><rect x="76.8293%" y="869" width="0.0118%" height="15" fill="rgb(209,61,28)" fg:x="6489" fg:w="1"/><text x="77.0793%" y="879.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.01%)</title><rect x="76.9358%" y="885" width="0.0118%" height="15" fill="rgb(233,140,39)" fg:x="6498" fg:w="1"/><text x="77.1858%" y="895.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.01%)</title><rect x="76.9477%" y="885" width="0.0118%" height="15" fill="rgb(251,66,48)" fg:x="6499" fg:w="1"/><text x="77.1977%" y="895.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="76.9595%" y="885" width="0.0118%" height="15" fill="rgb(210,44,45)" fg:x="6500" fg:w="1"/><text x="77.2095%" y="895.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="76.9595%" y="869" width="0.0118%" height="15" fill="rgb(214,136,46)" fg:x="6500" fg:w="1"/><text x="77.2095%" y="879.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="76.9595%" y="853" width="0.0118%" height="15" fill="rgb(207,130,50)" fg:x="6500" fg:w="1"/><text x="77.2095%" y="863.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="76.9595%" y="837" width="0.0118%" height="15" fill="rgb(228,102,49)" fg:x="6500" fg:w="1"/><text x="77.2095%" y="847.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="76.9595%" y="821" width="0.0118%" height="15" fill="rgb(253,55,1)" fg:x="6500" fg:w="1"/><text x="77.2095%" y="831.50"></text></g><g><title>tick_nohz_handler (1 samples, 0.01%)</title><rect x="76.9595%" y="805" width="0.0118%" height="15" fill="rgb(238,222,9)" fg:x="6500" fg:w="1"/><text x="77.2095%" y="815.50"></text></g><g><title>update_process_times (1 samples, 0.01%)</title><rect x="76.9595%" y="789" width="0.0118%" height="15" fill="rgb(246,99,6)" fg:x="6500" fg:w="1"/><text x="77.2095%" y="799.50"></text></g><g><title>scheduler_tick (1 samples, 0.01%)</title><rect x="76.9595%" y="773" width="0.0118%" height="15" fill="rgb(219,110,26)" fg:x="6500" fg:w="1"/><text x="77.2095%" y="783.50"></text></g><g><title>perf_event_task_tick (1 samples, 0.01%)</title><rect x="76.9595%" y="757" width="0.0118%" height="15" fill="rgb(239,160,33)" fg:x="6500" fg:w="1"/><text x="77.2095%" y="767.50"></text></g><g><title>perf_adjust_freq_unthr_context (1 samples, 0.01%)</title><rect x="76.9595%" y="741" width="0.0118%" height="15" fill="rgb(220,202,23)" fg:x="6500" fg:w="1"/><text x="77.2095%" y="751.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.01%)</title><rect x="77.0069%" y="869" width="0.0118%" height="15" fill="rgb(208,80,26)" fg:x="6504" fg:w="1"/><text x="77.2569%" y="879.50"></text></g><g><title>refill_obj_stock (21 samples, 0.25%)</title><rect x="76.8411%" y="901" width="0.2486%" height="15" fill="rgb(243,85,7)" fg:x="6490" fg:w="21"/><text x="77.0911%" y="911.50"></text></g><g><title>drain_obj_stock (10 samples, 0.12%)</title><rect x="76.9713%" y="885" width="0.1184%" height="15" fill="rgb(228,77,47)" fg:x="6501" fg:w="10"/><text x="77.2213%" y="895.50"></text></g><g><title>mod_memcg_lruvec_state (6 samples, 0.07%)</title><rect x="77.0187%" y="869" width="0.0710%" height="15" fill="rgb(212,226,8)" fg:x="6505" fg:w="6"/><text x="77.2687%" y="879.50"></text></g><g><title>__mod_memcg_lruvec_state (6 samples, 0.07%)</title><rect x="77.0187%" y="853" width="0.0710%" height="15" fill="rgb(241,120,54)" fg:x="6505" fg:w="6"/><text x="77.2687%" y="863.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.01%)</title><rect x="77.0779%" y="837" width="0.0118%" height="15" fill="rgb(226,80,16)" fg:x="6510" fg:w="1"/><text x="77.3279%" y="847.50"></text></g><g><title>page_counter_try_charge (10 samples, 0.12%)</title><rect x="77.2081%" y="885" width="0.1184%" height="15" fill="rgb(240,76,13)" fg:x="6521" fg:w="10"/><text x="77.4581%" y="895.50"></text></g><g><title>__rcu_read_unlock (2 samples, 0.02%)</title><rect x="77.3976%" y="853" width="0.0237%" height="15" fill="rgb(252,74,8)" fg:x="6537" fg:w="2"/><text x="77.6476%" y="863.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.01%)</title><rect x="77.4449%" y="837" width="0.0118%" height="15" fill="rgb(244,155,2)" fg:x="6541" fg:w="1"/><text x="77.6949%" y="847.50"></text></g><g><title>page_counter_uncharge (9 samples, 0.11%)</title><rect x="77.4568%" y="837" width="0.1066%" height="15" fill="rgb(215,81,35)" fg:x="6542" fg:w="9"/><text x="77.7068%" y="847.50"></text></g><g><title>obj_cgroup_charge (103 samples, 1.22%)</title><rect x="76.3557%" y="917" width="1.2195%" height="15" fill="rgb(206,55,2)" fg:x="6449" fg:w="103"/><text x="76.6057%" y="927.50"></text></g><g><title>try_charge_memcg (41 samples, 0.49%)</title><rect x="77.0897%" y="901" width="0.4854%" height="15" fill="rgb(231,2,34)" fg:x="6511" fg:w="41"/><text x="77.3397%" y="911.50"></text></g><g><title>refill_stock (21 samples, 0.25%)</title><rect x="77.3265%" y="885" width="0.2486%" height="15" fill="rgb(242,176,48)" fg:x="6531" fg:w="21"/><text x="77.5765%" y="895.50"></text></g><g><title>__refill_stock (17 samples, 0.20%)</title><rect x="77.3739%" y="869" width="0.2013%" height="15" fill="rgb(249,31,36)" fg:x="6535" fg:w="17"/><text x="77.6239%" y="879.50"></text></g><g><title>drain_stock (13 samples, 0.15%)</title><rect x="77.4213%" y="853" width="0.1539%" height="15" fill="rgb(205,18,17)" fg:x="6539" fg:w="13"/><text x="77.6713%" y="863.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="77.5633%" y="837" width="0.0118%" height="15" fill="rgb(254,130,5)" fg:x="6551" fg:w="1"/><text x="77.8133%" y="847.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="77.5633%" y="821" width="0.0118%" height="15" fill="rgb(229,42,45)" fg:x="6551" fg:w="1"/><text x="77.8133%" y="831.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="77.5752%" y="917" width="0.0118%" height="15" fill="rgb(245,95,25)" fg:x="6552" fg:w="1"/><text x="77.8252%" y="927.50"></text></g><g><title>__kmalloc (123 samples, 1.46%)</title><rect x="76.1426%" y="933" width="1.4563%" height="15" fill="rgb(249,193,38)" fg:x="6431" fg:w="123"/><text x="76.3926%" y="943.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="77.5870%" y="917" width="0.0118%" height="15" fill="rgb(241,140,43)" fg:x="6553" fg:w="1"/><text x="77.8370%" y="927.50"></text></g><g><title>__task_rq_lock (3 samples, 0.04%)</title><rect x="77.9067%" y="853" width="0.0355%" height="15" fill="rgb(245,78,48)" fg:x="6580" fg:w="3"/><text x="78.1567%" y="863.50"></text></g><g><title>raw_spin_rq_lock_nested (3 samples, 0.04%)</title><rect x="77.9067%" y="837" width="0.0355%" height="15" fill="rgb(214,92,39)" fg:x="6580" fg:w="3"/><text x="78.1567%" y="847.50"></text></g><g><title>_raw_spin_lock (3 samples, 0.04%)</title><rect x="77.9067%" y="821" width="0.0355%" height="15" fill="rgb(211,189,14)" fg:x="6580" fg:w="3"/><text x="78.1567%" y="831.50"></text></g><g><title>native_queued_spin_lock_slowpath (3 samples, 0.04%)</title><rect x="77.9067%" y="805" width="0.0355%" height="15" fill="rgb(218,7,24)" fg:x="6580" fg:w="3"/><text x="78.1567%" y="815.50"></text></g><g><title>_raw_spin_lock_irqsave (5 samples, 0.06%)</title><rect x="77.9422%" y="853" width="0.0592%" height="15" fill="rgb(224,200,49)" fg:x="6583" fg:w="5"/><text x="78.1922%" y="863.50"></text></g><g><title>_find_next_bit (1 samples, 0.01%)</title><rect x="78.0488%" y="837" width="0.0118%" height="15" fill="rgb(218,210,14)" fg:x="6592" fg:w="1"/><text x="78.2988%" y="847.50"></text></g><g><title>available_idle_cpu (2 samples, 0.02%)</title><rect x="78.0606%" y="837" width="0.0237%" height="15" fill="rgb(234,142,31)" fg:x="6593" fg:w="2"/><text x="78.3106%" y="847.50"></text></g><g><title>select_idle_core.isra.0 (1 samples, 0.01%)</title><rect x="78.0843%" y="837" width="0.0118%" height="15" fill="rgb(227,165,2)" fg:x="6595" fg:w="1"/><text x="78.3343%" y="847.50"></text></g><g><title>available_idle_cpu (1 samples, 0.01%)</title><rect x="78.0843%" y="821" width="0.0118%" height="15" fill="rgb(232,44,46)" fg:x="6595" fg:w="1"/><text x="78.3343%" y="831.50"></text></g><g><title>select_task_rq_fair (12 samples, 0.14%)</title><rect x="78.0014%" y="853" width="0.1421%" height="15" fill="rgb(236,149,47)" fg:x="6588" fg:w="12"/><text x="78.2514%" y="863.50"></text></g><g><title>task_h_load (4 samples, 0.05%)</title><rect x="78.0961%" y="837" width="0.0474%" height="15" fill="rgb(227,45,31)" fg:x="6596" fg:w="4"/><text x="78.3461%" y="847.50"></text></g><g><title>set_task_cpu (2 samples, 0.02%)</title><rect x="78.1435%" y="853" width="0.0237%" height="15" fill="rgb(240,176,51)" fg:x="6600" fg:w="2"/><text x="78.3935%" y="863.50"></text></g><g><title>enqueue_task (3 samples, 0.04%)</title><rect x="78.1672%" y="837" width="0.0355%" height="15" fill="rgb(249,146,41)" fg:x="6602" fg:w="3"/><text x="78.4172%" y="847.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.02%)</title><rect x="78.1790%" y="821" width="0.0237%" height="15" fill="rgb(213,208,4)" fg:x="6603" fg:w="2"/><text x="78.4290%" y="831.50"></text></g><g><title>ttwu_do_activate (4 samples, 0.05%)</title><rect x="78.1672%" y="853" width="0.0474%" height="15" fill="rgb(245,84,36)" fg:x="6602" fg:w="4"/><text x="78.4172%" y="863.50"></text></g><g><title>sched_mm_cid_migrate_to (1 samples, 0.01%)</title><rect x="78.2027%" y="837" width="0.0118%" height="15" fill="rgb(254,84,18)" fg:x="6605" fg:w="1"/><text x="78.4527%" y="847.50"></text></g><g><title>__smp_call_single_queue (1 samples, 0.01%)</title><rect x="78.2382%" y="837" width="0.0118%" height="15" fill="rgb(225,38,54)" fg:x="6608" fg:w="1"/><text x="78.4882%" y="847.50"></text></g><g><title>call_function_single_prep_ipi (1 samples, 0.01%)</title><rect x="78.2382%" y="821" width="0.0118%" height="15" fill="rgb(246,50,30)" fg:x="6608" fg:w="1"/><text x="78.4882%" y="831.50"></text></g><g><title>default_send_IPI_single_phys (2 samples, 0.02%)</title><rect x="78.2501%" y="837" width="0.0237%" height="15" fill="rgb(246,148,9)" fg:x="6609" fg:w="2"/><text x="78.5001%" y="847.50"></text></g><g><title>__wake_up_common (51 samples, 0.60%)</title><rect x="77.6817%" y="901" width="0.6038%" height="15" fill="rgb(223,75,4)" fg:x="6561" fg:w="51"/><text x="77.9317%" y="911.50"></text></g><g><title>pollwake (46 samples, 0.54%)</title><rect x="77.7409%" y="885" width="0.5446%" height="15" fill="rgb(239,148,41)" fg:x="6566" fg:w="46"/><text x="77.9909%" y="895.50"></text></g><g><title>try_to_wake_up (45 samples, 0.53%)</title><rect x="77.7528%" y="869" width="0.5328%" height="15" fill="rgb(205,195,3)" fg:x="6567" fg:w="45"/><text x="78.0028%" y="879.50"></text></g><g><title>ttwu_queue_wakelist (6 samples, 0.07%)</title><rect x="78.2145%" y="853" width="0.0710%" height="15" fill="rgb(254,161,1)" fg:x="6606" fg:w="6"/><text x="78.4645%" y="863.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.01%)</title><rect x="78.2737%" y="837" width="0.0118%" height="15" fill="rgb(211,229,8)" fg:x="6611" fg:w="1"/><text x="78.5237%" y="847.50"></text></g><g><title>sched_clock (1 samples, 0.01%)</title><rect x="78.2737%" y="821" width="0.0118%" height="15" fill="rgb(220,97,9)" fg:x="6611" fg:w="1"/><text x="78.5237%" y="831.50"></text></g><g><title>native_sched_clock (1 samples, 0.01%)</title><rect x="78.2737%" y="805" width="0.0118%" height="15" fill="rgb(240,218,8)" fg:x="6611" fg:w="1"/><text x="78.5237%" y="815.50"></text></g><g><title>__wake_up (54 samples, 0.64%)</title><rect x="77.6581%" y="917" width="0.6394%" height="15" fill="rgb(250,44,0)" fg:x="6559" fg:w="54"/><text x="77.9081%" y="927.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.01%)</title><rect x="78.2856%" y="901" width="0.0118%" height="15" fill="rgb(236,41,53)" fg:x="6612" fg:w="1"/><text x="78.5356%" y="911.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.02%)</title><rect x="78.2974%" y="917" width="0.0237%" height="15" fill="rgb(218,227,13)" fg:x="6613" fg:w="2"/><text x="78.5474%" y="927.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.01%)</title><rect x="78.3211%" y="917" width="0.0118%" height="15" fill="rgb(217,94,32)" fg:x="6615" fg:w="1"/><text x="78.5711%" y="927.50"></text></g><g><title>fsnotify_insert_event (64 samples, 0.76%)</title><rect x="77.5989%" y="933" width="0.7578%" height="15" fill="rgb(213,217,12)" fg:x="6554" fg:w="64"/><text x="77.8489%" y="943.50"></text></g><g><title>inotify_merge (2 samples, 0.02%)</title><rect x="78.3329%" y="917" width="0.0237%" height="15" fill="rgb(229,13,46)" fg:x="6616" fg:w="2"/><text x="78.5829%" y="927.50"></text></g><g><title>kfree (8 samples, 0.09%)</title><rect x="78.3566%" y="933" width="0.0947%" height="15" fill="rgb(243,139,5)" fg:x="6618" fg:w="8"/><text x="78.6066%" y="943.50"></text></g><g><title>__memcg_slab_free_hook (3 samples, 0.04%)</title><rect x="78.4158%" y="917" width="0.0355%" height="15" fill="rgb(249,38,45)" fg:x="6623" fg:w="3"/><text x="78.6658%" y="927.50"></text></g><g><title>refill_obj_stock (1 samples, 0.01%)</title><rect x="78.4395%" y="901" width="0.0118%" height="15" fill="rgb(216,70,11)" fg:x="6625" fg:w="1"/><text x="78.6895%" y="911.50"></text></g><g><title>memcpy (2 samples, 0.02%)</title><rect x="78.4513%" y="933" width="0.0237%" height="15" fill="rgb(253,101,25)" fg:x="6626" fg:w="2"/><text x="78.7013%" y="943.50"></text></g><g><title>fsnotify (241 samples, 2.85%)</title><rect x="75.6453%" y="965" width="2.8534%" height="15" fill="rgb(207,197,30)" fg:x="6389" fg:w="241"/><text x="75.8953%" y="975.50">fs..</text></g><g><title>inotify_handle_inode_event (206 samples, 2.44%)</title><rect x="76.0597%" y="949" width="2.4390%" height="15" fill="rgb(238,87,13)" fg:x="6424" fg:w="206"/><text x="76.3097%" y="959.50">in..</text></g><g><title>strlen (2 samples, 0.02%)</title><rect x="78.4750%" y="933" width="0.0237%" height="15" fill="rgb(215,155,8)" fg:x="6628" fg:w="2"/><text x="78.7250%" y="943.50"></text></g><g><title>__fsnotify_parent (259 samples, 3.07%)</title><rect x="75.4440%" y="981" width="3.0665%" height="15" fill="rgb(239,166,38)" fg:x="6372" fg:w="259"/><text x="75.6940%" y="991.50">__f..</text></g><g><title>take_dentry_name_snapshot (1 samples, 0.01%)</title><rect x="78.4987%" y="965" width="0.0118%" height="15" fill="rgb(240,194,35)" fg:x="6630" fg:w="1"/><text x="78.7487%" y="975.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="78.4987%" y="949" width="0.0118%" height="15" fill="rgb(219,10,44)" fg:x="6630" fg:w="1"/><text x="78.7487%" y="959.50"></text></g><g><title>ksys_write (430 samples, 5.09%)</title><rect x="73.4549%" y="1013" width="5.0912%" height="15" fill="rgb(251,220,35)" fg:x="6204" fg:w="430"/><text x="73.7049%" y="1023.50">ksys_w..</text></g><g><title>vfs_write (425 samples, 5.03%)</title><rect x="73.5141%" y="997" width="5.0320%" height="15" fill="rgb(218,117,13)" fg:x="6209" fg:w="425"/><text x="73.7641%" y="1007.50">vfs_wr..</text></g><g><title>rw_verify_area (3 samples, 0.04%)</title><rect x="78.5105%" y="981" width="0.0355%" height="15" fill="rgb(221,213,40)" fg:x="6631" fg:w="3"/><text x="78.7605%" y="991.50"></text></g><g><title>security_file_permission (3 samples, 0.04%)</title><rect x="78.5105%" y="965" width="0.0355%" height="15" fill="rgb(251,224,35)" fg:x="6631" fg:w="3"/><text x="78.7605%" y="975.50"></text></g><g><title>bpf_lsm_file_permission (1 samples, 0.01%)</title><rect x="78.5342%" y="949" width="0.0118%" height="15" fill="rgb(241,33,39)" fg:x="6633" fg:w="1"/><text x="78.7842%" y="959.50"></text></g><g><title>__rseq_handle_notify_resume (2 samples, 0.02%)</title><rect x="78.5579%" y="997" width="0.0237%" height="15" fill="rgb(222,74,17)" fg:x="6635" fg:w="2"/><text x="78.8079%" y="1007.50"></text></g><g><title>__put_user_8 (1 samples, 0.01%)</title><rect x="78.5697%" y="981" width="0.0118%" height="15" fill="rgb(225,103,0)" fg:x="6636" fg:w="1"/><text x="78.8197%" y="991.50"></text></g><g><title>blkcg_maybe_throttle_current (2 samples, 0.02%)</title><rect x="78.5816%" y="997" width="0.0237%" height="15" fill="rgb(240,0,12)" fg:x="6637" fg:w="2"/><text x="78.8316%" y="1007.50"></text></g><g><title>mem_cgroup_handle_over_high (1 samples, 0.01%)</title><rect x="78.6053%" y="997" width="0.0118%" height="15" fill="rgb(233,213,37)" fg:x="6639" fg:w="1"/><text x="78.8553%" y="1007.50"></text></g><g><title>entry_SYSCALL_64 (440 samples, 5.21%)</title><rect x="73.4194%" y="1045" width="5.2096%" height="15" fill="rgb(225,84,52)" fg:x="6201" fg:w="440"/><text x="73.6694%" y="1055.50">entry_..</text></g><g><title>do_syscall_64 (437 samples, 5.17%)</title><rect x="73.4549%" y="1029" width="5.1740%" height="15" fill="rgb(247,160,51)" fg:x="6204" fg:w="437"/><text x="73.7049%" y="1039.50">do_sys..</text></g><g><title>syscall_exit_to_user_mode (7 samples, 0.08%)</title><rect x="78.5461%" y="1013" width="0.0829%" height="15" fill="rgb(244,60,51)" fg:x="6634" fg:w="7"/><text x="78.7961%" y="1023.50"></text></g><g><title>task_work_run (1 samples, 0.01%)</title><rect x="78.6171%" y="997" width="0.0118%" height="15" fill="rgb(233,114,7)" fg:x="6640" fg:w="1"/><text x="78.8671%" y="1007.50"></text></g><g><title>task_mm_cid_work (1 samples, 0.01%)</title><rect x="78.6171%" y="981" width="0.0118%" height="15" fill="rgb(246,136,16)" fg:x="6640" fg:w="1"/><text x="78.8671%" y="991.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (451 samples, 5.34%)</title><rect x="73.3010%" y="1109" width="5.3398%" height="15" fill="rgb(243,114,45)" fg:x="6191" fg:w="451"/><text x="73.5510%" y="1119.50">&lt;std::i..</text></g><g><title>std::io::Write::write_all (448 samples, 5.30%)</title><rect x="73.3365%" y="1093" width="5.3043%" height="15" fill="rgb(247,183,43)" fg:x="6194" fg:w="448"/><text x="73.5865%" y="1103.50">std::i..</text></g><g><title>&lt;std::os::unix::net::stream::UnixStream as std::io::Write&gt;::write (446 samples, 5.28%)</title><rect x="73.3602%" y="1077" width="5.2806%" height="15" fill="rgb(251,210,42)" fg:x="6196" fg:w="446"/><text x="73.6102%" y="1087.50">&lt;std::..</text></g><g><title>write (446 samples, 5.28%)</title><rect x="73.3602%" y="1061" width="5.2806%" height="15" fill="rgb(221,88,35)" fg:x="6196" fg:w="446"/><text x="73.6102%" y="1071.50">write</text></g><g><title>syscall_return_via_sysret (1 samples, 0.01%)</title><rect x="78.6289%" y="1045" width="0.0118%" height="15" fill="rgb(242,21,20)" fg:x="6641" fg:w="1"/><text x="78.8789%" y="1055.50"></text></g><g><title>core::fmt::float::&lt;impl core::fmt::Display for f64&gt;::fmt (1 samples, 0.01%)</title><rect x="78.6408%" y="1109" width="0.0118%" height="15" fill="rgb(233,226,36)" fg:x="6642" fg:w="1"/><text x="78.8908%" y="1119.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="78.6645%" y="1077" width="0.0118%" height="15" fill="rgb(243,189,34)" fg:x="6644" fg:w="1"/><text x="78.9145%" y="1087.50"></text></g><g><title>down_write (1 samples, 0.01%)</title><rect x="78.7000%" y="933" width="0.0118%" height="15" fill="rgb(207,145,50)" fg:x="6647" fg:w="1"/><text x="78.9500%" y="943.50"></text></g><g><title>file_modified (2 samples, 0.02%)</title><rect x="78.7118%" y="933" width="0.0237%" height="15" fill="rgb(242,1,50)" fg:x="6648" fg:w="2"/><text x="78.9618%" y="943.50"></text></g><g><title>inode_needs_update_time (2 samples, 0.02%)</title><rect x="78.7118%" y="917" width="0.0237%" height="15" fill="rgb(231,65,32)" fg:x="6648" fg:w="2"/><text x="78.9618%" y="927.50"></text></g><g><title>timestamp_truncate (2 samples, 0.02%)</title><rect x="78.7118%" y="901" width="0.0237%" height="15" fill="rgb(208,68,49)" fg:x="6648" fg:w="2"/><text x="78.9618%" y="911.50"></text></g><g><title>crypto_shash_update (1 samples, 0.01%)</title><rect x="78.8539%" y="821" width="0.0118%" height="15" fill="rgb(253,54,49)" fg:x="6660" fg:w="1"/><text x="79.1039%" y="831.50"></text></g><g><title>[[crc32c_intel]] (1 samples, 0.01%)</title><rect x="78.8539%" y="805" width="0.0118%" height="15" fill="rgb(245,186,24)" fg:x="6660" fg:w="1"/><text x="79.1039%" y="815.50"></text></g><g><title>[[ext4]] (3 samples, 0.04%)</title><rect x="78.8421%" y="837" width="0.0355%" height="15" fill="rgb(209,2,41)" fg:x="6659" fg:w="3"/><text x="79.0921%" y="847.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="78.8657%" y="821" width="0.0118%" height="15" fill="rgb(242,208,54)" fg:x="6661" fg:w="1"/><text x="79.1157%" y="831.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="78.8657%" y="805" width="0.0118%" height="15" fill="rgb(225,9,51)" fg:x="6661" fg:w="1"/><text x="79.1157%" y="815.50"></text></g><g><title>[[ext4]] (5 samples, 0.06%)</title><rect x="78.8302%" y="853" width="0.0592%" height="15" fill="rgb(207,207,25)" fg:x="6658" fg:w="5"/><text x="79.0802%" y="863.50"></text></g><g><title>bdev_getblk (1 samples, 0.01%)</title><rect x="78.8776%" y="837" width="0.0118%" height="15" fill="rgb(253,96,18)" fg:x="6662" fg:w="1"/><text x="79.1276%" y="847.50"></text></g><g><title>__find_get_block (1 samples, 0.01%)</title><rect x="78.8776%" y="821" width="0.0118%" height="15" fill="rgb(252,215,20)" fg:x="6662" fg:w="1"/><text x="79.1276%" y="831.50"></text></g><g><title>[[ext4]] (8 samples, 0.09%)</title><rect x="78.8065%" y="885" width="0.0947%" height="15" fill="rgb(245,227,26)" fg:x="6656" fg:w="8"/><text x="79.0565%" y="895.50"></text></g><g><title>[[ext4]] (7 samples, 0.08%)</title><rect x="78.8184%" y="869" width="0.0829%" height="15" fill="rgb(241,208,0)" fg:x="6657" fg:w="7"/><text x="79.0684%" y="879.50"></text></g><g><title>[[jbd2]] (1 samples, 0.01%)</title><rect x="78.8894%" y="853" width="0.0118%" height="15" fill="rgb(224,130,10)" fg:x="6663" fg:w="1"/><text x="79.1394%" y="863.50"></text></g><g><title>[[ext4]] (14 samples, 0.17%)</title><rect x="78.7592%" y="901" width="0.1658%" height="15" fill="rgb(237,29,0)" fg:x="6652" fg:w="14"/><text x="79.0092%" y="911.50"></text></g><g><title>[[jbd2]] (2 samples, 0.02%)</title><rect x="78.9013%" y="885" width="0.0237%" height="15" fill="rgb(219,27,41)" fg:x="6664" fg:w="2"/><text x="79.1513%" y="895.50"></text></g><g><title>[[jbd2]] (2 samples, 0.02%)</title><rect x="78.9013%" y="869" width="0.0237%" height="15" fill="rgb(245,101,19)" fg:x="6664" fg:w="2"/><text x="79.1513%" y="879.50"></text></g><g><title>__wake_up (2 samples, 0.02%)</title><rect x="78.9013%" y="853" width="0.0237%" height="15" fill="rgb(243,44,37)" fg:x="6664" fg:w="2"/><text x="79.1513%" y="863.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="78.9131%" y="837" width="0.0118%" height="15" fill="rgb(228,213,43)" fg:x="6665" fg:w="1"/><text x="79.1631%" y="847.50"></text></g><g><title>[[jbd2]] (1 samples, 0.01%)</title><rect x="78.9249%" y="885" width="0.0118%" height="15" fill="rgb(219,163,21)" fg:x="6666" fg:w="1"/><text x="79.1749%" y="895.50"></text></g><g><title>[[jbd2]] (1 samples, 0.01%)</title><rect x="78.9249%" y="869" width="0.0118%" height="15" fill="rgb(234,86,24)" fg:x="6666" fg:w="1"/><text x="79.1749%" y="879.50"></text></g><g><title>[[jbd2]] (4 samples, 0.05%)</title><rect x="78.9249%" y="901" width="0.0474%" height="15" fill="rgb(225,10,24)" fg:x="6666" fg:w="4"/><text x="79.1749%" y="911.50"></text></g><g><title>kmem_cache_alloc (3 samples, 0.04%)</title><rect x="78.9368%" y="885" width="0.0355%" height="15" fill="rgb(218,109,7)" fg:x="6667" fg:w="3"/><text x="79.1868%" y="895.50"></text></g><g><title>memset (1 samples, 0.01%)</title><rect x="78.9605%" y="869" width="0.0118%" height="15" fill="rgb(210,20,26)" fg:x="6669" fg:w="1"/><text x="79.2105%" y="879.50"></text></g><g><title>__filemap_get_folio (1 samples, 0.01%)</title><rect x="78.9723%" y="901" width="0.0118%" height="15" fill="rgb(216,18,1)" fg:x="6670" fg:w="1"/><text x="79.2223%" y="911.50"></text></g><g><title>[[ext4]] (22 samples, 0.26%)</title><rect x="78.7355%" y="917" width="0.2605%" height="15" fill="rgb(206,163,23)" fg:x="6650" fg:w="22"/><text x="78.9855%" y="927.50"></text></g><g><title>block_write_end (1 samples, 0.01%)</title><rect x="78.9841%" y="901" width="0.0118%" height="15" fill="rgb(229,150,31)" fg:x="6671" fg:w="1"/><text x="79.2341%" y="911.50"></text></g><g><title>__block_commit_write (1 samples, 0.01%)</title><rect x="78.9841%" y="885" width="0.0118%" height="15" fill="rgb(231,10,5)" fg:x="6671" fg:w="1"/><text x="79.2341%" y="895.50"></text></g><g><title>balance_dirty_pages_ratelimited_flags (2 samples, 0.02%)</title><rect x="78.9960%" y="917" width="0.0237%" height="15" fill="rgb(250,40,50)" fg:x="6672" fg:w="2"/><text x="79.2460%" y="927.50"></text></g><g><title>[[ext4]] (28 samples, 0.33%)</title><rect x="78.7000%" y="949" width="0.3315%" height="15" fill="rgb(217,119,7)" fg:x="6647" fg:w="28"/><text x="78.9500%" y="959.50"></text></g><g><title>generic_perform_write (25 samples, 0.30%)</title><rect x="78.7355%" y="933" width="0.2960%" height="15" fill="rgb(245,214,40)" fg:x="6650" fg:w="25"/><text x="78.9855%" y="943.50"></text></g><g><title>fault_in_iov_iter_readable (1 samples, 0.01%)</title><rect x="79.0197%" y="917" width="0.0118%" height="15" fill="rgb(216,187,1)" fg:x="6674" fg:w="1"/><text x="79.2697%" y="927.50"></text></g><g><title>fault_in_readable (1 samples, 0.01%)</title><rect x="79.0197%" y="901" width="0.0118%" height="15" fill="rgb(237,146,21)" fg:x="6674" fg:w="1"/><text x="79.2697%" y="911.50"></text></g><g><title>__srcu_read_unlock (1 samples, 0.01%)</title><rect x="79.1736%" y="917" width="0.0118%" height="15" fill="rgb(210,174,47)" fg:x="6687" fg:w="1"/><text x="79.4236%" y="927.50"></text></g><g><title>__memcg_slab_post_alloc_hook (9 samples, 0.11%)</title><rect x="79.2920%" y="885" width="0.1066%" height="15" fill="rgb(218,111,39)" fg:x="6697" fg:w="9"/><text x="79.5420%" y="895.50"></text></g><g><title>mod_objcg_state (1 samples, 0.01%)</title><rect x="79.3867%" y="869" width="0.0118%" height="15" fill="rgb(224,95,19)" fg:x="6705" fg:w="1"/><text x="79.6367%" y="879.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="79.3985%" y="885" width="0.0118%" height="15" fill="rgb(234,15,38)" fg:x="6706" fg:w="1"/><text x="79.6485%" y="895.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="79.3985%" y="869" width="0.0118%" height="15" fill="rgb(246,56,12)" fg:x="6706" fg:w="1"/><text x="79.6485%" y="879.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="79.3985%" y="853" width="0.0118%" height="15" fill="rgb(247,16,17)" fg:x="6706" fg:w="1"/><text x="79.6485%" y="863.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="79.3985%" y="837" width="0.0118%" height="15" fill="rgb(215,151,11)" fg:x="6706" fg:w="1"/><text x="79.6485%" y="847.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="79.3985%" y="821" width="0.0118%" height="15" fill="rgb(225,16,24)" fg:x="6706" fg:w="1"/><text x="79.6485%" y="831.50"></text></g><g><title>tick_nohz_handler (1 samples, 0.01%)</title><rect x="79.3985%" y="805" width="0.0118%" height="15" fill="rgb(217,117,5)" fg:x="6706" fg:w="1"/><text x="79.6485%" y="815.50"></text></g><g><title>update_process_times (1 samples, 0.01%)</title><rect x="79.3985%" y="789" width="0.0118%" height="15" fill="rgb(246,187,53)" fg:x="6706" fg:w="1"/><text x="79.6485%" y="799.50"></text></g><g><title>scheduler_tick (1 samples, 0.01%)</title><rect x="79.3985%" y="773" width="0.0118%" height="15" fill="rgb(241,71,40)" fg:x="6706" fg:w="1"/><text x="79.6485%" y="783.50"></text></g><g><title>task_tick_fair (1 samples, 0.01%)</title><rect x="79.3985%" y="757" width="0.0118%" height="15" fill="rgb(231,67,39)" fg:x="6706" fg:w="1"/><text x="79.6485%" y="767.50"></text></g><g><title>update_load_avg (1 samples, 0.01%)</title><rect x="79.3985%" y="741" width="0.0118%" height="15" fill="rgb(222,120,24)" fg:x="6706" fg:w="1"/><text x="79.6485%" y="751.50"></text></g><g><title>memset (3 samples, 0.04%)</title><rect x="79.4104%" y="885" width="0.0355%" height="15" fill="rgb(248,3,3)" fg:x="6707" fg:w="3"/><text x="79.6604%" y="895.50"></text></g><g><title>memcg_account_kmem (4 samples, 0.05%)</title><rect x="79.5051%" y="869" width="0.0474%" height="15" fill="rgb(228,218,5)" fg:x="6715" fg:w="4"/><text x="79.7551%" y="879.50"></text></g><g><title>mod_memcg_state (4 samples, 0.05%)</title><rect x="79.5051%" y="853" width="0.0474%" height="15" fill="rgb(212,202,43)" fg:x="6715" fg:w="4"/><text x="79.7551%" y="863.50"></text></g><g><title>__mod_memcg_state (3 samples, 0.04%)</title><rect x="79.5169%" y="837" width="0.0355%" height="15" fill="rgb(235,183,2)" fg:x="6716" fg:w="3"/><text x="79.7669%" y="847.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.01%)</title><rect x="79.5406%" y="821" width="0.0118%" height="15" fill="rgb(230,165,10)" fg:x="6718" fg:w="1"/><text x="79.7906%" y="831.50"></text></g><g><title>memcg_account_kmem (3 samples, 0.04%)</title><rect x="79.5761%" y="853" width="0.0355%" height="15" fill="rgb(219,54,40)" fg:x="6721" fg:w="3"/><text x="79.8261%" y="863.50"></text></g><g><title>mod_memcg_state (2 samples, 0.02%)</title><rect x="79.5880%" y="837" width="0.0237%" height="15" fill="rgb(244,73,9)" fg:x="6722" fg:w="2"/><text x="79.8380%" y="847.50"></text></g><g><title>__mod_memcg_state (2 samples, 0.02%)</title><rect x="79.5880%" y="821" width="0.0237%" height="15" fill="rgb(212,32,45)" fg:x="6722" fg:w="2"/><text x="79.8380%" y="831.50"></text></g><g><title>obj_cgroup_uncharge_pages (6 samples, 0.07%)</title><rect x="79.5525%" y="869" width="0.0710%" height="15" fill="rgb(205,58,31)" fg:x="6719" fg:w="6"/><text x="79.8025%" y="879.50"></text></g><g><title>refill_stock (1 samples, 0.01%)</title><rect x="79.6117%" y="853" width="0.0118%" height="15" fill="rgb(250,120,43)" fg:x="6724" fg:w="1"/><text x="79.8617%" y="863.50"></text></g><g><title>refill_obj_stock (7 samples, 0.08%)</title><rect x="79.6235%" y="869" width="0.0829%" height="15" fill="rgb(235,13,10)" fg:x="6725" fg:w="7"/><text x="79.8735%" y="879.50"></text></g><g><title>drain_obj_stock (3 samples, 0.04%)</title><rect x="79.6709%" y="853" width="0.0355%" height="15" fill="rgb(232,219,31)" fg:x="6729" fg:w="3"/><text x="79.9209%" y="863.50"></text></g><g><title>mod_memcg_lruvec_state (1 samples, 0.01%)</title><rect x="79.6945%" y="837" width="0.0118%" height="15" fill="rgb(218,157,51)" fg:x="6731" fg:w="1"/><text x="79.9445%" y="847.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.01%)</title><rect x="79.6945%" y="821" width="0.0118%" height="15" fill="rgb(211,91,52)" fg:x="6731" fg:w="1"/><text x="79.9445%" y="831.50"></text></g><g><title>page_counter_try_charge (5 samples, 0.06%)</title><rect x="79.7656%" y="853" width="0.0592%" height="15" fill="rgb(240,173,1)" fg:x="6737" fg:w="5"/><text x="80.0156%" y="863.50"></text></g><g><title>__kmalloc (58 samples, 0.69%)</title><rect x="79.2209%" y="901" width="0.6867%" height="15" fill="rgb(248,20,47)" fg:x="6691" fg:w="58"/><text x="79.4709%" y="911.50"></text></g><g><title>obj_cgroup_charge (39 samples, 0.46%)</title><rect x="79.4459%" y="885" width="0.4618%" height="15" fill="rgb(217,221,40)" fg:x="6710" fg:w="39"/><text x="79.6959%" y="895.50"></text></g><g><title>try_charge_memcg (17 samples, 0.20%)</title><rect x="79.7064%" y="869" width="0.2013%" height="15" fill="rgb(226,149,51)" fg:x="6732" fg:w="17"/><text x="79.9564%" y="879.50"></text></g><g><title>refill_stock (7 samples, 0.08%)</title><rect x="79.8248%" y="853" width="0.0829%" height="15" fill="rgb(252,193,7)" fg:x="6742" fg:w="7"/><text x="80.0748%" y="863.50"></text></g><g><title>__refill_stock (6 samples, 0.07%)</title><rect x="79.8366%" y="837" width="0.0710%" height="15" fill="rgb(205,123,0)" fg:x="6743" fg:w="6"/><text x="80.0866%" y="847.50"></text></g><g><title>drain_stock (4 samples, 0.05%)</title><rect x="79.8603%" y="821" width="0.0474%" height="15" fill="rgb(233,173,25)" fg:x="6745" fg:w="4"/><text x="80.1103%" y="831.50"></text></g><g><title>page_counter_uncharge (3 samples, 0.04%)</title><rect x="79.8721%" y="805" width="0.0355%" height="15" fill="rgb(216,63,32)" fg:x="6746" fg:w="3"/><text x="80.1221%" y="815.50"></text></g><g><title>propagate_protected_usage (1 samples, 0.01%)</title><rect x="79.8958%" y="789" width="0.0118%" height="15" fill="rgb(209,56,45)" fg:x="6748" fg:w="1"/><text x="80.1458%" y="799.50"></text></g><g><title>fsnotify_destroy_event (1 samples, 0.01%)</title><rect x="79.9076%" y="901" width="0.0118%" height="15" fill="rgb(226,111,49)" fg:x="6749" fg:w="1"/><text x="80.1576%" y="911.50"></text></g><g><title>__task_rq_lock (2 samples, 0.02%)</title><rect x="80.1563%" y="821" width="0.0237%" height="15" fill="rgb(244,181,21)" fg:x="6770" fg:w="2"/><text x="80.4063%" y="831.50"></text></g><g><title>raw_spin_rq_lock_nested (2 samples, 0.02%)</title><rect x="80.1563%" y="805" width="0.0237%" height="15" fill="rgb(222,126,15)" fg:x="6770" fg:w="2"/><text x="80.4063%" y="815.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.02%)</title><rect x="80.1563%" y="789" width="0.0237%" height="15" fill="rgb(222,95,17)" fg:x="6770" fg:w="2"/><text x="80.4063%" y="799.50"></text></g><g><title>native_queued_spin_lock_slowpath (2 samples, 0.02%)</title><rect x="80.1563%" y="773" width="0.0237%" height="15" fill="rgb(254,46,5)" fg:x="6770" fg:w="2"/><text x="80.4063%" y="783.50"></text></g><g><title>select_task_rq_fair (1 samples, 0.01%)</title><rect x="80.1800%" y="821" width="0.0118%" height="15" fill="rgb(236,216,35)" fg:x="6772" fg:w="1"/><text x="80.4300%" y="831.50"></text></g><g><title>available_idle_cpu (1 samples, 0.01%)</title><rect x="80.1800%" y="805" width="0.0118%" height="15" fill="rgb(217,187,26)" fg:x="6772" fg:w="1"/><text x="80.4300%" y="815.50"></text></g><g><title>__wake_up_common (19 samples, 0.22%)</title><rect x="79.9787%" y="869" width="0.2250%" height="15" fill="rgb(207,192,25)" fg:x="6755" fg:w="19"/><text x="80.2287%" y="879.50"></text></g><g><title>pollwake (19 samples, 0.22%)</title><rect x="79.9787%" y="853" width="0.2250%" height="15" fill="rgb(253,135,27)" fg:x="6755" fg:w="19"/><text x="80.2287%" y="863.50"></text></g><g><title>try_to_wake_up (19 samples, 0.22%)</title><rect x="79.9787%" y="837" width="0.2250%" height="15" fill="rgb(211,122,29)" fg:x="6755" fg:w="19"/><text x="80.2287%" y="847.50"></text></g><g><title>ttwu_queue_wakelist (1 samples, 0.01%)</title><rect x="80.1918%" y="821" width="0.0118%" height="15" fill="rgb(233,162,40)" fg:x="6773" fg:w="1"/><text x="80.4418%" y="831.50"></text></g><g><title>default_send_IPI_single_phys (1 samples, 0.01%)</title><rect x="80.1918%" y="805" width="0.0118%" height="15" fill="rgb(222,184,47)" fg:x="6773" fg:w="1"/><text x="80.4418%" y="815.50"></text></g><g><title>__wake_up (22 samples, 0.26%)</title><rect x="79.9550%" y="885" width="0.2605%" height="15" fill="rgb(249,99,23)" fg:x="6753" fg:w="22"/><text x="80.2050%" y="895.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.01%)</title><rect x="80.2036%" y="869" width="0.0118%" height="15" fill="rgb(214,60,12)" fg:x="6774" fg:w="1"/><text x="80.4536%" y="879.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="80.2036%" y="853" width="0.0118%" height="15" fill="rgb(250,229,36)" fg:x="6774" fg:w="1"/><text x="80.4536%" y="863.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="80.2036%" y="837" width="0.0118%" height="15" fill="rgb(232,195,10)" fg:x="6774" fg:w="1"/><text x="80.4536%" y="847.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="80.2036%" y="821" width="0.0118%" height="15" fill="rgb(205,213,31)" fg:x="6774" fg:w="1"/><text x="80.4536%" y="831.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="80.2036%" y="805" width="0.0118%" height="15" fill="rgb(237,43,8)" fg:x="6774" fg:w="1"/><text x="80.4536%" y="815.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="80.2036%" y="789" width="0.0118%" height="15" fill="rgb(216,208,3)" fg:x="6774" fg:w="1"/><text x="80.4536%" y="799.50"></text></g><g><title>tick_nohz_handler (1 samples, 0.01%)</title><rect x="80.2036%" y="773" width="0.0118%" height="15" fill="rgb(228,179,44)" fg:x="6774" fg:w="1"/><text x="80.4536%" y="783.50"></text></g><g><title>update_process_times (1 samples, 0.01%)</title><rect x="80.2036%" y="757" width="0.0118%" height="15" fill="rgb(230,192,27)" fg:x="6774" fg:w="1"/><text x="80.4536%" y="767.50"></text></g><g><title>scheduler_tick (1 samples, 0.01%)</title><rect x="80.2036%" y="741" width="0.0118%" height="15" fill="rgb(251,30,38)" fg:x="6774" fg:w="1"/><text x="80.4536%" y="751.50"></text></g><g><title>perf_event_task_tick (1 samples, 0.01%)</title><rect x="80.2036%" y="725" width="0.0118%" height="15" fill="rgb(246,55,52)" fg:x="6774" fg:w="1"/><text x="80.4536%" y="735.50"></text></g><g><title>perf_adjust_freq_unthr_context (1 samples, 0.01%)</title><rect x="80.2036%" y="709" width="0.0118%" height="15" fill="rgb(249,79,26)" fg:x="6774" fg:w="1"/><text x="80.4536%" y="719.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.02%)</title><rect x="80.2155%" y="885" width="0.0237%" height="15" fill="rgb(220,202,16)" fg:x="6775" fg:w="2"/><text x="80.4655%" y="895.50"></text></g><g><title>inotify_merge (2 samples, 0.02%)</title><rect x="80.2392%" y="885" width="0.0237%" height="15" fill="rgb(250,170,23)" fg:x="6777" fg:w="2"/><text x="80.4892%" y="895.50"></text></g><g><title>strcmp (1 samples, 0.01%)</title><rect x="80.2510%" y="869" width="0.0118%" height="15" fill="rgb(230,7,37)" fg:x="6778" fg:w="1"/><text x="80.5010%" y="879.50"></text></g><g><title>fsnotify_insert_event (30 samples, 0.36%)</title><rect x="79.9195%" y="901" width="0.3552%" height="15" fill="rgb(213,71,1)" fg:x="6750" fg:w="30"/><text x="80.1695%" y="911.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="80.2628%" y="885" width="0.0118%" height="15" fill="rgb(227,87,39)" fg:x="6779" fg:w="1"/><text x="80.5128%" y="895.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="80.2628%" y="869" width="0.0118%" height="15" fill="rgb(210,41,29)" fg:x="6779" fg:w="1"/><text x="80.5128%" y="879.50"></text></g><g><title>inotify_free_event (1 samples, 0.01%)</title><rect x="80.2747%" y="901" width="0.0118%" height="15" fill="rgb(206,191,31)" fg:x="6780" fg:w="1"/><text x="80.5247%" y="911.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.01%)</title><rect x="80.3339%" y="869" width="0.0118%" height="15" fill="rgb(247,75,54)" fg:x="6785" fg:w="1"/><text x="80.5839%" y="879.50"></text></g><g><title>__memcg_slab_free_hook (3 samples, 0.04%)</title><rect x="80.3220%" y="885" width="0.0355%" height="15" fill="rgb(208,54,50)" fg:x="6784" fg:w="3"/><text x="80.5720%" y="895.50"></text></g><g><title>mod_objcg_state (1 samples, 0.01%)</title><rect x="80.3457%" y="869" width="0.0118%" height="15" fill="rgb(214,90,37)" fg:x="6786" fg:w="1"/><text x="80.5957%" y="879.50"></text></g><g><title>kfree (7 samples, 0.08%)</title><rect x="80.2865%" y="901" width="0.0829%" height="15" fill="rgb(220,132,6)" fg:x="6781" fg:w="7"/><text x="80.5365%" y="911.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="80.3576%" y="885" width="0.0118%" height="15" fill="rgb(213,167,7)" fg:x="6787" fg:w="1"/><text x="80.6076%" y="895.50"></text></g><g><title>fsnotify (111 samples, 1.31%)</title><rect x="79.0670%" y="933" width="1.3142%" height="15" fill="rgb(243,36,27)" fg:x="6678" fg:w="111"/><text x="79.3170%" y="943.50"></text></g><g><title>inotify_handle_inode_event (101 samples, 1.20%)</title><rect x="79.1854%" y="917" width="1.1958%" height="15" fill="rgb(235,147,12)" fg:x="6688" fg:w="101"/><text x="79.4354%" y="927.50"></text></g><g><title>memcpy (1 samples, 0.01%)</title><rect x="80.3694%" y="901" width="0.0118%" height="15" fill="rgb(212,198,44)" fg:x="6788" fg:w="1"/><text x="80.6194%" y="911.50"></text></g><g><title>ksys_write (145 samples, 1.72%)</title><rect x="78.6881%" y="981" width="1.7168%" height="15" fill="rgb(218,68,50)" fg:x="6646" fg:w="145"/><text x="78.9381%" y="991.50"></text></g><g><title>vfs_write (145 samples, 1.72%)</title><rect x="78.6881%" y="965" width="1.7168%" height="15" fill="rgb(224,79,48)" fg:x="6646" fg:w="145"/><text x="78.9381%" y="975.50"></text></g><g><title>__fsnotify_parent (116 samples, 1.37%)</title><rect x="79.0315%" y="949" width="1.3734%" height="15" fill="rgb(213,191,50)" fg:x="6675" fg:w="116"/><text x="79.2815%" y="959.50"></text></g><g><title>take_dentry_name_snapshot (2 samples, 0.02%)</title><rect x="80.3812%" y="933" width="0.0237%" height="15" fill="rgb(254,146,10)" fg:x="6789" fg:w="2"/><text x="80.6312%" y="943.50"></text></g><g><title>memcpy (1 samples, 0.01%)</title><rect x="80.3931%" y="917" width="0.0118%" height="15" fill="rgb(215,175,11)" fg:x="6790" fg:w="1"/><text x="80.6431%" y="927.50"></text></g><g><title>blkcg_maybe_throttle_current (1 samples, 0.01%)</title><rect x="80.4168%" y="965" width="0.0118%" height="15" fill="rgb(207,49,7)" fg:x="6792" fg:w="1"/><text x="80.6668%" y="975.50"></text></g><g><title>entry_SYSCALL_64 (149 samples, 1.76%)</title><rect x="78.6763%" y="1013" width="1.7641%" height="15" fill="rgb(234,144,29)" fg:x="6645" fg:w="149"/><text x="78.9263%" y="1023.50"></text></g><g><title>do_syscall_64 (148 samples, 1.75%)</title><rect x="78.6881%" y="997" width="1.7523%" height="15" fill="rgb(213,222,48)" fg:x="6646" fg:w="148"/><text x="78.9381%" y="1007.50"></text></g><g><title>syscall_exit_to_user_mode (3 samples, 0.04%)</title><rect x="80.4049%" y="981" width="0.0355%" height="15" fill="rgb(222,8,6)" fg:x="6791" fg:w="3"/><text x="80.6549%" y="991.50"></text></g><g><title>mem_cgroup_handle_over_high (1 samples, 0.01%)</title><rect x="80.4286%" y="965" width="0.0118%" height="15" fill="rgb(221,114,49)" fg:x="6793" fg:w="1"/><text x="80.6786%" y="975.50"></text></g><g><title>reclaim_high (1 samples, 0.01%)</title><rect x="80.4286%" y="949" width="0.0118%" height="15" fill="rgb(250,140,42)" fg:x="6793" fg:w="1"/><text x="80.6786%" y="959.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts (151 samples, 1.79%)</title><rect x="78.6645%" y="1093" width="1.7878%" height="15" fill="rgb(250,150,27)" fg:x="6644" fg:w="151"/><text x="78.9145%" y="1103.50">c..</text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (150 samples, 1.78%)</title><rect x="78.6763%" y="1077" width="1.7760%" height="15" fill="rgb(252,159,3)" fg:x="6645" fg:w="150"/><text x="78.9263%" y="1087.50">&lt;..</text></g><g><title>std::io::Write::write_all (150 samples, 1.78%)</title><rect x="78.6763%" y="1061" width="1.7760%" height="15" fill="rgb(241,182,3)" fg:x="6645" fg:w="150"/><text x="78.9263%" y="1071.50">s..</text></g><g><title>&lt;std::os::unix::net::stream::UnixStream as std::io::Write&gt;::write (150 samples, 1.78%)</title><rect x="78.6763%" y="1045" width="1.7760%" height="15" fill="rgb(236,3,9)" fg:x="6645" fg:w="150"/><text x="78.9263%" y="1055.50">&lt;..</text></g><g><title>write (150 samples, 1.78%)</title><rect x="78.6763%" y="1029" width="1.7760%" height="15" fill="rgb(223,227,51)" fg:x="6645" fg:w="150"/><text x="78.9263%" y="1039.50">w..</text></g><g><title>syscall_return_via_sysret (1 samples, 0.01%)</title><rect x="80.4404%" y="1013" width="0.0118%" height="15" fill="rgb(232,133,30)" fg:x="6794" fg:w="1"/><text x="80.6904%" y="1023.50"></text></g><g><title>core::num::bignum::Big32x40::sub (1 samples, 0.01%)</title><rect x="80.4523%" y="1077" width="0.0118%" height="15" fill="rgb(209,93,27)" fg:x="6795" fg:w="1"/><text x="80.7023%" y="1087.50"></text></g><g><title>core::num::flt2dec::strategy::dragon::format_exact (2 samples, 0.02%)</title><rect x="80.4523%" y="1093" width="0.0237%" height="15" fill="rgb(208,108,34)" fg:x="6795" fg:w="2"/><text x="80.7023%" y="1103.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.01%)</title><rect x="80.4641%" y="1077" width="0.0118%" height="15" fill="rgb(215,189,13)" fg:x="6796" fg:w="1"/><text x="80.7141%" y="1087.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="80.4641%" y="1061" width="0.0118%" height="15" fill="rgb(206,88,23)" fg:x="6796" fg:w="1"/><text x="80.7141%" y="1071.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="80.4641%" y="1045" width="0.0118%" height="15" fill="rgb(240,173,0)" fg:x="6796" fg:w="1"/><text x="80.7141%" y="1055.50"></text></g><g><title>core::num::flt2dec::decoder::decode (2 samples, 0.02%)</title><rect x="80.4878%" y="1077" width="0.0237%" height="15" fill="rgb(223,106,52)" fg:x="6798" fg:w="2"/><text x="80.7378%" y="1087.50"></text></g><g><title>&lt;f64 as core::num::dec2flt::float::RawFloat&gt;::integer_decode (2 samples, 0.02%)</title><rect x="80.4878%" y="1061" width="0.0237%" height="15" fill="rgb(206,130,16)" fg:x="6798" fg:w="2"/><text x="80.7378%" y="1071.50"></text></g><g><title>&lt;core::num::bignum::Big32x40 as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="80.5233%" y="1029" width="0.0118%" height="15" fill="rgb(220,54,25)" fg:x="6801" fg:w="1"/><text x="80.7733%" y="1039.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="80.5233%" y="1013" width="0.0118%" height="15" fill="rgb(210,4,38)" fg:x="6801" fg:w="1"/><text x="80.7733%" y="1023.50"></text></g><g><title>core::num::bignum::Big32x40::mul_pow2 (2 samples, 0.02%)</title><rect x="80.5352%" y="1029" width="0.0237%" height="15" fill="rgb(238,94,39)" fg:x="6802" fg:w="2"/><text x="80.7852%" y="1039.50"></text></g><g><title>core::num::flt2dec::strategy::dragon::format_exact (5 samples, 0.06%)</title><rect x="80.5115%" y="1045" width="0.0592%" height="15" fill="rgb(234,124,34)" fg:x="6800" fg:w="5"/><text x="80.7615%" y="1055.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact_opt (1 samples, 0.01%)</title><rect x="80.5588%" y="1029" width="0.0118%" height="15" fill="rgb(221,91,40)" fg:x="6804" fg:w="1"/><text x="80.8088%" y="1039.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::max_pow10_no_more_than (1 samples, 0.01%)</title><rect x="80.5588%" y="1013" width="0.0118%" height="15" fill="rgb(246,53,28)" fg:x="6804" fg:w="1"/><text x="80.8088%" y="1023.50"></text></g><g><title>core::num::flt2dec::strategy::dragon::mul_pow10 (1 samples, 0.01%)</title><rect x="80.5707%" y="1045" width="0.0118%" height="15" fill="rgb(229,109,7)" fg:x="6805" fg:w="1"/><text x="80.8207%" y="1055.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_exact (164 samples, 1.94%)</title><rect x="78.6526%" y="1109" width="1.9417%" height="15" fill="rgb(249,117,8)" fg:x="6643" fg:w="164"/><text x="78.9026%" y="1119.50">c..</text></g><g><title>core::num::flt2dec::to_exact_fixed_str (10 samples, 0.12%)</title><rect x="80.4760%" y="1093" width="0.1184%" height="15" fill="rgb(210,181,1)" fg:x="6797" fg:w="10"/><text x="80.7260%" y="1103.50"></text></g><g><title>core::ops::function::FnMut::call_mut (7 samples, 0.08%)</title><rect x="80.5115%" y="1077" width="0.0829%" height="15" fill="rgb(211,66,1)" fg:x="6800" fg:w="7"/><text x="80.7615%" y="1087.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact (7 samples, 0.08%)</title><rect x="80.5115%" y="1061" width="0.0829%" height="15" fill="rgb(221,90,14)" fg:x="6800" fg:w="7"/><text x="80.7615%" y="1071.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact_opt (1 samples, 0.01%)</title><rect x="80.5825%" y="1045" width="0.0118%" height="15" fill="rgb(219,222,44)" fg:x="6806" fg:w="1"/><text x="80.8325%" y="1055.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::Display for u128&gt;::fmt (1 samples, 0.01%)</title><rect x="80.5944%" y="1109" width="0.0118%" height="15" fill="rgb(246,34,33)" fg:x="6807" fg:w="1"/><text x="80.8444%" y="1119.50"></text></g><g><title>[[ext4]] (1 samples, 0.01%)</title><rect x="80.7009%" y="933" width="0.0118%" height="15" fill="rgb(227,135,41)" fg:x="6816" fg:w="1"/><text x="80.9509%" y="943.50"></text></g><g><title>[[ext4]] (1 samples, 0.01%)</title><rect x="80.7483%" y="837" width="0.0118%" height="15" fill="rgb(226,15,14)" fg:x="6820" fg:w="1"/><text x="80.9983%" y="847.50"></text></g><g><title>crypto_shash_update (1 samples, 0.01%)</title><rect x="80.7483%" y="821" width="0.0118%" height="15" fill="rgb(236,148,47)" fg:x="6820" fg:w="1"/><text x="80.9983%" y="831.50"></text></g><g><title>[[ext4]] (4 samples, 0.05%)</title><rect x="80.7246%" y="885" width="0.0474%" height="15" fill="rgb(233,162,52)" fg:x="6818" fg:w="4"/><text x="80.9746%" y="895.50"></text></g><g><title>[[ext4]] (3 samples, 0.04%)</title><rect x="80.7364%" y="869" width="0.0355%" height="15" fill="rgb(244,35,28)" fg:x="6819" fg:w="3"/><text x="80.9864%" y="879.50"></text></g><g><title>[[ext4]] (3 samples, 0.04%)</title><rect x="80.7364%" y="853" width="0.0355%" height="15" fill="rgb(205,121,10)" fg:x="6819" fg:w="3"/><text x="80.9864%" y="863.50"></text></g><g><title>bdev_getblk (1 samples, 0.01%)</title><rect x="80.7601%" y="837" width="0.0118%" height="15" fill="rgb(250,58,18)" fg:x="6821" fg:w="1"/><text x="81.0101%" y="847.50"></text></g><g><title>__find_get_block (1 samples, 0.01%)</title><rect x="80.7601%" y="821" width="0.0118%" height="15" fill="rgb(216,37,13)" fg:x="6821" fg:w="1"/><text x="81.0101%" y="831.50"></text></g><g><title>cpuset_cpu_is_isolated (1 samples, 0.01%)</title><rect x="80.7601%" y="805" width="0.0118%" height="15" fill="rgb(221,215,42)" fg:x="6821" fg:w="1"/><text x="81.0101%" y="815.50"></text></g><g><title>[[jbd2]] (1 samples, 0.01%)</title><rect x="80.7838%" y="869" width="0.0118%" height="15" fill="rgb(217,214,19)" fg:x="6823" fg:w="1"/><text x="81.0338%" y="879.50"></text></g><g><title>__wake_up (1 samples, 0.01%)</title><rect x="80.7838%" y="853" width="0.0118%" height="15" fill="rgb(233,139,13)" fg:x="6823" fg:w="1"/><text x="81.0338%" y="863.50"></text></g><g><title>[[ext4]] (7 samples, 0.08%)</title><rect x="80.7246%" y="901" width="0.0829%" height="15" fill="rgb(247,168,23)" fg:x="6818" fg:w="7"/><text x="80.9746%" y="911.50"></text></g><g><title>[[jbd2]] (3 samples, 0.04%)</title><rect x="80.7720%" y="885" width="0.0355%" height="15" fill="rgb(207,202,1)" fg:x="6822" fg:w="3"/><text x="81.0220%" y="895.50"></text></g><g><title>kmem_cache_free (1 samples, 0.01%)</title><rect x="80.7956%" y="869" width="0.0118%" height="15" fill="rgb(220,155,48)" fg:x="6824" fg:w="1"/><text x="81.0456%" y="879.50"></text></g><g><title>[[jbd2]] (1 samples, 0.01%)</title><rect x="80.8075%" y="901" width="0.0118%" height="15" fill="rgb(250,43,26)" fg:x="6825" fg:w="1"/><text x="81.0575%" y="911.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.01%)</title><rect x="80.8075%" y="885" width="0.0118%" height="15" fill="rgb(212,190,23)" fg:x="6825" fg:w="1"/><text x="81.0575%" y="895.50"></text></g><g><title>[[ext4]] (10 samples, 0.12%)</title><rect x="80.7128%" y="917" width="0.1184%" height="15" fill="rgb(216,39,24)" fg:x="6817" fg:w="10"/><text x="80.9628%" y="927.50"></text></g><g><title>block_write_end (1 samples, 0.01%)</title><rect x="80.8193%" y="901" width="0.0118%" height="15" fill="rgb(252,113,16)" fg:x="6826" fg:w="1"/><text x="81.0693%" y="911.50"></text></g><g><title>__block_commit_write (1 samples, 0.01%)</title><rect x="80.8193%" y="885" width="0.0118%" height="15" fill="rgb(208,113,19)" fg:x="6826" fg:w="1"/><text x="81.0693%" y="895.50"></text></g><g><title>mark_buffer_dirty (1 samples, 0.01%)</title><rect x="80.8193%" y="869" width="0.0118%" height="15" fill="rgb(234,107,25)" fg:x="6826" fg:w="1"/><text x="81.0693%" y="879.50"></text></g><g><title>balance_dirty_pages_ratelimited_flags (5 samples, 0.06%)</title><rect x="80.8312%" y="917" width="0.0592%" height="15" fill="rgb(234,217,51)" fg:x="6827" fg:w="5"/><text x="81.0812%" y="927.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.01%)</title><rect x="80.8785%" y="901" width="0.0118%" height="15" fill="rgb(251,29,42)" fg:x="6831" fg:w="1"/><text x="81.1285%" y="911.50"></text></g><g><title>[[ext4]] (19 samples, 0.22%)</title><rect x="80.6772%" y="949" width="0.2250%" height="15" fill="rgb(221,62,51)" fg:x="6814" fg:w="19"/><text x="80.9272%" y="959.50"></text></g><g><title>generic_perform_write (16 samples, 0.19%)</title><rect x="80.7128%" y="933" width="0.1894%" height="15" fill="rgb(240,192,43)" fg:x="6817" fg:w="16"/><text x="80.9628%" y="943.50"></text></g><g><title>copy_page_from_iter_atomic (1 samples, 0.01%)</title><rect x="80.8904%" y="917" width="0.0118%" height="15" fill="rgb(224,157,47)" fg:x="6832" fg:w="1"/><text x="81.1404%" y="927.50"></text></g><g><title>dget_parent (2 samples, 0.02%)</title><rect x="80.9259%" y="933" width="0.0237%" height="15" fill="rgb(226,84,45)" fg:x="6835" fg:w="2"/><text x="81.1759%" y="943.50"></text></g><g><title>lockref_get_not_zero (1 samples, 0.01%)</title><rect x="80.9377%" y="917" width="0.0118%" height="15" fill="rgb(208,207,23)" fg:x="6836" fg:w="1"/><text x="81.1877%" y="927.50"></text></g><g><title>__memcg_slab_post_alloc_hook (1 samples, 0.01%)</title><rect x="81.0443%" y="885" width="0.0118%" height="15" fill="rgb(253,34,51)" fg:x="6845" fg:w="1"/><text x="81.2943%" y="895.50"></text></g><g><title>mod_objcg_state (1 samples, 0.01%)</title><rect x="81.0443%" y="869" width="0.0118%" height="15" fill="rgb(227,26,34)" fg:x="6845" fg:w="1"/><text x="81.2943%" y="879.50"></text></g><g><title>current_obj_cgroup (1 samples, 0.01%)</title><rect x="81.0561%" y="885" width="0.0118%" height="15" fill="rgb(245,75,19)" fg:x="6846" fg:w="1"/><text x="81.3061%" y="895.50"></text></g><g><title>refill_obj_stock (3 samples, 0.04%)</title><rect x="81.0798%" y="869" width="0.0355%" height="15" fill="rgb(250,191,31)" fg:x="6848" fg:w="3"/><text x="81.3298%" y="879.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.01%)</title><rect x="81.1035%" y="853" width="0.0118%" height="15" fill="rgb(224,11,50)" fg:x="6850" fg:w="1"/><text x="81.3535%" y="863.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="81.1627%" y="853" width="0.0118%" height="15" fill="rgb(231,171,7)" fg:x="6855" fg:w="1"/><text x="81.4127%" y="863.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="81.1627%" y="837" width="0.0118%" height="15" fill="rgb(252,214,10)" fg:x="6855" fg:w="1"/><text x="81.4127%" y="847.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="81.1627%" y="821" width="0.0118%" height="15" fill="rgb(249,45,46)" fg:x="6855" fg:w="1"/><text x="81.4127%" y="831.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="81.1627%" y="805" width="0.0118%" height="15" fill="rgb(240,173,7)" fg:x="6855" fg:w="1"/><text x="81.4127%" y="815.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="81.1627%" y="789" width="0.0118%" height="15" fill="rgb(235,214,13)" fg:x="6855" fg:w="1"/><text x="81.4127%" y="799.50"></text></g><g><title>timerfd_tmrproc (1 samples, 0.01%)</title><rect x="81.1627%" y="773" width="0.0118%" height="15" fill="rgb(245,156,8)" fg:x="6855" fg:w="1"/><text x="81.4127%" y="783.50"></text></g><g><title>__wake_up_common (1 samples, 0.01%)</title><rect x="81.1627%" y="757" width="0.0118%" height="15" fill="rgb(235,46,12)" fg:x="6855" fg:w="1"/><text x="81.4127%" y="767.50"></text></g><g><title>ep_poll_callback (1 samples, 0.01%)</title><rect x="81.1627%" y="741" width="0.0118%" height="15" fill="rgb(221,81,14)" fg:x="6855" fg:w="1"/><text x="81.4127%" y="751.50"></text></g><g><title>__wake_up (1 samples, 0.01%)</title><rect x="81.1627%" y="725" width="0.0118%" height="15" fill="rgb(238,207,9)" fg:x="6855" fg:w="1"/><text x="81.4127%" y="735.50"></text></g><g><title>__wake_up_common (1 samples, 0.01%)</title><rect x="81.1627%" y="709" width="0.0118%" height="15" fill="rgb(224,129,35)" fg:x="6855" fg:w="1"/><text x="81.4127%" y="719.50"></text></g><g><title>ep_autoremove_wake_function (1 samples, 0.01%)</title><rect x="81.1627%" y="693" width="0.0118%" height="15" fill="rgb(243,218,34)" fg:x="6855" fg:w="1"/><text x="81.4127%" y="703.50"></text></g><g><title>try_to_wake_up (1 samples, 0.01%)</title><rect x="81.1627%" y="677" width="0.0118%" height="15" fill="rgb(220,166,13)" fg:x="6855" fg:w="1"/><text x="81.4127%" y="687.50"></text></g><g><title>ttwu_do_activate (1 samples, 0.01%)</title><rect x="81.1627%" y="661" width="0.0118%" height="15" fill="rgb(227,167,49)" fg:x="6855" fg:w="1"/><text x="81.4127%" y="671.50"></text></g><g><title>enqueue_task (1 samples, 0.01%)</title><rect x="81.1627%" y="645" width="0.0118%" height="15" fill="rgb(234,142,12)" fg:x="6855" fg:w="1"/><text x="81.4127%" y="655.50"></text></g><g><title>enqueue_task_rt (1 samples, 0.01%)</title><rect x="81.1627%" y="629" width="0.0118%" height="15" fill="rgb(207,100,48)" fg:x="6855" fg:w="1"/><text x="81.4127%" y="639.50"></text></g><g><title>cpupri_set (1 samples, 0.01%)</title><rect x="81.1627%" y="613" width="0.0118%" height="15" fill="rgb(210,25,14)" fg:x="6855" fg:w="1"/><text x="81.4127%" y="623.50"></text></g><g><title>page_counter_try_charge (3 samples, 0.04%)</title><rect x="81.1745%" y="853" width="0.0355%" height="15" fill="rgb(246,116,27)" fg:x="6856" fg:w="3"/><text x="81.4245%" y="863.50"></text></g><g><title>__kmalloc (15 samples, 0.18%)</title><rect x="81.0443%" y="901" width="0.1776%" height="15" fill="rgb(214,193,42)" fg:x="6845" fg:w="15"/><text x="81.2943%" y="911.50"></text></g><g><title>obj_cgroup_charge (13 samples, 0.15%)</title><rect x="81.0680%" y="885" width="0.1539%" height="15" fill="rgb(214,122,8)" fg:x="6847" fg:w="13"/><text x="81.3180%" y="895.50"></text></g><g><title>try_charge_memcg (9 samples, 0.11%)</title><rect x="81.1153%" y="869" width="0.1066%" height="15" fill="rgb(244,173,18)" fg:x="6851" fg:w="9"/><text x="81.3653%" y="879.50"></text></g><g><title>refill_stock (1 samples, 0.01%)</title><rect x="81.2100%" y="853" width="0.0118%" height="15" fill="rgb(232,68,19)" fg:x="6859" fg:w="1"/><text x="81.4600%" y="863.50"></text></g><g><title>__refill_stock (1 samples, 0.01%)</title><rect x="81.2100%" y="837" width="0.0118%" height="15" fill="rgb(236,224,1)" fg:x="6859" fg:w="1"/><text x="81.4600%" y="847.50"></text></g><g><title>drain_stock (1 samples, 0.01%)</title><rect x="81.2100%" y="821" width="0.0118%" height="15" fill="rgb(240,11,8)" fg:x="6859" fg:w="1"/><text x="81.4600%" y="831.50"></text></g><g><title>page_counter_uncharge (1 samples, 0.01%)</title><rect x="81.2100%" y="805" width="0.0118%" height="15" fill="rgb(244,159,20)" fg:x="6859" fg:w="1"/><text x="81.4600%" y="815.50"></text></g><g><title>default_wake_function (1 samples, 0.01%)</title><rect x="81.2219%" y="837" width="0.0118%" height="15" fill="rgb(240,223,54)" fg:x="6860" fg:w="1"/><text x="81.4719%" y="847.50"></text></g><g><title>select_task_rq_fair (1 samples, 0.01%)</title><rect x="81.2574%" y="821" width="0.0118%" height="15" fill="rgb(237,146,5)" fg:x="6863" fg:w="1"/><text x="81.5074%" y="831.50"></text></g><g><title>available_idle_cpu (1 samples, 0.01%)</title><rect x="81.2574%" y="805" width="0.0118%" height="15" fill="rgb(218,221,32)" fg:x="6863" fg:w="1"/><text x="81.5074%" y="815.50"></text></g><g><title>ttwu_do_activate (1 samples, 0.01%)</title><rect x="81.2692%" y="821" width="0.0118%" height="15" fill="rgb(244,96,26)" fg:x="6864" fg:w="1"/><text x="81.5192%" y="831.50"></text></g><g><title>enqueue_task (1 samples, 0.01%)</title><rect x="81.2692%" y="805" width="0.0118%" height="15" fill="rgb(245,184,37)" fg:x="6864" fg:w="1"/><text x="81.5192%" y="815.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.01%)</title><rect x="81.2692%" y="789" width="0.0118%" height="15" fill="rgb(248,91,47)" fg:x="6864" fg:w="1"/><text x="81.5192%" y="799.50"></text></g><g><title>fsnotify_insert_event (6 samples, 0.07%)</title><rect x="81.2219%" y="901" width="0.0710%" height="15" fill="rgb(243,199,8)" fg:x="6860" fg:w="6"/><text x="81.4719%" y="911.50"></text></g><g><title>__wake_up (6 samples, 0.07%)</title><rect x="81.2219%" y="885" width="0.0710%" height="15" fill="rgb(249,12,15)" fg:x="6860" fg:w="6"/><text x="81.4719%" y="895.50"></text></g><g><title>__wake_up_common (6 samples, 0.07%)</title><rect x="81.2219%" y="869" width="0.0710%" height="15" fill="rgb(245,97,12)" fg:x="6860" fg:w="6"/><text x="81.4719%" y="879.50"></text></g><g><title>pollwake (6 samples, 0.07%)</title><rect x="81.2219%" y="853" width="0.0710%" height="15" fill="rgb(244,61,1)" fg:x="6860" fg:w="6"/><text x="81.4719%" y="863.50"></text></g><g><title>try_to_wake_up (5 samples, 0.06%)</title><rect x="81.2337%" y="837" width="0.0592%" height="15" fill="rgb(222,194,10)" fg:x="6861" fg:w="5"/><text x="81.4837%" y="847.50"></text></g><g><title>ttwu_queue_wakelist (1 samples, 0.01%)</title><rect x="81.2811%" y="821" width="0.0118%" height="15" fill="rgb(226,178,8)" fg:x="6865" fg:w="1"/><text x="81.5311%" y="831.50"></text></g><g><title>__smp_call_single_queue (1 samples, 0.01%)</title><rect x="81.2811%" y="805" width="0.0118%" height="15" fill="rgb(241,32,34)" fg:x="6865" fg:w="1"/><text x="81.5311%" y="815.50"></text></g><g><title>call_function_single_prep_ipi (1 samples, 0.01%)</title><rect x="81.2811%" y="789" width="0.0118%" height="15" fill="rgb(254,26,6)" fg:x="6865" fg:w="1"/><text x="81.5311%" y="799.50"></text></g><g><title>mod_objcg_state (1 samples, 0.01%)</title><rect x="81.2929%" y="869" width="0.0118%" height="15" fill="rgb(249,71,11)" fg:x="6866" fg:w="1"/><text x="81.5429%" y="879.50"></text></g><g><title>kfree (2 samples, 0.02%)</title><rect x="81.2929%" y="901" width="0.0237%" height="15" fill="rgb(232,170,27)" fg:x="6866" fg:w="2"/><text x="81.5429%" y="911.50"></text></g><g><title>__memcg_slab_free_hook (2 samples, 0.02%)</title><rect x="81.2929%" y="885" width="0.0237%" height="15" fill="rgb(214,223,17)" fg:x="6866" fg:w="2"/><text x="81.5429%" y="895.50"></text></g><g><title>refill_obj_stock (1 samples, 0.01%)</title><rect x="81.3048%" y="869" width="0.0118%" height="15" fill="rgb(250,18,15)" fg:x="6867" fg:w="1"/><text x="81.5548%" y="879.50"></text></g><g><title>do_syscall_64 (59 samples, 0.70%)</title><rect x="80.6299%" y="997" width="0.6986%" height="15" fill="rgb(212,153,51)" fg:x="6810" fg:w="59"/><text x="80.8799%" y="1007.50"></text></g><g><title>ksys_write (58 samples, 0.69%)</title><rect x="80.6417%" y="981" width="0.6867%" height="15" fill="rgb(219,194,12)" fg:x="6811" fg:w="58"/><text x="80.8917%" y="991.50"></text></g><g><title>vfs_write (57 samples, 0.67%)</title><rect x="80.6536%" y="965" width="0.6749%" height="15" fill="rgb(212,58,17)" fg:x="6812" fg:w="57"/><text x="80.9036%" y="975.50"></text></g><g><title>__fsnotify_parent (36 samples, 0.43%)</title><rect x="80.9022%" y="949" width="0.4262%" height="15" fill="rgb(254,5,10)" fg:x="6833" fg:w="36"/><text x="81.1522%" y="959.50"></text></g><g><title>fsnotify (32 samples, 0.38%)</title><rect x="80.9496%" y="933" width="0.3789%" height="15" fill="rgb(246,91,7)" fg:x="6837" fg:w="32"/><text x="81.1996%" y="943.50"></text></g><g><title>inotify_handle_inode_event (27 samples, 0.32%)</title><rect x="81.0088%" y="917" width="0.3197%" height="15" fill="rgb(218,108,49)" fg:x="6842" fg:w="27"/><text x="81.2588%" y="927.50"></text></g><g><title>memcpy (1 samples, 0.01%)</title><rect x="81.3166%" y="901" width="0.0118%" height="15" fill="rgb(238,123,20)" fg:x="6868" fg:w="1"/><text x="81.5666%" y="911.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (62 samples, 0.73%)</title><rect x="80.6062%" y="1077" width="0.7341%" height="15" fill="rgb(231,69,23)" fg:x="6808" fg:w="62"/><text x="80.8562%" y="1087.50"></text></g><g><title>std::io::Write::write_all (62 samples, 0.73%)</title><rect x="80.6062%" y="1061" width="0.7341%" height="15" fill="rgb(230,209,3)" fg:x="6808" fg:w="62"/><text x="80.8562%" y="1071.50"></text></g><g><title>&lt;std::os::unix::net::stream::UnixStream as std::io::Write&gt;::write (61 samples, 0.72%)</title><rect x="80.6180%" y="1045" width="0.7222%" height="15" fill="rgb(231,19,0)" fg:x="6809" fg:w="61"/><text x="80.8680%" y="1055.50"></text></g><g><title>write (61 samples, 0.72%)</title><rect x="80.6180%" y="1029" width="0.7222%" height="15" fill="rgb(226,192,25)" fg:x="6809" fg:w="61"/><text x="80.8680%" y="1039.50"></text></g><g><title>entry_SYSCALL_64 (61 samples, 0.72%)</title><rect x="80.6180%" y="1013" width="0.7222%" height="15" fill="rgb(223,175,53)" fg:x="6809" fg:w="61"/><text x="80.8680%" y="1023.50"></text></g><g><title>srso_alias_untrain_ret (1 samples, 0.01%)</title><rect x="81.3284%" y="997" width="0.0118%" height="15" fill="rgb(248,35,51)" fg:x="6869" fg:w="1"/><text x="81.5784%" y="1007.50"></text></g><g><title>core::fmt::Formatter::padding (1 samples, 0.01%)</title><rect x="81.3403%" y="1077" width="0.0118%" height="15" fill="rgb(230,37,26)" fg:x="6870" fg:w="1"/><text x="81.5903%" y="1087.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="81.3403%" y="1061" width="0.0118%" height="15" fill="rgb(206,120,22)" fg:x="6870" fg:w="1"/><text x="81.5903%" y="1071.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (3 samples, 0.04%)</title><rect x="81.4113%" y="1029" width="0.0355%" height="15" fill="rgb(207,165,28)" fg:x="6876" fg:w="3"/><text x="81.6613%" y="1039.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (3 samples, 0.04%)</title><rect x="81.4113%" y="1013" width="0.0355%" height="15" fill="rgb(226,23,46)" fg:x="6876" fg:w="3"/><text x="81.6613%" y="1023.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (3 samples, 0.04%)</title><rect x="81.4113%" y="997" width="0.0355%" height="15" fill="rgb(208,130,44)" fg:x="6876" fg:w="3"/><text x="81.6613%" y="1007.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (3 samples, 0.04%)</title><rect x="81.4113%" y="981" width="0.0355%" height="15" fill="rgb(231,67,8)" fg:x="6876" fg:w="3"/><text x="81.6613%" y="991.50"></text></g><g><title>std::sys::pal::unix::cvt (3 samples, 0.04%)</title><rect x="81.4113%" y="965" width="0.0355%" height="15" fill="rgb(205,183,22)" fg:x="6876" fg:w="3"/><text x="81.6613%" y="975.50"></text></g><g><title>__fdget_pos (4 samples, 0.05%)</title><rect x="81.5297%" y="949" width="0.0474%" height="15" fill="rgb(224,47,9)" fg:x="6886" fg:w="4"/><text x="81.7797%" y="959.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="81.5652%" y="933" width="0.0118%" height="15" fill="rgb(250,183,49)" fg:x="6889" fg:w="1"/><text x="81.8152%" y="943.50"></text></g><g><title>preempt_schedule_irq (1 samples, 0.01%)</title><rect x="81.5652%" y="917" width="0.0118%" height="15" fill="rgb(220,151,39)" fg:x="6889" fg:w="1"/><text x="81.8152%" y="927.50"></text></g><g><title>__schedule (1 samples, 0.01%)</title><rect x="81.5652%" y="901" width="0.0118%" height="15" fill="rgb(220,118,20)" fg:x="6889" fg:w="1"/><text x="81.8152%" y="911.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.01%)</title><rect x="81.5652%" y="885" width="0.0118%" height="15" fill="rgb(231,65,51)" fg:x="6889" fg:w="1"/><text x="81.8152%" y="895.50"></text></g><g><title>ctx_sched_out (1 samples, 0.01%)</title><rect x="81.5652%" y="869" width="0.0118%" height="15" fill="rgb(253,125,37)" fg:x="6889" fg:w="1"/><text x="81.8152%" y="879.50"></text></g><g><title>fput (1 samples, 0.01%)</title><rect x="81.5771%" y="949" width="0.0118%" height="15" fill="rgb(232,102,6)" fg:x="6890" fg:w="1"/><text x="81.8271%" y="959.50"></text></g><g><title>mutex_unlock (1 samples, 0.01%)</title><rect x="81.5889%" y="949" width="0.0118%" height="15" fill="rgb(251,105,13)" fg:x="6891" fg:w="1"/><text x="81.8389%" y="959.50"></text></g><g><title>[[ext4]] (2 samples, 0.02%)</title><rect x="81.6600%" y="917" width="0.0237%" height="15" fill="rgb(222,179,29)" fg:x="6897" fg:w="2"/><text x="81.9100%" y="927.50"></text></g><g><title>generic_write_checks (2 samples, 0.02%)</title><rect x="81.6600%" y="901" width="0.0237%" height="15" fill="rgb(229,180,53)" fg:x="6897" fg:w="2"/><text x="81.9100%" y="911.50"></text></g><g><title>__x86_indirect_thunk_array (1 samples, 0.01%)</title><rect x="81.6836%" y="917" width="0.0118%" height="15" fill="rgb(238,104,13)" fg:x="6899" fg:w="1"/><text x="81.9336%" y="927.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="81.6836%" y="901" width="0.0118%" height="15" fill="rgb(210,130,5)" fg:x="6899" fg:w="1"/><text x="81.9336%" y="911.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="81.6836%" y="885" width="0.0118%" height="15" fill="rgb(233,87,49)" fg:x="6899" fg:w="1"/><text x="81.9336%" y="895.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="81.6836%" y="869" width="0.0118%" height="15" fill="rgb(243,34,9)" fg:x="6899" fg:w="1"/><text x="81.9336%" y="879.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="81.6836%" y="853" width="0.0118%" height="15" fill="rgb(235,225,10)" fg:x="6899" fg:w="1"/><text x="81.9336%" y="863.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="81.6836%" y="837" width="0.0118%" height="15" fill="rgb(212,0,30)" fg:x="6899" fg:w="1"/><text x="81.9336%" y="847.50"></text></g><g><title>tick_nohz_handler (1 samples, 0.01%)</title><rect x="81.6836%" y="821" width="0.0118%" height="15" fill="rgb(211,177,0)" fg:x="6899" fg:w="1"/><text x="81.9336%" y="831.50"></text></g><g><title>update_process_times (1 samples, 0.01%)</title><rect x="81.6836%" y="805" width="0.0118%" height="15" fill="rgb(225,220,11)" fg:x="6899" fg:w="1"/><text x="81.9336%" y="815.50"></text></g><g><title>scheduler_tick (1 samples, 0.01%)</title><rect x="81.6836%" y="789" width="0.0118%" height="15" fill="rgb(215,10,13)" fg:x="6899" fg:w="1"/><text x="81.9336%" y="799.50"></text></g><g><title>task_tick_fair (1 samples, 0.01%)</title><rect x="81.6836%" y="773" width="0.0118%" height="15" fill="rgb(240,177,14)" fg:x="6899" fg:w="1"/><text x="81.9336%" y="783.50"></text></g><g><title>update_curr (1 samples, 0.01%)</title><rect x="81.6836%" y="757" width="0.0118%" height="15" fill="rgb(243,7,39)" fg:x="6899" fg:w="1"/><text x="81.9336%" y="767.50"></text></g><g><title>update_min_vruntime (1 samples, 0.01%)</title><rect x="81.6836%" y="741" width="0.0118%" height="15" fill="rgb(212,99,0)" fg:x="6899" fg:w="1"/><text x="81.9336%" y="751.50"></text></g><g><title>down_write (1 samples, 0.01%)</title><rect x="81.6955%" y="917" width="0.0118%" height="15" fill="rgb(225,162,48)" fg:x="6900" fg:w="1"/><text x="81.9455%" y="927.50"></text></g><g><title>ktime_get_coarse_real_ts64 (1 samples, 0.01%)</title><rect x="81.7192%" y="885" width="0.0118%" height="15" fill="rgb(246,16,25)" fg:x="6902" fg:w="1"/><text x="81.9692%" y="895.50"></text></g><g><title>file_modified (3 samples, 0.04%)</title><rect x="81.7073%" y="917" width="0.0355%" height="15" fill="rgb(220,150,2)" fg:x="6901" fg:w="3"/><text x="81.9573%" y="927.50"></text></g><g><title>inode_needs_update_time (3 samples, 0.04%)</title><rect x="81.7073%" y="901" width="0.0355%" height="15" fill="rgb(237,113,11)" fg:x="6901" fg:w="3"/><text x="81.9573%" y="911.50"></text></g><g><title>timestamp_truncate (1 samples, 0.01%)</title><rect x="81.7310%" y="885" width="0.0118%" height="15" fill="rgb(236,70,20)" fg:x="6903" fg:w="1"/><text x="81.9810%" y="895.50"></text></g><g><title>[[ext4]] (6 samples, 0.07%)</title><rect x="81.9678%" y="821" width="0.0710%" height="15" fill="rgb(234,94,7)" fg:x="6923" fg:w="6"/><text x="82.2178%" y="831.50"></text></g><g><title>crypto_shash_update (1 samples, 0.01%)</title><rect x="82.0270%" y="805" width="0.0118%" height="15" fill="rgb(250,221,0)" fg:x="6928" fg:w="1"/><text x="82.2770%" y="815.50"></text></g><g><title>[[ext4]] (16 samples, 0.19%)</title><rect x="81.8731%" y="869" width="0.1894%" height="15" fill="rgb(245,149,46)" fg:x="6915" fg:w="16"/><text x="82.1231%" y="879.50"></text></g><g><title>[[ext4]] (11 samples, 0.13%)</title><rect x="81.9323%" y="853" width="0.1302%" height="15" fill="rgb(215,37,27)" fg:x="6920" fg:w="11"/><text x="82.1823%" y="863.50"></text></g><g><title>[[ext4]] (8 samples, 0.09%)</title><rect x="81.9678%" y="837" width="0.0947%" height="15" fill="rgb(232,65,3)" fg:x="6923" fg:w="8"/><text x="82.2178%" y="847.50"></text></g><g><title>bdev_getblk (2 samples, 0.02%)</title><rect x="82.0388%" y="821" width="0.0237%" height="15" fill="rgb(214,2,16)" fg:x="6929" fg:w="2"/><text x="82.2888%" y="831.50"></text></g><g><title>__find_get_block (2 samples, 0.02%)</title><rect x="82.0388%" y="805" width="0.0237%" height="15" fill="rgb(227,131,50)" fg:x="6929" fg:w="2"/><text x="82.2888%" y="815.50"></text></g><g><title>cpuset_cpu_is_isolated (1 samples, 0.01%)</title><rect x="82.0507%" y="789" width="0.0118%" height="15" fill="rgb(247,131,45)" fg:x="6930" fg:w="1"/><text x="82.3007%" y="799.50"></text></g><g><title>[[ext4]] (23 samples, 0.27%)</title><rect x="81.8494%" y="885" width="0.2723%" height="15" fill="rgb(215,97,47)" fg:x="6913" fg:w="23"/><text x="82.0994%" y="895.50"></text></g><g><title>[[jbd2]] (5 samples, 0.06%)</title><rect x="82.0625%" y="869" width="0.0592%" height="15" fill="rgb(233,143,12)" fg:x="6931" fg:w="5"/><text x="82.3125%" y="879.50"></text></g><g><title>[[jbd2]] (2 samples, 0.02%)</title><rect x="82.0980%" y="853" width="0.0237%" height="15" fill="rgb(222,57,17)" fg:x="6934" fg:w="2"/><text x="82.3480%" y="863.50"></text></g><g><title>__wake_up (2 samples, 0.02%)</title><rect x="82.0980%" y="837" width="0.0237%" height="15" fill="rgb(214,119,38)" fg:x="6934" fg:w="2"/><text x="82.3480%" y="847.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="82.1099%" y="821" width="0.0118%" height="15" fill="rgb(217,28,47)" fg:x="6935" fg:w="1"/><text x="82.3599%" y="831.50"></text></g><g><title>[[jbd2]] (1 samples, 0.01%)</title><rect x="82.1217%" y="869" width="0.0118%" height="15" fill="rgb(231,14,52)" fg:x="6936" fg:w="1"/><text x="82.3717%" y="879.50"></text></g><g><title>[[jbd2]] (3 samples, 0.04%)</title><rect x="82.1217%" y="885" width="0.0355%" height="15" fill="rgb(220,158,18)" fg:x="6936" fg:w="3"/><text x="82.3717%" y="895.50"></text></g><g><title>kmem_cache_alloc (2 samples, 0.02%)</title><rect x="82.1336%" y="869" width="0.0237%" height="15" fill="rgb(222,143,46)" fg:x="6937" fg:w="2"/><text x="82.3836%" y="879.50"></text></g><g><title>__filemap_get_folio (3 samples, 0.04%)</title><rect x="82.1572%" y="885" width="0.0355%" height="15" fill="rgb(227,165,5)" fg:x="6939" fg:w="3"/><text x="82.4072%" y="895.50"></text></g><g><title>filemap_get_entry (3 samples, 0.04%)</title><rect x="82.1572%" y="869" width="0.0355%" height="15" fill="rgb(216,222,49)" fg:x="6939" fg:w="3"/><text x="82.4072%" y="879.50"></text></g><g><title>xas_load (1 samples, 0.01%)</title><rect x="82.1809%" y="853" width="0.0118%" height="15" fill="rgb(238,73,39)" fg:x="6941" fg:w="1"/><text x="82.4309%" y="863.50"></text></g><g><title>xas_start (1 samples, 0.01%)</title><rect x="82.1809%" y="837" width="0.0118%" height="15" fill="rgb(252,115,9)" fg:x="6941" fg:w="1"/><text x="82.4309%" y="847.50"></text></g><g><title>[[ext4]] (36 samples, 0.43%)</title><rect x="81.7784%" y="901" width="0.4262%" height="15" fill="rgb(238,202,4)" fg:x="6907" fg:w="36"/><text x="82.0284%" y="911.50"></text></g><g><title>block_write_end (1 samples, 0.01%)</title><rect x="82.1928%" y="885" width="0.0118%" height="15" fill="rgb(252,153,44)" fg:x="6942" fg:w="1"/><text x="82.4428%" y="895.50"></text></g><g><title>balance_dirty_pages_ratelimited_flags (4 samples, 0.05%)</title><rect x="82.2046%" y="901" width="0.0474%" height="15" fill="rgb(235,128,27)" fg:x="6943" fg:w="4"/><text x="82.4546%" y="911.50"></text></g><g><title>__radix_tree_lookup (3 samples, 0.04%)</title><rect x="82.2164%" y="885" width="0.0355%" height="15" fill="rgb(221,121,47)" fg:x="6944" fg:w="3"/><text x="82.4664%" y="895.50"></text></g><g><title>[[ext4]] (52 samples, 0.62%)</title><rect x="81.6481%" y="933" width="0.6157%" height="15" fill="rgb(247,211,47)" fg:x="6896" fg:w="52"/><text x="81.8981%" y="943.50"></text></g><g><title>generic_perform_write (44 samples, 0.52%)</title><rect x="81.7428%" y="917" width="0.5210%" height="15" fill="rgb(252,47,49)" fg:x="6904" fg:w="44"/><text x="81.9928%" y="927.50"></text></g><g><title>fault_in_iov_iter_readable (1 samples, 0.01%)</title><rect x="82.2520%" y="901" width="0.0118%" height="15" fill="rgb(219,119,53)" fg:x="6947" fg:w="1"/><text x="82.5020%" y="911.50"></text></g><g><title>dget_parent (1 samples, 0.01%)</title><rect x="82.3112%" y="917" width="0.0118%" height="15" fill="rgb(243,165,53)" fg:x="6952" fg:w="1"/><text x="82.5612%" y="927.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.01%)</title><rect x="82.3112%" y="901" width="0.0118%" height="15" fill="rgb(230,12,35)" fg:x="6952" fg:w="1"/><text x="82.5612%" y="911.50"></text></g><g><title>__srcu_read_unlock (1 samples, 0.01%)</title><rect x="82.5835%" y="901" width="0.0118%" height="15" fill="rgb(239,57,49)" fg:x="6975" fg:w="1"/><text x="82.8335%" y="911.50"></text></g><g><title>fsnotify_compare_groups (1 samples, 0.01%)</title><rect x="82.5953%" y="901" width="0.0118%" height="15" fill="rgb(231,154,7)" fg:x="6976" fg:w="1"/><text x="82.8453%" y="911.50"></text></g><g><title>fsnotify_handle_inode_event.isra.0 (1 samples, 0.01%)</title><rect x="82.6072%" y="901" width="0.0118%" height="15" fill="rgb(248,81,34)" fg:x="6977" fg:w="1"/><text x="82.8572%" y="911.50"></text></g><g><title>__memcg_slab_post_alloc_hook (12 samples, 0.14%)</title><rect x="82.8084%" y="869" width="0.1421%" height="15" fill="rgb(247,9,5)" fg:x="6994" fg:w="12"/><text x="83.0584%" y="879.50"></text></g><g><title>mod_objcg_state (1 samples, 0.01%)</title><rect x="82.9387%" y="853" width="0.0118%" height="15" fill="rgb(228,172,27)" fg:x="7005" fg:w="1"/><text x="83.1887%" y="863.50"></text></g><g><title>memset (9 samples, 0.11%)</title><rect x="82.9505%" y="869" width="0.1066%" height="15" fill="rgb(230,57,44)" fg:x="7006" fg:w="9"/><text x="83.2005%" y="879.50"></text></g><g><title>__rcu_read_lock (2 samples, 0.02%)</title><rect x="83.2110%" y="853" width="0.0237%" height="15" fill="rgb(249,35,22)" fg:x="7028" fg:w="2"/><text x="83.4610%" y="863.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.01%)</title><rect x="83.2347%" y="853" width="0.0118%" height="15" fill="rgb(250,137,27)" fg:x="7030" fg:w="1"/><text x="83.4847%" y="863.50"></text></g><g><title>memcg_account_kmem (8 samples, 0.09%)</title><rect x="83.2465%" y="853" width="0.0947%" height="15" fill="rgb(251,57,31)" fg:x="7031" fg:w="8"/><text x="83.4965%" y="863.50"></text></g><g><title>mod_memcg_state (6 samples, 0.07%)</title><rect x="83.2702%" y="837" width="0.0710%" height="15" fill="rgb(238,60,0)" fg:x="7033" fg:w="6"/><text x="83.5202%" y="847.50"></text></g><g><title>__mod_memcg_state (3 samples, 0.04%)</title><rect x="83.3057%" y="821" width="0.0355%" height="15" fill="rgb(242,185,39)" fg:x="7036" fg:w="3"/><text x="83.5557%" y="831.50"></text></g><g><title>memcg_account_kmem (9 samples, 0.11%)</title><rect x="83.4123%" y="837" width="0.1066%" height="15" fill="rgb(240,63,43)" fg:x="7045" fg:w="9"/><text x="83.6623%" y="847.50"></text></g><g><title>mod_memcg_state (8 samples, 0.09%)</title><rect x="83.4241%" y="821" width="0.0947%" height="15" fill="rgb(236,155,6)" fg:x="7046" fg:w="8"/><text x="83.6741%" y="831.50"></text></g><g><title>__mod_memcg_state (6 samples, 0.07%)</title><rect x="83.4478%" y="805" width="0.0710%" height="15" fill="rgb(215,11,29)" fg:x="7048" fg:w="6"/><text x="83.6978%" y="815.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.01%)</title><rect x="83.5070%" y="789" width="0.0118%" height="15" fill="rgb(228,180,48)" fg:x="7053" fg:w="1"/><text x="83.7570%" y="799.50"></text></g><g><title>refill_stock (5 samples, 0.06%)</title><rect x="83.5188%" y="837" width="0.0592%" height="15" fill="rgb(241,102,12)" fg:x="7054" fg:w="5"/><text x="83.7688%" y="847.50"></text></g><g><title>__refill_stock (1 samples, 0.01%)</title><rect x="83.5662%" y="821" width="0.0118%" height="15" fill="rgb(246,213,4)" fg:x="7058" fg:w="1"/><text x="83.8162%" y="831.50"></text></g><g><title>obj_cgroup_uncharge_pages (22 samples, 0.26%)</title><rect x="83.3412%" y="853" width="0.2605%" height="15" fill="rgb(218,134,35)" fg:x="7039" fg:w="22"/><text x="83.5912%" y="863.50"></text></g><g><title>srso_alias_return_thunk (2 samples, 0.02%)</title><rect x="83.5780%" y="837" width="0.0237%" height="15" fill="rgb(251,117,35)" fg:x="7059" fg:w="2"/><text x="83.8280%" y="847.50"></text></g><g><title>srso_alias_safe_ret (2 samples, 0.02%)</title><rect x="83.5780%" y="821" width="0.0237%" height="15" fill="rgb(206,156,45)" fg:x="7059" fg:w="2"/><text x="83.8280%" y="831.50"></text></g><g><title>refill_obj_stock (17 samples, 0.20%)</title><rect x="83.6017%" y="853" width="0.2013%" height="15" fill="rgb(218,52,27)" fg:x="7061" fg:w="17"/><text x="83.8517%" y="863.50"></text></g><g><title>drain_obj_stock (3 samples, 0.04%)</title><rect x="83.7675%" y="837" width="0.0355%" height="15" fill="rgb(238,83,36)" fg:x="7075" fg:w="3"/><text x="84.0175%" y="847.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="83.8030%" y="853" width="0.0118%" height="15" fill="rgb(218,53,43)" fg:x="7078" fg:w="1"/><text x="84.0530%" y="863.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="83.8030%" y="837" width="0.0118%" height="15" fill="rgb(239,54,39)" fg:x="7078" fg:w="1"/><text x="84.0530%" y="847.50"></text></g><g><title>page_counter_try_charge (17 samples, 0.20%)</title><rect x="83.9687%" y="837" width="0.2013%" height="15" fill="rgb(212,198,13)" fg:x="7092" fg:w="17"/><text x="84.2187%" y="847.50"></text></g><g><title>propagate_protected_usage (1 samples, 0.01%)</title><rect x="84.1582%" y="821" width="0.0118%" height="15" fill="rgb(234,54,46)" fg:x="7108" fg:w="1"/><text x="84.4082%" y="831.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.01%)</title><rect x="84.2174%" y="805" width="0.0118%" height="15" fill="rgb(217,120,7)" fg:x="7113" fg:w="1"/><text x="84.4674%" y="815.50"></text></g><g><title>__kmalloc (148 samples, 1.75%)</title><rect x="82.7137%" y="885" width="1.7523%" height="15" fill="rgb(246,39,15)" fg:x="6986" fg:w="148"/><text x="82.9637%" y="895.50"></text></g><g><title>obj_cgroup_charge (119 samples, 1.41%)</title><rect x="83.0571%" y="869" width="1.4090%" height="15" fill="rgb(242,143,31)" fg:x="7015" fg:w="119"/><text x="83.3071%" y="879.50"></text></g><g><title>try_charge_memcg (55 samples, 0.65%)</title><rect x="83.8148%" y="853" width="0.6512%" height="15" fill="rgb(252,60,24)" fg:x="7079" fg:w="55"/><text x="84.0648%" y="863.50"></text></g><g><title>refill_stock (25 samples, 0.30%)</title><rect x="84.1700%" y="837" width="0.2960%" height="15" fill="rgb(249,220,7)" fg:x="7109" fg:w="25"/><text x="84.4200%" y="847.50"></text></g><g><title>__refill_stock (23 samples, 0.27%)</title><rect x="84.1937%" y="821" width="0.2723%" height="15" fill="rgb(236,67,13)" fg:x="7111" fg:w="23"/><text x="84.4437%" y="831.50"></text></g><g><title>drain_stock (20 samples, 0.24%)</title><rect x="84.2292%" y="805" width="0.2368%" height="15" fill="rgb(210,62,39)" fg:x="7114" fg:w="20"/><text x="84.4792%" y="815.50"></text></g><g><title>page_counter_uncharge (15 samples, 0.18%)</title><rect x="84.2884%" y="789" width="0.1776%" height="15" fill="rgb(219,122,53)" fg:x="7119" fg:w="15"/><text x="84.5384%" y="799.50"></text></g><g><title>propagate_protected_usage (4 samples, 0.05%)</title><rect x="84.4187%" y="773" width="0.0474%" height="15" fill="rgb(218,87,25)" fg:x="7130" fg:w="4"/><text x="84.6687%" y="783.50"></text></g><g><title>fsnotify_destroy_event (2 samples, 0.02%)</title><rect x="84.4660%" y="885" width="0.0237%" height="15" fill="rgb(234,179,48)" fg:x="7134" fg:w="2"/><text x="84.7160%" y="895.50"></text></g><g><title>__task_rq_lock (2 samples, 0.02%)</title><rect x="84.6910%" y="805" width="0.0237%" height="15" fill="rgb(248,90,0)" fg:x="7153" fg:w="2"/><text x="84.9410%" y="815.50"></text></g><g><title>raw_spin_rq_lock_nested (2 samples, 0.02%)</title><rect x="84.6910%" y="789" width="0.0237%" height="15" fill="rgb(207,228,37)" fg:x="7153" fg:w="2"/><text x="84.9410%" y="799.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.02%)</title><rect x="84.6910%" y="773" width="0.0237%" height="15" fill="rgb(235,214,15)" fg:x="7153" fg:w="2"/><text x="84.9410%" y="783.50"></text></g><g><title>native_queued_spin_lock_slowpath (2 samples, 0.02%)</title><rect x="84.6910%" y="757" width="0.0237%" height="15" fill="rgb(210,144,39)" fg:x="7153" fg:w="2"/><text x="84.9410%" y="767.50"></text></g><g><title>select_task_rq_fair (1 samples, 0.01%)</title><rect x="84.7147%" y="805" width="0.0118%" height="15" fill="rgb(222,67,41)" fg:x="7155" fg:w="1"/><text x="84.9647%" y="815.50"></text></g><g><title>available_idle_cpu (1 samples, 0.01%)</title><rect x="84.7147%" y="789" width="0.0118%" height="15" fill="rgb(205,35,37)" fg:x="7155" fg:w="1"/><text x="84.9647%" y="799.50"></text></g><g><title>__smp_call_single_queue (1 samples, 0.01%)</title><rect x="84.7383%" y="789" width="0.0118%" height="15" fill="rgb(216,125,40)" fg:x="7157" fg:w="1"/><text x="84.9883%" y="799.50"></text></g><g><title>call_function_single_prep_ipi (1 samples, 0.01%)</title><rect x="84.7383%" y="773" width="0.0118%" height="15" fill="rgb(228,227,20)" fg:x="7157" fg:w="1"/><text x="84.9883%" y="783.50"></text></g><g><title>__wake_up_common (19 samples, 0.22%)</title><rect x="84.5371%" y="853" width="0.2250%" height="15" fill="rgb(242,173,45)" fg:x="7140" fg:w="19"/><text x="84.7871%" y="863.50"></text></g><g><title>pollwake (17 samples, 0.20%)</title><rect x="84.5607%" y="837" width="0.2013%" height="15" fill="rgb(215,79,24)" fg:x="7142" fg:w="17"/><text x="84.8107%" y="847.50"></text></g><g><title>try_to_wake_up (17 samples, 0.20%)</title><rect x="84.5607%" y="821" width="0.2013%" height="15" fill="rgb(238,164,38)" fg:x="7142" fg:w="17"/><text x="84.8107%" y="831.50"></text></g><g><title>ttwu_queue_wakelist (3 samples, 0.04%)</title><rect x="84.7265%" y="805" width="0.0355%" height="15" fill="rgb(245,196,38)" fg:x="7156" fg:w="3"/><text x="84.9765%" y="815.50"></text></g><g><title>default_send_IPI_single_phys (1 samples, 0.01%)</title><rect x="84.7502%" y="789" width="0.0118%" height="15" fill="rgb(231,217,29)" fg:x="7158" fg:w="1"/><text x="85.0002%" y="799.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.02%)</title><rect x="84.7620%" y="853" width="0.0237%" height="15" fill="rgb(245,6,4)" fg:x="7159" fg:w="2"/><text x="85.0120%" y="863.50"></text></g><g><title>__wake_up (23 samples, 0.27%)</title><rect x="84.5252%" y="869" width="0.2723%" height="15" fill="rgb(214,76,49)" fg:x="7139" fg:w="23"/><text x="84.7752%" y="879.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.01%)</title><rect x="84.7857%" y="853" width="0.0118%" height="15" fill="rgb(205,96,12)" fg:x="7161" fg:w="1"/><text x="85.0357%" y="863.50"></text></g><g><title>_raw_spin_lock (4 samples, 0.05%)</title><rect x="84.7975%" y="869" width="0.0474%" height="15" fill="rgb(243,131,4)" fg:x="7162" fg:w="4"/><text x="85.0475%" y="879.50"></text></g><g><title>native_queued_spin_lock_slowpath (1 samples, 0.01%)</title><rect x="84.8331%" y="853" width="0.0118%" height="15" fill="rgb(214,114,4)" fg:x="7165" fg:w="1"/><text x="85.0831%" y="863.50"></text></g><g><title>fsnotify_insert_event (32 samples, 0.38%)</title><rect x="84.4897%" y="885" width="0.3789%" height="15" fill="rgb(234,215,15)" fg:x="7136" fg:w="32"/><text x="84.7397%" y="895.50"></text></g><g><title>srso_alias_return_thunk (2 samples, 0.02%)</title><rect x="84.8449%" y="869" width="0.0237%" height="15" fill="rgb(250,216,45)" fg:x="7166" fg:w="2"/><text x="85.0949%" y="879.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="84.8567%" y="853" width="0.0118%" height="15" fill="rgb(236,128,4)" fg:x="7167" fg:w="1"/><text x="85.1067%" y="863.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.01%)</title><rect x="84.9751%" y="853" width="0.0118%" height="15" fill="rgb(234,50,33)" fg:x="7177" fg:w="1"/><text x="85.2251%" y="863.50"></text></g><g><title>mod_objcg_state (2 samples, 0.02%)</title><rect x="84.9870%" y="853" width="0.0237%" height="15" fill="rgb(253,131,37)" fg:x="7178" fg:w="2"/><text x="85.2370%" y="863.50"></text></g><g><title>kfree (13 samples, 0.15%)</title><rect x="84.8686%" y="885" width="0.1539%" height="15" fill="rgb(218,55,27)" fg:x="7168" fg:w="13"/><text x="85.1186%" y="895.50"></text></g><g><title>__memcg_slab_free_hook (9 samples, 0.11%)</title><rect x="84.9159%" y="869" width="0.1066%" height="15" fill="rgb(241,220,28)" fg:x="7172" fg:w="9"/><text x="85.1659%" y="879.50"></text></g><g><title>refill_obj_stock (1 samples, 0.01%)</title><rect x="85.0107%" y="853" width="0.0118%" height="15" fill="rgb(241,90,48)" fg:x="7180" fg:w="1"/><text x="85.2607%" y="863.50"></text></g><g><title>fsnotify (229 samples, 2.71%)</title><rect x="82.3230%" y="917" width="2.7113%" height="15" fill="rgb(216,43,37)" fg:x="6953" fg:w="229"/><text x="82.5730%" y="927.50">fs..</text></g><g><title>inotify_handle_inode_event (204 samples, 2.42%)</title><rect x="82.6190%" y="901" width="2.4153%" height="15" fill="rgb(207,173,9)" fg:x="6978" fg:w="204"/><text x="82.8690%" y="911.50">in..</text></g><g><title>strlen (1 samples, 0.01%)</title><rect x="85.0225%" y="885" width="0.0118%" height="15" fill="rgb(240,126,30)" fg:x="7181" fg:w="1"/><text x="85.2725%" y="895.50"></text></g><g><title>ksys_write (300 samples, 3.55%)</title><rect x="81.4942%" y="965" width="3.5520%" height="15" fill="rgb(228,178,53)" fg:x="6883" fg:w="300"/><text x="81.7442%" y="975.50">ksys..</text></g><g><title>vfs_write (291 samples, 3.45%)</title><rect x="81.6008%" y="949" width="3.4454%" height="15" fill="rgb(217,33,4)" fg:x="6892" fg:w="291"/><text x="81.8508%" y="959.50">vfs..</text></g><g><title>__fsnotify_parent (235 samples, 2.78%)</title><rect x="82.2638%" y="933" width="2.7824%" height="15" fill="rgb(206,124,34)" fg:x="6948" fg:w="235"/><text x="82.5138%" y="943.50">__..</text></g><g><title>take_dentry_name_snapshot (1 samples, 0.01%)</title><rect x="85.0343%" y="917" width="0.0118%" height="15" fill="rgb(208,122,53)" fg:x="7182" fg:w="1"/><text x="85.2843%" y="927.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="85.0343%" y="901" width="0.0118%" height="15" fill="rgb(215,202,26)" fg:x="7182" fg:w="1"/><text x="85.2843%" y="911.50"></text></g><g><title>__rseq_handle_notify_resume (3 samples, 0.04%)</title><rect x="85.0580%" y="949" width="0.0355%" height="15" fill="rgb(232,198,31)" fg:x="7184" fg:w="3"/><text x="85.3080%" y="959.50"></text></g><g><title>__get_user_8 (1 samples, 0.01%)</title><rect x="85.0817%" y="933" width="0.0118%" height="15" fill="rgb(222,23,35)" fg:x="7186" fg:w="1"/><text x="85.3317%" y="943.50"></text></g><g><title>core::fmt::num::fmt_u128 (382 samples, 4.52%)</title><rect x="80.6062%" y="1109" width="4.5229%" height="15" fill="rgb(242,27,53)" fg:x="6808" fg:w="382"/><text x="80.8562%" y="1119.50">core:..</text></g><g><title>core::fmt::Formatter::pad_integral (382 samples, 4.52%)</title><rect x="80.6062%" y="1093" width="4.5229%" height="15" fill="rgb(210,216,42)" fg:x="6808" fg:w="382"/><text x="80.8562%" y="1103.50">core:..</text></g><g><title>core::fmt::Write::write_char (319 samples, 3.78%)</title><rect x="81.3521%" y="1077" width="3.7769%" height="15" fill="rgb(234,39,38)" fg:x="6871" fg:w="319"/><text x="81.6021%" y="1087.50">core..</text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (316 samples, 3.74%)</title><rect x="81.3876%" y="1061" width="3.7414%" height="15" fill="rgb(235,126,54)" fg:x="6874" fg:w="316"/><text x="81.6376%" y="1071.50">&lt;std..</text></g><g><title>std::io::Write::write_all (314 samples, 3.72%)</title><rect x="81.4113%" y="1045" width="3.7177%" height="15" fill="rgb(235,150,33)" fg:x="6876" fg:w="314"/><text x="81.6613%" y="1055.50">std:..</text></g><g><title>&lt;std::os::unix::net::stream::UnixStream as std::io::Write&gt;::write (311 samples, 3.68%)</title><rect x="81.4468%" y="1029" width="3.6822%" height="15" fill="rgb(249,49,53)" fg:x="6879" fg:w="311"/><text x="81.6968%" y="1039.50">&lt;std..</text></g><g><title>write (311 samples, 3.68%)</title><rect x="81.4468%" y="1013" width="3.6822%" height="15" fill="rgb(238,60,50)" fg:x="6879" fg:w="311"/><text x="81.6968%" y="1023.50">write</text></g><g><title>entry_SYSCALL_64 (310 samples, 3.67%)</title><rect x="81.4587%" y="997" width="3.6704%" height="15" fill="rgb(210,5,2)" fg:x="6880" fg:w="310"/><text x="81.7087%" y="1007.50">entr..</text></g><g><title>do_syscall_64 (308 samples, 3.65%)</title><rect x="81.4824%" y="981" width="3.6467%" height="15" fill="rgb(214,207,24)" fg:x="6882" fg:w="308"/><text x="81.7324%" y="991.50">do_s..</text></g><g><title>syscall_exit_to_user_mode (7 samples, 0.08%)</title><rect x="85.0462%" y="965" width="0.0829%" height="15" fill="rgb(228,173,2)" fg:x="7183" fg:w="7"/><text x="85.2962%" y="975.50"></text></g><g><title>mem_cgroup_handle_over_high (3 samples, 0.04%)</title><rect x="85.0935%" y="949" width="0.0355%" height="15" fill="rgb(244,26,8)" fg:x="7187" fg:w="3"/><text x="85.3435%" y="959.50"></text></g><g><title>get_mem_cgroup_from_mm (1 samples, 0.01%)</title><rect x="85.1172%" y="933" width="0.0118%" height="15" fill="rgb(249,153,35)" fg:x="7189" fg:w="1"/><text x="85.3672%" y="943.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (2 samples, 0.02%)</title><rect x="85.1291%" y="1109" width="0.0237%" height="15" fill="rgb(221,215,40)" fg:x="7190" fg:w="2"/><text x="85.3791%" y="1119.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.01%)</title><rect x="85.1409%" y="1093" width="0.0118%" height="15" fill="rgb(238,106,35)" fg:x="7191" fg:w="1"/><text x="85.3909%" y="1103.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="85.1409%" y="1077" width="0.0118%" height="15" fill="rgb(207,195,21)" fg:x="7191" fg:w="1"/><text x="85.3909%" y="1087.50"></text></g><g><title>__f_unlock_pos (1 samples, 0.01%)</title><rect x="85.1883%" y="965" width="0.0118%" height="15" fill="rgb(205,43,29)" fg:x="7195" fg:w="1"/><text x="85.4383%" y="975.50"></text></g><g><title>fput (1 samples, 0.01%)</title><rect x="85.2001%" y="965" width="0.0118%" height="15" fill="rgb(236,35,21)" fg:x="7196" fg:w="1"/><text x="85.4501%" y="975.50"></text></g><g><title>file_modified (2 samples, 0.02%)</title><rect x="85.2119%" y="933" width="0.0237%" height="15" fill="rgb(244,74,8)" fg:x="7197" fg:w="2"/><text x="85.4619%" y="943.50"></text></g><g><title>inode_needs_update_time (2 samples, 0.02%)</title><rect x="85.2119%" y="917" width="0.0237%" height="15" fill="rgb(241,229,7)" fg:x="7197" fg:w="2"/><text x="85.4619%" y="927.50"></text></g><g><title>timestamp_truncate (1 samples, 0.01%)</title><rect x="85.2238%" y="901" width="0.0118%" height="15" fill="rgb(212,223,25)" fg:x="7198" fg:w="1"/><text x="85.4738%" y="911.50"></text></g><g><title>[[ext4]] (2 samples, 0.02%)</title><rect x="85.3303%" y="853" width="0.0237%" height="15" fill="rgb(234,58,53)" fg:x="7207" fg:w="2"/><text x="85.5803%" y="863.50"></text></g><g><title>[[ext4]] (2 samples, 0.02%)</title><rect x="85.3303%" y="837" width="0.0237%" height="15" fill="rgb(244,36,1)" fg:x="7207" fg:w="2"/><text x="85.5803%" y="847.50"></text></g><g><title>crypto_shash_update (1 samples, 0.01%)</title><rect x="85.3422%" y="821" width="0.0118%" height="15" fill="rgb(222,40,54)" fg:x="7208" fg:w="1"/><text x="85.5922%" y="831.50"></text></g><g><title>[[crc32c_intel]] (1 samples, 0.01%)</title><rect x="85.3422%" y="805" width="0.0118%" height="15" fill="rgb(210,207,39)" fg:x="7208" fg:w="1"/><text x="85.5922%" y="815.50"></text></g><g><title>[[ext4]] (8 samples, 0.09%)</title><rect x="85.2948%" y="885" width="0.0947%" height="15" fill="rgb(234,52,14)" fg:x="7204" fg:w="8"/><text x="85.5448%" y="895.50"></text></g><g><title>[[ext4]] (8 samples, 0.09%)</title><rect x="85.2948%" y="869" width="0.0947%" height="15" fill="rgb(239,108,46)" fg:x="7204" fg:w="8"/><text x="85.5448%" y="879.50"></text></g><g><title>[[jbd2]] (3 samples, 0.04%)</title><rect x="85.3540%" y="853" width="0.0355%" height="15" fill="rgb(252,223,5)" fg:x="7209" fg:w="3"/><text x="85.6040%" y="863.50"></text></g><g><title>[[jbd2]] (1 samples, 0.01%)</title><rect x="85.3777%" y="837" width="0.0118%" height="15" fill="rgb(227,181,11)" fg:x="7211" fg:w="1"/><text x="85.6277%" y="847.50"></text></g><g><title>[[jbd2]] (2 samples, 0.02%)</title><rect x="85.3895%" y="869" width="0.0237%" height="15" fill="rgb(248,126,40)" fg:x="7212" fg:w="2"/><text x="85.6395%" y="879.50"></text></g><g><title>__wake_up (1 samples, 0.01%)</title><rect x="85.4014%" y="853" width="0.0118%" height="15" fill="rgb(243,1,18)" fg:x="7213" fg:w="1"/><text x="85.6514%" y="863.50"></text></g><g><title>[[ext4]] (12 samples, 0.14%)</title><rect x="85.2830%" y="901" width="0.1421%" height="15" fill="rgb(214,145,23)" fg:x="7203" fg:w="12"/><text x="85.5330%" y="911.50"></text></g><g><title>[[jbd2]] (3 samples, 0.04%)</title><rect x="85.3895%" y="885" width="0.0355%" height="15" fill="rgb(241,218,11)" fg:x="7212" fg:w="3"/><text x="85.6395%" y="895.50"></text></g><g><title>kmem_cache_free (1 samples, 0.01%)</title><rect x="85.4132%" y="869" width="0.0118%" height="15" fill="rgb(214,219,24)" fg:x="7214" fg:w="1"/><text x="85.6632%" y="879.50"></text></g><g><title>[[jbd2]] (1 samples, 0.01%)</title><rect x="85.4369%" y="885" width="0.0118%" height="15" fill="rgb(235,32,7)" fg:x="7216" fg:w="1"/><text x="85.6869%" y="895.50"></text></g><g><title>_raw_read_unlock (1 samples, 0.01%)</title><rect x="85.4369%" y="869" width="0.0118%" height="15" fill="rgb(227,121,28)" fg:x="7216" fg:w="1"/><text x="85.6869%" y="879.50"></text></g><g><title>[[jbd2]] (3 samples, 0.04%)</title><rect x="85.4251%" y="901" width="0.0355%" height="15" fill="rgb(216,129,49)" fg:x="7215" fg:w="3"/><text x="85.6751%" y="911.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.01%)</title><rect x="85.4487%" y="885" width="0.0118%" height="15" fill="rgb(207,194,50)" fg:x="7217" fg:w="1"/><text x="85.6987%" y="895.50"></text></g><g><title>__filemap_get_folio (1 samples, 0.01%)</title><rect x="85.4606%" y="901" width="0.0118%" height="15" fill="rgb(207,4,18)" fg:x="7218" fg:w="1"/><text x="85.7106%" y="911.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="85.4606%" y="885" width="0.0118%" height="15" fill="rgb(213,50,30)" fg:x="7218" fg:w="1"/><text x="85.7106%" y="895.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="85.4606%" y="869" width="0.0118%" height="15" fill="rgb(208,77,22)" fg:x="7218" fg:w="1"/><text x="85.7106%" y="879.50"></text></g><g><title>[[ext4]] (20 samples, 0.24%)</title><rect x="85.2475%" y="917" width="0.2368%" height="15" fill="rgb(244,204,34)" fg:x="7200" fg:w="20"/><text x="85.4975%" y="927.50"></text></g><g><title>block_write_end (1 samples, 0.01%)</title><rect x="85.4724%" y="901" width="0.0118%" height="15" fill="rgb(230,20,17)" fg:x="7219" fg:w="1"/><text x="85.7224%" y="911.50"></text></g><g><title>__block_commit_write (1 samples, 0.01%)</title><rect x="85.4724%" y="885" width="0.0118%" height="15" fill="rgb(237,83,15)" fg:x="7219" fg:w="1"/><text x="85.7224%" y="895.50"></text></g><g><title>[[ext4]] (27 samples, 0.32%)</title><rect x="85.2119%" y="949" width="0.3197%" height="15" fill="rgb(221,109,25)" fg:x="7197" fg:w="27"/><text x="85.4619%" y="959.50"></text></g><g><title>generic_perform_write (25 samples, 0.30%)</title><rect x="85.2356%" y="933" width="0.2960%" height="15" fill="rgb(205,194,52)" fg:x="7199" fg:w="25"/><text x="85.4856%" y="943.50"></text></g><g><title>balance_dirty_pages_ratelimited_flags (4 samples, 0.05%)</title><rect x="85.4843%" y="917" width="0.0474%" height="15" fill="rgb(244,173,54)" fg:x="7220" fg:w="4"/><text x="85.7343%" y="927.50"></text></g><g><title>__radix_tree_lookup (2 samples, 0.02%)</title><rect x="85.5079%" y="901" width="0.0237%" height="15" fill="rgb(227,181,18)" fg:x="7222" fg:w="2"/><text x="85.7579%" y="911.50"></text></g><g><title>fsnotify_handle_inode_event.isra.0 (1 samples, 0.01%)</title><rect x="85.6263%" y="917" width="0.0118%" height="15" fill="rgb(238,36,30)" fg:x="7232" fg:w="1"/><text x="85.8763%" y="927.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.01%)</title><rect x="85.8158%" y="869" width="0.0118%" height="15" fill="rgb(254,85,0)" fg:x="7248" fg:w="1"/><text x="86.0658%" y="879.50"></text></g><g><title>__memcg_slab_post_alloc_hook (5 samples, 0.06%)</title><rect x="85.7803%" y="885" width="0.0592%" height="15" fill="rgb(247,63,33)" fg:x="7245" fg:w="5"/><text x="86.0303%" y="895.50"></text></g><g><title>mod_objcg_state (1 samples, 0.01%)</title><rect x="85.8276%" y="869" width="0.0118%" height="15" fill="rgb(220,7,54)" fg:x="7249" fg:w="1"/><text x="86.0776%" y="879.50"></text></g><g><title>memset (5 samples, 0.06%)</title><rect x="85.8395%" y="885" width="0.0592%" height="15" fill="rgb(238,227,21)" fg:x="7250" fg:w="5"/><text x="86.0895%" y="895.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.01%)</title><rect x="86.0052%" y="869" width="0.0118%" height="15" fill="rgb(237,29,31)" fg:x="7264" fg:w="1"/><text x="86.2552%" y="879.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="86.0170%" y="869" width="0.0118%" height="15" fill="rgb(211,21,50)" fg:x="7265" fg:w="1"/><text x="86.2670%" y="879.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="86.0170%" y="853" width="0.0118%" height="15" fill="rgb(239,119,2)" fg:x="7265" fg:w="1"/><text x="86.2670%" y="863.50"></text></g><g><title>__common_interrupt (1 samples, 0.01%)</title><rect x="86.0170%" y="837" width="0.0118%" height="15" fill="rgb(250,2,39)" fg:x="7265" fg:w="1"/><text x="86.2670%" y="847.50"></text></g><g><title>handle_edge_irq (1 samples, 0.01%)</title><rect x="86.0170%" y="821" width="0.0118%" height="15" fill="rgb(244,46,53)" fg:x="7265" fg:w="1"/><text x="86.2670%" y="831.50"></text></g><g><title>handle_irq_event (1 samples, 0.01%)</title><rect x="86.0170%" y="805" width="0.0118%" height="15" fill="rgb(209,21,19)" fg:x="7265" fg:w="1"/><text x="86.2670%" y="815.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="86.0170%" y="789" width="0.0118%" height="15" fill="rgb(236,145,4)" fg:x="7265" fg:w="1"/><text x="86.2670%" y="799.50"></text></g><g><title>[[amdgpu]] (1 samples, 0.01%)</title><rect x="86.0170%" y="773" width="0.0118%" height="15" fill="rgb(220,133,36)" fg:x="7265" fg:w="1"/><text x="86.2670%" y="783.50"></text></g><g><title>[[amdgpu]] (1 samples, 0.01%)</title><rect x="86.0170%" y="757" width="0.0118%" height="15" fill="rgb(244,18,3)" fg:x="7265" fg:w="1"/><text x="86.2670%" y="767.50"></text></g><g><title>[[amdgpu]] (1 samples, 0.01%)</title><rect x="86.0170%" y="741" width="0.0118%" height="15" fill="rgb(232,171,48)" fg:x="7265" fg:w="1"/><text x="86.2670%" y="751.50"></text></g><g><title>[[amdgpu]] (1 samples, 0.01%)</title><rect x="86.0170%" y="725" width="0.0118%" height="15" fill="rgb(223,223,53)" fg:x="7265" fg:w="1"/><text x="86.2670%" y="735.50"></text></g><g><title>[[amdgpu]] (1 samples, 0.01%)</title><rect x="86.0170%" y="709" width="0.0118%" height="15" fill="rgb(246,92,13)" fg:x="7265" fg:w="1"/><text x="86.2670%" y="719.50"></text></g><g><title>memcg_account_kmem (1 samples, 0.01%)</title><rect x="86.0289%" y="869" width="0.0118%" height="15" fill="rgb(229,171,10)" fg:x="7266" fg:w="1"/><text x="86.2789%" y="879.50"></text></g><g><title>mod_memcg_state (1 samples, 0.01%)</title><rect x="86.0289%" y="853" width="0.0118%" height="15" fill="rgb(213,131,26)" fg:x="7266" fg:w="1"/><text x="86.2789%" y="863.50"></text></g><g><title>__mod_memcg_state (1 samples, 0.01%)</title><rect x="86.0289%" y="837" width="0.0118%" height="15" fill="rgb(242,87,54)" fg:x="7266" fg:w="1"/><text x="86.2789%" y="847.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.01%)</title><rect x="86.0407%" y="853" width="0.0118%" height="15" fill="rgb(237,21,35)" fg:x="7267" fg:w="1"/><text x="86.2907%" y="863.50"></text></g><g><title>memcg_account_kmem (3 samples, 0.04%)</title><rect x="86.0526%" y="853" width="0.0355%" height="15" fill="rgb(253,13,47)" fg:x="7268" fg:w="3"/><text x="86.3026%" y="863.50"></text></g><g><title>mod_memcg_state (3 samples, 0.04%)</title><rect x="86.0526%" y="837" width="0.0355%" height="15" fill="rgb(215,122,49)" fg:x="7268" fg:w="3"/><text x="86.3026%" y="847.50"></text></g><g><title>__mod_memcg_state (3 samples, 0.04%)</title><rect x="86.0526%" y="821" width="0.0355%" height="15" fill="rgb(209,179,30)" fg:x="7268" fg:w="3"/><text x="86.3026%" y="831.50"></text></g><g><title>obj_cgroup_uncharge_pages (5 samples, 0.06%)</title><rect x="86.0407%" y="869" width="0.0592%" height="15" fill="rgb(235,100,24)" fg:x="7267" fg:w="5"/><text x="86.2907%" y="879.50"></text></g><g><title>refill_stock (1 samples, 0.01%)</title><rect x="86.0881%" y="853" width="0.0118%" height="15" fill="rgb(209,67,24)" fg:x="7271" fg:w="1"/><text x="86.3381%" y="863.50"></text></g><g><title>refill_obj_stock (16 samples, 0.19%)</title><rect x="86.0999%" y="869" width="0.1894%" height="15" fill="rgb(206,74,32)" fg:x="7272" fg:w="16"/><text x="86.3499%" y="879.50"></text></g><g><title>drain_obj_stock (4 samples, 0.05%)</title><rect x="86.2420%" y="853" width="0.0474%" height="15" fill="rgb(212,45,25)" fg:x="7284" fg:w="4"/><text x="86.4920%" y="863.50"></text></g><g><title>page_counter_try_charge (3 samples, 0.04%)</title><rect x="86.3130%" y="853" width="0.0355%" height="15" fill="rgb(239,26,3)" fg:x="7290" fg:w="3"/><text x="86.5630%" y="863.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.01%)</title><rect x="86.3841%" y="821" width="0.0118%" height="15" fill="rgb(218,36,15)" fg:x="7296" fg:w="1"/><text x="86.6341%" y="831.50"></text></g><g><title>__kmalloc (65 samples, 0.77%)</title><rect x="85.6855%" y="901" width="0.7696%" height="15" fill="rgb(206,108,24)" fg:x="7237" fg:w="65"/><text x="85.9355%" y="911.50"></text></g><g><title>obj_cgroup_charge (47 samples, 0.56%)</title><rect x="85.8987%" y="885" width="0.5565%" height="15" fill="rgb(234,204,42)" fg:x="7255" fg:w="47"/><text x="86.1487%" y="895.50"></text></g><g><title>try_charge_memcg (14 samples, 0.17%)</title><rect x="86.2894%" y="869" width="0.1658%" height="15" fill="rgb(229,2,11)" fg:x="7288" fg:w="14"/><text x="86.5394%" y="879.50"></text></g><g><title>refill_stock (9 samples, 0.11%)</title><rect x="86.3486%" y="853" width="0.1066%" height="15" fill="rgb(221,20,48)" fg:x="7293" fg:w="9"/><text x="86.5986%" y="863.50"></text></g><g><title>__refill_stock (8 samples, 0.09%)</title><rect x="86.3604%" y="837" width="0.0947%" height="15" fill="rgb(244,164,10)" fg:x="7294" fg:w="8"/><text x="86.6104%" y="847.50"></text></g><g><title>drain_stock (5 samples, 0.06%)</title><rect x="86.3959%" y="821" width="0.0592%" height="15" fill="rgb(243,229,2)" fg:x="7297" fg:w="5"/><text x="86.6459%" y="831.50"></text></g><g><title>page_counter_uncharge (3 samples, 0.04%)</title><rect x="86.4196%" y="805" width="0.0355%" height="15" fill="rgb(232,131,37)" fg:x="7299" fg:w="3"/><text x="86.6696%" y="815.50"></text></g><g><title>fsnotify_destroy_event (1 samples, 0.01%)</title><rect x="86.4551%" y="901" width="0.0118%" height="15" fill="rgb(217,156,11)" fg:x="7302" fg:w="1"/><text x="86.7051%" y="911.50"></text></g><g><title>__smp_call_single_queue (1 samples, 0.01%)</title><rect x="86.5498%" y="805" width="0.0118%" height="15" fill="rgb(239,99,48)" fg:x="7310" fg:w="1"/><text x="86.7998%" y="815.50"></text></g><g><title>call_function_single_prep_ipi (1 samples, 0.01%)</title><rect x="86.5498%" y="789" width="0.0118%" height="15" fill="rgb(231,209,9)" fg:x="7310" fg:w="1"/><text x="86.7998%" y="799.50"></text></g><g><title>__wake_up (9 samples, 0.11%)</title><rect x="86.4670%" y="885" width="0.1066%" height="15" fill="rgb(254,97,27)" fg:x="7303" fg:w="9"/><text x="86.7170%" y="895.50"></text></g><g><title>__wake_up_common (9 samples, 0.11%)</title><rect x="86.4670%" y="869" width="0.1066%" height="15" fill="rgb(223,151,38)" fg:x="7303" fg:w="9"/><text x="86.7170%" y="879.50"></text></g><g><title>pollwake (8 samples, 0.09%)</title><rect x="86.4788%" y="853" width="0.0947%" height="15" fill="rgb(219,206,35)" fg:x="7304" fg:w="8"/><text x="86.7288%" y="863.50"></text></g><g><title>try_to_wake_up (8 samples, 0.09%)</title><rect x="86.4788%" y="837" width="0.0947%" height="15" fill="rgb(216,130,31)" fg:x="7304" fg:w="8"/><text x="86.7288%" y="847.50"></text></g><g><title>ttwu_queue_wakelist (2 samples, 0.02%)</title><rect x="86.5498%" y="821" width="0.0237%" height="15" fill="rgb(251,97,34)" fg:x="7310" fg:w="2"/><text x="86.7998%" y="831.50"></text></g><g><title>default_send_IPI_single_phys (1 samples, 0.01%)</title><rect x="86.5617%" y="805" width="0.0118%" height="15" fill="rgb(246,159,47)" fg:x="7311" fg:w="1"/><text x="86.8117%" y="815.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.02%)</title><rect x="86.5735%" y="885" width="0.0237%" height="15" fill="rgb(232,87,10)" fg:x="7312" fg:w="2"/><text x="86.8235%" y="895.50"></text></g><g><title>fsnotify_insert_event (12 samples, 0.14%)</title><rect x="86.4670%" y="901" width="0.1421%" height="15" fill="rgb(249,1,37)" fg:x="7303" fg:w="12"/><text x="86.7170%" y="911.50"></text></g><g><title>kill_fasync (1 samples, 0.01%)</title><rect x="86.5972%" y="885" width="0.0118%" height="15" fill="rgb(239,135,14)" fg:x="7314" fg:w="1"/><text x="86.8472%" y="895.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.01%)</title><rect x="86.6446%" y="869" width="0.0118%" height="15" fill="rgb(253,116,46)" fg:x="7318" fg:w="1"/><text x="86.8946%" y="879.50"></text></g><g><title>mod_objcg_state (1 samples, 0.01%)</title><rect x="86.6564%" y="869" width="0.0118%" height="15" fill="rgb(222,217,37)" fg:x="7319" fg:w="1"/><text x="86.9064%" y="879.50"></text></g><g><title>kfree (6 samples, 0.07%)</title><rect x="86.6090%" y="901" width="0.0710%" height="15" fill="rgb(252,96,8)" fg:x="7315" fg:w="6"/><text x="86.8590%" y="911.50"></text></g><g><title>__memcg_slab_free_hook (5 samples, 0.06%)</title><rect x="86.6209%" y="885" width="0.0592%" height="15" fill="rgb(254,103,41)" fg:x="7316" fg:w="5"/><text x="86.8709%" y="895.50"></text></g><g><title>refill_obj_stock (1 samples, 0.01%)</title><rect x="86.6682%" y="869" width="0.0118%" height="15" fill="rgb(218,213,19)" fg:x="7320" fg:w="1"/><text x="86.9182%" y="879.50"></text></g><g><title>fsnotify (98 samples, 1.16%)</title><rect x="85.5435%" y="933" width="1.1603%" height="15" fill="rgb(253,95,21)" fg:x="7225" fg:w="98"/><text x="85.7935%" y="943.50"></text></g><g><title>inotify_handle_inode_event (90 samples, 1.07%)</title><rect x="85.6382%" y="917" width="1.0656%" height="15" fill="rgb(229,26,28)" fg:x="7233" fg:w="90"/><text x="85.8882%" y="927.50"></text></g><g><title>memcpy (2 samples, 0.02%)</title><rect x="86.6801%" y="901" width="0.0237%" height="15" fill="rgb(230,129,16)" fg:x="7321" fg:w="2"/><text x="86.9301%" y="911.50"></text></g><g><title>ksys_write (131 samples, 1.55%)</title><rect x="85.1764%" y="981" width="1.5510%" height="15" fill="rgb(236,126,17)" fg:x="7194" fg:w="131"/><text x="85.4264%" y="991.50"></text></g><g><title>vfs_write (128 samples, 1.52%)</title><rect x="85.2119%" y="965" width="1.5155%" height="15" fill="rgb(209,33,33)" fg:x="7197" fg:w="128"/><text x="85.4619%" y="975.50"></text></g><g><title>__fsnotify_parent (101 samples, 1.20%)</title><rect x="85.5316%" y="949" width="1.1958%" height="15" fill="rgb(227,85,29)" fg:x="7224" fg:w="101"/><text x="85.7816%" y="959.50"></text></g><g><title>take_dentry_name_snapshot (2 samples, 0.02%)</title><rect x="86.7038%" y="933" width="0.0237%" height="15" fill="rgb(241,53,46)" fg:x="7323" fg:w="2"/><text x="86.9538%" y="943.50"></text></g><g><title>memcpy (2 samples, 0.02%)</title><rect x="86.7038%" y="917" width="0.0237%" height="15" fill="rgb(228,167,53)" fg:x="7323" fg:w="2"/><text x="86.9538%" y="927.50"></text></g><g><title>__rseq_handle_notify_resume (2 samples, 0.02%)</title><rect x="86.7393%" y="965" width="0.0237%" height="15" fill="rgb(238,195,45)" fg:x="7326" fg:w="2"/><text x="86.9893%" y="975.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="86.7511%" y="949" width="0.0118%" height="15" fill="rgb(252,124,45)" fg:x="7327" fg:w="1"/><text x="87.0011%" y="959.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="86.7511%" y="933" width="0.0118%" height="15" fill="rgb(251,38,35)" fg:x="7327" fg:w="1"/><text x="87.0011%" y="943.50"></text></g><g><title>get_mem_cgroup_from_mm (1 samples, 0.01%)</title><rect x="86.7748%" y="949" width="0.0118%" height="15" fill="rgb(227,33,2)" fg:x="7329" fg:w="1"/><text x="87.0248%" y="959.50"></text></g><g><title>do_syscall_64 (138 samples, 1.63%)</title><rect x="85.1764%" y="997" width="1.6339%" height="15" fill="rgb(223,157,46)" fg:x="7194" fg:w="138"/><text x="85.4264%" y="1007.50"></text></g><g><title>syscall_exit_to_user_mode (7 samples, 0.08%)</title><rect x="86.7274%" y="981" width="0.0829%" height="15" fill="rgb(222,78,41)" fg:x="7325" fg:w="7"/><text x="86.9774%" y="991.50"></text></g><g><title>mem_cgroup_handle_over_high (4 samples, 0.05%)</title><rect x="86.7630%" y="965" width="0.0474%" height="15" fill="rgb(248,176,11)" fg:x="7328" fg:w="4"/><text x="87.0130%" y="975.50"></text></g><g><title>reclaim_high (2 samples, 0.02%)</title><rect x="86.7866%" y="949" width="0.0237%" height="15" fill="rgb(241,221,18)" fg:x="7330" fg:w="2"/><text x="87.0366%" y="959.50"></text></g><g><title>entry_SYSCALL_64 (140 samples, 1.66%)</title><rect x="85.1646%" y="1013" width="1.6576%" height="15" fill="rgb(218,85,22)" fg:x="7193" fg:w="140"/><text x="85.4146%" y="1023.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="86.8103%" y="997" width="0.0118%" height="15" fill="rgb(222,223,7)" fg:x="7332" fg:w="1"/><text x="87.0603%" y="1007.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="86.8103%" y="981" width="0.0118%" height="15" fill="rgb(254,59,39)" fg:x="7332" fg:w="1"/><text x="87.0603%" y="991.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (142 samples, 1.68%)</title><rect x="85.1527%" y="1077" width="1.6813%" height="15" fill="rgb(247,100,27)" fg:x="7192" fg:w="142"/><text x="85.4027%" y="1087.50"></text></g><g><title>std::io::Write::write_all (142 samples, 1.68%)</title><rect x="85.1527%" y="1061" width="1.6813%" height="15" fill="rgb(237,207,10)" fg:x="7192" fg:w="142"/><text x="85.4027%" y="1071.50"></text></g><g><title>&lt;std::os::unix::net::stream::UnixStream as std::io::Write&gt;::write (142 samples, 1.68%)</title><rect x="85.1527%" y="1045" width="1.6813%" height="15" fill="rgb(220,121,28)" fg:x="7192" fg:w="142"/><text x="85.4027%" y="1055.50"></text></g><g><title>write (142 samples, 1.68%)</title><rect x="85.1527%" y="1029" width="1.6813%" height="15" fill="rgb(213,223,20)" fg:x="7192" fg:w="142"/><text x="85.4027%" y="1039.50"></text></g><g><title>syscall_return_via_sysret (1 samples, 0.01%)</title><rect x="86.8222%" y="1013" width="0.0118%" height="15" fill="rgb(205,121,27)" fg:x="7333" fg:w="1"/><text x="87.0722%" y="1023.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.01%)</title><rect x="86.8814%" y="1013" width="0.0118%" height="15" fill="rgb(253,24,53)" fg:x="7338" fg:w="1"/><text x="87.1314%" y="1023.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="86.9524%" y="997" width="0.0118%" height="15" fill="rgb(224,224,47)" fg:x="7344" fg:w="1"/><text x="87.2024%" y="1007.50"></text></g><g><title>__fdget_pos (4 samples, 0.05%)</title><rect x="87.2010%" y="949" width="0.0474%" height="15" fill="rgb(250,125,36)" fg:x="7365" fg:w="4"/><text x="87.4510%" y="959.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.01%)</title><rect x="87.2366%" y="933" width="0.0118%" height="15" fill="rgb(240,144,38)" fg:x="7368" fg:w="1"/><text x="87.4866%" y="943.50"></text></g><g><title>fput (1 samples, 0.01%)</title><rect x="87.2484%" y="949" width="0.0118%" height="15" fill="rgb(250,15,50)" fg:x="7369" fg:w="1"/><text x="87.4984%" y="959.50"></text></g><g><title>[[ext4]] (7 samples, 0.08%)</title><rect x="87.4970%" y="917" width="0.0829%" height="15" fill="rgb(210,24,26)" fg:x="7390" fg:w="7"/><text x="87.7470%" y="927.50"></text></g><g><title>generic_write_checks (6 samples, 0.07%)</title><rect x="87.5089%" y="901" width="0.0710%" height="15" fill="rgb(234,53,53)" fg:x="7391" fg:w="6"/><text x="87.7589%" y="911.50"></text></g><g><title>generic_write_check_limits (3 samples, 0.04%)</title><rect x="87.5444%" y="885" width="0.0355%" height="15" fill="rgb(208,108,28)" fg:x="7394" fg:w="3"/><text x="87.7944%" y="895.50"></text></g><g><title>file_modified (6 samples, 0.07%)</title><rect x="87.5799%" y="917" width="0.0710%" height="15" fill="rgb(227,143,7)" fg:x="7397" fg:w="6"/><text x="87.8299%" y="927.50"></text></g><g><title>inode_needs_update_time (3 samples, 0.04%)</title><rect x="87.6154%" y="901" width="0.0355%" height="15" fill="rgb(238,189,38)" fg:x="7400" fg:w="3"/><text x="87.8654%" y="911.50"></text></g><g><title>timestamp_truncate (1 samples, 0.01%)</title><rect x="87.6391%" y="885" width="0.0118%" height="15" fill="rgb(222,69,15)" fg:x="7402" fg:w="1"/><text x="87.8891%" y="895.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.01%)</title><rect x="88.3258%" y="805" width="0.0118%" height="15" fill="rgb(213,169,7)" fg:x="7460" fg:w="1"/><text x="88.5758%" y="815.50"></text></g><g><title>[[ext4]] (23 samples, 0.27%)</title><rect x="88.2430%" y="821" width="0.2723%" height="15" fill="rgb(251,219,4)" fg:x="7453" fg:w="23"/><text x="88.4930%" y="831.50"></text></g><g><title>crypto_shash_update (15 samples, 0.18%)</title><rect x="88.3377%" y="805" width="0.1776%" height="15" fill="rgb(241,55,40)" fg:x="7461" fg:w="15"/><text x="88.5877%" y="815.50"></text></g><g><title>[[crc32c_intel]] (8 samples, 0.09%)</title><rect x="88.4206%" y="789" width="0.0947%" height="15" fill="rgb(243,57,30)" fg:x="7468" fg:w="8"/><text x="88.6706%" y="799.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="88.5034%" y="773" width="0.0118%" height="15" fill="rgb(234,50,30)" fg:x="7475" fg:w="1"/><text x="88.7534%" y="783.50"></text></g><g><title>[[ext4]] (39 samples, 0.46%)</title><rect x="88.1601%" y="837" width="0.4618%" height="15" fill="rgb(239,23,42)" fg:x="7446" fg:w="39"/><text x="88.4101%" y="847.50"></text></g><g><title>bdev_getblk (9 samples, 0.11%)</title><rect x="88.5153%" y="821" width="0.1066%" height="15" fill="rgb(217,38,19)" fg:x="7476" fg:w="9"/><text x="88.7653%" y="831.50"></text></g><g><title>__find_get_block (6 samples, 0.07%)</title><rect x="88.5508%" y="805" width="0.0710%" height="15" fill="rgb(215,179,16)" fg:x="7479" fg:w="6"/><text x="88.8008%" y="815.50"></text></g><g><title>[[ext4]] (53 samples, 0.63%)</title><rect x="88.0180%" y="853" width="0.6275%" height="15" fill="rgb(254,21,37)" fg:x="7434" fg:w="53"/><text x="88.2680%" y="863.50"></text></g><g><title>[[jbd2]] (2 samples, 0.02%)</title><rect x="88.6218%" y="837" width="0.0237%" height="15" fill="rgb(219,207,48)" fg:x="7485" fg:w="2"/><text x="88.8718%" y="847.50"></text></g><g><title>[[jbd2]] (1 samples, 0.01%)</title><rect x="88.6337%" y="821" width="0.0118%" height="15" fill="rgb(227,225,41)" fg:x="7486" fg:w="1"/><text x="88.8837%" y="831.50"></text></g><g><title>[[ext4]] (65 samples, 0.77%)</title><rect x="87.9114%" y="869" width="0.7696%" height="15" fill="rgb(223,130,1)" fg:x="7425" fg:w="65"/><text x="88.1614%" y="879.50"></text></g><g><title>_raw_spin_lock (3 samples, 0.04%)</title><rect x="88.6455%" y="853" width="0.0355%" height="15" fill="rgb(249,54,42)" fg:x="7487" fg:w="3"/><text x="88.8955%" y="863.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.02%)</title><rect x="88.7284%" y="821" width="0.0237%" height="15" fill="rgb(248,69,25)" fg:x="7494" fg:w="2"/><text x="88.9784%" y="831.50"></text></g><g><title>[[jbd2]] (6 samples, 0.07%)</title><rect x="88.6929%" y="853" width="0.0710%" height="15" fill="rgb(234,21,32)" fg:x="7491" fg:w="6"/><text x="88.9429%" y="863.50"></text></g><g><title>__wake_up (5 samples, 0.06%)</title><rect x="88.7047%" y="837" width="0.0592%" height="15" fill="rgb(252,136,6)" fg:x="7492" fg:w="5"/><text x="88.9547%" y="847.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.01%)</title><rect x="88.7521%" y="821" width="0.0118%" height="15" fill="rgb(245,87,12)" fg:x="7496" fg:w="1"/><text x="89.0021%" y="831.50"></text></g><g><title>kmem_cache_free (3 samples, 0.04%)</title><rect x="88.7639%" y="853" width="0.0355%" height="15" fill="rgb(208,12,15)" fg:x="7497" fg:w="3"/><text x="89.0139%" y="863.50"></text></g><g><title>[[ext4]] (83 samples, 0.98%)</title><rect x="87.8286%" y="885" width="0.9827%" height="15" fill="rgb(250,98,2)" fg:x="7418" fg:w="83"/><text x="88.0786%" y="895.50"></text></g><g><title>[[jbd2]] (11 samples, 0.13%)</title><rect x="88.6810%" y="869" width="0.1302%" height="15" fill="rgb(205,213,15)" fg:x="7490" fg:w="11"/><text x="88.9310%" y="879.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="88.7994%" y="853" width="0.0118%" height="15" fill="rgb(248,192,44)" fg:x="7500" fg:w="1"/><text x="89.0494%" y="863.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="88.7994%" y="837" width="0.0118%" height="15" fill="rgb(221,89,17)" fg:x="7500" fg:w="1"/><text x="89.0494%" y="847.50"></text></g><g><title>[[jbd2]] (5 samples, 0.06%)</title><rect x="88.8823%" y="853" width="0.0592%" height="15" fill="rgb(209,55,3)" fg:x="7507" fg:w="5"/><text x="89.1323%" y="863.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="88.9297%" y="837" width="0.0118%" height="15" fill="rgb(247,23,45)" fg:x="7511" fg:w="1"/><text x="89.1797%" y="847.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="88.9297%" y="821" width="0.0118%" height="15" fill="rgb(235,152,23)" fg:x="7511" fg:w="1"/><text x="89.1797%" y="831.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="88.9297%" y="805" width="0.0118%" height="15" fill="rgb(244,63,13)" fg:x="7511" fg:w="1"/><text x="89.1797%" y="815.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="88.9297%" y="789" width="0.0118%" height="15" fill="rgb(227,30,37)" fg:x="7511" fg:w="1"/><text x="89.1797%" y="799.50"></text></g><g><title>clockevents_program_event (1 samples, 0.01%)</title><rect x="88.9297%" y="773" width="0.0118%" height="15" fill="rgb(224,49,42)" fg:x="7511" fg:w="1"/><text x="89.1797%" y="783.50"></text></g><g><title>lapic_next_event (1 samples, 0.01%)</title><rect x="88.9297%" y="757" width="0.0118%" height="15" fill="rgb(218,129,5)" fg:x="7511" fg:w="1"/><text x="89.1797%" y="767.50"></text></g><g><title>[[jbd2]] (10 samples, 0.12%)</title><rect x="88.8350%" y="869" width="0.1184%" height="15" fill="rgb(240,199,54)" fg:x="7503" fg:w="10"/><text x="89.0850%" y="879.50"></text></g><g><title>_raw_read_unlock (1 samples, 0.01%)</title><rect x="88.9415%" y="853" width="0.0118%" height="15" fill="rgb(234,31,13)" fg:x="7512" fg:w="1"/><text x="89.1915%" y="863.50"></text></g><g><title>[[jbd2]] (17 samples, 0.20%)</title><rect x="88.8113%" y="885" width="0.2013%" height="15" fill="rgb(219,73,54)" fg:x="7501" fg:w="17"/><text x="89.0613%" y="895.50"></text></g><g><title>kmem_cache_alloc (5 samples, 0.06%)</title><rect x="88.9534%" y="869" width="0.0592%" height="15" fill="rgb(251,162,10)" fg:x="7513" fg:w="5"/><text x="89.2034%" y="879.50"></text></g><g><title>memset (1 samples, 0.01%)</title><rect x="89.0007%" y="853" width="0.0118%" height="15" fill="rgb(240,138,47)" fg:x="7517" fg:w="1"/><text x="89.2507%" y="863.50"></text></g><g><title>filemap_get_entry (9 samples, 0.11%)</title><rect x="89.0362%" y="869" width="0.1066%" height="15" fill="rgb(216,138,26)" fg:x="7520" fg:w="9"/><text x="89.2862%" y="879.50"></text></g><g><title>xas_load (7 samples, 0.08%)</title><rect x="89.0599%" y="853" width="0.0829%" height="15" fill="rgb(243,17,35)" fg:x="7522" fg:w="7"/><text x="89.3099%" y="863.50"></text></g><g><title>xas_descend (4 samples, 0.05%)</title><rect x="89.0954%" y="837" width="0.0474%" height="15" fill="rgb(241,60,18)" fg:x="7525" fg:w="4"/><text x="89.3454%" y="847.50"></text></g><g><title>folio_alloc (1 samples, 0.01%)</title><rect x="89.1428%" y="869" width="0.0118%" height="15" fill="rgb(234,2,44)" fg:x="7529" fg:w="1"/><text x="89.3928%" y="879.50"></text></g><g><title>alloc_pages_mpol (1 samples, 0.01%)</title><rect x="89.1428%" y="853" width="0.0118%" height="15" fill="rgb(225,225,33)" fg:x="7529" fg:w="1"/><text x="89.3928%" y="863.50"></text></g><g><title>__alloc_pages (1 samples, 0.01%)</title><rect x="89.1428%" y="837" width="0.0118%" height="15" fill="rgb(234,50,31)" fg:x="7529" fg:w="1"/><text x="89.3928%" y="847.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.01%)</title><rect x="89.1428%" y="821" width="0.0118%" height="15" fill="rgb(249,6,25)" fg:x="7529" fg:w="1"/><text x="89.3928%" y="831.50"></text></g><g><title>clear_page_erms (1 samples, 0.01%)</title><rect x="89.1428%" y="805" width="0.0118%" height="15" fill="rgb(241,5,17)" fg:x="7529" fg:w="1"/><text x="89.3928%" y="815.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="89.1428%" y="789" width="0.0118%" height="15" fill="rgb(207,116,10)" fg:x="7529" fg:w="1"/><text x="89.3928%" y="799.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="89.1428%" y="773" width="0.0118%" height="15" fill="rgb(222,128,18)" fg:x="7529" fg:w="1"/><text x="89.3928%" y="783.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="89.1428%" y="757" width="0.0118%" height="15" fill="rgb(229,109,25)" fg:x="7529" fg:w="1"/><text x="89.3928%" y="767.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="89.1428%" y="741" width="0.0118%" height="15" fill="rgb(222,102,25)" fg:x="7529" fg:w="1"/><text x="89.3928%" y="751.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="89.1428%" y="725" width="0.0118%" height="15" fill="rgb(239,211,5)" fg:x="7529" fg:w="1"/><text x="89.3928%" y="735.50"></text></g><g><title>tick_nohz_handler (1 samples, 0.01%)</title><rect x="89.1428%" y="709" width="0.0118%" height="15" fill="rgb(223,136,26)" fg:x="7529" fg:w="1"/><text x="89.3928%" y="719.50"></text></g><g><title>update_process_times (1 samples, 0.01%)</title><rect x="89.1428%" y="693" width="0.0118%" height="15" fill="rgb(227,30,15)" fg:x="7529" fg:w="1"/><text x="89.3928%" y="703.50"></text></g><g><title>scheduler_tick (1 samples, 0.01%)</title><rect x="89.1428%" y="677" width="0.0118%" height="15" fill="rgb(247,76,4)" fg:x="7529" fg:w="1"/><text x="89.3928%" y="687.50"></text></g><g><title>perf_event_task_tick (1 samples, 0.01%)</title><rect x="89.1428%" y="661" width="0.0118%" height="15" fill="rgb(245,38,48)" fg:x="7529" fg:w="1"/><text x="89.3928%" y="671.50"></text></g><g><title>perf_adjust_freq_unthr_context (1 samples, 0.01%)</title><rect x="89.1428%" y="645" width="0.0118%" height="15" fill="rgb(210,220,14)" fg:x="7529" fg:w="1"/><text x="89.3928%" y="655.50"></text></g><g><title>__filemap_get_folio (13 samples, 0.15%)</title><rect x="89.0126%" y="885" width="0.1539%" height="15" fill="rgb(224,60,51)" fg:x="7518" fg:w="13"/><text x="89.2626%" y="895.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="89.1546%" y="869" width="0.0118%" height="15" fill="rgb(212,133,49)" fg:x="7530" fg:w="1"/><text x="89.4046%" y="879.50"></text></g><g><title>__x86_indirect_thunk_array (1 samples, 0.01%)</title><rect x="89.1665%" y="885" width="0.0118%" height="15" fill="rgb(231,39,22)" fg:x="7531" fg:w="1"/><text x="89.4165%" y="895.50"></text></g><g><title>block_write_end (4 samples, 0.05%)</title><rect x="89.1783%" y="885" width="0.0474%" height="15" fill="rgb(236,173,22)" fg:x="7532" fg:w="4"/><text x="89.4283%" y="895.50"></text></g><g><title>__block_commit_write (4 samples, 0.05%)</title><rect x="89.1783%" y="869" width="0.0474%" height="15" fill="rgb(210,70,0)" fg:x="7532" fg:w="4"/><text x="89.4283%" y="879.50"></text></g><g><title>mark_buffer_dirty (2 samples, 0.02%)</title><rect x="89.2020%" y="853" width="0.0237%" height="15" fill="rgb(215,170,11)" fg:x="7534" fg:w="2"/><text x="89.4520%" y="863.50"></text></g><g><title>down_write (1 samples, 0.01%)</title><rect x="89.2257%" y="885" width="0.0118%" height="15" fill="rgb(220,154,28)" fg:x="7536" fg:w="1"/><text x="89.4757%" y="895.50"></text></g><g><title>[[ext4]] (130 samples, 1.54%)</title><rect x="87.7102%" y="901" width="1.5392%" height="15" fill="rgb(240,160,41)" fg:x="7408" fg:w="130"/><text x="87.9602%" y="911.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="89.2375%" y="885" width="0.0118%" height="15" fill="rgb(243,215,41)" fg:x="7537" fg:w="1"/><text x="89.4875%" y="895.50"></text></g><g><title>__radix_tree_lookup (3 samples, 0.04%)</title><rect x="89.4033%" y="885" width="0.0355%" height="15" fill="rgb(214,208,31)" fg:x="7551" fg:w="3"/><text x="89.6533%" y="895.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.01%)</title><rect x="89.4388%" y="885" width="0.0118%" height="15" fill="rgb(247,57,22)" fg:x="7554" fg:w="1"/><text x="89.6888%" y="895.50"></text></g><g><title>balance_dirty_pages_ratelimited_flags (20 samples, 0.24%)</title><rect x="89.2493%" y="901" width="0.2368%" height="15" fill="rgb(228,73,52)" fg:x="7538" fg:w="20"/><text x="89.4993%" y="911.50"></text></g><g><title>inode_to_bdi (3 samples, 0.04%)</title><rect x="89.4506%" y="885" width="0.0355%" height="15" fill="rgb(252,60,9)" fg:x="7555" fg:w="3"/><text x="89.7006%" y="895.50"></text></g><g><title>copy_page_from_iter_atomic (6 samples, 0.07%)</title><rect x="89.4861%" y="901" width="0.0710%" height="15" fill="rgb(233,9,51)" fg:x="7558" fg:w="6"/><text x="89.7361%" y="911.50"></text></g><g><title>generic_perform_write (165 samples, 1.95%)</title><rect x="87.6510%" y="917" width="1.9536%" height="15" fill="rgb(223,67,14)" fg:x="7403" fg:w="165"/><text x="87.9010%" y="927.50">g..</text></g><g><title>fault_in_iov_iter_readable (4 samples, 0.05%)</title><rect x="89.5572%" y="901" width="0.0474%" height="15" fill="rgb(222,86,2)" fg:x="7564" fg:w="4"/><text x="89.8072%" y="911.50"></text></g><g><title>fault_in_readable (2 samples, 0.02%)</title><rect x="89.5809%" y="885" width="0.0237%" height="15" fill="rgb(243,58,54)" fg:x="7566" fg:w="2"/><text x="89.8309%" y="895.50"></text></g><g><title>[[ext4]] (190 samples, 2.25%)</title><rect x="87.3905%" y="933" width="2.2496%" height="15" fill="rgb(210,200,39)" fg:x="7381" fg:w="190"/><text x="87.6405%" y="943.50">[..</text></g><g><title>up_write (3 samples, 0.04%)</title><rect x="89.6045%" y="917" width="0.0355%" height="15" fill="rgb(238,135,9)" fg:x="7568" fg:w="3"/><text x="89.8545%" y="927.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="89.6282%" y="901" width="0.0118%" height="15" fill="rgb(232,179,7)" fg:x="7570" fg:w="1"/><text x="89.8782%" y="911.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="89.6282%" y="885" width="0.0118%" height="15" fill="rgb(245,65,41)" fg:x="7570" fg:w="1"/><text x="89.8782%" y="895.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.01%)</title><rect x="89.6282%" y="869" width="0.0118%" height="15" fill="rgb(227,43,8)" fg:x="7570" fg:w="1"/><text x="89.8782%" y="879.50"></text></g><g><title>handle_softirqs (1 samples, 0.01%)</title><rect x="89.6282%" y="853" width="0.0118%" height="15" fill="rgb(235,91,14)" fg:x="7570" fg:w="1"/><text x="89.8782%" y="863.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.01%)</title><rect x="89.8058%" y="917" width="0.0118%" height="15" fill="rgb(235,219,31)" fg:x="7585" fg:w="1"/><text x="90.0558%" y="927.50"></text></g><g><title>dget_parent (2 samples, 0.02%)</title><rect x="89.8177%" y="917" width="0.0237%" height="15" fill="rgb(227,121,25)" fg:x="7586" fg:w="2"/><text x="90.0677%" y="927.50"></text></g><g><title>dput (5 samples, 0.06%)</title><rect x="89.8413%" y="917" width="0.0592%" height="15" fill="rgb(254,129,24)" fg:x="7588" fg:w="5"/><text x="90.0913%" y="927.50"></text></g><g><title>lockref_put_return (2 samples, 0.02%)</title><rect x="89.8769%" y="901" width="0.0237%" height="15" fill="rgb(226,144,49)" fg:x="7591" fg:w="2"/><text x="90.1269%" y="911.50"></text></g><g><title>__srcu_read_lock (2 samples, 0.02%)</title><rect x="90.3623%" y="901" width="0.0237%" height="15" fill="rgb(214,187,32)" fg:x="7632" fg:w="2"/><text x="90.6123%" y="911.50"></text></g><g><title>fsnotify_handle_inode_event.isra.0 (3 samples, 0.04%)</title><rect x="90.3860%" y="901" width="0.0355%" height="15" fill="rgb(243,129,46)" fg:x="7634" fg:w="3"/><text x="90.6360%" y="911.50"></text></g><g><title>___slab_alloc (1 samples, 0.01%)</title><rect x="90.7649%" y="869" width="0.0118%" height="15" fill="rgb(221,185,35)" fg:x="7666" fg:w="1"/><text x="91.0149%" y="879.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="91.0964%" y="853" width="0.0118%" height="15" fill="rgb(205,0,32)" fg:x="7694" fg:w="1"/><text x="91.3464%" y="863.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="91.0964%" y="837" width="0.0118%" height="15" fill="rgb(229,179,12)" fg:x="7694" fg:w="1"/><text x="91.3464%" y="847.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="91.0964%" y="821" width="0.0118%" height="15" fill="rgb(252,107,19)" fg:x="7694" fg:w="1"/><text x="91.3464%" y="831.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="91.0964%" y="805" width="0.0118%" height="15" fill="rgb(220,95,27)" fg:x="7694" fg:w="1"/><text x="91.3464%" y="815.50"></text></g><g><title>__memcg_slab_post_alloc_hook (34 samples, 0.40%)</title><rect x="90.7767%" y="869" width="0.4026%" height="15" fill="rgb(240,113,40)" fg:x="7667" fg:w="34"/><text x="91.0267%" y="879.50"></text></g><g><title>mod_objcg_state (6 samples, 0.07%)</title><rect x="91.1082%" y="853" width="0.0710%" height="15" fill="rgb(208,4,43)" fg:x="7695" fg:w="6"/><text x="91.3582%" y="863.50"></text></g><g><title>current_obj_cgroup (1 samples, 0.01%)</title><rect x="91.1793%" y="869" width="0.0118%" height="15" fill="rgb(247,189,30)" fg:x="7701" fg:w="1"/><text x="91.4293%" y="879.50"></text></g><g><title>memset (15 samples, 0.18%)</title><rect x="91.1911%" y="869" width="0.1776%" height="15" fill="rgb(231,157,17)" fg:x="7702" fg:w="15"/><text x="91.4411%" y="879.50"></text></g><g><title>__rcu_read_lock (2 samples, 0.02%)</title><rect x="91.7831%" y="853" width="0.0237%" height="15" fill="rgb(224,139,6)" fg:x="7752" fg:w="2"/><text x="92.0331%" y="863.50"></text></g><g><title>__rcu_read_unlock (3 samples, 0.04%)</title><rect x="91.8068%" y="853" width="0.0355%" height="15" fill="rgb(223,83,16)" fg:x="7754" fg:w="3"/><text x="92.0568%" y="863.50"></text></g><g><title>memcg_account_kmem (26 samples, 0.31%)</title><rect x="91.8423%" y="853" width="0.3078%" height="15" fill="rgb(232,211,20)" fg:x="7757" fg:w="26"/><text x="92.0923%" y="863.50"></text></g><g><title>mod_memcg_state (26 samples, 0.31%)</title><rect x="91.8423%" y="837" width="0.3078%" height="15" fill="rgb(225,203,35)" fg:x="7757" fg:w="26"/><text x="92.0923%" y="847.50"></text></g><g><title>__mod_memcg_state (16 samples, 0.19%)</title><rect x="91.9607%" y="821" width="0.1894%" height="15" fill="rgb(215,211,44)" fg:x="7767" fg:w="16"/><text x="92.2107%" y="831.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.01%)</title><rect x="92.1383%" y="805" width="0.0118%" height="15" fill="rgb(248,213,26)" fg:x="7782" fg:w="1"/><text x="92.3883%" y="815.50"></text></g><g><title>__rcu_read_lock (2 samples, 0.02%)</title><rect x="92.3277%" y="837" width="0.0237%" height="15" fill="rgb(214,23,52)" fg:x="7798" fg:w="2"/><text x="92.5777%" y="847.50"></text></g><g><title>__rcu_read_unlock (2 samples, 0.02%)</title><rect x="92.3514%" y="837" width="0.0237%" height="15" fill="rgb(225,173,50)" fg:x="7800" fg:w="2"/><text x="92.6014%" y="847.50"></text></g><g><title>memcg_account_kmem (20 samples, 0.24%)</title><rect x="92.3751%" y="837" width="0.2368%" height="15" fill="rgb(206,150,22)" fg:x="7802" fg:w="20"/><text x="92.6251%" y="847.50"></text></g><g><title>mod_memcg_state (17 samples, 0.20%)</title><rect x="92.4106%" y="821" width="0.2013%" height="15" fill="rgb(239,64,23)" fg:x="7805" fg:w="17"/><text x="92.6606%" y="831.50"></text></g><g><title>__mod_memcg_state (10 samples, 0.12%)</title><rect x="92.4935%" y="805" width="0.1184%" height="15" fill="rgb(242,50,38)" fg:x="7812" fg:w="10"/><text x="92.7435%" y="815.50"></text></g><g><title>obj_cgroup_uncharge_pages (47 samples, 0.56%)</title><rect x="92.1501%" y="853" width="0.5565%" height="15" fill="rgb(217,91,15)" fg:x="7783" fg:w="47"/><text x="92.4001%" y="863.50"></text></g><g><title>refill_stock (8 samples, 0.09%)</title><rect x="92.6119%" y="837" width="0.0947%" height="15" fill="rgb(230,172,6)" fg:x="7822" fg:w="8"/><text x="92.8619%" y="847.50"></text></g><g><title>__refill_stock (2 samples, 0.02%)</title><rect x="92.6829%" y="821" width="0.0237%" height="15" fill="rgb(221,98,26)" fg:x="7828" fg:w="2"/><text x="92.9329%" y="831.50"></text></g><g><title>__rcu_read_lock (3 samples, 0.04%)</title><rect x="92.8724%" y="837" width="0.0355%" height="15" fill="rgb(227,210,45)" fg:x="7844" fg:w="3"/><text x="93.1224%" y="847.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.01%)</title><rect x="93.0855%" y="821" width="0.0118%" height="15" fill="rgb(206,8,30)" fg:x="7862" fg:w="1"/><text x="93.3355%" y="831.50"></text></g><g><title>drain_obj_stock (18 samples, 0.21%)</title><rect x="92.9079%" y="837" width="0.2131%" height="15" fill="rgb(241,219,17)" fg:x="7847" fg:w="18"/><text x="93.1579%" y="847.50"></text></g><g><title>mod_memcg_lruvec_state (2 samples, 0.02%)</title><rect x="93.0973%" y="821" width="0.0237%" height="15" fill="rgb(247,121,29)" fg:x="7863" fg:w="2"/><text x="93.3473%" y="831.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.01%)</title><rect x="93.1092%" y="805" width="0.0118%" height="15" fill="rgb(219,169,49)" fg:x="7864" fg:w="1"/><text x="93.3592%" y="815.50"></text></g><g><title>refill_obj_stock (36 samples, 0.43%)</title><rect x="92.7066%" y="853" width="0.4262%" height="15" fill="rgb(253,49,49)" fg:x="7830" fg:w="36"/><text x="92.9566%" y="863.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="93.1210%" y="837" width="0.0118%" height="15" fill="rgb(217,178,3)" fg:x="7865" fg:w="1"/><text x="93.3710%" y="847.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="93.1210%" y="821" width="0.0118%" height="15" fill="rgb(234,73,37)" fg:x="7865" fg:w="1"/><text x="93.3710%" y="831.50"></text></g><g><title>page_counter_try_charge (35 samples, 0.41%)</title><rect x="93.4644%" y="837" width="0.4144%" height="15" fill="rgb(250,98,22)" fg:x="7894" fg:w="35"/><text x="93.7144%" y="847.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="93.8669%" y="821" width="0.0118%" height="15" fill="rgb(220,108,37)" fg:x="7928" fg:w="1"/><text x="94.1169%" y="831.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="93.8669%" y="805" width="0.0118%" height="15" fill="rgb(225,168,10)" fg:x="7928" fg:w="1"/><text x="94.1169%" y="815.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.01%)</title><rect x="94.0919%" y="805" width="0.0118%" height="15" fill="rgb(247,215,21)" fg:x="7947" fg:w="1"/><text x="94.3419%" y="815.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.01%)</title><rect x="94.1037%" y="805" width="0.0118%" height="15" fill="rgb(253,189,31)" fg:x="7948" fg:w="1"/><text x="94.3537%" y="815.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.01%)</title><rect x="94.1866%" y="789" width="0.0118%" height="15" fill="rgb(241,54,22)" fg:x="7955" fg:w="1"/><text x="94.4366%" y="799.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.01%)</title><rect x="94.1984%" y="789" width="0.0118%" height="15" fill="rgb(211,87,4)" fg:x="7956" fg:w="1"/><text x="94.4484%" y="799.50"></text></g><g><title>page_counter_uncharge (26 samples, 0.31%)</title><rect x="94.2103%" y="789" width="0.3078%" height="15" fill="rgb(245,112,24)" fg:x="7957" fg:w="26"/><text x="94.4603%" y="799.50"></text></g><g><title>propagate_protected_usage (9 samples, 0.11%)</title><rect x="94.4116%" y="773" width="0.1066%" height="15" fill="rgb(235,190,41)" fg:x="7974" fg:w="9"/><text x="94.6616%" y="783.50"></text></g><g><title>obj_cgroup_charge (268 samples, 3.17%)</title><rect x="91.3687%" y="869" width="3.1731%" height="15" fill="rgb(214,89,8)" fg:x="7717" fg:w="268"/><text x="91.6187%" y="879.50">obj..</text></g><g><title>try_charge_memcg (119 samples, 1.41%)</title><rect x="93.1328%" y="853" width="1.4090%" height="15" fill="rgb(249,155,35)" fg:x="7866" fg:w="119"/><text x="93.3828%" y="863.50"></text></g><g><title>refill_stock (56 samples, 0.66%)</title><rect x="93.8788%" y="837" width="0.6630%" height="15" fill="rgb(249,88,26)" fg:x="7929" fg:w="56"/><text x="94.1288%" y="847.50"></text></g><g><title>__refill_stock (45 samples, 0.53%)</title><rect x="94.0090%" y="821" width="0.5328%" height="15" fill="rgb(232,56,8)" fg:x="7940" fg:w="45"/><text x="94.2590%" y="831.50"></text></g><g><title>drain_stock (36 samples, 0.43%)</title><rect x="94.1156%" y="805" width="0.4262%" height="15" fill="rgb(240,95,3)" fg:x="7949" fg:w="36"/><text x="94.3656%" y="815.50"></text></g><g><title>srso_alias_return_thunk (2 samples, 0.02%)</title><rect x="94.5181%" y="789" width="0.0237%" height="15" fill="rgb(222,44,28)" fg:x="7983" fg:w="2"/><text x="94.7681%" y="799.50"></text></g><g><title>srso_alias_safe_ret (2 samples, 0.02%)</title><rect x="94.5181%" y="773" width="0.0237%" height="15" fill="rgb(234,16,30)" fg:x="7983" fg:w="2"/><text x="94.7681%" y="783.50"></text></g><g><title>__kmalloc (337 samples, 3.99%)</title><rect x="90.5873%" y="885" width="3.9901%" height="15" fill="rgb(223,26,17)" fg:x="7651" fg:w="337"/><text x="90.8373%" y="895.50">__km..</text></g><g><title>srso_alias_return_thunk (3 samples, 0.04%)</title><rect x="94.5418%" y="869" width="0.0355%" height="15" fill="rgb(239,187,47)" fg:x="7985" fg:w="3"/><text x="94.7918%" y="879.50"></text></g><g><title>srso_alias_safe_ret (3 samples, 0.04%)</title><rect x="94.5418%" y="853" width="0.0355%" height="15" fill="rgb(247,102,50)" fg:x="7985" fg:w="3"/><text x="94.7918%" y="863.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="94.5773%" y="885" width="0.0118%" height="15" fill="rgb(231,216,22)" fg:x="7988" fg:w="1"/><text x="94.8273%" y="895.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="94.5773%" y="869" width="0.0118%" height="15" fill="rgb(216,201,26)" fg:x="7988" fg:w="1"/><text x="94.8273%" y="879.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="94.5773%" y="853" width="0.0118%" height="15" fill="rgb(214,186,23)" fg:x="7988" fg:w="1"/><text x="94.8273%" y="863.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="94.5773%" y="837" width="0.0118%" height="15" fill="rgb(235,184,4)" fg:x="7988" fg:w="1"/><text x="94.8273%" y="847.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="94.5773%" y="821" width="0.0118%" height="15" fill="rgb(244,46,17)" fg:x="7988" fg:w="1"/><text x="94.8273%" y="831.50"></text></g><g><title>tick_nohz_handler (1 samples, 0.01%)</title><rect x="94.5773%" y="805" width="0.0118%" height="15" fill="rgb(248,74,46)" fg:x="7988" fg:w="1"/><text x="94.8273%" y="815.50"></text></g><g><title>update_process_times (1 samples, 0.01%)</title><rect x="94.5773%" y="789" width="0.0118%" height="15" fill="rgb(243,79,5)" fg:x="7988" fg:w="1"/><text x="94.8273%" y="799.50"></text></g><g><title>scheduler_tick (1 samples, 0.01%)</title><rect x="94.5773%" y="773" width="0.0118%" height="15" fill="rgb(213,148,1)" fg:x="7988" fg:w="1"/><text x="94.8273%" y="783.50"></text></g><g><title>task_tick_fair (1 samples, 0.01%)</title><rect x="94.5773%" y="757" width="0.0118%" height="15" fill="rgb(221,30,0)" fg:x="7988" fg:w="1"/><text x="94.8273%" y="767.50"></text></g><g><title>update_curr (1 samples, 0.01%)</title><rect x="94.5773%" y="741" width="0.0118%" height="15" fill="rgb(207,85,29)" fg:x="7988" fg:w="1"/><text x="94.8273%" y="751.50"></text></g><g><title>fsnotify_destroy_event (3 samples, 0.04%)</title><rect x="94.5892%" y="885" width="0.0355%" height="15" fill="rgb(239,31,46)" fg:x="7989" fg:w="3"/><text x="94.8392%" y="895.50"></text></g><g><title>__task_rq_lock (10 samples, 0.12%)</title><rect x="95.3824%" y="805" width="0.1184%" height="15" fill="rgb(219,6,1)" fg:x="8056" fg:w="10"/><text x="95.6324%" y="815.50"></text></g><g><title>raw_spin_rq_lock_nested (9 samples, 0.11%)</title><rect x="95.3943%" y="789" width="0.1066%" height="15" fill="rgb(229,90,29)" fg:x="8057" fg:w="9"/><text x="95.6443%" y="799.50"></text></g><g><title>_raw_spin_lock (9 samples, 0.11%)</title><rect x="95.3943%" y="773" width="0.1066%" height="15" fill="rgb(242,201,42)" fg:x="8057" fg:w="9"/><text x="95.6443%" y="783.50"></text></g><g><title>native_queued_spin_lock_slowpath (9 samples, 0.11%)</title><rect x="95.3943%" y="757" width="0.1066%" height="15" fill="rgb(243,80,54)" fg:x="8057" fg:w="9"/><text x="95.6443%" y="767.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="95.5008%" y="805" width="0.0118%" height="15" fill="rgb(223,166,15)" fg:x="8066" fg:w="1"/><text x="95.7508%" y="815.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.01%)</title><rect x="95.5127%" y="805" width="0.0118%" height="15" fill="rgb(238,78,27)" fg:x="8067" fg:w="1"/><text x="95.7627%" y="815.50"></text></g><g><title>select_task_rq_fair (3 samples, 0.04%)</title><rect x="95.5245%" y="805" width="0.0355%" height="15" fill="rgb(235,28,43)" fg:x="8068" fg:w="3"/><text x="95.7745%" y="815.50"></text></g><g><title>available_idle_cpu (2 samples, 0.02%)</title><rect x="95.5363%" y="789" width="0.0237%" height="15" fill="rgb(240,210,28)" fg:x="8069" fg:w="2"/><text x="95.7863%" y="799.50"></text></g><g><title>call_function_single_prep_ipi (1 samples, 0.01%)</title><rect x="95.5719%" y="773" width="0.0118%" height="15" fill="rgb(253,6,46)" fg:x="8072" fg:w="1"/><text x="95.8219%" y="783.50"></text></g><g><title>__smp_call_single_queue (3 samples, 0.04%)</title><rect x="95.5719%" y="789" width="0.0355%" height="15" fill="rgb(250,159,47)" fg:x="8072" fg:w="3"/><text x="95.8219%" y="799.50"></text></g><g><title>llist_add_batch (2 samples, 0.02%)</title><rect x="95.5837%" y="773" width="0.0237%" height="15" fill="rgb(216,139,2)" fg:x="8073" fg:w="2"/><text x="95.8337%" y="783.50"></text></g><g><title>pollwake (61 samples, 0.72%)</title><rect x="94.8970%" y="837" width="0.7222%" height="15" fill="rgb(221,124,44)" fg:x="8015" fg:w="61"/><text x="95.1470%" y="847.50"></text></g><g><title>try_to_wake_up (60 samples, 0.71%)</title><rect x="94.9088%" y="821" width="0.7104%" height="15" fill="rgb(205,37,22)" fg:x="8016" fg:w="60"/><text x="95.1588%" y="831.50"></text></g><g><title>ttwu_queue_wakelist (5 samples, 0.06%)</title><rect x="95.5600%" y="805" width="0.0592%" height="15" fill="rgb(250,55,8)" fg:x="8071" fg:w="5"/><text x="95.8100%" y="815.50"></text></g><g><title>default_send_IPI_single_phys (1 samples, 0.01%)</title><rect x="95.6074%" y="789" width="0.0118%" height="15" fill="rgb(215,83,48)" fg:x="8075" fg:w="1"/><text x="95.8574%" y="799.50"></text></g><g><title>__wake_up_common (70 samples, 0.83%)</title><rect x="94.8260%" y="853" width="0.8288%" height="15" fill="rgb(253,2,32)" fg:x="8009" fg:w="70"/><text x="95.0760%" y="863.50"></text></g><g><title>try_to_wake_up (3 samples, 0.04%)</title><rect x="95.6192%" y="837" width="0.0355%" height="15" fill="rgb(236,67,28)" fg:x="8076" fg:w="3"/><text x="95.8692%" y="847.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.02%)</title><rect x="95.6311%" y="821" width="0.0237%" height="15" fill="rgb(252,55,15)" fg:x="8077" fg:w="2"/><text x="95.8811%" y="831.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="95.6547%" y="853" width="0.0118%" height="15" fill="rgb(243,173,17)" fg:x="8079" fg:w="1"/><text x="95.9047%" y="863.50"></text></g><g><title>__wake_up (74 samples, 0.88%)</title><rect x="94.8023%" y="869" width="0.8762%" height="15" fill="rgb(215,212,13)" fg:x="8007" fg:w="74"/><text x="95.0523%" y="879.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.01%)</title><rect x="95.6666%" y="853" width="0.0118%" height="15" fill="rgb(253,176,6)" fg:x="8080" fg:w="1"/><text x="95.9166%" y="863.50"></text></g><g><title>_raw_spin_lock (9 samples, 0.11%)</title><rect x="95.6784%" y="869" width="0.1066%" height="15" fill="rgb(236,105,26)" fg:x="8081" fg:w="9"/><text x="95.9284%" y="879.50"></text></g><g><title>native_queued_spin_lock_slowpath (1 samples, 0.01%)</title><rect x="95.7731%" y="853" width="0.0118%" height="15" fill="rgb(239,226,32)" fg:x="8089" fg:w="1"/><text x="96.0231%" y="863.50"></text></g><g><title>inotify_merge (5 samples, 0.06%)</title><rect x="95.7850%" y="869" width="0.0592%" height="15" fill="rgb(236,104,51)" fg:x="8090" fg:w="5"/><text x="96.0350%" y="879.50"></text></g><g><title>strcmp (3 samples, 0.04%)</title><rect x="95.8087%" y="853" width="0.0355%" height="15" fill="rgb(220,172,33)" fg:x="8092" fg:w="3"/><text x="96.0587%" y="863.50"></text></g><g><title>kill_fasync (1 samples, 0.01%)</title><rect x="95.8442%" y="869" width="0.0118%" height="15" fill="rgb(224,182,25)" fg:x="8095" fg:w="1"/><text x="96.0942%" y="879.50"></text></g><g><title>fsnotify_insert_event (105 samples, 1.24%)</title><rect x="94.6247%" y="885" width="1.2432%" height="15" fill="rgb(236,184,24)" fg:x="7992" fg:w="105"/><text x="94.8747%" y="895.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="95.8560%" y="869" width="0.0118%" height="15" fill="rgb(241,221,14)" fg:x="8096" fg:w="1"/><text x="96.1060%" y="879.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="95.8560%" y="853" width="0.0118%" height="15" fill="rgb(227,146,5)" fg:x="8096" fg:w="1"/><text x="96.1060%" y="863.50"></text></g><g><title>inotify_free_event (4 samples, 0.05%)</title><rect x="95.8679%" y="885" width="0.0474%" height="15" fill="rgb(214,15,23)" fg:x="8097" fg:w="4"/><text x="96.1179%" y="895.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.01%)</title><rect x="96.0691%" y="853" width="0.0118%" height="15" fill="rgb(233,157,31)" fg:x="8114" fg:w="1"/><text x="96.3191%" y="863.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.01%)</title><rect x="96.0810%" y="853" width="0.0118%" height="15" fill="rgb(211,27,52)" fg:x="8115" fg:w="1"/><text x="96.3310%" y="863.50"></text></g><g><title>mod_objcg_state (3 samples, 0.04%)</title><rect x="96.0928%" y="853" width="0.0355%" height="15" fill="rgb(212,223,15)" fg:x="8116" fg:w="3"/><text x="96.3428%" y="863.50"></text></g><g><title>kfree (19 samples, 0.22%)</title><rect x="95.9152%" y="885" width="0.2250%" height="15" fill="rgb(254,211,0)" fg:x="8101" fg:w="19"/><text x="96.1652%" y="895.50"></text></g><g><title>__memcg_slab_free_hook (15 samples, 0.18%)</title><rect x="95.9626%" y="869" width="0.1776%" height="15" fill="rgb(205,43,38)" fg:x="8105" fg:w="15"/><text x="96.2126%" y="879.50"></text></g><g><title>refill_obj_stock (1 samples, 0.01%)</title><rect x="96.1283%" y="853" width="0.0118%" height="15" fill="rgb(242,206,46)" fg:x="8119" fg:w="1"/><text x="96.3783%" y="863.50"></text></g><g><title>memcpy (5 samples, 0.06%)</title><rect x="96.1402%" y="885" width="0.0592%" height="15" fill="rgb(220,221,12)" fg:x="8120" fg:w="5"/><text x="96.3902%" y="895.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="96.1994%" y="885" width="0.0118%" height="15" fill="rgb(217,156,35)" fg:x="8125" fg:w="1"/><text x="96.4494%" y="895.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="96.1994%" y="869" width="0.0118%" height="15" fill="rgb(207,181,49)" fg:x="8125" fg:w="1"/><text x="96.4494%" y="879.50"></text></g><g><title>fsnotify (535 samples, 6.33%)</title><rect x="89.9005%" y="917" width="6.3344%" height="15" fill="rgb(235,103,47)" fg:x="7593" fg:w="535"/><text x="90.1505%" y="927.50">fsnotify</text></g><g><title>inotify_handle_inode_event (491 samples, 5.81%)</title><rect x="90.4215%" y="901" width="5.8134%" height="15" fill="rgb(222,63,28)" fg:x="7637" fg:w="491"/><text x="90.6715%" y="911.50">inotify..</text></g><g><title>strlen (2 samples, 0.02%)</title><rect x="96.2112%" y="885" width="0.0237%" height="15" fill="rgb(244,137,21)" fg:x="8126" fg:w="2"/><text x="96.4612%" y="895.50"></text></g><g><title>release_dentry_name_snapshot (1 samples, 0.01%)</title><rect x="96.2349%" y="917" width="0.0118%" height="15" fill="rgb(228,35,27)" fg:x="8128" fg:w="1"/><text x="96.4849%" y="927.50"></text></g><g><title>__fsnotify_parent (565 samples, 6.69%)</title><rect x="89.6401%" y="933" width="6.6896%" height="15" fill="rgb(226,191,41)" fg:x="7571" fg:w="565"/><text x="89.8901%" y="943.50">__fsnotif..</text></g><g><title>take_dentry_name_snapshot (7 samples, 0.08%)</title><rect x="96.2467%" y="917" width="0.0829%" height="15" fill="rgb(210,154,3)" fg:x="8129" fg:w="7"/><text x="96.4967%" y="927.50"></text></g><g><title>memcpy (3 samples, 0.04%)</title><rect x="96.2941%" y="901" width="0.0355%" height="15" fill="rgb(216,60,49)" fg:x="8133" fg:w="3"/><text x="96.5441%" y="911.50"></text></g><g><title>bpf_lsm_file_permission (3 samples, 0.04%)</title><rect x="96.4125%" y="901" width="0.0355%" height="15" fill="rgb(226,17,20)" fg:x="8143" fg:w="3"/><text x="96.6625%" y="911.50"></text></g><g><title>ksys_write (784 samples, 9.28%)</title><rect x="87.1774%" y="965" width="9.2825%" height="15" fill="rgb(206,115,35)" fg:x="7363" fg:w="784"/><text x="87.4274%" y="975.50">ksys_write</text></g><g><title>vfs_write (777 samples, 9.20%)</title><rect x="87.2602%" y="949" width="9.1996%" height="15" fill="rgb(227,88,1)" fg:x="7370" fg:w="777"/><text x="87.5102%" y="959.50">vfs_write</text></g><g><title>rw_verify_area (11 samples, 0.13%)</title><rect x="96.3296%" y="933" width="0.1302%" height="15" fill="rgb(230,222,24)" fg:x="8136" fg:w="11"/><text x="96.5796%" y="943.50"></text></g><g><title>security_file_permission (6 samples, 0.07%)</title><rect x="96.3888%" y="917" width="0.0710%" height="15" fill="rgb(214,124,32)" fg:x="8141" fg:w="6"/><text x="96.6388%" y="927.50"></text></g><g><title>srso_alias_return_thunk (1 samples, 0.01%)</title><rect x="96.4480%" y="901" width="0.0118%" height="15" fill="rgb(240,41,36)" fg:x="8146" fg:w="1"/><text x="96.6980%" y="911.50"></text></g><g><title>srso_alias_safe_ret (1 samples, 0.01%)</title><rect x="96.4480%" y="885" width="0.0118%" height="15" fill="rgb(221,17,52)" fg:x="8146" fg:w="1"/><text x="96.6980%" y="895.50"></text></g><g><title>__rseq_handle_notify_resume (11 samples, 0.13%)</title><rect x="96.4954%" y="949" width="0.1302%" height="15" fill="rgb(252,70,16)" fg:x="8150" fg:w="11"/><text x="96.7454%" y="959.50"></text></g><g><title>__put_user_8 (2 samples, 0.02%)</title><rect x="96.6019%" y="933" width="0.0237%" height="15" fill="rgb(250,177,4)" fg:x="8159" fg:w="2"/><text x="96.8519%" y="943.50"></text></g><g><title>blkcg_maybe_throttle_current (2 samples, 0.02%)</title><rect x="96.6256%" y="949" width="0.0237%" height="15" fill="rgb(240,188,47)" fg:x="8161" fg:w="2"/><text x="96.8756%" y="959.50"></text></g><g><title>get_mem_cgroup_from_mm (5 samples, 0.06%)</title><rect x="96.7322%" y="933" width="0.0592%" height="15" fill="rgb(215,92,12)" fg:x="8170" fg:w="5"/><text x="96.9822%" y="943.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.01%)</title><rect x="96.7795%" y="917" width="0.0118%" height="15" fill="rgb(242,110,29)" fg:x="8174" fg:w="1"/><text x="97.0295%" y="927.50"></text></g><g><title>mem_cgroup_handle_over_high (13 samples, 0.15%)</title><rect x="96.6493%" y="949" width="0.1539%" height="15" fill="rgb(208,211,26)" fg:x="8163" fg:w="13"/><text x="96.8993%" y="959.50"></text></g><g><title>reclaim_high (1 samples, 0.01%)</title><rect x="96.7914%" y="933" width="0.0118%" height="15" fill="rgb(244,147,6)" fg:x="8175" fg:w="1"/><text x="97.0414%" y="943.50"></text></g><g><title>merge_sched_in (4 samples, 0.05%)</title><rect x="96.8032%" y="853" width="0.0474%" height="15" fill="rgb(211,130,42)" fg:x="8176" fg:w="4"/><text x="97.0532%" y="863.50"></text></g><g><title>event_sched_in (4 samples, 0.05%)</title><rect x="96.8032%" y="837" width="0.0474%" height="15" fill="rgb(220,63,1)" fg:x="8176" fg:w="4"/><text x="97.0532%" y="847.50"></text></g><g><title>perf_ibs_add (4 samples, 0.05%)</title><rect x="96.8032%" y="821" width="0.0474%" height="15" fill="rgb(241,212,30)" fg:x="8176" fg:w="4"/><text x="97.0532%" y="831.50"></text></g><g><title>perf_event_update_userpage (4 samples, 0.05%)</title><rect x="96.8032%" y="805" width="0.0474%" height="15" fill="rgb(233,153,17)" fg:x="8176" fg:w="4"/><text x="97.0532%" y="815.50"></text></g><g><title>arch_perf_update_userpage (4 samples, 0.05%)</title><rect x="96.8032%" y="789" width="0.0474%" height="15" fill="rgb(236,3,10)" fg:x="8176" fg:w="4"/><text x="97.0532%" y="799.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.06%)</title><rect x="96.8032%" y="901" width="0.0592%" height="15" fill="rgb(232,41,21)" fg:x="8176" fg:w="5"/><text x="97.0532%" y="911.50"></text></g><g><title>ctx_groups_sched_in (5 samples, 0.06%)</title><rect x="96.8032%" y="885" width="0.0592%" height="15" fill="rgb(206,63,51)" fg:x="8176" fg:w="5"/><text x="97.0532%" y="895.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (5 samples, 0.06%)</title><rect x="96.8032%" y="869" width="0.0592%" height="15" fill="rgb(250,214,3)" fg:x="8176" fg:w="5"/><text x="97.0532%" y="879.50"></text></g><g><title>perf_event_groups_next (1 samples, 0.01%)</title><rect x="96.8506%" y="853" width="0.0118%" height="15" fill="rgb(254,89,27)" fg:x="8180" fg:w="1"/><text x="97.1006%" y="863.50"></text></g><g><title>schedule (6 samples, 0.07%)</title><rect x="96.8032%" y="949" width="0.0710%" height="15" fill="rgb(249,41,14)" fg:x="8176" fg:w="6"/><text x="97.0532%" y="959.50"></text></g><g><title>__schedule (6 samples, 0.07%)</title><rect x="96.8032%" y="933" width="0.0710%" height="15" fill="rgb(221,196,51)" fg:x="8176" fg:w="6"/><text x="97.0532%" y="943.50"></text></g><g><title>finish_task_switch.isra.0 (6 samples, 0.07%)</title><rect x="96.8032%" y="917" width="0.0710%" height="15" fill="rgb(214,116,26)" fg:x="8176" fg:w="6"/><text x="97.0532%" y="927.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="96.8624%" y="901" width="0.0118%" height="15" fill="rgb(236,67,7)" fg:x="8181" fg:w="1"/><text x="97.1124%" y="911.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="96.8624%" y="885" width="0.0118%" height="15" fill="rgb(253,179,32)" fg:x="8181" fg:w="1"/><text x="97.1124%" y="895.50"></text></g><g><title>__common_interrupt (1 samples, 0.01%)</title><rect x="96.8624%" y="869" width="0.0118%" height="15" fill="rgb(218,33,15)" fg:x="8181" fg:w="1"/><text x="97.1124%" y="879.50"></text></g><g><title>handle_edge_irq (1 samples, 0.01%)</title><rect x="96.8624%" y="853" width="0.0118%" height="15" fill="rgb(217,202,41)" fg:x="8181" fg:w="1"/><text x="97.1124%" y="863.50"></text></g><g><title>handle_irq_event (1 samples, 0.01%)</title><rect x="96.8624%" y="837" width="0.0118%" height="15" fill="rgb(234,133,5)" fg:x="8181" fg:w="1"/><text x="97.1124%" y="847.50"></text></g><g><title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="96.8624%" y="821" width="0.0118%" height="15" fill="rgb(240,47,40)" fg:x="8181" fg:w="1"/><text x="97.1124%" y="831.50"></text></g><g><title>[[nvme]] (1 samples, 0.01%)</title><rect x="96.8624%" y="805" width="0.0118%" height="15" fill="rgb(234,166,26)" fg:x="8181" fg:w="1"/><text x="97.1124%" y="815.50"></text></g><g><title>[[nvme]] (1 samples, 0.01%)</title><rect x="96.8624%" y="789" width="0.0118%" height="15" fill="rgb(244,125,51)" fg:x="8181" fg:w="1"/><text x="97.1124%" y="799.50"></text></g><g><title>[[nvme]] (1 samples, 0.01%)</title><rect x="96.8624%" y="773" width="0.0118%" height="15" fill="rgb(229,171,11)" fg:x="8181" fg:w="1"/><text x="97.1124%" y="783.50"></text></g><g><title>__iommu_dma_unmap (1 samples, 0.01%)</title><rect x="96.8624%" y="757" width="0.0118%" height="15" fill="rgb(224,38,45)" fg:x="8181" fg:w="1"/><text x="97.1124%" y="767.50"></text></g><g><title>__iommu_unmap (1 samples, 0.01%)</title><rect x="96.8624%" y="741" width="0.0118%" height="15" fill="rgb(237,27,7)" fg:x="8181" fg:w="1"/><text x="97.1124%" y="751.50"></text></g><g><title>amd_iommu_unmap_pages (1 samples, 0.01%)</title><rect x="96.8624%" y="725" width="0.0118%" height="15" fill="rgb(216,52,7)" fg:x="8181" fg:w="1"/><text x="97.1124%" y="735.50"></text></g><g><title>iommu_v1_unmap_pages (1 samples, 0.01%)</title><rect x="96.8624%" y="709" width="0.0118%" height="15" fill="rgb(243,11,11)" fg:x="8181" fg:w="1"/><text x="97.1124%" y="719.50"></text></g><g><title>syscall_exit_to_user_mode_prepare (2 samples, 0.02%)</title><rect x="96.8743%" y="949" width="0.0237%" height="15" fill="rgb(253,167,20)" fg:x="8182" fg:w="2"/><text x="97.1243%" y="959.50"></text></g><g><title>do_syscall_64 (826 samples, 9.78%)</title><rect x="87.1418%" y="981" width="9.7798%" height="15" fill="rgb(215,207,5)" fg:x="7360" fg:w="826"/><text x="87.3918%" y="991.50">do_syscall_64</text></g><g><title>syscall_exit_to_user_mode (39 samples, 0.46%)</title><rect x="96.4599%" y="965" width="0.4618%" height="15" fill="rgb(252,127,31)" fg:x="8147" fg:w="39"/><text x="96.7099%" y="975.50"></text></g><g><title>task_work_run (2 samples, 0.02%)</title><rect x="96.8979%" y="949" width="0.0237%" height="15" fill="rgb(209,106,27)" fg:x="8184" fg:w="2"/><text x="97.1479%" y="959.50"></text></g><g><title>task_mm_cid_work (2 samples, 0.02%)</title><rect x="96.8979%" y="933" width="0.0237%" height="15" fill="rgb(214,220,18)" fg:x="8184" fg:w="2"/><text x="97.1479%" y="943.50"></text></g><g><title>entry_SYSCALL_64 (844 samples, 9.99%)</title><rect x="86.9642%" y="997" width="9.9929%" height="15" fill="rgb(237,89,12)" fg:x="7345" fg:w="844"/><text x="87.2142%" y="1007.50">entry_SYSCALL_..</text></g><g><title>srso_alias_return_thunk (3 samples, 0.04%)</title><rect x="96.9216%" y="981" width="0.0355%" height="15" fill="rgb(209,167,36)" fg:x="8186" fg:w="3"/><text x="97.1716%" y="991.50"></text></g><g><title>srso_alias_safe_ret (3 samples, 0.04%)</title><rect x="96.9216%" y="965" width="0.0355%" height="15" fill="rgb(243,45,22)" fg:x="8186" fg:w="3"/><text x="97.1716%" y="975.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for usize&gt;::fmt (999 samples, 11.83%)</title><rect x="85.1527%" y="1109" width="11.8281%" height="15" fill="rgb(239,2,46)" fg:x="7192" fg:w="999"/><text x="85.4027%" y="1119.50">core::fmt::num::im..</text></g><g><title>core::fmt::Formatter::pad_integral (999 samples, 11.83%)</title><rect x="85.1527%" y="1093" width="11.8281%" height="15" fill="rgb(241,101,0)" fg:x="7192" fg:w="999"/><text x="85.4027%" y="1103.50">core::fmt::Formatt..</text></g><g><title>core::fmt::Write::write_char (857 samples, 10.15%)</title><rect x="86.8340%" y="1077" width="10.1468%" height="15" fill="rgb(244,34,31)" fg:x="7334" fg:w="857"/><text x="87.0840%" y="1087.50">core::fmt::Writ..</text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (855 samples, 10.12%)</title><rect x="86.8577%" y="1061" width="10.1231%" height="15" fill="rgb(248,23,22)" fg:x="7336" fg:w="855"/><text x="87.1077%" y="1071.50">&lt;std::io::Write..</text></g><g><title>std::io::Write::write_all (855 samples, 10.12%)</title><rect x="86.8577%" y="1045" width="10.1231%" height="15" fill="rgb(218,27,48)" fg:x="7336" fg:w="855"/><text x="87.1077%" y="1055.50">std::io::Write:..</text></g><g><title>&lt;std::os::unix::net::stream::UnixStream as std::io::Write&gt;::write (853 samples, 10.10%)</title><rect x="86.8814%" y="1029" width="10.0995%" height="15" fill="rgb(232,78,1)" fg:x="7338" fg:w="853"/><text x="87.1314%" y="1039.50">&lt;std::os::unix:..</text></g><g><title>write (852 samples, 10.09%)</title><rect x="86.8932%" y="1013" width="10.0876%" height="15" fill="rgb(233,169,12)" fg:x="7339" fg:w="852"/><text x="87.1432%" y="1023.50">write</text></g><g><title>syscall_return_via_sysret (2 samples, 0.02%)</title><rect x="96.9571%" y="997" width="0.0237%" height="15" fill="rgb(225,222,54)" fg:x="8189" fg:w="2"/><text x="97.2071%" y="1007.50"></text></g><g><title>std::io::Write::write_fmt (2,002 samples, 23.70%)</title><rect x="73.2891%" y="1141" width="23.7035%" height="15" fill="rgb(245,126,29)" fg:x="6190" fg:w="2002"/><text x="73.5391%" y="1151.50">std::io::Write::write_fmt</text></g><g><title>core::fmt::write (2,002 samples, 23.70%)</title><rect x="73.2891%" y="1125" width="23.7035%" height="15" fill="rgb(241,63,48)" fg:x="6190" fg:w="2002"/><text x="73.5391%" y="1135.50">core::fmt::write</text></g><g><title>core::fmt::run (1 samples, 0.01%)</title><rect x="96.9808%" y="1109" width="0.0118%" height="15" fill="rgb(235,126,38)" fg:x="8191" fg:w="1"/><text x="97.2308%" y="1119.50"></text></g><g><title>[libc.so.6] (10 samples, 0.12%)</title><rect x="97.0045%" y="1125" width="0.1184%" height="15" fill="rgb(232,96,49)" fg:x="8193" fg:w="10"/><text x="97.2545%" y="1135.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="97.1229%" y="1109" width="0.0118%" height="15" fill="rgb(211,146,40)" fg:x="8203" fg:w="1"/><text x="97.3729%" y="1119.50"></text></g><g><title>clock_gettime (2 samples, 0.02%)</title><rect x="97.1229%" y="1125" width="0.0237%" height="15" fill="rgb(247,93,44)" fg:x="8203" fg:w="2"/><text x="97.3729%" y="1135.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="97.1347%" y="1109" width="0.0118%" height="15" fill="rgb(251,41,49)" fg:x="8204" fg:w="1"/><text x="97.3847%" y="1119.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="97.1347%" y="1093" width="0.0118%" height="15" fill="rgb(218,155,12)" fg:x="8204" fg:w="1"/><text x="97.3847%" y="1103.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="97.1347%" y="1077" width="0.0118%" height="15" fill="rgb(221,161,30)" fg:x="8204" fg:w="1"/><text x="97.3847%" y="1087.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="97.1347%" y="1061" width="0.0118%" height="15" fill="rgb(221,179,11)" fg:x="8204" fg:w="1"/><text x="97.3847%" y="1071.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="97.1347%" y="1045" width="0.0118%" height="15" fill="rgb(224,170,48)" fg:x="8204" fg:w="1"/><text x="97.3847%" y="1055.50"></text></g><g><title>tick_nohz_handler (1 samples, 0.01%)</title><rect x="97.1347%" y="1029" width="0.0118%" height="15" fill="rgb(223,117,5)" fg:x="8204" fg:w="1"/><text x="97.3847%" y="1039.50"></text></g><g><title>update_process_times (1 samples, 0.01%)</title><rect x="97.1347%" y="1013" width="0.0118%" height="15" fill="rgb(209,52,20)" fg:x="8204" fg:w="1"/><text x="97.3847%" y="1023.50"></text></g><g><title>scheduler_tick (1 samples, 0.01%)</title><rect x="97.1347%" y="997" width="0.0118%" height="15" fill="rgb(209,19,41)" fg:x="8204" fg:w="1"/><text x="97.3847%" y="1007.50"></text></g><g><title>task_tick_fair (1 samples, 0.01%)</title><rect x="97.1347%" y="981" width="0.0118%" height="15" fill="rgb(210,177,12)" fg:x="8204" fg:w="1"/><text x="97.3847%" y="991.50"></text></g><g><title>update_curr (1 samples, 0.01%)</title><rect x="97.1347%" y="965" width="0.0118%" height="15" fill="rgb(211,159,37)" fg:x="8204" fg:w="1"/><text x="97.3847%" y="975.50"></text></g><g><title>update_min_vruntime (1 samples, 0.01%)</title><rect x="97.1347%" y="949" width="0.0118%" height="15" fill="rgb(209,20,2)" fg:x="8204" fg:w="1"/><text x="97.3847%" y="959.50"></text></g><g><title>rc4::Rc4State::prga (1 samples, 0.01%)</title><rect x="97.1466%" y="1125" width="0.0118%" height="15" fill="rgb(244,3,46)" fg:x="8205" fg:w="1"/><text x="97.3966%" y="1135.50"></text></g><g><title>rc4::Rc4State::s_i (1 samples, 0.01%)</title><rect x="97.1466%" y="1109" width="0.0118%" height="15" fill="rgb(220,94,38)" fg:x="8205" fg:w="1"/><text x="97.3966%" y="1119.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (15 samples, 0.18%)</title><rect x="96.9927%" y="1141" width="0.1776%" height="15" fill="rgb(253,14,31)" fg:x="8192" fg:w="15"/><text x="97.2427%" y="1151.50"></text></g><g><title>rotmguard::proxy::PacketReader::wait_for_whole_packet::_{{closure}} (1 samples, 0.01%)</title><rect x="97.1584%" y="1125" width="0.0118%" height="15" fill="rgb(234,176,13)" fg:x="8206" fg:w="1"/><text x="97.4084%" y="1135.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (1 samples, 0.01%)</title><rect x="97.1584%" y="1109" width="0.0118%" height="15" fill="rgb(218,62,25)" fg:x="8206" fg:w="1"/><text x="97.4084%" y="1119.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (1 samples, 0.01%)</title><rect x="97.1584%" y="1093" width="0.0118%" height="15" fill="rgb(216,124,40)" fg:x="8206" fg:w="1"/><text x="97.4084%" y="1103.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (1 samples, 0.01%)</title><rect x="97.1584%" y="1077" width="0.0118%" height="15" fill="rgb(228,170,12)" fg:x="8206" fg:w="1"/><text x="97.4084%" y="1087.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (1 samples, 0.01%)</title><rect x="97.1584%" y="1061" width="0.0118%" height="15" fill="rgb(231,226,5)" fg:x="8206" fg:w="1"/><text x="97.4084%" y="1071.50"></text></g><g><title>&lt;rc4::Rc4Core&lt;KeySize&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1 samples, 0.01%)</title><rect x="97.1584%" y="1045" width="0.0118%" height="15" fill="rgb(237,122,22)" fg:x="8206" fg:w="1"/><text x="97.4084%" y="1055.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.01%)</title><rect x="97.1584%" y="1029" width="0.0118%" height="15" fill="rgb(209,185,25)" fg:x="8206" fg:w="1"/><text x="97.4084%" y="1039.50"></text></g><g><title>&lt;rc4::Backend as cipher::stream_core::StreamBackend&gt;::gen_ks_block (1 samples, 0.01%)</title><rect x="97.1584%" y="1013" width="0.0118%" height="15" fill="rgb(228,200,32)" fg:x="8206" fg:w="1"/><text x="97.4084%" y="1023.50"></text></g><g><title>rotmguard::proxy::Proxy::run::_{{closure}}::_{{closure}} (5,076 samples, 60.10%)</title><rect x="37.0826%" y="1157" width="60.0995%" height="15" fill="rgb(217,140,10)" fg:x="3132" fg:w="5076"/><text x="37.3326%" y="1167.50">rotmguard::proxy::Proxy::run::_{{closure}}::_{{closure}}</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.01%)</title><rect x="97.1703%" y="1141" width="0.0118%" height="15" fill="rgb(253,17,24)" fg:x="8207" fg:w="1"/><text x="97.4203%" y="1151.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.01%)</title><rect x="97.1703%" y="1125" width="0.0118%" height="15" fill="rgb(212,61,6)" fg:x="8207" fg:w="1"/><text x="97.4203%" y="1135.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (1 samples, 0.01%)</title><rect x="97.1703%" y="1109" width="0.0118%" height="15" fill="rgb(205,14,25)" fg:x="8207" fg:w="1"/><text x="97.4203%" y="1119.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1 samples, 0.01%)</title><rect x="97.1703%" y="1093" width="0.0118%" height="15" fill="rgb(232,69,41)" fg:x="8207" fg:w="1"/><text x="97.4203%" y="1103.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="97.1703%" y="1077" width="0.0118%" height="15" fill="rgb(241,106,47)" fg:x="8207" fg:w="1"/><text x="97.4203%" y="1087.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (1 samples, 0.01%)</title><rect x="97.2176%" y="1125" width="0.0118%" height="15" fill="rgb(210,213,53)" fg:x="8211" fg:w="1"/><text x="97.4676%" y="1135.50"></text></g><g><title>&lt;tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (2 samples, 0.02%)</title><rect x="97.2413%" y="1109" width="0.0237%" height="15" fill="rgb(253,175,27)" fg:x="8213" fg:w="2"/><text x="97.4913%" y="1119.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::on_exit (1 samples, 0.01%)</title><rect x="97.2531%" y="1093" width="0.0118%" height="15" fill="rgb(211,171,24)" fg:x="8214" fg:w="1"/><text x="97.5031%" y="1103.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::on_enter (1 samples, 0.01%)</title><rect x="97.2531%" y="1077" width="0.0118%" height="15" fill="rgb(229,80,7)" fg:x="8214" fg:w="1"/><text x="97.5031%" y="1087.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Filter&lt;S&gt;&gt;::on_enter (1 samples, 0.01%)</title><rect x="97.2650%" y="1077" width="0.0118%" height="15" fill="rgb(212,46,39)" fg:x="8215" fg:w="1"/><text x="97.5150%" y="1087.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::on_enter (1 samples, 0.01%)</title><rect x="97.2650%" y="1061" width="0.0118%" height="15" fill="rgb(240,80,45)" fg:x="8215" fg:w="1"/><text x="97.5150%" y="1071.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="97.2650%" y="1045" width="0.0118%" height="15" fill="rgb(253,177,40)" fg:x="8215" fg:w="1"/><text x="97.5150%" y="1055.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.01%)</title><rect x="97.2650%" y="1029" width="0.0118%" height="15" fill="rgb(249,200,15)" fg:x="8215" fg:w="1"/><text x="97.5150%" y="1039.50"></text></g><g><title>task_work_run (1 samples, 0.01%)</title><rect x="97.2650%" y="1013" width="0.0118%" height="15" fill="rgb(217,78,26)" fg:x="8215" fg:w="1"/><text x="97.5150%" y="1023.50"></text></g><g><title>task_mm_cid_work (1 samples, 0.01%)</title><rect x="97.2650%" y="997" width="0.0118%" height="15" fill="rgb(254,151,32)" fg:x="8215" fg:w="1"/><text x="97.5150%" y="1007.50"></text></g><g><title>&lt;tracing_subscriber::filter::layer_filters::Filtered&lt;L,F,S&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (2 samples, 0.02%)</title><rect x="97.2650%" y="1093" width="0.0237%" height="15" fill="rgb(226,165,27)" fg:x="8215" fg:w="2"/><text x="97.5150%" y="1103.50"></text></g><g><title>tracing_subscriber::layer::context::Context&lt;S&gt;::if_enabled_for (1 samples, 0.01%)</title><rect x="97.2768%" y="1077" width="0.0118%" height="15" fill="rgb(250,206,4)" fg:x="8216" fg:w="1"/><text x="97.5268%" y="1087.50"></text></g><g><title>tracing_subscriber::layer::context::Context&lt;S&gt;::is_enabled_inner (1 samples, 0.01%)</title><rect x="97.2768%" y="1061" width="0.0118%" height="15" fill="rgb(231,229,27)" fg:x="8216" fg:w="1"/><text x="97.5268%" y="1071.50"></text></g><g><title>tracing_subscriber::layer::context::Context&lt;S&gt;::span (1 samples, 0.01%)</title><rect x="97.2768%" y="1045" width="0.0118%" height="15" fill="rgb(239,217,8)" fg:x="8216" fg:w="1"/><text x="97.5268%" y="1055.50"></text></g><g><title>tracing_subscriber::registry::LookupSpan::span (1 samples, 0.01%)</title><rect x="97.2768%" y="1029" width="0.0118%" height="15" fill="rgb(225,204,27)" fg:x="8216" fg:w="1"/><text x="97.5268%" y="1039.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_subscriber::registry::LookupSpan&gt;::span_data (1 samples, 0.01%)</title><rect x="97.2768%" y="1013" width="0.0118%" height="15" fill="rgb(230,56,32)" fg:x="8216" fg:w="1"/><text x="97.5268%" y="1023.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (1 samples, 0.01%)</title><rect x="97.2768%" y="997" width="0.0118%" height="15" fill="rgb(222,56,27)" fg:x="8216" fg:w="1"/><text x="97.5268%" y="1007.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (1 samples, 0.01%)</title><rect x="97.2768%" y="981" width="0.0118%" height="15" fill="rgb(253,108,27)" fg:x="8216" fg:w="1"/><text x="97.5268%" y="991.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (1 samples, 0.01%)</title><rect x="97.2768%" y="965" width="0.0118%" height="15" fill="rgb(212,87,36)" fg:x="8216" fg:w="1"/><text x="97.5268%" y="975.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (1 samples, 0.01%)</title><rect x="97.2768%" y="949" width="0.0118%" height="15" fill="rgb(247,82,36)" fg:x="8216" fg:w="1"/><text x="97.5268%" y="959.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="97.2768%" y="933" width="0.0118%" height="15" fill="rgb(222,143,9)" fg:x="8216" fg:w="1"/><text x="97.5268%" y="943.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::_{{closure}} (1 samples, 0.01%)</title><rect x="97.2768%" y="917" width="0.0118%" height="15" fill="rgb(238,162,48)" fg:x="8216" fg:w="1"/><text x="97.5268%" y="927.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::_{{closure}} (1 samples, 0.01%)</title><rect x="97.2768%" y="901" width="0.0118%" height="15" fill="rgb(221,59,43)" fg:x="8216" fg:w="1"/><text x="97.5268%" y="911.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (1 samples, 0.01%)</title><rect x="97.2768%" y="885" width="0.0118%" height="15" fill="rgb(205,166,41)" fg:x="8216" fg:w="1"/><text x="97.5268%" y="895.50"></text></g><g><title>core::cmp::PartialEq::ne (1 samples, 0.01%)</title><rect x="97.2768%" y="869" width="0.0118%" height="15" fill="rgb(241,186,40)" fg:x="8216" fg:w="1"/><text x="97.5268%" y="879.50"></text></g><g><title>&lt;sharded_slab::page::slot::Generation&lt;C&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="97.2768%" y="853" width="0.0118%" height="15" fill="rgb(216,119,35)" fg:x="8216" fg:w="1"/><text x="97.5268%" y="863.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (1 samples, 0.01%)</title><rect x="97.2887%" y="1093" width="0.0118%" height="15" fill="rgb(208,68,38)" fg:x="8217" fg:w="1"/><text x="97.5387%" y="1103.50"></text></g><g><title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="97.3005%" y="1029" width="0.0118%" height="15" fill="rgb(217,113,1)" fg:x="8218" fg:w="1"/><text x="97.5505%" y="1039.50"></text></g><g><title>common_interrupt (1 samples, 0.01%)</title><rect x="97.3005%" y="1013" width="0.0118%" height="15" fill="rgb(242,153,3)" fg:x="8218" fg:w="1"/><text x="97.5505%" y="1023.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.01%)</title><rect x="97.3005%" y="997" width="0.0118%" height="15" fill="rgb(229,76,35)" fg:x="8218" fg:w="1"/><text x="97.5505%" y="1007.50"></text></g><g><title>handle_softirqs (1 samples, 0.01%)</title><rect x="97.3005%" y="981" width="0.0118%" height="15" fill="rgb(229,125,34)" fg:x="8218" fg:w="1"/><text x="97.5505%" y="991.50"></text></g><g><title>net_rx_action (1 samples, 0.01%)</title><rect x="97.3005%" y="965" width="0.0118%" height="15" fill="rgb(238,179,36)" fg:x="8218" fg:w="1"/><text x="97.5505%" y="975.50"></text></g><g><title>__napi_poll (1 samples, 0.01%)</title><rect x="97.3005%" y="949" width="0.0118%" height="15" fill="rgb(244,183,19)" fg:x="8218" fg:w="1"/><text x="97.5505%" y="959.50"></text></g><g><title>[[r8169]] (1 samples, 0.01%)</title><rect x="97.3005%" y="933" width="0.0118%" height="15" fill="rgb(216,85,49)" fg:x="8218" fg:w="1"/><text x="97.5505%" y="943.50"></text></g><g><title>napi_consume_skb (1 samples, 0.01%)</title><rect x="97.3005%" y="917" width="0.0118%" height="15" fill="rgb(208,161,47)" fg:x="8218" fg:w="1"/><text x="97.5505%" y="927.50"></text></g><g><title>skb_release_data (1 samples, 0.01%)</title><rect x="97.3005%" y="901" width="0.0118%" height="15" fill="rgb(233,210,18)" fg:x="8218" fg:w="1"/><text x="97.5505%" y="911.50"></text></g><g><title>kmem_cache_free (1 samples, 0.01%)</title><rect x="97.3005%" y="885" width="0.0118%" height="15" fill="rgb(205,104,42)" fg:x="8218" fg:w="1"/><text x="97.5505%" y="895.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::clone_span (2 samples, 0.02%)</title><rect x="97.3005%" y="1093" width="0.0237%" height="15" fill="rgb(248,90,43)" fg:x="8218" fg:w="2"/><text x="97.5505%" y="1103.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (2 samples, 0.02%)</title><rect x="97.3005%" y="1077" width="0.0237%" height="15" fill="rgb(206,198,11)" fg:x="8218" fg:w="2"/><text x="97.5505%" y="1087.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (2 samples, 0.02%)</title><rect x="97.3005%" y="1061" width="0.0237%" height="15" fill="rgb(239,165,27)" fg:x="8218" fg:w="2"/><text x="97.5505%" y="1071.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.02%)</title><rect x="97.3005%" y="1045" width="0.0237%" height="15" fill="rgb(246,44,32)" fg:x="8218" fg:w="2"/><text x="97.5505%" y="1055.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="97.3123%" y="1029" width="0.0118%" height="15" fill="rgb(252,65,42)" fg:x="8219" fg:w="1"/><text x="97.5623%" y="1039.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="97.3123%" y="1013" width="0.0118%" height="15" fill="rgb(246,197,18)" fg:x="8219" fg:w="1"/><text x="97.5623%" y="1023.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="97.3123%" y="997" width="0.0118%" height="15" fill="rgb(216,192,4)" fg:x="8219" fg:w="1"/><text x="97.5623%" y="1007.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="97.3123%" y="981" width="0.0118%" height="15" fill="rgb(208,117,10)" fg:x="8219" fg:w="1"/><text x="97.5623%" y="991.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="97.3123%" y="965" width="0.0118%" height="15" fill="rgb(240,61,47)" fg:x="8219" fg:w="1"/><text x="97.5623%" y="975.50"></text></g><g><title>tick_nohz_handler (1 samples, 0.01%)</title><rect x="97.3123%" y="949" width="0.0118%" height="15" fill="rgb(228,178,21)" fg:x="8219" fg:w="1"/><text x="97.5623%" y="959.50"></text></g><g><title>update_process_times (1 samples, 0.01%)</title><rect x="97.3123%" y="933" width="0.0118%" height="15" fill="rgb(219,96,54)" fg:x="8219" fg:w="1"/><text x="97.5623%" y="943.50"></text></g><g><title>scheduler_tick (1 samples, 0.01%)</title><rect x="97.3123%" y="917" width="0.0118%" height="15" fill="rgb(250,177,24)" fg:x="8219" fg:w="1"/><text x="97.5623%" y="927.50"></text></g><g><title>perf_event_task_tick (1 samples, 0.01%)</title><rect x="97.3123%" y="901" width="0.0118%" height="15" fill="rgb(242,154,46)" fg:x="8219" fg:w="1"/><text x="97.5623%" y="911.50"></text></g><g><title>perf_adjust_freq_unthr_context (1 samples, 0.01%)</title><rect x="97.3123%" y="885" width="0.0118%" height="15" fill="rgb(226,176,29)" fg:x="8219" fg:w="1"/><text x="97.5623%" y="895.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (9 samples, 0.11%)</title><rect x="97.2295%" y="1125" width="0.1066%" height="15" fill="rgb(226,29,2)" fg:x="8212" fg:w="9"/><text x="97.4795%" y="1135.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (6 samples, 0.07%)</title><rect x="97.2650%" y="1109" width="0.0710%" height="15" fill="rgb(237,104,14)" fg:x="8215" fg:w="6"/><text x="97.5150%" y="1119.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::enter (1 samples, 0.01%)</title><rect x="97.3242%" y="1093" width="0.0118%" height="15" fill="rgb(245,207,31)" fg:x="8220" fg:w="1"/><text x="97.5742%" y="1103.50"></text></g><g><title>rotmguard::accept_con::_{{closure}}::_{{closure}} (5,143 samples, 60.89%)</title><rect x="36.4551%" y="1205" width="60.8927%" height="15" fill="rgb(229,211,45)" fg:x="3079" fg:w="5143"/><text x="36.7051%" y="1215.50">rotmguard::accept_con::_{{closure}}::_{{closure}}</text></g><g><title>rotmguard::proxy::Proxy::run::_{{closure}} (5,126 samples, 60.69%)</title><rect x="36.6564%" y="1189" width="60.6915%" height="15" fill="rgb(229,113,15)" fg:x="3096" fg:w="5126"/><text x="36.9064%" y="1199.50">rotmguard::proxy::Proxy::run::_{{closure}}</text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (5,117 samples, 60.58%)</title><rect x="36.7630%" y="1173" width="60.5849%" height="15" fill="rgb(237,147,15)" fg:x="3105" fg:w="5117"/><text x="37.0130%" y="1183.50">&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tracing::span::Span::enter (14 samples, 0.17%)</title><rect x="97.1821%" y="1157" width="0.1658%" height="15" fill="rgb(244,120,12)" fg:x="8208" fg:w="14"/><text x="97.4321%" y="1167.50"></text></g><g><title>tracing::span::Span::do_enter (14 samples, 0.17%)</title><rect x="97.1821%" y="1141" width="0.1658%" height="15" fill="rgb(205,120,12)" fg:x="8208" fg:w="14"/><text x="97.4321%" y="1151.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::enter (1 samples, 0.01%)</title><rect x="97.3360%" y="1125" width="0.0118%" height="15" fill="rgb(231,26,45)" fg:x="8221" fg:w="1"/><text x="97.5860%" y="1135.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::subscriber (1 samples, 0.01%)</title><rect x="97.3360%" y="1109" width="0.0118%" height="15" fill="rgb(246,98,1)" fg:x="8221" fg:w="1"/><text x="97.5860%" y="1119.50"></text></g><g><title>rotmguard::logging::LOG_BUFFER (1 samples, 0.01%)</title><rect x="97.3479%" y="1205" width="0.0118%" height="15" fill="rgb(207,68,45)" fg:x="8222" fg:w="1"/><text x="97.5979%" y="1215.50"></text></g><g><title>rc4::Rc4State::prga (1 samples, 0.01%)</title><rect x="97.3479%" y="1189" width="0.0118%" height="15" fill="rgb(231,27,38)" fg:x="8222" fg:w="1"/><text x="97.5979%" y="1199.50"></text></g><g><title>rotmguard::module::autonexus::passive::Passive::apply_passive (1 samples, 0.01%)</title><rect x="97.3597%" y="1205" width="0.0118%" height="15" fill="rgb(214,223,3)" fg:x="8223" fg:w="1"/><text x="97.6097%" y="1215.50"></text></g><g><title>rotmguard::module::stats::StatsInst::get_newest (1 samples, 0.01%)</title><rect x="97.3597%" y="1189" width="0.0118%" height="15" fill="rgb(228,195,46)" fg:x="8223" fg:w="1"/><text x="97.6097%" y="1199.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::back (1 samples, 0.01%)</title><rect x="97.3597%" y="1173" width="0.0118%" height="15" fill="rgb(231,100,42)" fg:x="8223" fg:w="1"/><text x="97.6097%" y="1183.50"></text></g><g><title>rotmguard::module::autonexus::projectiles::Projectiles::add_bullet::__CALLSITE (2 samples, 0.02%)</title><rect x="97.3715%" y="1205" width="0.0237%" height="15" fill="rgb(236,53,4)" fg:x="8224" fg:w="2"/><text x="97.6215%" y="1215.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.02%)</title><rect x="97.3715%" y="1189" width="0.0237%" height="15" fill="rgb(230,152,12)" fg:x="8224" fg:w="2"/><text x="97.6215%" y="1199.50"></text></g><g><title>&lt;rotmguard::logging::LogWriter as std::io::Write&gt;::write (2 samples, 0.02%)</title><rect x="97.3715%" y="1173" width="0.0237%" height="15" fill="rgb(226,101,19)" fg:x="8224" fg:w="2"/><text x="97.6215%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (2 samples, 0.02%)</title><rect x="97.3715%" y="1157" width="0.0237%" height="15" fill="rgb(250,149,32)" fg:x="8224" fg:w="2"/><text x="97.6215%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2 samples, 0.02%)</title><rect x="97.3715%" y="1141" width="0.0237%" height="15" fill="rgb(232,178,12)" fg:x="8224" fg:w="2"/><text x="97.6215%" y="1151.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.02%)</title><rect x="97.3715%" y="1125" width="0.0237%" height="15" fill="rgb(246,151,17)" fg:x="8224" fg:w="2"/><text x="97.6215%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="97.3715%" y="1109" width="0.0237%" height="15" fill="rgb(252,17,51)" fg:x="8224" fg:w="2"/><text x="97.6215%" y="1119.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="97.3715%" y="1093" width="0.0237%" height="15" fill="rgb(250,207,23)" fg:x="8224" fg:w="2"/><text x="97.6215%" y="1103.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.01%)</title><rect x="97.3834%" y="1077" width="0.0118%" height="15" fill="rgb(205,27,5)" fg:x="8225" fg:w="1"/><text x="97.6334%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::_{{closure}} (1 samples, 0.01%)</title><rect x="97.3834%" y="1061" width="0.0118%" height="15" fill="rgb(224,32,19)" fg:x="8225" fg:w="1"/><text x="97.6334%" y="1071.50"></text></g><g><title>rotmguard::module::autonexus::projectiles::Projectiles::add_remove_objects (2 samples, 0.02%)</title><rect x="97.3952%" y="1205" width="0.0237%" height="15" fill="rgb(247,214,40)" fg:x="8226" fg:w="2"/><text x="97.6452%" y="1215.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (1 samples, 0.01%)</title><rect x="97.4071%" y="1189" width="0.0118%" height="15" fill="rgb(239,199,17)" fg:x="8227" fg:w="1"/><text x="97.6571%" y="1199.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove_entry (1 samples, 0.01%)</title><rect x="97.4071%" y="1173" width="0.0118%" height="15" fill="rgb(251,159,9)" fg:x="8227" fg:w="1"/><text x="97.6571%" y="1183.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.01%)</title><rect x="97.4071%" y="1157" width="0.0118%" height="15" fill="rgb(225,78,32)" fg:x="8227" fg:w="1"/><text x="97.6571%" y="1167.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1 samples, 0.01%)</title><rect x="97.4071%" y="1141" width="0.0118%" height="15" fill="rgb(206,97,47)" fg:x="8227" fg:w="1"/><text x="97.6571%" y="1151.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1 samples, 0.01%)</title><rect x="97.4071%" y="1125" width="0.0118%" height="15" fill="rgb(227,107,4)" fg:x="8227" fg:w="1"/><text x="97.6571%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="97.4071%" y="1109" width="0.0118%" height="15" fill="rgb(241,146,50)" fg:x="8227" fg:w="1"/><text x="97.6571%" y="1119.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="97.4071%" y="1093" width="0.0118%" height="15" fill="rgb(232,92,30)" fg:x="8227" fg:w="1"/><text x="97.6571%" y="1103.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="97.4071%" y="1077" width="0.0118%" height="15" fill="rgb(222,0,40)" fg:x="8227" fg:w="1"/><text x="97.6571%" y="1087.50"></text></g><g><title>rotmguard::proxy::PacketReader::wait_for_whole_packet::_{{closure}} (3 samples, 0.04%)</title><rect x="97.4189%" y="1205" width="0.0355%" height="15" fill="rgb(219,54,33)" fg:x="8228" fg:w="3"/><text x="97.6689%" y="1215.50"></text></g><g><title>rotmguard::proxy::Proxy::run::_{{closure}}::__CALLSITE::META (1 samples, 0.01%)</title><rect x="97.4544%" y="1205" width="0.0118%" height="15" fill="rgb(226,209,28)" fg:x="8231" fg:w="1"/><text x="97.7044%" y="1215.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="97.4544%" y="1189" width="0.0118%" height="15" fill="rgb(254,205,35)" fg:x="8231" fg:w="1"/><text x="97.7044%" y="1199.50"></text></g><g><title>rotmguard::proxy::Proxy::run::_{{closure}}::_{{closure}} (2 samples, 0.02%)</title><rect x="97.4663%" y="1205" width="0.0237%" height="15" fill="rgb(230,159,3)" fg:x="8232" fg:w="2"/><text x="97.7163%" y="1215.50"></text></g><g><title>&lt;inout::inout_buf::InOutBufIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="97.4899%" y="1093" width="0.0118%" height="15" fill="rgb(232,190,24)" fg:x="8234" fg:w="1"/><text x="97.7399%" y="1103.50"></text></g><g><title>rotmguard::proxy::ProxyWriteHalf::send_client::_{{closure}} (6 samples, 0.07%)</title><rect x="97.4899%" y="1205" width="0.0710%" height="15" fill="rgb(217,227,44)" fg:x="8234" fg:w="6"/><text x="97.7399%" y="1215.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (6 samples, 0.07%)</title><rect x="97.4899%" y="1189" width="0.0710%" height="15" fill="rgb(236,211,1)" fg:x="8234" fg:w="6"/><text x="97.7399%" y="1199.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (6 samples, 0.07%)</title><rect x="97.4899%" y="1173" width="0.0710%" height="15" fill="rgb(250,127,46)" fg:x="8234" fg:w="6"/><text x="97.7399%" y="1183.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (6 samples, 0.07%)</title><rect x="97.4899%" y="1157" width="0.0710%" height="15" fill="rgb(229,213,6)" fg:x="8234" fg:w="6"/><text x="97.7399%" y="1167.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (6 samples, 0.07%)</title><rect x="97.4899%" y="1141" width="0.0710%" height="15" fill="rgb(237,15,36)" fg:x="8234" fg:w="6"/><text x="97.7399%" y="1151.50"></text></g><g><title>&lt;rc4::Rc4Core&lt;KeySize&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (6 samples, 0.07%)</title><rect x="97.4899%" y="1125" width="0.0710%" height="15" fill="rgb(213,131,41)" fg:x="8234" fg:w="6"/><text x="97.7399%" y="1135.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (6 samples, 0.07%)</title><rect x="97.4899%" y="1109" width="0.0710%" height="15" fill="rgb(225,82,44)" fg:x="8234" fg:w="6"/><text x="97.7399%" y="1119.50"></text></g><g><title>&lt;rc4::Backend as cipher::stream_core::StreamBackend&gt;::gen_ks_block (5 samples, 0.06%)</title><rect x="97.5018%" y="1093" width="0.0592%" height="15" fill="rgb(249,42,11)" fg:x="8235" fg:w="5"/><text x="97.7518%" y="1103.50"></text></g><g><title>rotmguard::read::read_compressed_int (1 samples, 0.01%)</title><rect x="97.5610%" y="1205" width="0.0118%" height="15" fill="rgb(253,11,29)" fg:x="8240" fg:w="1"/><text x="97.8110%" y="1215.50"></text></g><g><title>&lt;u8 as rotmguard::read::RPRead&gt;::rp_read (1 samples, 0.01%)</title><rect x="97.5610%" y="1189" width="0.0118%" height="15" fill="rgb(206,8,54)" fg:x="8240" fg:w="1"/><text x="97.8110%" y="1199.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (1 samples, 0.01%)</title><rect x="97.5610%" y="1173" width="0.0118%" height="15" fill="rgb(222,186,2)" fg:x="8240" fg:w="1"/><text x="97.8110%" y="1183.50"></text></g><g><title>ryu::pretty::format64 (1 samples, 0.01%)</title><rect x="97.5728%" y="1205" width="0.0118%" height="15" fill="rgb(221,206,53)" fg:x="8241" fg:w="1"/><text x="97.8228%" y="1215.50"></text></g><g><title>ryu::d2s::d2d (1 samples, 0.01%)</title><rect x="97.5728%" y="1189" width="0.0118%" height="15" fill="rgb(230,150,21)" fg:x="8241" fg:w="1"/><text x="97.8228%" y="1199.50"></text></g><g><title>ryu::common::log10_pow5 (1 samples, 0.01%)</title><rect x="97.5728%" y="1173" width="0.0118%" height="15" fill="rgb(253,202,10)" fg:x="8241" fg:w="1"/><text x="97.8228%" y="1183.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (1 samples, 0.01%)</title><rect x="97.5847%" y="1205" width="0.0118%" height="15" fill="rgb(238,109,40)" fg:x="8242" fg:w="1"/><text x="97.8347%" y="1215.50"></text></g><g><title>serde_json::ser::Formatter::begin_string (1 samples, 0.01%)</title><rect x="97.6439%" y="1109" width="0.0118%" height="15" fill="rgb(247,120,22)" fg:x="8247" fg:w="1"/><text x="97.8939%" y="1119.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="97.6439%" y="1093" width="0.0118%" height="15" fill="rgb(207,43,30)" fg:x="8247" fg:w="1"/><text x="97.8939%" y="1103.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (3 samples, 0.04%)</title><rect x="97.6320%" y="1189" width="0.0355%" height="15" fill="rgb(213,211,24)" fg:x="8246" fg:w="3"/><text x="97.8820%" y="1199.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (3 samples, 0.04%)</title><rect x="97.6320%" y="1173" width="0.0355%" height="15" fill="rgb(239,73,39)" fg:x="8246" fg:w="3"/><text x="97.8820%" y="1183.50"></text></g><g><title>&lt;serde_json::ser::MapKeySerializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (3 samples, 0.04%)</title><rect x="97.6320%" y="1157" width="0.0355%" height="15" fill="rgb(245,182,19)" fg:x="8246" fg:w="3"/><text x="97.8820%" y="1167.50"></text></g><g><title>&lt;&amp;mut serde_json::ser::Serializer&lt;W,F&gt; as serde::ser::Serializer&gt;::serialize_str (3 samples, 0.04%)</title><rect x="97.6320%" y="1141" width="0.0355%" height="15" fill="rgb(247,143,26)" fg:x="8246" fg:w="3"/><text x="97.8820%" y="1151.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.04%)</title><rect x="97.6320%" y="1125" width="0.0355%" height="15" fill="rgb(228,191,23)" fg:x="8246" fg:w="3"/><text x="97.8820%" y="1135.50"></text></g><g><title>serde_json::ser::Formatter::end_string (1 samples, 0.01%)</title><rect x="97.6557%" y="1109" width="0.0118%" height="15" fill="rgb(253,165,31)" fg:x="8248" fg:w="1"/><text x="97.9057%" y="1119.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="97.6557%" y="1093" width="0.0118%" height="15" fill="rgb(234,138,20)" fg:x="8248" fg:w="1"/><text x="97.9057%" y="1103.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.01%)</title><rect x="97.6557%" y="1077" width="0.0118%" height="15" fill="rgb(218,191,29)" fg:x="8248" fg:w="1"/><text x="97.9057%" y="1087.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="97.6557%" y="1061" width="0.0118%" height="15" fill="rgb(221,157,19)" fg:x="8248" fg:w="1"/><text x="97.9057%" y="1071.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.08%)</title><rect x="97.5965%" y="1205" width="0.0829%" height="15" fill="rgb(237,26,42)" fg:x="8243" fg:w="7"/><text x="97.8465%" y="1215.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.01%)</title><rect x="97.6675%" y="1189" width="0.0118%" height="15" fill="rgb(220,163,24)" fg:x="8249" fg:w="1"/><text x="97.9175%" y="1199.50"></text></g><g><title>serde_json::ser::Formatter::begin_object_value (1 samples, 0.01%)</title><rect x="97.6675%" y="1173" width="0.0118%" height="15" fill="rgb(242,115,20)" fg:x="8249" fg:w="1"/><text x="97.9175%" y="1183.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="97.6675%" y="1157" width="0.0118%" height="15" fill="rgb(210,206,9)" fg:x="8249" fg:w="1"/><text x="97.9175%" y="1167.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.02%)</title><rect x="97.6794%" y="1205" width="0.0237%" height="15" fill="rgb(208,71,17)" fg:x="8250" fg:w="2"/><text x="97.9294%" y="1215.50"></text></g><g><title>serde_json::ser::format_escaped_str_contents (2 samples, 0.02%)</title><rect x="97.7031%" y="1205" width="0.0237%" height="15" fill="rgb(233,7,5)" fg:x="8252" fg:w="2"/><text x="97.9531%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="97.7149%" y="1189" width="0.0118%" height="15" fill="rgb(207,92,33)" fg:x="8253" fg:w="1"/><text x="97.9649%" y="1199.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="97.7149%" y="1173" width="0.0118%" height="15" fill="rgb(218,87,9)" fg:x="8253" fg:w="1"/><text x="97.9649%" y="1183.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="97.7149%" y="1157" width="0.0118%" height="15" fill="rgb(219,47,37)" fg:x="8253" fg:w="1"/><text x="97.9649%" y="1167.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.01%)</title><rect x="97.7267%" y="1205" width="0.0118%" height="15" fill="rgb(221,152,34)" fg:x="8254" fg:w="1"/><text x="97.9767%" y="1215.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.01%)</title><rect x="97.7267%" y="1189" width="0.0118%" height="15" fill="rgb(235,176,21)" fg:x="8254" fg:w="1"/><text x="97.9767%" y="1199.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (1 samples, 0.01%)</title><rect x="97.7386%" y="1205" width="0.0118%" height="15" fill="rgb(232,212,21)" fg:x="8255" fg:w="1"/><text x="97.9886%" y="1215.50"></text></g><g><title>sharded_slab::cfg::CfgPrivate::unpack_tid (1 samples, 0.01%)</title><rect x="97.7386%" y="1189" width="0.0118%" height="15" fill="rgb(245,82,39)" fg:x="8255" fg:w="1"/><text x="97.9886%" y="1199.50"></text></g><g><title>sharded_slab::cfg::CfgPrivate::unpack (1 samples, 0.01%)</title><rect x="97.7386%" y="1173" width="0.0118%" height="15" fill="rgb(241,52,51)" fg:x="8255" fg:w="1"/><text x="97.9886%" y="1183.50"></text></g><g><title>sharded_slab::Pack::from_packed (1 samples, 0.01%)</title><rect x="97.7386%" y="1157" width="0.0118%" height="15" fill="rgb(219,91,24)" fg:x="8255" fg:w="1"/><text x="97.9886%" y="1167.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.02%)</title><rect x="97.7504%" y="1205" width="0.0237%" height="15" fill="rgb(241,142,12)" fg:x="8256" fg:w="2"/><text x="98.0004%" y="1215.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (2 samples, 0.02%)</title><rect x="97.7741%" y="1205" width="0.0237%" height="15" fill="rgb(230,27,9)" fg:x="8258" fg:w="2"/><text x="98.0241%" y="1215.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (2 samples, 0.02%)</title><rect x="97.7978%" y="1205" width="0.0237%" height="15" fill="rgb(249,181,32)" fg:x="8260" fg:w="2"/><text x="98.0478%" y="1215.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (2 samples, 0.02%)</title><rect x="97.7978%" y="1189" width="0.0237%" height="15" fill="rgb(230,107,3)" fg:x="8260" fg:w="2"/><text x="98.0478%" y="1199.50"></text></g><g><title>core::cmp::PartialOrd::ge (2 samples, 0.02%)</title><rect x="97.7978%" y="1173" width="0.0237%" height="15" fill="rgb(246,204,14)" fg:x="8260" fg:w="2"/><text x="98.0478%" y="1183.50"></text></g><g><title>&lt;std::sys::pal::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (2 samples, 0.02%)</title><rect x="97.7978%" y="1157" width="0.0237%" height="15" fill="rgb(213,192,47)" fg:x="8260" fg:w="2"/><text x="98.0478%" y="1167.50"></text></g><g><title>&lt;std::sys::pal::unix::time::Nanoseconds as core::cmp::PartialOrd&gt;::partial_cmp (2 samples, 0.02%)</title><rect x="97.7978%" y="1141" width="0.0237%" height="15" fill="rgb(240,44,36)" fg:x="8260" fg:w="2"/><text x="98.0478%" y="1151.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u32&gt;::partial_cmp (2 samples, 0.02%)</title><rect x="97.7978%" y="1125" width="0.0237%" height="15" fill="rgb(244,209,38)" fg:x="8260" fg:w="2"/><text x="98.0478%" y="1135.50"></text></g><g><title>std::time::Instant::elapsed (2 samples, 0.02%)</title><rect x="97.8215%" y="1205" width="0.0237%" height="15" fill="rgb(219,34,37)" fg:x="8262" fg:w="2"/><text x="98.0715%" y="1215.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.01%)</title><rect x="97.8451%" y="1205" width="0.0118%" height="15" fill="rgb(210,28,6)" fg:x="8264" fg:w="1"/><text x="98.0951%" y="1215.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (1 samples, 0.01%)</title><rect x="97.8451%" y="1189" width="0.0118%" height="15" fill="rgb(244,110,52)" fg:x="8264" fg:w="1"/><text x="98.0951%" y="1199.50"></text></g><g><title>std::time::SystemTime::now (1 samples, 0.01%)</title><rect x="97.8570%" y="1205" width="0.0118%" height="15" fill="rgb(254,124,47)" fg:x="8265" fg:w="1"/><text x="98.1070%" y="1215.50"></text></g><g><title>std::sys::pal::unix::time::SystemTime::now (1 samples, 0.01%)</title><rect x="97.8570%" y="1189" width="0.0118%" height="15" fill="rgb(254,110,13)" fg:x="8265" fg:w="1"/><text x="98.1070%" y="1199.50"></text></g><g><title>syscall_return_via_sysret (5 samples, 0.06%)</title><rect x="97.8688%" y="1205" width="0.0592%" height="15" fill="rgb(252,57,21)" fg:x="8266" fg:w="5"/><text x="98.1188%" y="1215.50"></text></g><g><title>tokio::runtime::context::with_scheduler (2 samples, 0.02%)</title><rect x="97.9280%" y="1205" width="0.0237%" height="15" fill="rgb(242,60,45)" fg:x="8271" fg:w="2"/><text x="98.1780%" y="1215.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="97.9399%" y="1189" width="0.0118%" height="15" fill="rgb(234,49,30)" fg:x="8272" fg:w="1"/><text x="98.1899%" y="1199.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (1 samples, 0.01%)</title><rect x="97.9399%" y="1173" width="0.0118%" height="15" fill="rgb(218,98,6)" fg:x="8272" fg:w="1"/><text x="98.1899%" y="1183.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="97.9399%" y="1157" width="0.0118%" height="15" fill="rgb(220,174,29)" fg:x="8272" fg:w="1"/><text x="98.1899%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (1 samples, 0.01%)</title><rect x="97.9399%" y="1141" width="0.0118%" height="15" fill="rgb(236,163,23)" fg:x="8272" fg:w="1"/><text x="98.1899%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (1 samples, 0.01%)</title><rect x="97.9399%" y="1125" width="0.0118%" height="15" fill="rgb(242,114,45)" fg:x="8272" fg:w="1"/><text x="98.1899%" y="1135.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.01%)</title><rect x="97.9399%" y="1109" width="0.0118%" height="15" fill="rgb(232,10,53)" fg:x="8272" fg:w="1"/><text x="98.1899%" y="1119.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.01%)</title><rect x="97.9399%" y="1093" width="0.0118%" height="15" fill="rgb(245,108,29)" fg:x="8272" fg:w="1"/><text x="98.1899%" y="1103.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.01%)</title><rect x="97.9399%" y="1077" width="0.0118%" height="15" fill="rgb(240,89,53)" fg:x="8272" fg:w="1"/><text x="98.1899%" y="1087.50"></text></g><g><title>tokio::runtime::driver::Driver::park (1 samples, 0.01%)</title><rect x="97.9517%" y="1205" width="0.0118%" height="15" fill="rgb(226,60,45)" fg:x="8273" fg:w="1"/><text x="98.2017%" y="1215.50"></text></g><g><title>tokio::runtime::driver::TimeDriver::park (1 samples, 0.01%)</title><rect x="97.9517%" y="1189" width="0.0118%" height="15" fill="rgb(230,41,44)" fg:x="8273" fg:w="1"/><text x="98.2017%" y="1199.50"></text></g><g><title>tokio::runtime::time::Driver::park (1 samples, 0.01%)</title><rect x="97.9517%" y="1173" width="0.0118%" height="15" fill="rgb(230,26,20)" fg:x="8273" fg:w="1"/><text x="98.2017%" y="1183.50"></text></g><g><title>tokio::runtime::driver::Driver::park_timeout (1 samples, 0.01%)</title><rect x="97.9635%" y="1205" width="0.0118%" height="15" fill="rgb(237,170,32)" fg:x="8274" fg:w="1"/><text x="98.2135%" y="1215.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (1 samples, 0.01%)</title><rect x="97.9754%" y="1205" width="0.0118%" height="15" fill="rgb(212,35,42)" fg:x="8275" fg:w="1"/><text x="98.2254%" y="1215.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="97.9872%" y="1189" width="0.0118%" height="15" fill="rgb(227,31,34)" fg:x="8276" fg:w="1"/><text x="98.2372%" y="1199.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.01%)</title><rect x="97.9872%" y="1173" width="0.0118%" height="15" fill="rgb(216,19,18)" fg:x="8276" fg:w="1"/><text x="98.2372%" y="1183.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="97.9872%" y="1157" width="0.0118%" height="15" fill="rgb(211,133,42)" fg:x="8276" fg:w="1"/><text x="98.2372%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (6 samples, 0.07%)</title><rect x="97.9872%" y="1205" width="0.0710%" height="15" fill="rgb(244,66,13)" fg:x="8276" fg:w="6"/><text x="98.2372%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (5 samples, 0.06%)</title><rect x="97.9991%" y="1189" width="0.0592%" height="15" fill="rgb(218,185,50)" fg:x="8277" fg:w="5"/><text x="98.2491%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (5 samples, 0.06%)</title><rect x="97.9991%" y="1173" width="0.0592%" height="15" fill="rgb(219,149,13)" fg:x="8277" fg:w="5"/><text x="98.2491%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (4 samples, 0.05%)</title><rect x="98.0583%" y="1205" width="0.0474%" height="15" fill="rgb(221,125,0)" fg:x="8282" fg:w="4"/><text x="98.3083%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (1 samples, 0.01%)</title><rect x="98.0938%" y="1189" width="0.0118%" height="15" fill="rgb(247,126,27)" fg:x="8285" fg:w="1"/><text x="98.3438%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (3 samples, 0.04%)</title><rect x="98.1056%" y="1205" width="0.0355%" height="15" fill="rgb(250,138,30)" fg:x="8286" fg:w="3"/><text x="98.3556%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (1 samples, 0.01%)</title><rect x="98.1411%" y="1205" width="0.0118%" height="15" fill="rgb(230,151,9)" fg:x="8289" fg:w="1"/><text x="98.3911%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (1 samples, 0.01%)</title><rect x="98.1530%" y="1205" width="0.0118%" height="15" fill="rgb(233,80,38)" fg:x="8290" fg:w="1"/><text x="98.4030%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (1 samples, 0.01%)</title><rect x="98.2359%" y="1189" width="0.0118%" height="15" fill="rgb(232,68,43)" fg:x="8297" fg:w="1"/><text x="98.4859%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (2 samples, 0.02%)</title><rect x="98.2595%" y="1173" width="0.0237%" height="15" fill="rgb(254,5,50)" fg:x="8299" fg:w="2"/><text x="98.5095%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::unpark_worker_by_id (2 samples, 0.02%)</title><rect x="98.2595%" y="1157" width="0.0237%" height="15" fill="rgb(225,45,5)" fg:x="8299" fg:w="2"/><text x="98.5095%" y="1167.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.01%)</title><rect x="98.2714%" y="1141" width="0.0118%" height="15" fill="rgb(239,22,3)" fg:x="8300" fg:w="1"/><text x="98.5214%" y="1151.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.01%)</title><rect x="98.2714%" y="1125" width="0.0118%" height="15" fill="rgb(243,129,0)" fg:x="8300" fg:w="1"/><text x="98.5214%" y="1135.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.01%)</title><rect x="98.2714%" y="1109" width="0.0118%" height="15" fill="rgb(223,164,0)" fg:x="8300" fg:w="1"/><text x="98.5214%" y="1119.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.01%)</title><rect x="98.2714%" y="1093" width="0.0118%" height="15" fill="rgb(221,46,29)" fg:x="8300" fg:w="1"/><text x="98.5214%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (1 samples, 0.01%)</title><rect x="98.2951%" y="1157" width="0.0118%" height="15" fill="rgb(205,97,47)" fg:x="8302" fg:w="1"/><text x="98.5451%" y="1167.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="98.2951%" y="1141" width="0.0118%" height="15" fill="rgb(249,14,8)" fg:x="8302" fg:w="1"/><text x="98.5451%" y="1151.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.01%)</title><rect x="98.2951%" y="1125" width="0.0118%" height="15" fill="rgb(216,77,3)" fg:x="8302" fg:w="1"/><text x="98.5451%" y="1135.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.01%)</title><rect x="98.2951%" y="1109" width="0.0118%" height="15" fill="rgb(206,168,54)" fg:x="8302" fg:w="1"/><text x="98.5451%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.01%)</title><rect x="98.2951%" y="1093" width="0.0118%" height="15" fill="rgb(236,3,41)" fg:x="8302" fg:w="1"/><text x="98.5451%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="98.2951%" y="1077" width="0.0118%" height="15" fill="rgb(231,132,24)" fg:x="8302" fg:w="1"/><text x="98.5451%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (6 samples, 0.07%)</title><rect x="98.2477%" y="1189" width="0.0710%" height="15" fill="rgb(227,221,40)" fg:x="8298" fg:w="6"/><text x="98.4977%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_parked (3 samples, 0.04%)</title><rect x="98.2832%" y="1173" width="0.0355%" height="15" fill="rgb(233,151,11)" fg:x="8301" fg:w="3"/><text x="98.5332%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (1 samples, 0.01%)</title><rect x="98.3069%" y="1157" width="0.0118%" height="15" fill="rgb(247,81,35)" fg:x="8303" fg:w="1"/><text x="98.5569%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::is_empty (1 samples, 0.01%)</title><rect x="98.3069%" y="1141" width="0.0118%" height="15" fill="rgb(243,128,48)" fg:x="8303" fg:w="1"/><text x="98.5569%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::is_empty (1 samples, 0.01%)</title><rect x="98.3069%" y="1125" width="0.0118%" height="15" fill="rgb(253,16,10)" fg:x="8303" fg:w="1"/><text x="98.5569%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::len (1 samples, 0.01%)</title><rect x="98.3069%" y="1109" width="0.0118%" height="15" fill="rgb(228,67,27)" fg:x="8303" fg:w="1"/><text x="98.5569%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (1 samples, 0.01%)</title><rect x="98.3069%" y="1093" width="0.0118%" height="15" fill="rgb(231,105,25)" fg:x="8303" fg:w="1"/><text x="98.5569%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="98.3069%" y="1077" width="0.0118%" height="15" fill="rgb(213,166,47)" fg:x="8303" fg:w="1"/><text x="98.5569%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::next_remote_task (1 samples, 0.01%)</title><rect x="98.3306%" y="1173" width="0.0118%" height="15" fill="rgb(209,27,10)" fg:x="8305" fg:w="1"/><text x="98.5806%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::is_empty (1 samples, 0.01%)</title><rect x="98.3306%" y="1157" width="0.0118%" height="15" fill="rgb(241,44,30)" fg:x="8305" fg:w="1"/><text x="98.5806%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::len (1 samples, 0.01%)</title><rect x="98.3306%" y="1141" width="0.0118%" height="15" fill="rgb(223,216,15)" fg:x="8305" fg:w="1"/><text x="98.5806%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="98.3306%" y="1125" width="0.0118%" height="15" fill="rgb(227,14,7)" fg:x="8305" fg:w="1"/><text x="98.5806%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="98.3306%" y="1109" width="0.0118%" height="15" fill="rgb(237,14,5)" fg:x="8305" fg:w="1"/><text x="98.5806%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task (1 samples, 0.01%)</title><rect x="98.3424%" y="1173" width="0.0118%" height="15" fill="rgb(232,14,36)" fg:x="8306" fg:w="1"/><text x="98.5924%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.01%)</title><rect x="98.3424%" y="1157" width="0.0118%" height="15" fill="rgb(234,0,38)" fg:x="8306" fg:w="1"/><text x="98.5924%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (5 samples, 0.06%)</title><rect x="98.3187%" y="1189" width="0.0592%" height="15" fill="rgb(207,170,14)" fg:x="8304" fg:w="5"/><text x="98.5687%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::tune_global_queue_interval (2 samples, 0.02%)</title><rect x="98.3543%" y="1173" width="0.0237%" height="15" fill="rgb(252,45,13)" fg:x="8307" fg:w="2"/><text x="98.6043%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::tuned_global_queue_interval (2 samples, 0.02%)</title><rect x="98.3543%" y="1157" width="0.0237%" height="15" fill="rgb(213,142,7)" fg:x="8307" fg:w="2"/><text x="98.6043%" y="1167.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.02%)</title><rect x="98.4490%" y="1173" width="0.0237%" height="15" fill="rgb(216,157,23)" fg:x="8315" fg:w="2"/><text x="98.6990%" y="1183.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.02%)</title><rect x="98.4490%" y="1157" width="0.0237%" height="15" fill="rgb(212,145,33)" fg:x="8315" fg:w="2"/><text x="98.6990%" y="1167.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.02%)</title><rect x="98.4490%" y="1141" width="0.0237%" height="15" fill="rgb(233,26,13)" fg:x="8315" fg:w="2"/><text x="98.6990%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (9 samples, 0.11%)</title><rect x="98.3779%" y="1189" width="0.1066%" height="15" fill="rgb(219,196,19)" fg:x="8309" fg:w="9"/><text x="98.6279%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_searching (1 samples, 0.01%)</title><rect x="98.4726%" y="1173" width="0.0118%" height="15" fill="rgb(246,56,21)" fg:x="8317" fg:w="1"/><text x="98.7226%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_searching (1 samples, 0.01%)</title><rect x="98.4726%" y="1157" width="0.0118%" height="15" fill="rgb(222,28,53)" fg:x="8317" fg:w="1"/><text x="98.7226%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (28 samples, 0.33%)</title><rect x="98.1648%" y="1205" width="0.3315%" height="15" fill="rgb(224,5,27)" fg:x="8291" fg:w="28"/><text x="98.4148%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::tick (1 samples, 0.01%)</title><rect x="98.4845%" y="1189" width="0.0118%" height="15" fill="rgb(220,153,33)" fg:x="8318" fg:w="1"/><text x="98.7345%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;core::option::Option&lt;alloc::boxed::Box&lt;tokio::runtime::scheduler::multi_thread::worker::Core&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="98.5082%" y="1189" width="0.0118%" height="15" fill="rgb(226,58,19)" fg:x="8320" fg:w="1"/><text x="98.7582%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (1 samples, 0.01%)</title><rect x="98.5082%" y="1173" width="0.0118%" height="15" fill="rgb(239,112,23)" fg:x="8320" fg:w="1"/><text x="98.7582%" y="1183.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="98.5082%" y="1157" width="0.0118%" height="15" fill="rgb(251,213,20)" fg:x="8320" fg:w="1"/><text x="98.7582%" y="1167.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (2 samples, 0.02%)</title><rect x="98.5200%" y="1141" width="0.0237%" height="15" fill="rgb(215,181,21)" fg:x="8321" fg:w="2"/><text x="98.7700%" y="1151.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (2 samples, 0.02%)</title><rect x="98.5200%" y="1125" width="0.0237%" height="15" fill="rgb(240,8,35)" fg:x="8321" fg:w="2"/><text x="98.7700%" y="1135.50"></text></g><g><title>core::cell::BorrowRefMut::new (2 samples, 0.02%)</title><rect x="98.5200%" y="1109" width="0.0237%" height="15" fill="rgb(232,203,3)" fg:x="8321" fg:w="2"/><text x="98.7700%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (6 samples, 0.07%)</title><rect x="98.4963%" y="1205" width="0.0710%" height="15" fill="rgb(214,202,43)" fg:x="8319" fg:w="6"/><text x="98.7463%" y="1215.50"></text></g><g><title>tokio::runtime::coop::budget (4 samples, 0.05%)</title><rect x="98.5200%" y="1189" width="0.0474%" height="15" fill="rgb(254,35,11)" fg:x="8321" fg:w="4"/><text x="98.7700%" y="1199.50"></text></g><g><title>tokio::runtime::coop::with_budget (4 samples, 0.05%)</title><rect x="98.5200%" y="1173" width="0.0474%" height="15" fill="rgb(239,173,13)" fg:x="8321" fg:w="4"/><text x="98.7700%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (4 samples, 0.05%)</title><rect x="98.5200%" y="1157" width="0.0474%" height="15" fill="rgb(220,141,0)" fg:x="8321" fg:w="4"/><text x="98.7700%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::reset_lifo_enabled (2 samples, 0.02%)</title><rect x="98.5437%" y="1141" width="0.0237%" height="15" fill="rgb(210,98,12)" fg:x="8323" fg:w="2"/><text x="98.7937%" y="1151.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="98.5437%" y="1125" width="0.0237%" height="15" fill="rgb(254,153,22)" fg:x="8323" fg:w="2"/><text x="98.7937%" y="1135.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (2 samples, 0.02%)</title><rect x="98.5437%" y="1109" width="0.0237%" height="15" fill="rgb(247,223,17)" fg:x="8323" fg:w="2"/><text x="98.7937%" y="1119.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="98.5437%" y="1093" width="0.0237%" height="15" fill="rgb(246,56,7)" fg:x="8323" fg:w="2"/><text x="98.7937%" y="1103.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1 samples, 0.01%)</title><rect x="98.5674%" y="1205" width="0.0118%" height="15" fill="rgb(240,226,12)" fg:x="8325" fg:w="1"/><text x="98.8174%" y="1215.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.01%)</title><rect x="98.5674%" y="1189" width="0.0118%" height="15" fill="rgb(205,87,46)" fg:x="8325" fg:w="1"/><text x="98.8174%" y="1199.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (1 samples, 0.01%)</title><rect x="98.5674%" y="1173" width="0.0118%" height="15" fill="rgb(245,214,51)" fg:x="8325" fg:w="1"/><text x="98.8174%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (1 samples, 0.01%)</title><rect x="98.5674%" y="1157" width="0.0118%" height="15" fill="rgb(223,172,33)" fg:x="8325" fg:w="1"/><text x="98.8174%" y="1167.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="98.5674%" y="1141" width="0.0118%" height="15" fill="rgb(227,203,34)" fg:x="8325" fg:w="1"/><text x="98.8174%" y="1151.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (1 samples, 0.01%)</title><rect x="98.5674%" y="1125" width="0.0118%" height="15" fill="rgb(248,143,44)" fg:x="8325" fg:w="1"/><text x="98.8174%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="98.5674%" y="1109" width="0.0118%" height="15" fill="rgb(226,162,5)" fg:x="8325" fg:w="1"/><text x="98.8174%" y="1119.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (1 samples, 0.01%)</title><rect x="98.5674%" y="1093" width="0.0118%" height="15" fill="rgb(211,143,1)" fg:x="8325" fg:w="1"/><text x="98.8174%" y="1103.50"></text></g><g><title>std::sys::thread_local::fast_local::eager::Storage&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="98.5674%" y="1077" width="0.0118%" height="15" fill="rgb(224,96,15)" fg:x="8325" fg:w="1"/><text x="98.8174%" y="1087.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="98.5674%" y="1061" width="0.0118%" height="15" fill="rgb(222,4,38)" fg:x="8325" fg:w="1"/><text x="98.8174%" y="1071.50"></text></g><g><title>merge_sched_in (3 samples, 0.04%)</title><rect x="98.6384%" y="757" width="0.0355%" height="15" fill="rgb(253,228,15)" fg:x="8331" fg:w="3"/><text x="98.8884%" y="767.50"></text></g><g><title>event_sched_in (3 samples, 0.04%)</title><rect x="98.6384%" y="741" width="0.0355%" height="15" fill="rgb(242,194,12)" fg:x="8331" fg:w="3"/><text x="98.8884%" y="751.50"></text></g><g><title>perf_ibs_add (3 samples, 0.04%)</title><rect x="98.6384%" y="725" width="0.0355%" height="15" fill="rgb(214,177,31)" fg:x="8331" fg:w="3"/><text x="98.8884%" y="735.50"></text></g><g><title>perf_event_update_userpage (3 samples, 0.04%)</title><rect x="98.6384%" y="709" width="0.0355%" height="15" fill="rgb(226,58,51)" fg:x="8331" fg:w="3"/><text x="98.8884%" y="719.50"></text></g><g><title>arch_perf_update_userpage (3 samples, 0.04%)</title><rect x="98.6384%" y="693" width="0.0355%" height="15" fill="rgb(250,119,16)" fg:x="8331" fg:w="3"/><text x="98.8884%" y="703.50"></text></g><g><title>__perf_event_task_sched_in (7 samples, 0.08%)</title><rect x="98.6384%" y="805" width="0.0829%" height="15" fill="rgb(223,128,53)" fg:x="8331" fg:w="7"/><text x="98.8884%" y="815.50"></text></g><g><title>ctx_groups_sched_in (7 samples, 0.08%)</title><rect x="98.6384%" y="789" width="0.0829%" height="15" fill="rgb(251,199,15)" fg:x="8331" fg:w="7"/><text x="98.8884%" y="799.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (7 samples, 0.08%)</title><rect x="98.6384%" y="773" width="0.0829%" height="15" fill="rgb(235,168,42)" fg:x="8331" fg:w="7"/><text x="98.8884%" y="783.50"></text></g><g><title>perf_event_groups_next (4 samples, 0.05%)</title><rect x="98.6739%" y="757" width="0.0474%" height="15" fill="rgb(250,210,17)" fg:x="8334" fg:w="4"/><text x="98.9239%" y="767.50"></text></g><g><title>__sysvec_irq_work (1 samples, 0.01%)</title><rect x="98.7331%" y="773" width="0.0118%" height="15" fill="rgb(226,36,41)" fg:x="8339" fg:w="1"/><text x="98.9831%" y="783.50"></text></g><g><title>irq_work_run (1 samples, 0.01%)</title><rect x="98.7331%" y="757" width="0.0118%" height="15" fill="rgb(225,87,10)" fg:x="8339" fg:w="1"/><text x="98.9831%" y="767.50"></text></g><g><title>irq_work_run_list (1 samples, 0.01%)</title><rect x="98.7331%" y="741" width="0.0118%" height="15" fill="rgb(228,83,9)" fg:x="8339" fg:w="1"/><text x="98.9831%" y="751.50"></text></g><g><title>irq_work_single (1 samples, 0.01%)</title><rect x="98.7331%" y="725" width="0.0118%" height="15" fill="rgb(225,16,36)" fg:x="8339" fg:w="1"/><text x="98.9831%" y="735.50"></text></g><g><title>perf_pending_irq (1 samples, 0.01%)</title><rect x="98.7331%" y="709" width="0.0118%" height="15" fill="rgb(242,198,13)" fg:x="8339" fg:w="1"/><text x="98.9831%" y="719.50"></text></g><g><title>perf_event_wakeup (1 samples, 0.01%)</title><rect x="98.7331%" y="693" width="0.0118%" height="15" fill="rgb(239,25,51)" fg:x="8339" fg:w="1"/><text x="98.9831%" y="703.50"></text></g><g><title>__wake_up (1 samples, 0.01%)</title><rect x="98.7331%" y="677" width="0.0118%" height="15" fill="rgb(239,28,37)" fg:x="8339" fg:w="1"/><text x="98.9831%" y="687.50"></text></g><g><title>__wake_up_common (1 samples, 0.01%)</title><rect x="98.7331%" y="661" width="0.0118%" height="15" fill="rgb(234,70,17)" fg:x="8339" fg:w="1"/><text x="98.9831%" y="671.50"></text></g><g><title>pollwake (1 samples, 0.01%)</title><rect x="98.7331%" y="645" width="0.0118%" height="15" fill="rgb(231,215,53)" fg:x="8339" fg:w="1"/><text x="98.9831%" y="655.50"></text></g><g><title>try_to_wake_up (1 samples, 0.01%)</title><rect x="98.7331%" y="629" width="0.0118%" height="15" fill="rgb(218,140,42)" fg:x="8339" fg:w="1"/><text x="98.9831%" y="639.50"></text></g><g><title>ttwu_do_activate (1 samples, 0.01%)</title><rect x="98.7331%" y="613" width="0.0118%" height="15" fill="rgb(233,227,45)" fg:x="8339" fg:w="1"/><text x="98.9831%" y="623.50"></text></g><g><title>wakeup_preempt (1 samples, 0.01%)</title><rect x="98.7331%" y="597" width="0.0118%" height="15" fill="rgb(225,189,21)" fg:x="8339" fg:w="1"/><text x="98.9831%" y="607.50"></text></g><g><title>preempt_schedule_thunk (11 samples, 0.13%)</title><rect x="98.6266%" y="869" width="0.1302%" height="15" fill="rgb(237,176,54)" fg:x="8330" fg:w="11"/><text x="98.8766%" y="879.50"></text></g><g><title>preempt_schedule (11 samples, 0.13%)</title><rect x="98.6266%" y="853" width="0.1302%" height="15" fill="rgb(215,131,46)" fg:x="8330" fg:w="11"/><text x="98.8766%" y="863.50"></text></g><g><title>__schedule (11 samples, 0.13%)</title><rect x="98.6266%" y="837" width="0.1302%" height="15" fill="rgb(218,95,20)" fg:x="8330" fg:w="11"/><text x="98.8766%" y="847.50"></text></g><g><title>finish_task_switch.isra.0 (11 samples, 0.13%)</title><rect x="98.6266%" y="821" width="0.1302%" height="15" fill="rgb(208,198,12)" fg:x="8330" fg:w="11"/><text x="98.8766%" y="831.50"></text></g><g><title>asm_sysvec_irq_work (3 samples, 0.04%)</title><rect x="98.7213%" y="805" width="0.0355%" height="15" fill="rgb(239,107,50)" fg:x="8338" fg:w="3"/><text x="98.9713%" y="815.50"></text></g><g><title>sysvec_irq_work (2 samples, 0.02%)</title><rect x="98.7331%" y="789" width="0.0237%" height="15" fill="rgb(240,217,37)" fg:x="8339" fg:w="2"/><text x="98.9831%" y="799.50"></text></g><g><title>irq_enter_rcu (1 samples, 0.01%)</title><rect x="98.7450%" y="773" width="0.0118%" height="15" fill="rgb(242,197,49)" fg:x="8340" fg:w="1"/><text x="98.9950%" y="783.50"></text></g><g><title>enqueue_entity (1 samples, 0.01%)</title><rect x="98.7686%" y="821" width="0.0118%" height="15" fill="rgb(219,171,17)" fg:x="8342" fg:w="1"/><text x="99.0186%" y="831.50"></text></g><g><title>place_entity (1 samples, 0.01%)</title><rect x="98.7686%" y="805" width="0.0118%" height="15" fill="rgb(209,81,40)" fg:x="8342" fg:w="1"/><text x="99.0186%" y="815.50"></text></g><g><title>__x64_sys_futex (15 samples, 0.18%)</title><rect x="98.6266%" y="949" width="0.1776%" height="15" fill="rgb(237,156,30)" fg:x="8330" fg:w="15"/><text x="98.8766%" y="959.50"></text></g><g><title>do_futex (15 samples, 0.18%)</title><rect x="98.6266%" y="933" width="0.1776%" height="15" fill="rgb(212,127,16)" fg:x="8330" fg:w="15"/><text x="98.8766%" y="943.50"></text></g><g><title>futex_wake (15 samples, 0.18%)</title><rect x="98.6266%" y="917" width="0.1776%" height="15" fill="rgb(226,66,32)" fg:x="8330" fg:w="15"/><text x="98.8766%" y="927.50"></text></g><g><title>wake_up_q (15 samples, 0.18%)</title><rect x="98.6266%" y="901" width="0.1776%" height="15" fill="rgb(245,22,46)" fg:x="8330" fg:w="15"/><text x="98.8766%" y="911.50"></text></g><g><title>try_to_wake_up (15 samples, 0.18%)</title><rect x="98.6266%" y="885" width="0.1776%" height="15" fill="rgb(210,112,21)" fg:x="8330" fg:w="15"/><text x="98.8766%" y="895.50"></text></g><g><title>ttwu_do_activate (4 samples, 0.05%)</title><rect x="98.7568%" y="869" width="0.0474%" height="15" fill="rgb(207,118,39)" fg:x="8341" fg:w="4"/><text x="99.0068%" y="879.50"></text></g><g><title>enqueue_task (4 samples, 0.05%)</title><rect x="98.7568%" y="853" width="0.0474%" height="15" fill="rgb(205,206,35)" fg:x="8341" fg:w="4"/><text x="99.0068%" y="863.50"></text></g><g><title>enqueue_task_fair (3 samples, 0.04%)</title><rect x="98.7686%" y="837" width="0.0355%" height="15" fill="rgb(222,120,2)" fg:x="8342" fg:w="3"/><text x="99.0186%" y="847.50"></text></g><g><title>update_load_avg (2 samples, 0.02%)</title><rect x="98.7805%" y="821" width="0.0237%" height="15" fill="rgb(205,38,18)" fg:x="8343" fg:w="2"/><text x="99.0305%" y="831.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.01%)</title><rect x="98.7923%" y="805" width="0.0118%" height="15" fill="rgb(226,61,2)" fg:x="8344" fg:w="1"/><text x="99.0423%" y="815.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (17 samples, 0.20%)</title><rect x="98.6147%" y="1045" width="0.2013%" height="15" fill="rgb(242,161,23)" fg:x="8329" fg:w="17"/><text x="98.8647%" y="1055.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (17 samples, 0.20%)</title><rect x="98.6147%" y="1029" width="0.2013%" height="15" fill="rgb(213,13,52)" fg:x="8329" fg:w="17"/><text x="98.8647%" y="1039.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (17 samples, 0.20%)</title><rect x="98.6147%" y="1013" width="0.2013%" height="15" fill="rgb(246,209,47)" fg:x="8329" fg:w="17"/><text x="98.8647%" y="1023.50"></text></g><g><title>syscall (17 samples, 0.20%)</title><rect x="98.6147%" y="997" width="0.2013%" height="15" fill="rgb(214,41,3)" fg:x="8329" fg:w="17"/><text x="98.8647%" y="1007.50"></text></g><g><title>entry_SYSCALL_64 (17 samples, 0.20%)</title><rect x="98.6147%" y="981" width="0.2013%" height="15" fill="rgb(236,119,38)" fg:x="8329" fg:w="17"/><text x="98.8647%" y="991.50"></text></g><g><title>do_syscall_64 (16 samples, 0.19%)</title><rect x="98.6266%" y="965" width="0.1894%" height="15" fill="rgb(218,50,11)" fg:x="8330" fg:w="16"/><text x="98.8766%" y="975.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.01%)</title><rect x="98.8042%" y="949" width="0.0118%" height="15" fill="rgb(228,38,11)" fg:x="8345" fg:w="1"/><text x="99.0542%" y="959.50"></text></g><g><title>switch_fpu_return (1 samples, 0.01%)</title><rect x="98.8042%" y="933" width="0.0118%" height="15" fill="rgb(212,13,9)" fg:x="8345" fg:w="1"/><text x="99.0542%" y="943.50"></text></g><g><title>restore_fpregs_from_fpstate (1 samples, 0.01%)</title><rect x="98.8042%" y="917" width="0.0118%" height="15" fill="rgb(208,211,9)" fg:x="8345" fg:w="1"/><text x="99.0542%" y="927.50"></text></g><g><title>select_task_rq_fair (1 samples, 0.01%)</title><rect x="98.8397%" y="741" width="0.0118%" height="15" fill="rgb(239,39,32)" fg:x="8348" fg:w="1"/><text x="99.0897%" y="751.50"></text></g><g><title>set_task_cpu (2 samples, 0.02%)</title><rect x="98.8515%" y="741" width="0.0237%" height="15" fill="rgb(254,179,26)" fg:x="8349" fg:w="2"/><text x="99.1015%" y="751.50"></text></g><g><title>migrate_task_rq_fair (1 samples, 0.01%)</title><rect x="98.8634%" y="725" width="0.0118%" height="15" fill="rgb(249,165,28)" fg:x="8350" fg:w="1"/><text x="99.1134%" y="735.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.01%)</title><rect x="98.8634%" y="709" width="0.0118%" height="15" fill="rgb(225,59,50)" fg:x="8350" fg:w="1"/><text x="99.1134%" y="719.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.01%)</title><rect x="98.8870%" y="709" width="0.0118%" height="15" fill="rgb(209,122,5)" fg:x="8352" fg:w="1"/><text x="99.1370%" y="719.50"></text></g><g><title>enqueue_entity (1 samples, 0.01%)</title><rect x="98.8870%" y="693" width="0.0118%" height="15" fill="rgb(214,65,34)" fg:x="8352" fg:w="1"/><text x="99.1370%" y="703.50"></text></g><g><title>update_load_avg (1 samples, 0.01%)</title><rect x="98.8870%" y="677" width="0.0118%" height="15" fill="rgb(249,183,32)" fg:x="8352" fg:w="1"/><text x="99.1370%" y="687.50"></text></g><g><title>enqueue_task (3 samples, 0.04%)</title><rect x="98.8752%" y="725" width="0.0355%" height="15" fill="rgb(218,122,24)" fg:x="8351" fg:w="3"/><text x="99.1252%" y="735.50"></text></g><g><title>psi_task_change (1 samples, 0.01%)</title><rect x="98.8989%" y="709" width="0.0118%" height="15" fill="rgb(224,109,18)" fg:x="8353" fg:w="1"/><text x="99.1489%" y="719.50"></text></g><g><title>psi_group_change (1 samples, 0.01%)</title><rect x="98.8989%" y="693" width="0.0118%" height="15" fill="rgb(210,68,50)" fg:x="8353" fg:w="1"/><text x="99.1489%" y="703.50"></text></g><g><title>ttwu_do_activate (4 samples, 0.05%)</title><rect x="98.8752%" y="741" width="0.0474%" height="15" fill="rgb(212,184,34)" fg:x="8351" fg:w="4"/><text x="99.1252%" y="751.50"></text></g><g><title>wakeup_preempt (1 samples, 0.01%)</title><rect x="98.9107%" y="725" width="0.0118%" height="15" fill="rgb(238,105,48)" fg:x="8354" fg:w="1"/><text x="99.1607%" y="735.50"></text></g><g><title>check_preempt_wakeup_fair (1 samples, 0.01%)</title><rect x="98.9107%" y="709" width="0.0118%" height="15" fill="rgb(222,134,54)" fg:x="8354" fg:w="1"/><text x="99.1607%" y="719.50"></text></g><g><title>pick_eevdf (1 samples, 0.01%)</title><rect x="98.9107%" y="693" width="0.0118%" height="15" fill="rgb(246,24,43)" fg:x="8354" fg:w="1"/><text x="99.1607%" y="703.50"></text></g><g><title>__smp_call_single_queue (1 samples, 0.01%)</title><rect x="98.9226%" y="725" width="0.0118%" height="15" fill="rgb(227,169,22)" fg:x="8355" fg:w="1"/><text x="99.1726%" y="735.50"></text></g><g><title>ttwu_queue_wakelist (2 samples, 0.02%)</title><rect x="98.9226%" y="741" width="0.0237%" height="15" fill="rgb(253,152,4)" fg:x="8355" fg:w="2"/><text x="99.1726%" y="751.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.01%)</title><rect x="98.9344%" y="725" width="0.0118%" height="15" fill="rgb(219,158,36)" fg:x="8356" fg:w="1"/><text x="99.1844%" y="735.50"></text></g><g><title>sched_clock (1 samples, 0.01%)</title><rect x="98.9344%" y="709" width="0.0118%" height="15" fill="rgb(251,128,40)" fg:x="8356" fg:w="1"/><text x="99.1844%" y="719.50"></text></g><g><title>native_sched_clock (1 samples, 0.01%)</title><rect x="98.9344%" y="693" width="0.0118%" height="15" fill="rgb(254,101,39)" fg:x="8356" fg:w="1"/><text x="99.1844%" y="703.50"></text></g><g><title>ksys_write (11 samples, 0.13%)</title><rect x="98.8278%" y="885" width="0.1302%" height="15" fill="rgb(221,168,40)" fg:x="8347" fg:w="11"/><text x="99.0778%" y="895.50"></text></g><g><title>vfs_write (11 samples, 0.13%)</title><rect x="98.8278%" y="869" width="0.1302%" height="15" fill="rgb(221,14,27)" fg:x="8347" fg:w="11"/><text x="99.0778%" y="879.50"></text></g><g><title>eventfd_write (11 samples, 0.13%)</title><rect x="98.8278%" y="853" width="0.1302%" height="15" fill="rgb(207,36,43)" fg:x="8347" fg:w="11"/><text x="99.0778%" y="863.50"></text></g><g><title>__wake_up_common (11 samples, 0.13%)</title><rect x="98.8278%" y="837" width="0.1302%" height="15" fill="rgb(240,172,53)" fg:x="8347" fg:w="11"/><text x="99.0778%" y="847.50"></text></g><g><title>ep_poll_callback (11 samples, 0.13%)</title><rect x="98.8278%" y="821" width="0.1302%" height="15" fill="rgb(241,138,43)" fg:x="8347" fg:w="11"/><text x="99.0778%" y="831.50"></text></g><g><title>__wake_up (11 samples, 0.13%)</title><rect x="98.8278%" y="805" width="0.1302%" height="15" fill="rgb(227,78,19)" fg:x="8347" fg:w="11"/><text x="99.0778%" y="815.50"></text></g><g><title>__wake_up_common (11 samples, 0.13%)</title><rect x="98.8278%" y="789" width="0.1302%" height="15" fill="rgb(215,127,44)" fg:x="8347" fg:w="11"/><text x="99.0778%" y="799.50"></text></g><g><title>ep_autoremove_wake_function (11 samples, 0.13%)</title><rect x="98.8278%" y="773" width="0.1302%" height="15" fill="rgb(227,13,10)" fg:x="8347" fg:w="11"/><text x="99.0778%" y="783.50"></text></g><g><title>try_to_wake_up (11 samples, 0.13%)</title><rect x="98.8278%" y="757" width="0.1302%" height="15" fill="rgb(249,177,6)" fg:x="8347" fg:w="11"/><text x="99.0778%" y="767.50"></text></g><g><title>update_rq_clock (1 samples, 0.01%)</title><rect x="98.9462%" y="741" width="0.0118%" height="15" fill="rgb(215,154,26)" fg:x="8357" fg:w="1"/><text x="99.1962%" y="751.50"></text></g><g><title>psi_account_irqtime (1 samples, 0.01%)</title><rect x="98.9462%" y="725" width="0.0118%" height="15" fill="rgb(250,168,20)" fg:x="8357" fg:w="1"/><text x="99.1962%" y="735.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (14 samples, 0.17%)</title><rect x="98.8160%" y="1045" width="0.1658%" height="15" fill="rgb(222,53,38)" fg:x="8346" fg:w="14"/><text x="99.0660%" y="1055.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (14 samples, 0.17%)</title><rect x="98.8160%" y="1029" width="0.1658%" height="15" fill="rgb(245,154,5)" fg:x="8346" fg:w="14"/><text x="99.0660%" y="1039.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (14 samples, 0.17%)</title><rect x="98.8160%" y="1013" width="0.1658%" height="15" fill="rgb(214,89,50)" fg:x="8346" fg:w="14"/><text x="99.0660%" y="1023.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (14 samples, 0.17%)</title><rect x="98.8160%" y="997" width="0.1658%" height="15" fill="rgb(232,73,14)" fg:x="8346" fg:w="14"/><text x="99.0660%" y="1007.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (14 samples, 0.17%)</title><rect x="98.8160%" y="981" width="0.1658%" height="15" fill="rgb(230,101,20)" fg:x="8346" fg:w="14"/><text x="99.0660%" y="991.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (14 samples, 0.17%)</title><rect x="98.8160%" y="965" width="0.1658%" height="15" fill="rgb(208,56,28)" fg:x="8346" fg:w="14"/><text x="99.0660%" y="975.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (14 samples, 0.17%)</title><rect x="98.8160%" y="949" width="0.1658%" height="15" fill="rgb(247,205,22)" fg:x="8346" fg:w="14"/><text x="99.0660%" y="959.50"></text></g><g><title>write (14 samples, 0.17%)</title><rect x="98.8160%" y="933" width="0.1658%" height="15" fill="rgb(252,109,51)" fg:x="8346" fg:w="14"/><text x="99.0660%" y="943.50"></text></g><g><title>entry_SYSCALL_64 (14 samples, 0.17%)</title><rect x="98.8160%" y="917" width="0.1658%" height="15" fill="rgb(220,40,24)" fg:x="8346" fg:w="14"/><text x="99.0660%" y="927.50"></text></g><g><title>do_syscall_64 (14 samples, 0.17%)</title><rect x="98.8160%" y="901" width="0.1658%" height="15" fill="rgb(251,108,7)" fg:x="8346" fg:w="14"/><text x="99.0660%" y="911.50"></text></g><g><title>syscall_exit_to_user_mode (2 samples, 0.02%)</title><rect x="98.9581%" y="885" width="0.0237%" height="15" fill="rgb(238,102,51)" fg:x="8358" fg:w="2"/><text x="99.2081%" y="895.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (2 samples, 0.02%)</title><rect x="98.9818%" y="1045" width="0.0237%" height="15" fill="rgb(219,149,34)" fg:x="8360" fg:w="2"/><text x="99.2318%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (2 samples, 0.02%)</title><rect x="98.9818%" y="1029" width="0.0237%" height="15" fill="rgb(239,70,0)" fg:x="8360" fg:w="2"/><text x="99.2318%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (2 samples, 0.02%)</title><rect x="98.9818%" y="1013" width="0.0237%" height="15" fill="rgb(246,214,23)" fg:x="8360" fg:w="2"/><text x="99.2318%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.02%)</title><rect x="98.9818%" y="997" width="0.0237%" height="15" fill="rgb(239,221,51)" fg:x="8360" fg:w="2"/><text x="99.2318%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.02%)</title><rect x="98.9818%" y="981" width="0.0237%" height="15" fill="rgb(254,62,14)" fg:x="8360" fg:w="2"/><text x="99.2318%" y="991.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::yield_now (34 samples, 0.40%)</title><rect x="98.6147%" y="1189" width="0.4026%" height="15" fill="rgb(253,57,33)" fg:x="8329" fg:w="34"/><text x="98.8647%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (34 samples, 0.40%)</title><rect x="98.6147%" y="1173" width="0.4026%" height="15" fill="rgb(229,34,6)" fg:x="8329" fg:w="34"/><text x="98.8647%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (34 samples, 0.40%)</title><rect x="98.6147%" y="1157" width="0.4026%" height="15" fill="rgb(235,191,23)" fg:x="8329" fg:w="34"/><text x="98.8647%" y="1167.50"></text></g><g><title>tokio::runtime::context::with_scheduler (34 samples, 0.40%)</title><rect x="98.6147%" y="1141" width="0.4026%" height="15" fill="rgb(217,207,27)" fg:x="8329" fg:w="34"/><text x="98.8647%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (34 samples, 0.40%)</title><rect x="98.6147%" y="1125" width="0.4026%" height="15" fill="rgb(232,41,44)" fg:x="8329" fg:w="34"/><text x="98.8647%" y="1135.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (34 samples, 0.40%)</title><rect x="98.6147%" y="1109" width="0.4026%" height="15" fill="rgb(221,188,19)" fg:x="8329" fg:w="34"/><text x="98.8647%" y="1119.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (34 samples, 0.40%)</title><rect x="98.6147%" y="1093" width="0.4026%" height="15" fill="rgb(245,180,45)" fg:x="8329" fg:w="34"/><text x="98.8647%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (34 samples, 0.40%)</title><rect x="98.6147%" y="1077" width="0.4026%" height="15" fill="rgb(250,220,42)" fg:x="8329" fg:w="34"/><text x="98.8647%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (34 samples, 0.40%)</title><rect x="98.6147%" y="1061" width="0.4026%" height="15" fill="rgb(234,16,34)" fg:x="8329" fg:w="34"/><text x="98.8647%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (1 samples, 0.01%)</title><rect x="99.0054%" y="1045" width="0.0118%" height="15" fill="rgb(233,217,23)" fg:x="8362" fg:w="1"/><text x="99.2554%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back_or_overflow (1 samples, 0.01%)</title><rect x="99.0054%" y="1029" width="0.0118%" height="15" fill="rgb(209,22,46)" fg:x="8362" fg:w="1"/><text x="99.2554%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::unpack (1 samples, 0.01%)</title><rect x="99.0054%" y="1013" width="0.0118%" height="15" fill="rgb(213,101,18)" fg:x="8362" fg:w="1"/><text x="99.2554%" y="1023.50"></text></g><g><title>tokio::runtime::task::raw::poll (1 samples, 0.01%)</title><rect x="99.0410%" y="1173" width="0.0118%" height="15" fill="rgb(215,179,52)" fg:x="8365" fg:w="1"/><text x="99.2910%" y="1183.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (1 samples, 0.01%)</title><rect x="99.0528%" y="1173" width="0.0118%" height="15" fill="rgb(223,50,25)" fg:x="8366" fg:w="1"/><text x="99.3028%" y="1183.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (47 samples, 0.56%)</title><rect x="98.5792%" y="1205" width="0.5565%" height="15" fill="rgb(224,51,44)" fg:x="8326" fg:w="47"/><text x="98.8292%" y="1215.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (10 samples, 0.12%)</title><rect x="99.0173%" y="1189" width="0.1184%" height="15" fill="rgb(224,13,54)" fg:x="8363" fg:w="10"/><text x="99.2673%" y="1199.50"></text></g><g><title>tokio::runtime::task::waker::waker_ref (6 samples, 0.07%)</title><rect x="99.0646%" y="1173" width="0.0710%" height="15" fill="rgb(219,58,47)" fg:x="8367" fg:w="6"/><text x="99.3146%" y="1183.50"></text></g><g><title>tokio::runtime::task::raw::poll (2 samples, 0.02%)</title><rect x="99.1357%" y="1205" width="0.0237%" height="15" fill="rgb(246,124,34)" fg:x="8373" fg:w="2"/><text x="99.3857%" y="1215.50"></text></g><g><title>tokio::runtime::task::raw::schedule (4 samples, 0.05%)</title><rect x="99.1594%" y="1205" width="0.0474%" height="15" fill="rgb(245,109,25)" fg:x="8375" fg:w="4"/><text x="99.4094%" y="1215.50"></text></g><g><title>tokio::runtime::task::core::Header::get_scheduler (2 samples, 0.02%)</title><rect x="99.1830%" y="1189" width="0.0237%" height="15" fill="rgb(235,48,23)" fg:x="8377" fg:w="2"/><text x="99.4330%" y="1199.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="99.1949%" y="1173" width="0.0118%" height="15" fill="rgb(229,203,36)" fg:x="8378" fg:w="1"/><text x="99.4449%" y="1183.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (2 samples, 0.02%)</title><rect x="99.2067%" y="1205" width="0.0237%" height="15" fill="rgb(234,180,9)" fg:x="8379" fg:w="2"/><text x="99.4567%" y="1215.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (1 samples, 0.01%)</title><rect x="99.2186%" y="1189" width="0.0118%" height="15" fill="rgb(228,98,45)" fg:x="8380" fg:w="1"/><text x="99.4686%" y="1199.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running::_{{closure}} (1 samples, 0.01%)</title><rect x="99.2186%" y="1173" width="0.0118%" height="15" fill="rgb(240,24,36)" fg:x="8380" fg:w="1"/><text x="99.4686%" y="1183.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (3 samples, 0.04%)</title><rect x="99.2304%" y="1205" width="0.0355%" height="15" fill="rgb(227,154,19)" fg:x="8381" fg:w="3"/><text x="99.4804%" y="1215.50"></text></g><g><title>core::mem::drop (1 samples, 0.01%)</title><rect x="99.2896%" y="1189" width="0.0118%" height="15" fill="rgb(231,2,48)" fg:x="8386" fg:w="1"/><text x="99.5396%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::wheel::Wheel&gt;&gt; (1 samples, 0.01%)</title><rect x="99.2896%" y="1173" width="0.0118%" height="15" fill="rgb(219,216,0)" fg:x="8386" fg:w="1"/><text x="99.5396%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::time::wheel::Wheel&gt;&gt; (1 samples, 0.01%)</title><rect x="99.2896%" y="1157" width="0.0118%" height="15" fill="rgb(251,88,0)" fg:x="8386" fg:w="1"/><text x="99.5396%" y="1167.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="99.2896%" y="1141" width="0.0118%" height="15" fill="rgb(242,45,45)" fg:x="8386" fg:w="1"/><text x="99.5396%" y="1151.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.01%)</title><rect x="99.2896%" y="1125" width="0.0118%" height="15" fill="rgb(218,149,45)" fg:x="8386" fg:w="1"/><text x="99.5396%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.01%)</title><rect x="99.2896%" y="1109" width="0.0118%" height="15" fill="rgb(247,194,10)" fg:x="8386" fg:w="1"/><text x="99.5396%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="99.2896%" y="1093" width="0.0118%" height="15" fill="rgb(234,33,37)" fg:x="8386" fg:w="1"/><text x="99.5396%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::util::wake_list::WakeList&gt; (1 samples, 0.01%)</title><rect x="99.3014%" y="1189" width="0.0118%" height="15" fill="rgb(218,61,13)" fg:x="8387" fg:w="1"/><text x="99.5514%" y="1199.50"></text></g><g><title>&lt;tokio::util::wake_list::WakeList as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="99.3014%" y="1173" width="0.0118%" height="15" fill="rgb(210,80,52)" fg:x="8387" fg:w="1"/><text x="99.5514%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::task::wake::Waker]&gt; (1 samples, 0.01%)</title><rect x="99.3014%" y="1157" width="0.0118%" height="15" fill="rgb(218,203,27)" fg:x="8387" fg:w="1"/><text x="99.5514%" y="1167.50"></text></g><g><title>tokio::runtime::time::Inner::lock_sharded_wheel (3 samples, 0.04%)</title><rect x="99.3133%" y="1189" width="0.0355%" height="15" fill="rgb(209,126,33)" fg:x="8388" fg:w="3"/><text x="99.5633%" y="1199.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (2 samples, 0.02%)</title><rect x="99.3251%" y="1173" width="0.0237%" height="15" fill="rgb(234,173,41)" fg:x="8389" fg:w="2"/><text x="99.5751%" y="1183.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.02%)</title><rect x="99.3251%" y="1157" width="0.0237%" height="15" fill="rgb(228,166,9)" fg:x="8389" fg:w="2"/><text x="99.5751%" y="1167.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.02%)</title><rect x="99.3251%" y="1141" width="0.0237%" height="15" fill="rgb(208,124,43)" fg:x="8389" fg:w="2"/><text x="99.5751%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (2 samples, 0.02%)</title><rect x="99.3251%" y="1125" width="0.0237%" height="15" fill="rgb(212,154,38)" fg:x="8389" fg:w="2"/><text x="99.5751%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.02%)</title><rect x="99.3251%" y="1109" width="0.0237%" height="15" fill="rgb(246,179,35)" fg:x="8389" fg:w="2"/><text x="99.5751%" y="1119.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::elapsed (2 samples, 0.02%)</title><rect x="99.3488%" y="1189" width="0.0237%" height="15" fill="rgb(251,3,50)" fg:x="8391" fg:w="2"/><text x="99.5988%" y="1199.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll_at (4 samples, 0.05%)</title><rect x="99.3725%" y="1189" width="0.0474%" height="15" fill="rgb(219,96,8)" fg:x="8393" fg:w="4"/><text x="99.6225%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.05%)</title><rect x="99.3725%" y="1173" width="0.0474%" height="15" fill="rgb(251,216,33)" fg:x="8393" fg:w="4"/><text x="99.6225%" y="1183.50"></text></g><g><title>core::ptr::eq (1 samples, 0.01%)</title><rect x="99.4554%" y="1173" width="0.0118%" height="15" fill="rgb(243,145,29)" fg:x="8400" fg:w="1"/><text x="99.7054%" y="1183.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (18 samples, 0.21%)</title><rect x="99.2659%" y="1205" width="0.2131%" height="15" fill="rgb(210,75,20)" fg:x="8384" fg:w="18"/><text x="99.5159%" y="1215.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (5 samples, 0.06%)</title><rect x="99.4198%" y="1189" width="0.0592%" height="15" fill="rgb(235,56,8)" fg:x="8397" fg:w="5"/><text x="99.6698%" y="1199.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="99.4672%" y="1173" width="0.0118%" height="15" fill="rgb(226,175,49)" fg:x="8401" fg:w="1"/><text x="99.7172%" y="1183.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (4 samples, 0.05%)</title><rect x="99.4790%" y="1205" width="0.0474%" height="15" fill="rgb(242,204,23)" fg:x="8402" fg:w="4"/><text x="99.7290%" y="1215.50"></text></g><g><title>tokio::runtime::driver::Handle::time (2 samples, 0.02%)</title><rect x="99.5027%" y="1189" width="0.0237%" height="15" fill="rgb(225,104,24)" fg:x="8404" fg:w="2"/><text x="99.7527%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="99.5027%" y="1173" width="0.0237%" height="15" fill="rgb(253,34,1)" fg:x="8404" fg:w="2"/><text x="99.7527%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="99.6685%" y="1189" width="0.0118%" height="15" fill="rgb(233,199,23)" fg:x="8418" fg:w="1"/><text x="99.9185%" y="1199.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="99.6685%" y="1173" width="0.0118%" height="15" fill="rgb(247,7,51)" fg:x="8418" fg:w="1"/><text x="99.9185%" y="1183.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="99.6685%" y="1157" width="0.0118%" height="15" fill="rgb(214,146,12)" fg:x="8418" fg:w="1"/><text x="99.9185%" y="1167.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (2 samples, 0.02%)</title><rect x="99.6803%" y="1189" width="0.0237%" height="15" fill="rgb(234,181,43)" fg:x="8419" fg:w="2"/><text x="99.9303%" y="1199.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (2 samples, 0.02%)</title><rect x="99.6803%" y="1173" width="0.0237%" height="15" fill="rgb(239,148,6)" fg:x="8419" fg:w="2"/><text x="99.9303%" y="1183.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (17 samples, 0.20%)</title><rect x="99.5264%" y="1205" width="0.2013%" height="15" fill="rgb(206,151,17)" fg:x="8406" fg:w="17"/><text x="99.7764%" y="1215.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (2 samples, 0.02%)</title><rect x="99.7040%" y="1189" width="0.0237%" height="15" fill="rgb(213,215,10)" fg:x="8421" fg:w="2"/><text x="99.9540%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (2 samples, 0.02%)</title><rect x="99.7040%" y="1173" width="0.0237%" height="15" fill="rgb(215,220,44)" fg:x="8421" fg:w="2"/><text x="99.9540%" y="1183.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (2 samples, 0.02%)</title><rect x="99.7277%" y="1205" width="0.0237%" height="15" fill="rgb(245,205,37)" fg:x="8423" fg:w="2"/><text x="99.9777%" y="1215.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::exit (3 samples, 0.04%)</title><rect x="99.7514%" y="1205" width="0.0355%" height="15" fill="rgb(245,130,43)" fg:x="8425" fg:w="3"/><text x="100.0014%" y="1215.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::subscriber (3 samples, 0.04%)</title><rect x="99.7514%" y="1189" width="0.0355%" height="15" fill="rgb(231,227,38)" fg:x="8425" fg:w="3"/><text x="100.0014%" y="1199.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::try_close (1 samples, 0.01%)</title><rect x="99.7869%" y="1205" width="0.0118%" height="15" fill="rgb(233,185,4)" fg:x="8428" fg:w="1"/><text x="100.0369%" y="1215.50"></text></g><g><title>tracing_core::dispatcher::get_default (2 samples, 0.02%)</title><rect x="99.7987%" y="1205" width="0.0237%" height="15" fill="rgb(224,154,43)" fg:x="8429" fg:w="2"/><text x="100.0487%" y="1215.50"></text></g><g><title>tracing_core::field::Field::name (1 samples, 0.01%)</title><rect x="99.8224%" y="1205" width="0.0118%" height="15" fill="rgb(235,156,15)" fg:x="8431" fg:w="1"/><text x="100.0724%" y="1215.50"></text></g><g><title>tracing_core::span::Id::from_u64 (1 samples, 0.01%)</title><rect x="99.8342%" y="1205" width="0.0118%" height="15" fill="rgb(211,55,43)" fg:x="8432" fg:w="1"/><text x="100.0842%" y="1215.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::cares_about_span (1 samples, 0.01%)</title><rect x="99.8461%" y="1205" width="0.0118%" height="15" fill="rgb(247,149,40)" fg:x="8433" fg:w="1"/><text x="100.0961%" y="1215.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.01%)</title><rect x="99.8461%" y="1189" width="0.0118%" height="15" fill="rgb(232,171,16)" fg:x="8433" fg:w="1"/><text x="100.0961%" y="1199.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read (1 samples, 0.01%)</title><rect x="99.8461%" y="1173" width="0.0118%" height="15" fill="rgb(215,117,49)" fg:x="8433" fg:w="1"/><text x="100.0961%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (1 samples, 0.01%)</title><rect x="99.8461%" y="1157" width="0.0118%" height="15" fill="rgb(246,194,11)" fg:x="8433" fg:w="1"/><text x="100.0961%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="99.8461%" y="1141" width="0.0118%" height="15" fill="rgb(242,101,44)" fg:x="8433" fg:w="1"/><text x="100.0961%" y="1151.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::on_enter (1 samples, 0.01%)</title><rect x="99.8579%" y="1205" width="0.0118%" height="15" fill="rgb(226,174,6)" fg:x="8434" fg:w="1"/><text x="100.1079%" y="1215.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::on_exit (1 samples, 0.01%)</title><rect x="99.8698%" y="1205" width="0.0118%" height="15" fill="rgb(213,150,20)" fg:x="8435" fg:w="1"/><text x="100.1198%" y="1215.50"></text></g><g><title>tracing_subscriber::fmt::format::Writer::write_fmt (1 samples, 0.01%)</title><rect x="99.8816%" y="1205" width="0.0118%" height="15" fill="rgb(222,124,42)" fg:x="8436" fg:w="1"/><text x="100.1316%" y="1215.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="99.8934%" y="1125" width="0.0118%" height="15" fill="rgb(250,19,47)" fg:x="8437" fg:w="1"/><text x="100.1434%" y="1135.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="99.8934%" y="1109" width="0.0118%" height="15" fill="rgb(241,217,19)" fg:x="8437" fg:w="1"/><text x="100.1434%" y="1119.50"></text></g><g><title>tracing_subscriber::fmt::writer::MakeWriter::make_writer_for (5 samples, 0.06%)</title><rect x="99.8934%" y="1205" width="0.0592%" height="15" fill="rgb(207,210,34)" fg:x="8437" fg:w="5"/><text x="100.1434%" y="1215.50"></text></g><g><title>&lt;&amp;rotmguard::logging::LogBuffer as tracing_subscriber::fmt::writer::MakeWriter&gt;::make_writer (5 samples, 0.06%)</title><rect x="99.8934%" y="1189" width="0.0592%" height="15" fill="rgb(244,45,4)" fg:x="8437" fg:w="5"/><text x="100.1434%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (5 samples, 0.06%)</title><rect x="99.8934%" y="1173" width="0.0592%" height="15" fill="rgb(252,134,50)" fg:x="8437" fg:w="5"/><text x="100.1434%" y="1183.50"></text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.06%)</title><rect x="99.8934%" y="1157" width="0.0592%" height="15" fill="rgb(238,74,2)" fg:x="8437" fg:w="5"/><text x="100.1434%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.06%)</title><rect x="99.8934%" y="1141" width="0.0592%" height="15" fill="rgb(226,58,46)" fg:x="8437" fg:w="5"/><text x="100.1434%" y="1151.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 0.05%)</title><rect x="99.9053%" y="1125" width="0.0474%" height="15" fill="rgb(232,83,35)" fg:x="8438" fg:w="4"/><text x="100.1553%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position::check::_{{closure}} (4 samples, 0.05%)</title><rect x="99.9053%" y="1109" width="0.0474%" height="15" fill="rgb(212,148,47)" fg:x="8438" fg:w="4"/><text x="100.1553%" y="1119.50"></text></g><g><title>&lt;&amp;rotmguard::logging::LogBuffer as tracing_subscriber::fmt::writer::MakeWriter&gt;::make_writer::_{{closure}} (4 samples, 0.05%)</title><rect x="99.9053%" y="1093" width="0.0474%" height="15" fill="rgb(235,29,1)" fg:x="8438" fg:w="4"/><text x="100.1553%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::SpanRef&lt;tracing_subscriber::layer::layered::Layered&lt;tracing_subscriber::filter::layer_filters::Filtered&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;tracing_subscriber::registry::sharded::Registry,tracing_subscriber::fmt::format::DefaultFields,tracing_subscriber::fmt::format::Format,std::io::stdio::stdout&gt;,tracing_subscriber::filter::env::EnvFilter,tracing_subscriber::registry::sharded::Registry&gt;,tracing_subscriber::registry::sharded::Registry&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="99.9526%" y="1173" width="0.0118%" height="15" fill="rgb(247,55,37)" fg:x="8442" fg:w="1"/><text x="100.2026%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::Data&gt; (1 samples, 0.01%)</title><rect x="99.9526%" y="1157" width="0.0118%" height="15" fill="rgb(222,48,3)" fg:x="8442" fg:w="1"/><text x="100.2026%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::Ref&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (1 samples, 0.01%)</title><rect x="99.9526%" y="1141" width="0.0118%" height="15" fill="rgb(234,21,33)" fg:x="8442" fg:w="1"/><text x="100.2026%" y="1151.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="99.9526%" y="1125" width="0.0118%" height="15" fill="rgb(247,178,53)" fg:x="8442" fg:w="1"/><text x="100.2026%" y="1135.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (1 samples, 0.01%)</title><rect x="99.9526%" y="1109" width="0.0118%" height="15" fill="rgb(225,75,7)" fg:x="8442" fg:w="1"/><text x="100.2026%" y="1119.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (1 samples, 0.01%)</title><rect x="99.9526%" y="1093" width="0.0118%" height="15" fill="rgb(219,199,7)" fg:x="8442" fg:w="1"/><text x="100.2026%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="99.9526%" y="1077" width="0.0118%" height="15" fill="rgb(209,93,42)" fg:x="8442" fg:w="1"/><text x="100.2026%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="99.9526%" y="1061" width="0.0118%" height="15" fill="rgb(240,175,17)" fg:x="8442" fg:w="1"/><text x="100.2026%" y="1071.50"></text></g><g><title>tracing_subscriber::layer::context::Context&lt;S&gt;::if_enabled_for (3 samples, 0.04%)</title><rect x="99.9526%" y="1205" width="0.0355%" height="15" fill="rgb(232,106,7)" fg:x="8442" fg:w="3"/><text x="100.2026%" y="1215.50"></text></g><g><title>tracing_subscriber::layer::context::Context&lt;S&gt;::is_enabled_inner (3 samples, 0.04%)</title><rect x="99.9526%" y="1189" width="0.0355%" height="15" fill="rgb(242,106,43)" fg:x="8442" fg:w="3"/><text x="100.2026%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::SpanRef&lt;tracing_subscriber::registry::sharded::Registry&gt;&gt; (2 samples, 0.02%)</title><rect x="99.9645%" y="1173" width="0.0237%" height="15" fill="rgb(242,61,37)" fg:x="8443" fg:w="2"/><text x="100.2145%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::Data&gt; (2 samples, 0.02%)</title><rect x="99.9645%" y="1157" width="0.0237%" height="15" fill="rgb(205,72,10)" fg:x="8443" fg:w="2"/><text x="100.2145%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::Ref&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (2 samples, 0.02%)</title><rect x="99.9645%" y="1141" width="0.0237%" height="15" fill="rgb(214,184,36)" fg:x="8443" fg:w="2"/><text x="100.2145%" y="1151.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="99.9645%" y="1125" width="0.0237%" height="15" fill="rgb(206,107,18)" fg:x="8443" fg:w="2"/><text x="100.2145%" y="1135.50"></text></g><g><title>sharded_slab::page::slot::Guard&lt;T,C&gt;::release (2 samples, 0.02%)</title><rect x="99.9645%" y="1109" width="0.0237%" height="15" fill="rgb(210,75,5)" fg:x="8443" fg:w="2"/><text x="100.2145%" y="1119.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release (2 samples, 0.02%)</title><rect x="99.9645%" y="1093" width="0.0237%" height="15" fill="rgb(205,3,19)" fg:x="8443" fg:w="2"/><text x="100.2145%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.02%)</title><rect x="99.9645%" y="1077" width="0.0237%" height="15" fill="rgb(207,181,42)" fg:x="8443" fg:w="2"/><text x="100.2145%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="99.9645%" y="1061" width="0.0237%" height="15" fill="rgb(229,179,43)" fg:x="8443" fg:w="2"/><text x="100.2145%" y="1071.50"></text></g><g><title>all (8,446 samples, 100%)</title><rect x="0.0000%" y="1237" width="100.0000%" height="15" fill="rgb(246,95,30)" fg:x="0" fg:w="8446"/><text x="0.2500%" y="1247.50"></text></g><g><title>tokio-runtime-w (8,438 samples, 99.91%)</title><rect x="0.0947%" y="1221" width="99.9053%" height="15" fill="rgb(234,144,45)" fg:x="8" fg:w="8438"/><text x="0.3447%" y="1231.50">tokio-runtime-w</text></g><g><title>write (1 samples, 0.01%)</title><rect x="99.9882%" y="1205" width="0.0118%" height="15" fill="rgb(250,54,25)" fg:x="8445" fg:w="1"/><text x="100.2382%" y="1215.50"></text></g><g><title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="99.9882%" y="1189" width="0.0118%" height="15" fill="rgb(215,195,40)" fg:x="8445" fg:w="1"/><text x="100.2382%" y="1199.50"></text></g></svg></svg>